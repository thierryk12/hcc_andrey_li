CREATE OR REPLACE PACKAGE BODY AP_ANTIFRAUD.lib_TRIGGER_WEEKLY IS

  /*
   *
   * $Header: http://svn.homecredit.cn/svn/DB_DWH/HomeDW/trunk/AP_ANTIFRAUD/2021_new_procedure/lib_TRIGGER_WEEKLY.pck 10886 2021-10-26 03:43:56Z bauer.wang $
   *
   * Author: bauer.wang
   * Last revision $Author: bauer.wang $
   * $Date: 2021-10-26 11:43:56 +0800 (Tue, 26 Oct 2021) $
   *
   * $Revision: 10886 $
   *
  **/

  

  PROCEDURE TRIGGER_14_19_VEL IS
  BEGIN
    
  INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '14 POS VELOCITY',SYSDATE FROM DUAL;
COMMIT;
BEGIN
    AP_ANTIFRAUD.lib_dct_vel_case_triggered.velocity_runall;
END;

update AP_ANTIFRAUD.DCT_VEL_CASE_TRIGGERED
set flag_investigate = 'Y'
where num_case_rank in 
(
  select num_case_rank
  from (select case_cur.*
          from AP_ANTIFRAUD.DCT_VEL_CASE_TRIGGERED case_cur
          left join (select skp_salesroom,
                           max(amt_score_current) amt_score_current
                      from AP_ANTIFRAUD.DCT_VEL_CASE_TRIGGERED
                     where date_report_current > (sysdate - 30)
                       and flag_investigate = 'Y'
                     group by skp_salesroom) case_last
            on case_cur.skp_salesroom = case_last.skp_salesroom
         where case_cur.date_report_current = trunc(sysdate, 'ddd') AND NAME_SALESROOM NOT LIKE '%飞鸿传动电子商行%'and NAME_SALESROOM NOT LIKE '%深圳牛帮手%' AND CASE_CUR.NAME_SALESROOM NOT LIKE '%WCL%'--wcl 1~2个
           and (case_cur.amt_score_current > case_last.amt_score_current*1.2 or case_last.amt_score_current is null)
         order by case_cur.amt_score_current DESC, case_cur.num_case_rank)
  where rownum <= 10
) AND date_report_current = trunc(sysdate, 'ddd');
commit;


/****************************INSERT POS VELCITY************************************/
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH TRIGGER_POS AS(
SELECT CT.SKP_SALESROOM
      ,CT.CODE_SALESROOM
      ,CT.DATE_REPORT_CURRENT
      ,AMT_RISK_FACTOR
      ,CODE_INDICATOR||': '||CASE CODE_INDICATOR WHEN 'B_APPROVED' THEN '申请通过率大幅下降'
                                    WHEN 'B_INT_CODE' THEN '大比例申请因Internal Code被拒绝'
                                    WHEN 'B_NCIIC' THEN '大比例申请因NCIIC Check被拒绝'
                                    WHEN 'B_PDUP' THEN '大比例申请联络电话重复'
                                    WHEN 'B_PDUP_IC' THEN '大比例申请联络电话重复及被Internal Code拒绝'
                                    WHEN 'N_AMT_CREDIT' THEN '申请贷款额及/或数量大幅上升'
                                    WHEN 'N_DP_PCT' THEN '首付款比例大幅上升'
                                    WHEN 'N_SCORE_FRAUD' THEN 'Fraud Score大幅上升' 
                                    WHEN 'B_WELCOME_CALL' THEN 'Welcome Call接通率下降或低于正常值' 
                                    WHEN 'B_PRICE_CHEATING' THEN '大比例申请出现价格欺诈'
                                    WHEN 'B_HIGHEST_CA' THEN '大比例申请高额贷款' END AS TRIGGER_SOURCE
       ,TI.CODE_INDICATOR||': AVG'||NVL(TO_CHAR(TI.AMT_MP_VAL_AVG,'fm9999990.9999'),'NULL')||'/'||NVL(TO_CHAR(TI.AMT_CP_VAL_AVG,'fm9999990.9999'),'NULL')
              ||' CNT'||NVL(TO_CHAR(TI.AMT_MP_VAL_CNT),'NULL')||'/'||NVL(TO_CHAR(TI.AMT_CP_VAL_CNT),'NULL') AS TRIGGER_VALUE
FROM AP_ANTIFRAUD.DCT_VEL_CASE_TRIG_INDICATOR TI
JOIN AP_ANTIFRAUD.DCT_VEL_CASE_TRIGGERED CT ON TI.SKP_SALESROOM=CT.SKP_SALESROOM AND TI.DATE_REPORT=CT.DATE_REPORT_CURRENT
WHERE DATE_REPORT=TRUNC(SYSDATE)AND CT.FLAG_INVESTIGATE='Y')

,TRIGGER_SOURCE AS (
SELECT DISTINCT CT.SKP_SALESROOM,CT.CODE_SALESROOM,CT.DATE_REPORT_CURRENT
       ,LISTAGG(TRIGGER_SOURCE,', ')WITHIN GROUP(ORDER BY AMT_RISK_FACTOR)OVER(PARTITION BY CT.SKP_SALESROOM)AS TRIGGER_SOURCE
       ,LISTAGG(TRIGGER_VALUE,', ')WITHIN GROUP(ORDER BY AMT_RISK_FACTOR)OVER(PARTITION BY CT.SKP_SALESROOM)AS TRIGGER_VALUE
FROM TRIGGER_POS CT)

SELECT 'POS' AS UNIT
       ,CT.CODE_SALESROOM AS ID_ENTITY
       ,TO_CHAR(CT.DATE_REPORT_CURRENT,'YYYY/MM/DD')  AS DATE_DETECT
       ,TO_CHAR((7-(TO_CHAR(DATE_REPORT_CURRENT,'D')-1))+DATE_REPORT_CURRENT,'YYYY/MM/DD') AS WEEK_DETECT
       ,'14' AS CLASS
       ,TRIGGER_SOURCE
       ,TRIGGER_VALUE
       ,'SOFT' AS TRIGGER_TYPE
       ,EL.SKP_CREDIT_CASE
       ,CC.TEXT_CONTRACT_NUMBER 
FROM TRIGGER_SOURCE CT
JOIN AP_ANTIFRAUD.STT_VEL_ENTITY_LOAN EL ON EL.SKP_SALESROOM=CT.SKP_SALESROOM AND EL.CODE_PERIOD_TYPE='MP'
JOIN OWNER_DWH.F_CREDIT_CASE_AD CC ON CC.SKP_CREDIT_CASE=EL.SKP_CREDIT_CASE;
COMMIT;


  INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '19 SA VELOCITY',SYSDATE FROM DUAL;
COMMIT;

begin
AP_ANTIFRAUD.lib_dct_vel_case_triggered_sa.velocity_runall_sa;
end;

update AP_ANTIFRAUD.DCT_VEL_CASE_TRIGGERED_SA
set flag_investigate = 'Y'
where num_case_rank in 
(
  select num_case_rank
  from (select case_cur.*
          from AP_ANTIFRAUD.DCT_VEL_CASE_TRIGGERED_SA case_cur
          left join (select skp_employee,
                           max(amt_score_current) amt_score_current
                      from AP_ANTIFRAUD.DCT_VEL_CASE_TRIGGERED_SA
                     where date_report_current > (sysdate - 30)
                       and flag_investigate = 'Y'
                     group by skp_employee) case_last
            on case_cur.skp_employee = case_last.skp_employee
         where case_cur.date_report_current = trunc(sysdate, 'ddd') --AND CASE_CUR.NAME_SALESROOM NOT LIKE '%WCL%'
           and (case_cur.amt_score_current > case_last.amt_score_current*1.2 or case_last.amt_score_current is null)
         order by case_cur.amt_score_current DESC, case_cur.num_case_rank)
  where rownum <= 5
) AND date_report_current = trunc(sysdate, 'ddd');
commit;


/****************************INSERT SA VELCITY************************************/
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH TRIGGER_SA AS(
SELECT CT.SKP_EMPLOYEE
      ,CT.CODE_EMPLOYEE
      ,CT.DATE_REPORT_CURRENT
      ,AMT_RISK_FACTOR
      ,CODE_INDICATOR||': '||CASE CODE_INDICATOR WHEN 'B_APPROVED' THEN '申请通过率大幅下降'
                                    WHEN 'B_INT_CODE' THEN '大比例申请因Internal Code被拒绝'
                                    WHEN 'B_NCIIC' THEN '大比例申请因NCIIC Check被拒绝'
                                    WHEN 'B_PDUP' THEN '大比例申请联络电话重复'
                                    WHEN 'B_PDUP_IC' THEN '大比例申请联络电话重复及被Internal Code拒绝'
                                    WHEN 'N_AMT_CREDIT' THEN '申请贷款额及/或数量大幅上升'
                                    WHEN 'N_DP_PCT' THEN '首付款比例大幅上升'
                                    WHEN 'N_SCORE_FRAUD' THEN 'Fraud Score大幅上升' 
                                    WHEN 'B_WELCOME_CALL' THEN 'Welcome Call接通率下降或低于正常值' 
                                    WHEN 'B_PRICE_CHEATING' THEN '大比例申请出现价格欺诈'
                                    WHEN 'B_HIGHEST_CA' THEN '大比例申请高额贷款' END AS TRIGGER_SOURCE
       ,TI.CODE_INDICATOR||': AVG'||NVL(TO_CHAR(TI.AMT_MP_VAL_AVG,'fm9999990.9999'),'NULL')||'/'||NVL(TO_CHAR(TI.AMT_CP_VAL_AVG,'fm9999990.9999'),'NULL')
              ||' CNT'||NVL(TO_CHAR(TI.AMT_MP_VAL_CNT),'NULL')||'/'||NVL(TO_CHAR(TI.AMT_CP_VAL_CNT),'NULL') AS TRIGGER_VALUE
FROM AP_ANTIFRAUD.DCT_VEL_CASE_TRIG_INDICATOR_SA TI
JOIN AP_ANTIFRAUD.DCT_VEL_CASE_TRIGGERED_SA CT ON TI.SKP_EMPLOYEE=CT.SKP_EMPLOYEE AND TI.DATE_REPORT=CT.DATE_REPORT_CURRENT
WHERE DATE_REPORT=TRUNC(SYSDATE-2)AND CT.FLAG_INVESTIGATE='Y')

,TRIGGER_SOURCE AS (
SELECT DISTINCT CT.SKP_EMPLOYEE,CT.CODE_EMPLOYEE,CT.DATE_REPORT_CURRENT
       ,LISTAGG(TRIGGER_SOURCE,', ')WITHIN GROUP(ORDER BY AMT_RISK_FACTOR)OVER(PARTITION BY CT.SKP_EMPLOYEE)AS TRIGGER_SOURCE
       ,LISTAGG(TRIGGER_VALUE,', ')WITHIN GROUP(ORDER BY AMT_RISK_FACTOR)OVER(PARTITION BY CT.SKP_EMPLOYEE)AS TRIGGER_VALUE
FROM TRIGGER_SA CT)

SELECT 'SA' AS UNIT
       ,CT.CODE_EMPLOYEE AS ID_ENTITY
       ,TO_CHAR(CT.DATE_REPORT_CURRENT,'YYYY/MM/DD') AS DATE_DETECT
       ,TO_CHAR((7-(TO_CHAR(DATE_REPORT_CURRENT,'D')-1))+DATE_REPORT_CURRENT,'YYYY-MM-DD') AS WEEK_DETECT
       ,'19' AS CLASS
       ,TRIGGER_SOURCE
       ,TRIGGER_VALUE
       ,'SOFT' AS TRIGGER_TYPE
       ,EL.SKP_CREDIT_CASE
       ,CC.TEXT_CONTRACT_NUMBER 
FROM TRIGGER_SOURCE CT
JOIN AP_ANTIFRAUD.STT_VEL_ENTITY_LOAN_SA EL ON EL.SKP_EMPLOYEE=CT.SKP_EMPLOYEE AND EL.CODE_PERIOD_TYPE='MP'
JOIN OWNER_DWH.F_CREDIT_CASE_AD CC ON CC.SKP_CREDIT_CASE=EL.SKP_CREDIT_CASE;
COMMIT;

END;

--moving to daily
PROCEDURE TRIGGER_40_PAYMENT IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name: length       
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_20_40';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP:20_40_PAYMENT';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL); 


INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT 'PAYMENT TRIGGER SA/DSM REPAY',SYSDATE FROM DUAL;
COMMIT;


--change to use paymemt_ba table 20190401--20190705
EXECUTE IMMEDIATE 'TRUNCATE TABLE AP_ANTIFRAUD.TRIGGER_40_POS_HELP_REPAY';
--temp stop 20190709--20190709
INSERT INTO  AP_ANTIFRAUD.TRIGGER_40_POS_HELP_REPAY
WITH POS_HIT_0 AS 
(
SELECT /*+MATERIALIZE USE_HASH(EX, P,DCS,AD)*/ 
'SA' AS UNIT
,AD.code_salesroom
,AD.text_username_employee_sales
,DCS.text_bank_account_number
,P.DTIME_PAYMENT_INCOMING
,P.AMT_PAYMENT
,AD.amt_credit
,DCS.code_salesroom AS HIT_POS_CODE_SALESROOM
,DCS.SKP_SALESROOM AS HIT_POS_SKP_SALESROOM 
,DCS.text_bank_account_name 
,P.SKP_CREDIT_CASE
,AD.TEXT_CONTRACT_NUMBER
,CASE WHEN AD.name_product LIKE '%Beauty%' THEN 'Beauty' ELSE 'Others' END AS BEAUTY
FROM  AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX 
JOIN AP_ANTIFRAUD.F_PAYMENT_BA P  ON EX.CLASS=40
AND P.DTIME_PAYMENT_INCOMING>=EX.MAX_DETECT
AND P.AMT_PAYMENT>0
JOIN OWNER_DWH.DC_SALESROOM DCS
ON P.TEXT_SENDER_ACC_NUMBER = DCS.text_bank_account_number
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD  AD  ON P.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE 
WHERE P.TEXT_SENDER_ACC_NUMBER!='XNA'
AND P.TEXT_SENDER_ACC_NUMBER NOT IN ('0','00000')
AND DCS.code_salesroom_status='a' 
AND AD.name_last_client != DCS.text_bank_account_name
AND AD.DATE_DECISION>=SYSDATE-120
AND P.DTIME_PAYMENT_INCOMING>= SYSDATE -30 ---10
)

,  AMOUNT AS 
(
SELECT /*+MATERIALIZE*/ DISTINCT amt_credit,text_username_employee_sales, SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER,DTIME_PAYMENT_INCOMING,text_bank_account_number, AMT_PAYMENT  --TO GET EVERY DISTINCT PAYMENT
, code_salesroom,BEAUTY
FROM POS_HIT_0
)

,SUM_AMOUNT_1 AS
( SELECT /*+MATERIALIZE*/AMT_CREDIT,text_username_employee_sales,SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER,DTIME_PAYMENT_INCOMING,text_bank_account_number,BEAUTY,
SUM(AMT_PAYMENT) AS AMT_PAYMENT
,COUNT(DISTINCT SKP_CREDIT_CASE ) OVER (PARTITION BY text_bank_account_number  ) AS RNK_CONTRACT
, code_salesroom
FROM AMOUNT
GROUP BY  AMT_CREDIT,text_username_employee_sales,SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER,DTIME_PAYMENT_INCOMING,text_bank_account_number,BEAUTY
,code_salesroom 
)

,SUM_AMOUNT AS 
(  SELECT /*+MATERIALIZE*/ *
FROM SUM_AMOUNT_1
WHERE  SKP_CREDIT_CASE NOT IN ( SELECT SKP_CREDIT_CASE FROM SUM_AMOUNT_1 WHERE  BEAUTY ='Beauty' AND  AMT_PAYMENT =AMT_CREDIT)
)

,LISTAGG_CONTRACT_3 AS 
( 
SELECT /*+MATERIALIZE*/ AMT_CREDIT,text_username_employee_sales,code_salesroom,SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER,text_bank_account_number,RNK_CONTRACT,BEAUTY
,LISTAGG('repaid on ' || TO_CHAR(DTIME_PAYMENT_INCOMING, 'YYYY/MM/DD HH24:MI:SS') || '; repayment amount: ' ||TO_CHAR(AMT_PAYMENT)||
' (' ||  CASE WHEN AMT_PAYMENT=AMT_CREDIT THEN 'REPAY-ALL' ELSE 'REPAY-PARTIALLY' END  || ')' , '; ')WITHIN GROUP (ORDER BY DTIME_PAYMENT_INCOMING) AS REPAY_DETAIL
FROM SUM_AMOUNT
WHERE RNK_CONTRACT>=3  --ONLY CONCENTRATION
GROUP BY AMT_CREDIT,text_username_employee_sales,code_salesroom,SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER,text_bank_account_number,RNK_CONTRACT,BEAUTY
) 

,DISTINCT_POS AS 
(
SELECT /*+MATERIALIZE*/ DISTINCT text_bank_account_number,HIT_POS_CODE_SALESROOM, text_bank_account_name ,BEAUTY
,COUNT(HIT_POS_CODE_SALESROOM) OVER (PARTITION BY text_bank_account_number) AS CNT_POS --20190408
,CASE WHEN  DDS.NAME_SELLERCHAIN_GROUP  LIKE '%LKA' THEN 'LKA'
WHEN  DDS.NAME_SELLERCHAIN_GROUP  LIKE '%KA' THEN 'KA'
WHEN TT.SKP_SALESROOM_TYPE=13 THEN 'ALDI'
ELSE 'NON-ALDI' END  AS HIT_POS_TYPE
  ,DDS.name_sellerchain_group, TT.SKP_SALESROOM_TYPE,P.HIT_POS_SKP_SALESROOM
FROM POS_HIT_0 P
JOIN OWNER_DWH.DDC_SALESROOM DDS ON P.HIT_POS_SKP_SALESROOM=DDS.SKP_SALESROOM
JOIN OWNER_DWH.F_SALESROOM_HISTORY_TT TT ON P.HIT_POS_SKP_SALESROOM=TT.SKP_SALESROOM
WHERE 1=1
AND TT.DTIME_VALID_TO>SYSDATE  --FIND VALID ONE
AND text_bank_account_number<>'6217000010131000005' --20190618
AND p.SKP_CREDIT_CASE NOT IN ( SELECT SKP_CREDIT_CASE FROM SUM_AMOUNT_1 WHERE  BEAUTY ='Beauty' AND  AMT_PAYMENT =AMT_CREDIT)
--AND DDS.NAME_SELLERCHAIN_GROUP NOT LIKE '%KA%'--exclude KA 20191106
)

,LISTAGG_TRIGGER_VALUE AS 
(
SELECT  text_bank_account_number,CNT_POS
,LISTAGG('POS (POS_CODE='  || HIT_POS_CODE_SALESROOM || ', Pos bank owner=' || text_bank_account_name ||  ', POS type=' || HIT_POS_TYPE ||')' , ' | ' )
WITHIN GROUP (ORDER BY HIT_POS_CODE_SALESROOM ) 
AS TRIGGER_VALUE
FROM DISTINCT_POS
GROUP BY  text_bank_account_number,CNT_POS
)

,LISTAGG_CONTRACT AS 
(
SELECT /*+MATERIALIZE*/ AMT_CREDIT,text_username_employee_sales,code_salesroom,SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER,text_bank_account_number,RNK_CONTRACT,BEAUTY
,LISTAGG('repaid on ' || TO_CHAR(DTIME_PAYMENT_INCOMING, 'YYYY/MM/DD HH24:MI:SS') || '; repayment amount: ' ||TO_CHAR(AMT_PAYMENT)||
' (' ||  CASE WHEN AMT_PAYMENT=AMT_CREDIT THEN 'REPAY-ALL' ELSE 'REPAY-PARTIALLY' END  || ')' , '; ')WITHIN GROUP (ORDER BY DTIME_PAYMENT_INCOMING) AS REPAY_DETAIL
FROM SUM_AMOUNT
WHERE RNK_CONTRACT<3  --no CONCENTRATION
GROUP BY AMT_CREDIT,text_username_employee_sales,code_salesroom,SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER,text_bank_account_number,RNK_CONTRACT,BEAUTY
)

SELECT  
DISTINCT 
'SA' AS UNIT
,A.text_username_employee_sales
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'40' AS CLASS
,'HCC POS help client repay-Concentration' AS TRIGGER_SOURCE
,'Bank account: '||A.text_bank_account_number || ' repaid for ' || RNK_CONTRACT ||   ' contracts within 1 week;  For this contract: '||REPAY_DETAIL
||TRIGGER_VALUE AS TRIGGER_VALUE
, 'SOFT' AS TRIGGER_TYPE
,A.SKP_CREDIT_CASE
,A.TEXT_CONTRACT_NUMBER
FROM LISTAGG_CONTRACT_3 A 
JOIN LISTAGG_TRIGGER_VALUE D ON A.text_bank_account_number =D.text_bank_account_number 

UNION
--==============================================================================================================
--POS PART 2: No Concentration 1 POS repay 1/2 contracts
--added by Anny 2019-01-18
SELECT  
DISTINCT
'SA' AS UNIT
,A.text_username_employee_sales
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'40' AS CLASS
,'HCC POS help client repay-No Concentration' AS TRIGGER_SOURCE
,'Bank account: '||A.text_bank_account_number || ' repaid for ' || RNK_CONTRACT ||   ' contracts within 1 week;  For this contract: '||REPAY_DETAIL
|| TRIGGER_VALUE AS TRIGGER_VALUE
, 'SOFT' AS TRIGGER_TYPE
,A.SKP_CREDIT_CASE
,A.TEXT_CONTRACT_NUMBER
FROM LISTAGG_CONTRACT A 
JOIN LISTAGG_TRIGGER_VALUE D ON A.text_bank_account_number =D.text_bank_account_number;
COMMIT;
---------------------------------------------------
--New trigger--SA/DSM/RA/TSO help repay
--------------------------------------------------
--20190110 
INSERT INTO  AP_ANTIFRAUD.TRIGGER_40_POS_HELP_REPAY
WITH EMP_HIT AS 
(
SELECT /*+FULL(EX) FULL(P) FULL(AD) USE_HASH(EX P AD) PARALLEL(2) */ 
'SA' AS UNIT
,AD.text_username_employee_sales
,P.TEXT_SENDER_ACC_NUMBER
,P.DTIME_PAYMENT_INCOMING
,P.AMT_PAYMENT
,AD.amt_credit
,CASE WHEN EE.SKP_BANK_ROLE =45 THEN 'SA'
WHEN EE.SKP_BANK_ROLE =33 THEN 'RA' 
WHEN EE.SKP_BANK_ROLE IN (9,20,501) THEN 'DSM' 
WHEN EE.SKP_BANK_ROLE IN (962,963,964,965,966,967,968,969,970,971,972) THEN 'TSO' 
ELSE NAME_BANK_ROLE_EN END  || ' (HOMER_ID=' || EE.TEXT_USERNAME_EMPLOYEE || ', Name=' || EE.NAME_LAST ||  ')'  AS TRIGGER_VALUE
,P.SKP_CREDIT_CASE
,AD.TEXT_CONTRACT_NUMBER
FROM AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX 
JOIN AP_ANTIFRAUD.F_PAYMENT_BA P  ON EX.CLASS=40
AND P.DTIME_PAYMENT_INCOMING>=EX.MAX_DETECT 
AND P.AMT_PAYMENT>0
JOIN AP_ANTIFRAUD.f_Employee_Salary_Bank_Account BANK---BANK ACCOUNT 每月更新
ON P.TEXT_SENDER_ACC_NUMBER = BANK.TEXT_BANK_ACC_NUMBER
JOIN OWNER_DWH.DC_EMPLOYEE EE ON EE.TEXT_IDENT_NUMBER= BANK.TEXT_IDENTITY_CARD_NUMBER
JOIN OWNER_DWH.CL_BANK_ROLE CLBR ON EE.SKP_BANK_ROLE=CLBR.SKP_BANK_ROLE
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD  AD  ON P.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE 
WHERE AD.DATE_DECISION>=SYSDATE-120
AND P.DTIME_PAYMENT_INCOMING>= SYSDATE -30 ---10
AND P.TEXT_SENDER_ACC_NUMBER<>'XNA'
AND P.TEXT_SENDER_ACC_NUMBER NOT IN ('0','00000')
AND EE.TEXT_IDENT_NUMBER!='XNA'
AND EE.CODE_EMPLOYEE_STATUS='a'  --anny 2018-12-13
AND BANK.Name_Last != AD.name_last_client ------剔除sa自己的单     --2018-12-12 change id to name
AND AD.name_last_client<>EE.NAME_LAST --anny 20190715
AND  UPPER(NAME_BANK_ROLE_EN) NOT LIKE '%COLLECT%'
UNION
--RA HELP REPAY 20190226
SELECT /*+FULL(EX) FULL(P) FULL(EE) FULL(AD) USE_HASH(EX P EE AD) PARALLEL(2) */ 
'SA' AS UNIT
,AD.text_username_employee_sales
,P.TEXT_SENDER_ACC_NUMBER
,P.DTIME_PAYMENT_INCOMING
,P.AMT_PAYMENT
,AD.amt_credit
,'RA'  || ' (HOMER_ID=' || EE.TEXT_USERNAME_EMPLOYEE || ', Name=' || EE.NAME_LAST ||  ')'  AS TRIGGER_VALUE
,P.SKP_CREDIT_CASE
,AD.TEXT_CONTRACT_NUMBER
FROM AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX 
JOIN AP_ANTIFRAUD.F_PAYMENT_BA P  ON EX.CLASS=40
AND P.DTIME_PAYMENT_INCOMING>=EX.MAX_DETECT 
AND P.AMT_PAYMENT>0
JOIN OWNER_DWH.DC_EMPLOYEE EE
ON P.TEXT_SENDER_ACC_NUMBER = EE.TEXT_RA_BANK_ACCOUNT_NUMBER
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD  AD  ON P.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE 
WHERE AD.DATE_DECISION>=SYSDATE-120
AND P.DTIME_PAYMENT_INCOMING>= SYSDATE-30 -- -10
AND P.TEXT_SENDER_ACC_NUMBER!='XNA'
AND P.TEXT_SENDER_ACC_NUMBER<>'0'--20190304
AND EE.TEXT_IDENT_NUMBER!='XNA'
AND EE.CODE_EMPLOYEE_STATUS='a'  --anny 2018-12-13
AND EE.Name_Last != AD.name_last_client ------剔除sa自己的单     --2018-12-12 change id to name
AND EE.SKP_BANK_ROLE=33--RA
)

,AMOUNT AS 
(
SELECT /*+MATERIALIZE*/ DISTINCT amt_credit,text_username_employee_sales,SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER,DTIME_PAYMENT_INCOMING,TEXT_SENDER_ACC_NUMBER, AMT_PAYMENT  --TO GET EVERY DISTINCT PAYMENT
FROM EMP_HIT
)

,SUM_AMOUNT AS 
(
SELECT /*+MATERIALIZE*/amt_credit, text_username_employee_sales,SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER,DTIME_PAYMENT_INCOMING,TEXT_SENDER_ACC_NUMBER,SUM(AMT_PAYMENT) AS AMT_PAYMENT
FROM AMOUNT
GROUP BY amt_credit, text_username_employee_sales,SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER,DTIME_PAYMENT_INCOMING,TEXT_SENDER_ACC_NUMBER
)

,DISTINCT_EMP AS 
(
SELECT /*+MATERIALIZE*/ DISTINCT TEXT_SENDER_ACC_NUMBER, TRIGGER_VALUE
FROM EMP_HIT
)

,LISTAGG_EMP AS
(
SELECT /*+MATERIALIZE*/ TEXT_SENDER_ACC_NUMBER, LISTAGG(TRIGGER_VALUE, '; ') WITHIN GROUP (ORDER BY TRIGGER_VALUE) AS TRIGGER_VALUE
FROM DISTINCT_EMP D
GROUP BY TEXT_SENDER_ACC_NUMBER
)

SELECT  /*+MATERIALIZE USE_HASH(A,D)*/
DISTINCT
'SA' AS UNIT
,A.text_username_employee_sales
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'40' AS CLASS
,'HCC Employee help client repay' AS TRIGGER_SOURCE
,'Bank account: '||A.TEXT_SENDER_ACC_NUMBER ||   ' repaid for this contract on: '||TO_CHAR(A.DTIME_PAYMENT_INCOMING, 'YYYY/MM/DD HH24:MI:SS') || '; repayment amount: ' ||TO_CHAR(A.AMT_PAYMENT)|| 
' (' ||  CASE WHEN AMT_PAYMENT=AMT_CREDIT THEN 'REPAY-ALL' ELSE 'REPAY-PARTIALLY' END  || ')' ||
', this bank belongs to: ' || TRIGGER_VALUE AS TRIGGER_VALUE
, 'SOFT' AS TRIGGER_TYPE
,A.SKP_CREDIT_CASE
,A.TEXT_CONTRACT_NUMBER
FROM SUM_AMOUNT A 
JOIN LISTAGG_EMP D ON A.TEXT_SENDER_ACC_NUMBER =D.TEXT_SENDER_ACC_NUMBER;
COMMIT;

--Retailer payment 20190327
INSERT INTO  AP_ANTIFRAUD.TRIGGER_40_POS_HELP_REPAY
WITH RETAILER_HIT AS (
SELECT /*+MATERIALIZE USE_HASH(P,EX,DHBA,DCSE,AD)*/ 
'SA' AS UNIT
,AD.text_username_employee_sales
,P.TEXT_SENDER_ACC_NUMBER
,DHBA.TEXT_BANK_ACCOUNT_NAME AS NAME_SENDER
,P.DTIME_PAYMENT_INCOMING
,P.AMT_PAYMENT
,AD.amt_credit
,DCSE.CODE_SELLER
,DCSE.SKP_SELLER
,DCSE.DATE_SELLER_ACT_END
 ,'Retailer (Retailer_code=' || DCSE.CODE_SELLER || ', Pos bank owner=' || DHBA.text_bank_account_name ||  ')'  AS TRIGGER_VALUE
,P.SKP_CREDIT_CASE
,AD.DATE_DECISION 
,AD.SKP_CREDIT_TYPE 
,AD.TEXT_CONTRACT_NUMBER
FROM  AP_ANTIFRAUD.F_PAYMENT_BA  P 
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX 
ON EX.CLASS=40
AND P.DTIME_PAYMENT_INCOMING>=EX.MAX_DETECT
JOIN OWNER_DWH.DH_BANK_ACCOUNT DHBA ON P.TEXT_SENDER_ACC_NUMBER =  DHBA.TEXT_BANK_ACCOUNT_NUMBER 
JOIN OWNER_DWH.DC_SELLER DCSE ON DHBA.SKP_BANK_ACCOUNT=DCSE.SKP_BANK_ACCOUNT
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD  AD  ON P.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE
WHERE P.TEXT_SENDER_ACC_NUMBER!='XNA'
AND P.TEXT_SENDER_ACC_NUMBER NOT IN ('0','00000')
AND  DCSE.DATE_SELLER_ACT_END!=DATE'1000-01-01' AND DCSE.DATE_SELLER_ACT_END!=DATE'3000-01-01' --STILL ACTIVE
AND AD.name_last_client != DHBA.text_bank_account_name
AND AD.DATE_DECISION>=SYSDATE-120
AND P.DTIME_PAYMENT_INCOMING>= SYSDATE -30---10
)

,AMOUNT AS (
SELECT /*+MATERIALIZE*/ DISTINCT amt_credit,text_username_employee_sales, SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER,DTIME_PAYMENT_INCOMING,TEXT_SENDER_ACC_NUMBER, AMT_PAYMENT 
FROM RETAILER_HIT
)

,SUM_AMOUNT AS (
SELECT /*+MATERIALIZE*/ amt_credit, text_username_employee_sales,
SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER,DTIME_PAYMENT_INCOMING,TEXT_SENDER_ACC_NUMBER,SUM(AMT_PAYMENT) AS AMT_PAYMENT
FROM AMOUNT
GROUP BY amt_credit  ,text_username_employee_sales,
 SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER,DTIME_PAYMENT_INCOMING,TEXT_SENDER_ACC_NUMBER
)

,DISTINCT_RETAILER AS (
SELECT /*+MATERIALIZE*/ DISTINCT TEXT_SENDER_ACC_NUMBER, TRIGGER_VALUE
FROM RETAILER_HIT
)

,LISTAGG_POS AS (
SELECT /*+MATERIALIZE*/ TEXT_SENDER_ACC_NUMBER, LISTAGG(TRIGGER_VALUE, '; ') WITHIN GROUP (ORDER BY TRIGGER_VALUE) AS TRIGGER_VALUE
FROM DISTINCT_RETAILER D
GROUP BY TEXT_SENDER_ACC_NUMBER
)

SELECT  /*+MATERIALIZE USE_HASH(A,D)*/
DISTINCT 
'SA' AS UNIT
,A.text_username_employee_sales
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'40' AS CLASS
,'HCC POS help client repay-Concentration' AS TRIGGER_SOURCE
,'Bank account: '||A.TEXT_SENDER_ACC_NUMBER ||   ' repaid for this contract on: '||TO_CHAR(A.DTIME_PAYMENT_INCOMING, 'YYYY/MM/DD HH24:MI:SS') ||
 '; repayment amount: ' ||TO_CHAR(A.AMT_PAYMENT)||
' (' ||  CASE WHEN AMT_PAYMENT=AMT_CREDIT THEN 'REPAY-ALL' ELSE 'REPAY-PARTIALLY' END  || ')' || ', this bank belongs to: ' || TRIGGER_VALUE AS TRIGGER_VALUE
 , 'SOFT' AS TRIGGER_TYPE
,A.SKP_CREDIT_CASE
,A.TEXT_CONTRACT_NUMBER
FROM SUM_AMOUNT A 
JOIN LISTAGG_POS D ON A.TEXT_SENDER_ACC_NUMBER =D.TEXT_SENDER_ACC_NUMBER;
COMMIT;


DELETE FROM AP_ANTIFRAUD.TRIGGER_40_POS_HELP_REPAY
WHERE TRIGGER_VALUE LIKE '%KA%' AND TRIGGER_VALUE NOT LIKE '%LKA%' AND TRIGGER_VALUE LIKE '%REPAY-ALL%'; --20190606
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
SELECT /*+MATERIALIZE*/ UNIT,text_username_employee_sales,DATE_DETECT,WEEK_DETECT,CLASS
,LISTAGG(TRIGGER_SOURCE , '; ')WITHIN GROUP (ORDER BY TRIGGER_SOURCE) AS TRIGGER_SOURCE
,LISTAGG(TRIGGER_VALUE , '; ')WITHIN GROUP (ORDER BY TRIGGER_VALUE) AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM AP_ANTIFRAUD.TRIGGER_40_POS_HELP_REPAY
GROUP BY UNIT,text_username_employee_sales,DATE_DETECT,WEEK_DETECT,CLASS,SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER;
COMMIT;

INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT 'PAYMENT TRIGGER WEEKLY',SYSDATE FROM DUAL;
COMMIT;


  --========================================================================
  --========================================================================
  --   
  --              PART 1 ALL PAYMENTS IN LAST 30 DAYS 
  --
  --========================================================================  
  --======================================================================== 
--DROP TABLE F_PAYMENT_ALL;

--CREATE TABLE F_PAYMENT_ALL AS            -----16mins
--add two attributers DATE_DECISION and AMT_CREDIT to F_PAYMENT_ALL  lina 20180209
INSERT /*+ append*/
  INTO F_PAYMENT_ALL
SELECT  /*+ CARDINALITY (CN 1) */
P.SKF_INCOMING_PAYMENT
      ,P.SKP_CREDIT_CASE
      ,P.DTIME_PAYMENT_INCOMING
     -- ,P.AMT_PAYMENT
      ,P.SKF_INCOMING_PAYMENT_IMPORT
      ,CASE WHEN IIF.NAME_PAYMENT_IMPORTED_FILE LIKE '%PSBC%TXT%' THEN 'PSBC'
                   WHEN IIF.NAME_PAYMENT_IMPORTED_FILE LIKE '%LAKALA%' THEN 'LAKALA' 
                   WHEN IIF.NAME_PAYMENT_IMPORTED_FILE LIKE '%CMB%' THEN 'CMB' ELSE PC.NAME_PAYMENT_CHANNEL_GROUP END AS NAME_PAYMENT_CHANNEL_GROUP
      ,T.TEXT_SENDER_ACC_NUMBER
      ,T.NAME_SENDER
      ,T.TEXT_PAYMENT_NOTES AS LAKALA_PHONE
      ,T.CODE_TRN_TYPE
      ,CN.TEXT_CONTRACT_NUMBER
      ,CN.SKP_EMPLOYEE_CONSULTANT
      ,CN.name_last_client AS CLIENT_NAME
      ,E.TEXT_USERNAME_EMPLOYEE AS SALES_ID
      ,E.NAME_LAST AS SA_NAME
      ,E.TEXT_CELLPHONE AS SA_PHONE
      ,E.CODE_EMPLOYEE_STATUS
      ,CN.SKP_CLIENT
      ,CN.date_decision
       ,CN.amt_credit
FROM OWNER_DWH.DC_INCOMING_PAYMENT_IMP_FILE IIF
JOIN OWNER_DWH.F_INCOMING_PAYMENT_IMPORT_TT T ON IIF.SKP_INCOMING_PAYMENT_IMP_FILE=T.SKP_INCOMING_PAYMENT_IMP_FILE
JOIN  OWNER_DWH.F_INCOMING_PAYMENT_TT P ON P.SKF_INCOMING_PAYMENT_IMPORT=T.SKF_INCOMING_PAYMENT_IMPORT-- AND T.SKP_PAYMENT_CHANNEL_GROUP=1--LAKALA
JOIN OWNER_DWH.DC_PAYMENT_CHANNEL_GROUP PC  ON PC.SKP_PAYMENT_CHANNEL_GROUP=T.SKP_PAYMENT_CHANNEL_GROUP  
AND PC.SKP_PAYMENT_CHANNEL_GROUP NOT IN (3,105,1001,1201,1301,1401,1501,1502,1601,501,901) --20191220
JOIN DM_ANTIFRAUD.F_AF_Credit_Case_AD CN ON CN.SKP_CREDIT_CASE=P.SKP_CREDIT_CASE
                                                                                    AND CN.skp_credit_type=P.SKP_CREDIT_TYPE
                                                                                    AND CN.date_decision=P.DATE_DECISION
                                                                                  --  AND CN.SKP_CLIENT=P.SKP_CLIENT
                                                                                 --   AND CN.SKP_CREDIT_STATUS IN (2,5)
                                                                                   AND CN.CODE_CREDIT_STATUS IN ('a','k')
JOIN OWNER_DWH.DC_EMPLOYEE E ON E.SKP_EMPLOYEE=CN.SKP_EMPLOYEE_CONSULTANT
--JOIN OWNER_DWH.F_CLIENT_AD FC ON FC.SKP_CLIENT=CN.SKP_CLIENT
WHERE P.DATE_DECISION between TRUNC(SYSDATE)-91 and TRUNC(SYSDATE)-31    
      AND CN.DATE_DECISION between TRUNC(SYSDATE)-91 and TRUNC(SYSDATE)-31 
      AND P.DTIME_PAYMENT_INCOMING BETWEEN TRUNC(SYSDATE)-30--10 
        AND TRUNC(SYSDATE)-1  
      AND NOT EXISTS(SELECT 1 FROM F_PAYMENT_ALL PP WHERE PP.SKF_INCOMING_PAYMENT=P.SKF_INCOMING_PAYMENT );
    --  AND PC.NAME_PAYMENT_CHANNEL_GROUP='LAKALA'
COMMIT;   
DELETE FROM F_PAYMENT_ALL WHERE SYSDATE-DTIME_PAYMENT_INCOMING>61;--31--change to 61 20190128 ellen
DELETE FROM F_PAYMENT_ALL WHERE  text_sender_acc_number= '030101040013997';--ELLEN 20171018 保险账号
DELETE FROM F_PAYMENT_ALL WHERE DATE_DECISION<TRUNC(SYSDATE)-91;--lina 20180209
commit;

---remove class 20 on 20210712


      ----------------WEEKLY PAYMENT TRIGGER------------------------------------

/*BEGIN  

     IF  to_char(sysdate,'day')='星期一'
       THEN   */
               
 INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT 'WEEKLY PAYMENT TRIGGER',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection      
WITH BASE AS (
SELECT * FROM 
AP_ANTIFRAUD.F_PAYMENT_ALL  AA
WHERE CODE_EMPLOYEE_STATUS='a'
AND NOT EXISTS(SELECT 1 FROM AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION T 
WHERE CLASS in('20','40') AND TRIGGER_SOURCE IN('CMB_same_bank_acc','LAKALA_phone_concentration','PSBC_concentration')
AND T.SKP_CREDIT_CASE=aa.Skp_Credit_Case)
)

,sender_acc AS 
(
SELECT 
 text_sender_acc_number
,sales_id
,COUNT(DISTINCT text_contract_number ) AS cnt_text_contract_number
FROM BASE BB
WHERE name_payment_channel_group='CMB'AND text_sender_acc_number IS NOT NULL AND LENGTH (text_sender_acc_number)>10
AND SUBSTR(text_sender_acc_number,0,1)!='1' AND bb.sales_id NOT IN ('rpos','capp','ralph')--add 2020908
GROUP BY text_sender_acc_number ,sales_id
HAVING COUNT(DISTINCT text_contract_number)>=3--4--change to 3 20190128 ellen
)

,cmb_final as 
(
select bb.skp_credit_case,
bb.text_contract_number,
BB.text_sender_acc_number,
BB.SKP_EMPLOYEE_CONSULTANT,
BB.sales_id,
BB.sa_name,
BB.skp_client,
CAST(cnt_text_contract_number||';ACC_NUM:'||acc.text_sender_acc_number||bb.NAME_SENDER AS VARCHAR(1000)) AS cnt_text_contract_number,
BB.DATE_DECISION,
BB.AMT_CREDIT
FROM BASE BB
JOIN sender_acc ACC on BB.text_sender_acc_number=ACC.text_sender_acc_number AND ACC.SALES_ID=BB.SALES_ID
where name_payment_channel_group ='CMB'
)

,skp_client as 
(
select LAKALA_PHONE,
COUNT(DISTINCT skp_client)AS cnt_skp_client
FROM BASE P
WHERE name_payment_channel_group ='LAKALA' AND NOT EXISTS (SELECT 1 FROM OWNER_DWH.DC_EMPLOYEE E WHERE E.TEXT_CELLPHONE=P.LAKALA_PHONE)
GROUP BY LAKALA_PHONE
HAVING COUNT(DISTINCT skp_client)>=3--4--change to 3 20190128 ellen
)

,LAKALA_FINAL AS 
(
SELECT skp_credit_case,
text_contract_number,
text_sender_acc_number,
LA.SKP_EMPLOYEE_CONSULTANT,
sales_id,
sa_name,
skp_client,
LA.LAKALA_PHONE||'; CNT: '||to_char(cnt_skp_client) as LAKALA_PHONE,
LA.DATE_DECISION,
LA.AMT_CREDIT
FROM BASE LA
JOIN skp_client ID ON ID.LAKALA_PHONE=LA.LAKALA_PHONE
WHERE name_payment_channel_group='LAKALA'
)

,cnt_all AS 
(
select 
 count(distinct case when name_payment_channel_group='PSBC' then text_contract_number end) as CNT_PSBC_CLIENTS
,count(distinct text_contract_number)as CNT_ALL
,sales_id 
from  BASE
WHERE sales_id NOT IN ('capp','ralph')
group by sales_id
)

,psbc_all AS 
(
    SELECT * FROM 
        (
        select CNT_PSBC_CLIENTS
        ,1.0*CNT_PSBC_CLIENTS/CNT_ALL as PSBC_RATE
        ,ca.sales_id 
        ,CASE WHEN ca.CNT_ALL>150 AND ca.CNT_PSBC_CLIENTS>60 THEN 1     ----SHARE                                     
                    WHEN 1.0*CNT_PSBC_CLIENTS/CNT_ALL>=0.4 AND AP_ANTIFRAUD.P_VALUE(CNT_PSBC_CLIENTS,CNT_ALL,0.028)<0.001 AND CNT_PSBC_CLIENTS>=5 THEN 1----P_VALUE SETTING
                    ELSE 0 END as psbc              
        from cnt_all ca
        )AA
    where PSBC=1
)

,psbc_final as 
(
SELECT distinct 
skp_credit_case,
text_contract_number,
text_sender_acc_number,
BC.SKP_EMPLOYEE_CONSULTANT,
bc.sales_id, 
sa_name,
skp_client,
TO_CHAR(ROUND(psbc_rate,1),'fm9999990.9999') ||'; CNT: '||to_char(CNT_PSBC_CLIENTS) AS psbc_rate ,
BC.DATE_DECISION,
BC.AMT_CREDIT
from BASE bc
join psbc_all al on al.sales_id= bc.sales_id 
where name_payment_channel_group='PSBC'
)

,test as 
(
select * from 
    (
    select aa.*
    ,dense_rank()over(order by AMT_CREDIT_ALL desc)as seq
    from 
        (
        SELECT aa.* 
        --,ad.date_decision
        ,'lakala'AS TYPE 
        --,AD.AMT_CREDIT 
        ,SUM(AMT_CREDIT)over(PARTITION by lakala_phone )as AMT_CREDIT_ALL
        FROM LAKALA_FINAL aa
        --JOIN DM_ANTIFRAUD.FT_AF_CREDIT_CASE_AD AD on AD.skp_credit_case=aa.skp_credit_case AND AD.DATE_DECISION>=TRUNC(SYSDATE)-120 --lina original 91

        UNION ALL 

        select aa.*
        --,ad.date_decision
        ,'cmb' AS type
        --,AD.AMT_CREDIT 
        ,SUM(AMT_CREDIT) OVER (PARTITION by text_sender_acc_number )AS AMT_CREDIT_ALL
        FROM cmb_final aa
        --JOIN  DM_ANTIFRAUD.FT_AF_CREDIT_CASE_AD AD ON aa.skp_credit_case= AD.skp_credit_case AND AD.DATE_DECISION>=TRUNC(SYSDATE)-120 --lina original 91

        UNION ALL  

        SELECT aa.* 
        --,ad.date_decision
        ,'psbc'AS TYPE 
        --,AD.AMT_CREDIT
        ,SUM(AMT_CREDIT)over(PARTITION by AA.SALES_ID)as AMT_CREDIT_ALL
        FROM psbc_final aa
        --JOIN DM_ANTIFRAUD.FT_AF_CREDIT_CASE_AD AD on AD.skp_credit_case=aa.skp_credit_case AND AD.DATE_DECISION>=TRUNC(SYSDATE)-120--lina original 91
        )aa
    ) dd
--where seq<=150--5
)
       
SELECT
DISTINCT 
 'SA' as UNIT
,pp.SALES_ID AS ID_ENTITY
,TO_CHAR(sysdate,'YYYY/MM/DD')as DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'40' AS CLASS
,case when pp.type='cmb'then 'CMB_same_bank_acc'
       when pp.type='lakala' then 'LAKALA_phone_concentration'
       when pp.type='psbc' then 'PSBC_concentration'
       end as trigger_source 
,case when pp.type='cmb'then 'CMB:'|| LAKALA_PHONE
      when pp.type='lakala' then 'LAKALA:'||  LAKALA_PHONE
      when pp.type='psbc' then 'PSBC:' || LAKALA_PHONE
      end as TRIGGER_VALUE
,'SOFT'AS TRIGGER_TYPE
,PP.skp_credit_case
,pp.text_contract_number
FROM TEST pp;
COMMIT;
       --  END IF; 
       --END;

      --add lina 20180205
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT 'DSM PAYMENT TRIGGER',SYSDATE FROM DUAL;
COMMIT;

  INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection 
  WITH base_con AS
  (
      SELECT DISTINCT tp.skp_credit_case FROM AP_ANTIFRAUD.f_Trcontracts_Preselection  tp  ---20180309
      WHERE CLASS=40  
      UNION
      SELECT DISTINCT fc.skp_credit_case FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS  fc
      WHERE CLASS=40 AND FC.DATE_DECISION>=SYSDATE-91
  )    
  ,sender_acc AS 
  (
      SELECT 
       bb.text_sender_acc_number
       ,acca.text_username_superior
       ,acca.name_last_superior,
      COUNT(DISTINCT BB.text_contract_number ) AS cnt_text_contract_number
      FROM AP_ANTIFRAUD.F_PAYMENT_ALL BB
      JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD acca ON acca.skp_credit_case=bb.skp_credit_case 
      LEFT JOIN base_con con ON  con.skp_credit_case=bb.skp_credit_case
      WHERE name_payment_channel_group='CMB'AND text_sender_acc_number IS NOT NULL AND LENGTH (text_sender_acc_number)>10
      AND SUBSTR(text_sender_acc_number,0,1)!='1'
      AND con.SKP_CREDIT_CASE IS NULL AND acca.DATE_DECISION>=TRUNC(SYSDATE)-91
      GROUP BY BB.text_sender_acc_number ,acca.text_username_superior ,acca.name_last_superior
      HAVING COUNT(DISTINCT BB.text_contract_number)>4
  )

  ,cmb_final AS 
  (
      SELECT DISTINCT bb.skp_credit_case,
      bb.text_contract_number,
      BB.text_sender_acc_number,
      BB.SKP_EMPLOYEE_CONSULTANT,
      ACC.text_username_superior,
      acc.name_last_superior,
      BB.skp_client,
      CAST(ACC.text_username_superior ||'cnt:'||cnt_text_contract_number||';ACC_NUM:'||acc.text_sender_acc_number||bb.NAME_SENDER AS VARCHAR(1000)) AS cnt_textcontract_number,
      acca.AMT_CREDIT
      FROM AP_ANTIFRAUD.F_PAYMENT_ALL BB
      JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD acca ON acca.skp_credit_case=bb.skp_credit_case
      JOIN sender_acc ACC ON BB.text_sender_acc_number=ACC.text_sender_acc_number 
      AND ACC.text_username_superior=acca.text_username_superior
      WHERE name_payment_channel_group ='CMB'
      AND NOT EXISTS (SELECT 1 FROM base_con con WHERE con.skp_credit_case=bb.skp_credit_case)
      AND acca.DATE_DECISION>=TRUNC(SYSDATE)-91
  )
  ,cnt_all AS 
  (
      SELECT CASE WHEN  pa.name_payment_channel_group='PSBC' THEN 'psbc' ELSE NULL END AS psbc_contract
      ,pa.text_contract_number
      ,text_username_superior
      ,name_last_superior
      ,ad.skp_credit_case
      ,ad.skp_client
      ,ad.AMT_CREDIT
      FROM  AP_ANTIFRAUD.F_PAYMENT_ALL pa
      JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ad ON ad.skp_credit_case=pa.skp_credit_case
      AND NOT EXISTS (SELECT 1 FROM base_con con WHERE con.skp_credit_case=pa.skp_credit_case)
      WHERE sales_id NOT IN ('capp','ralph')
      AND ad.DATE_DECISION>=TRUNC(SYSDATE)-91
  )
  ,CNT_PSBC_CLIENTS AS 
  (
      SELECT
      COUNT( DISTINCT psbc_contract) AS CNT_PSBC_CLIENTS
      ,COUNT(DISTINCT text_contract_number)AS  CNT_ALL
      ,text_username_superior
      ,name_last_superior
      FROM cnt_all 
      GROUP BY  
      text_username_superior
      ,name_last_superior
  )

  ,psbc_all AS 
  (
      SELECT * FROM 
      (
          SELECT CNT_PSBC_CLIENTS
          ,1.0*CNT_PSBC_CLIENTS/CNT_ALL AS PSBC_RATE
          ,ca.name_last_superior 
          ,ca.text_username_superior
          ,CASE WHEN ca.CNT_ALL>150 AND ca.CNT_PSBC_CLIENTS>60 THEN 1     ----SHARE                                     
                      WHEN 1.0*CNT_PSBC_CLIENTS/CNT_ALL>=0.4 AND AP_ANTIFRAUD.P_VALUE(CNT_PSBC_CLIENTS,CNT_ALL,0.028)<0.001 AND CNT_PSBC_CLIENTS>=5 THEN 1----P_VALUE SETTING
                      ELSE 0 END AS psbc              
          FROM CNT_PSBC_CLIENTS ca
      )AA
      WHERE PSBC=1
  )

  ,psbc_final AS 
  (
      SELECT DISTINCT 
      bc.skp_credit_case,
      bc.text_contract_number,
      text_sender_acc_number,
      SKP_EMPLOYEE_CONSULTANT,
      bc.text_username_superior,
      bc.name_last_superior,
      pp.skp_client,
      TO_CHAR(bc.text_username_superior ||'cnt:'||ROUND(psbc_rate,1),'fm9999990.9999') ||'; CNT: '||to_char(al.CNT_PSBC_CLIENTS) AS psbc_rate  
      ,bc.AMT_CREDIT
      FROM cnt_all bc
      JOIN  AP_ANTIFRAUD.F_PAYMENT_ALL pp ON bc.skp_credit_case =pp.skp_credit_case
      JOIN psbc_all al ON bc.name_last_superior =al.name_last_superior
      AND bc.text_username_superior= al.text_username_superior
      WHERE  pp.name_payment_channel_group='PSBC'
      AND NOT EXISTS (SELECT 1 FROM base_con con WHERE con.skp_credit_case=pp.skp_credit_case)
  )

  ,FINAL_TABLE AS  
  (
      SELECT  DISTINCT *
      FROM 
      (
          SELECT  aa.*
          ,dense_rank()OVER(ORDER BY AMT_CREDIT_ALL DESC)AS seq
          FROM
          (
              SELECT aa.*
              ,'cmb' AS type
              ,SUM(AMT_CREDIT) OVER (PARTITION BY text_sender_acc_number )AS AMT_CREDIT_ALL
              FROM cmb_final aa
              UNION ALL  
              SELECT aa.*
              ,'psbc'AS TYPE 
              ,SUM(AMT_CREDIT)OVER(PARTITION BY AA.text_username_superior)AS AMT_CREDIT_ALL
              FROM psbc_final aa
          )aa
          JOIN OWNER_DWH.DC_EMPLOYEE E ON E.SKP_EMPLOYEE=aa.SKP_EMPLOYEE_CONSULTANT --AND E.code_employee_status='a'
          WHERE NOT EXISTS
              (
              SELECT 1 FROM AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION T 
              WHERE CLASS IN ('20','40') AND TRIGGER_SOURCE IN('CMB_same_bank_acc','PSBC_concentration') AND T.ID_ENTITY=aa.text_username_superior 
              )
      )
      --WHERE seq<5 --remove 20190128 ellen
  ) 
                    
  SELECT DISTINCT 'SA' AS UNIT
  ,pp.text_username_superior AS ID_ENTITY
  ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
  ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
  ,'40' AS CLASS
  ,CASE WHEN pp.type='cmb'THEN 'DSM_CMB_same_bank_acc'
             WHEN pp.type='psbc' THEN 'DSM_PSBC_concentration' END AS trigger_source 
  ,CASE WHEN pp.type='cmb'THEN 'CMB:'||cnt_textcontract_number
            WHEN pp.type='psbc' THEN 'PSBC:' ||cnt_textcontract_number END AS TRIGGER_VALUE
  ,'SOFT'AS TRIGGER_TYPE
  ,PP.skp_credit_case
  ,pp.text_contract_number
  FROM FINAL_TABLE pp;
  COMMIT;
      
--new setting 20181114 --NO SA CONCENTRATION
INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection  
  WITH BASE AS 
  (
  SELECT * FROM 
  AP_ANTIFRAUD.F_PAYMENT_ALL  AA
  WHERE CODE_EMPLOYEE_STATUS='a'
  AND AA.NAME_SENDER NOT LIKE '%保险%公司%'
  AND NOT EXISTS
      (SELECT 1 FROM AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION T 
      WHERE CLASS IN ('40') 
      AND T.SKP_CREDIT_CASE=aa.Skp_Credit_Case
      )
  )
  ,sender_acc AS 
  (
  SELECT 
   text_sender_acc_number
  ,COUNT(DISTINCT SKP_CLIENT ) AS cnt_text_contract_number --20191220
  FROM BASE BB
  WHERE name_payment_channel_group='CMB'AND text_sender_acc_number IS NOT NULL AND LENGTH (text_sender_acc_number)>10
  AND SUBSTR(text_sender_acc_number,0,1)!='1'
  GROUP BY text_sender_acc_number 
  HAVING COUNT(DISTINCT SKP_CLIENT)>=3
  )
  ,cmb_final as 
  (
  select bb.skp_credit_case,
  bb.text_contract_number,
  BB.text_sender_acc_number,
  BB.SKP_EMPLOYEE_CONSULTANT,
  BB.sales_id,
  BB.sa_name,
  BB.skp_client,
  CAST(cnt_text_contract_number||';ACC_NUM:'||acc.text_sender_acc_number||bb.NAME_SENDER AS VARCHAR(1000)) AS cnt_text_contract_number,
  BB.DATE_DECISION,
  BB.AMT_CREDIT
  FROM BASE BB
  JOIN sender_acc ACC on BB.text_sender_acc_number=ACC.text_sender_acc_number  
  where name_payment_channel_group ='CMB'
  )
  SELECT DISTINCT 
   'SA' as UNIT
  ,pp.SALES_ID AS ID_ENTITY
  ,TO_CHAR(sysdate,'YYYY/MM/DD')as DATE_DETECT
  ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
  ,'40' AS CLASS
  ,'CMB no SA concentration' as trigger_source 
  ,'CMB:'||cnt_text_contract_number as TRIGGER_VALUE
  ,'SOFT'AS TRIGGER_TYPE
  ,PP.skp_credit_case
  ,pp.text_contract_number
  FROM cmb_final pp
  WHERE NOT EXISTS --20190121
    (
    SELECT 1 FROM AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION BB 
    WHERE BB.CLASS='40' AND  BB.DATE_DETECT=TO_CHAR(SYSDATE, 'YYYY/MM/DD')
    AND BB.TRIGGER_SOURCE='HCC POS help client repay-Concentration' 
    AND pp.SKP_CREDIT_CASE =BB.SKP_CREDIT_CASE 
    );
  COMMIT;
  

--**********************************************
--40 new setting 1:POS help client repay 20191128
--**********************************************
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT 'POS help client repay',SYSDATE FROM DUAL;
COMMIT;
--20191209
INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection 
WITH pay3party_con1 AS 
(
SELECT -- /*+ CARDINALITY (FACC 1) */
dcc.SKP_CREDIT_CASE ,dcc.DATE_DECISION ,dcc.SKP_CREDIT_TYPE ,DCC.text_contract_number,FACC.TEXT_USERNAME_EMPLOYEE_SALES, FACC.code_salesroom AS POS_CODE,
DCC.skp_client,
facc.text_identity_card_number as ID_CARD,
s.text_login_mobile as LOGIN_MOBILE_NUM
, s.DTIME_INSERTED as  cdate
,t.NAME_DIRECT_DEBIT_CHANNEL as provider_name
,S.AMT_REPAYMENT_TOTAL as total_repay_amount
,FACC.amt_credit,facc.name_last_client
FROM OWNER_DWH.F_H5_PAYMENT_ORDER_HEAD_TT s
JOIN OWNER_DWH.F_H5_PAYMENT_ORDER_DETAIL_TT d ON d.SKF_H5_PAYMENT_ORDER_HEAD=s.SKF_H5_PAYMENT_ORDER_HEAD
JOIN OWNER_DWH.Cl_Direct_Debit_Channel T ON t.SKP_DIRECT_DEBIT_CHANNEL=s.SKP_DIRECT_DEBIT_CHANNEL
JOIN OWNER_DWH.Dc_Credit_Case dcc ON d.SKP_CREDIT_CASE =dcc.SKP_CREDIT_CASE 
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC
ON FACC.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE 
AND FACC.SKP_CREDIT_TYPE =DCC.SKP_CREDIT_TYPE 
AND FACC.DATE_DECISION =DCC.DATE_DECISION 
WHERE s.DTIME_INSERTED >=SYSDATE-30
AND D.DTIME_INSERTED  >=SYSDATE-30
AND DCC.DATE_DECISION >= DATE'2018-10-01' 
AND FACC.DATE_DECISION >=DATE'2018-10-01' 
AND d.NUM_WAPP_PAY_ORDER_STATUS=0
AND s.TEXT_LOGIN_MOBILE<>'XNA'
AND s.TEXT_LOGIN_MOBILE<>s.TEXT_MOBILE 
AND DCC.SKP_CREDIT_STATUS IN (2,3,5)
AND S.AMT_REPAYMENT_TOTAL<>FACC.amt_credit
AND ((FACC.text_brand_exp NOT LIKE '%比亚乔%' AND upper(FACC.TEXT_MODEL_EXP) NOT LIKE '%APR150%'AND upper(FACC.TEXT_MODEL_EXP) NOT LIKE '%APR250%')
 OR FACC.text_brand_exp='XNA' OR FACC.text_brand_exp IS NULL)--REMOVE 3 BRAND MOTOR 20191223
)
,PARTY3_CON AS 
(
SELECT /*+materialize*/ distinct  con.*
,SR.code_salesroom,sr.text_main_contact_name
,CASE WHEN  DDS.NAME_SELLERCHAIN_GROUP  LIKE '%LKA' THEN 'LKA' WHEN  DDS.NAME_SELLERCHAIN_GROUP  LIKE '%KA' THEN 'KA'
WHEN TT.SKP_SALESROOM_TYPE=13 THEN 'ALDI'
ELSE 'NON-ALDI' END  AS HIT_POS_TYPE
FROM  pay3party_con1 con
JOIN OWNER_DWH.DC_SALESROOM SR
ON CON.LOGIN_MOBILE_NUM=SR.text_main_contact_CELLPHONE
AND sr.text_main_contact_name<>con.name_last_client
AND SR.code_salesroom_status='a'
JOIN OWNER_DWH.DDC_SALESROOM DDS ON SR.skp_salesroom=DDS.SKP_SALESROOM
JOIN OWNER_DWH.F_SALESROOM_HISTORY_TT TT ON SR.skp_salesroom=TT.SKP_SALESROOM
)

,SA1 AS 
(
SELECT /*+materialize*/ LOGIN_MOBILE_NUM
,COUNT(DISTINCT SKP_CLIENT) as cnt_client1  
FROM PARTY3_CON C
LEFT JOIN AP_ANTIFRAUD.f_Trcontracts_Preselection pre
ON pre.skp_credit_case=c.SKP_CREDIT_CASE 
AND (pre.class=40 OR PRE.CLASS=538)
JOIN AP_ANTIFRAUD.Cl_Trigger_Excute_Time ET ON ET.CLASS=40
WHERE 1=1
AND C.cdate>=ET.MAX_DETECT 
AND pre.SKP_CREDIT_CASE is null
GROUP BY LOGIN_MOBILE_NUM
HAVING COUNT(DISTINCT SKP_CLIENT)>=1
)
,SA2 AS
(
SELECT  C.LOGIN_MOBILE_NUM,COUNT(DISTINCT SKP_CLIENT) as cnt_client4 ,MIN(cdate) AS MIN_DATE,MAX(cdate) as max_date
FROM PARTY3_CON C
LEFT JOIN AP_ANTIFRAUD.f_Trcontracts_Preselection pre ON pre.skp_credit_case=c.SKP_CREDIT_CASE 
AND (pre.class=40 OR PRE.CLASS=538)
JOIN sa1 s ON c.LOGIN_MOBILE_NUM=s.LOGIN_MOBILE_NUM
WHERE 1=1
AND pre.SKP_CREDIT_CASE is null
GROUP BY C.LOGIN_MOBILE_NUM 
HAVING COUNT(DISTINCT SKP_CLIENT)>=2
)
,CON_DE AS 
(
SELECT /*+materialize*/ C.SKP_CREDIT_CASE ,C.TEXT_CONTRACT_NUMBER,C.POS_CODE,TEXT_USERNAME_EMPLOYEE_SALES,LOGIN_MOBILE_NUM,text_main_contact_name
,listagg(c.code_salesroom||'('||HIT_POS_TYPE||')',';') within group(order by LOGIN_MOBILE_NUM) as POS_T
FROM 
     (
    SELECT DISTINCT 
    c.code_salesroom,
    C.TEXT_USERNAME_EMPLOYEE_SALES,
    C.POS_CODE,
    C.SKP_CREDIT_CASE 
    ,C.TEXT_CONTRACT_NUMBER
    ,C.LOGIN_MOBILE_NUM
    ,C.HIT_POS_TYPE
    ,c.text_main_contact_name
    FROM PARTY3_CON C
    LEFT join AP_ANTIFRAUD.f_Trcontracts_Preselection pre ON pre.skp_credit_case=c.SKP_CREDIT_CASE 
    AND( pre.class=40 OR PRE.CLASS=538)
    JOIN SA2 A
    ON C.LOGIN_MOBILE_NUM=A.LOGIN_MOBILE_NUM 
    WHERE 1=1
    AND pre.SKP_CREDIT_CASE IS  NULL
    )c
GROUP BY  C.SKP_CREDIT_CASE ,C.TEXT_CONTRACT_NUMBER,C.POS_CODE,TEXT_USERNAME_EMPLOYEE_SALES,LOGIN_MOBILE_NUM,text_main_contact_name
)
, con_amt AS
(
SELECT  
C.SKP_CREDIT_CASE 
,C.TEXT_CONTRACT_NUMBER,
C.LOGIN_MOBILE_NUM,
A.cnt_client4,
MAX(C.total_repay_amount) as repay_amount
,MAX(C.cdate) AS CON_MAX_PAY_DATE
FROM PARTY3_CON C
JOIN SA2 A ON C.LOGIN_MOBILE_NUM=A.LOGIN_MOBILE_NUM
JOIN con_de d on d.SKP_CREDIT_CASE =c.SKP_CREDIT_CASE 
GROUP BY c.LOGIN_MOBILE_NUM,C.SKP_CREDIT_CASE ,C.TEXT_CONTRACT_NUMBER,A.cnt_client4
)
SELECT /*+materialize*/ 
DISTINCT 
'POS' AS UNIT,
C.POS_CODE AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'40' AS CLASS
,'HCC POS help client repay-Phone Concentration' AS TRIGGER_SOURCE
, 'Phone number:'||b.LOGIN_MOBILE_NUM ||'('||c.text_main_contact_name||') ; repaid for '||A.cnt_client4||' contracts within 1 month; For this contract：repaid date on : '||TO_CHAR(b.CON_MAX_PAY_DATE, 'YYYY/MM/DD HH24:MI:SS')||
'; repayment amount: '||TO_CHAR(B.repay_amount) || ', POS_CODE: '|| C.POS_T  as TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,C.SKP_CREDIT_CASE 
,C.TEXT_CONTRACT_NUMBER
FROM CON_DE C
JOIN con_amt b ON c.SKP_CREDIT_CASE =b.SKP_CREDIT_CASE 
AND c.LOGIN_MOBILE_NUM=b.LOGIN_MOBILE_NUM
JOIN SA2 A ON C.LOGIN_MOBILE_NUM=A.LOGIN_MOBILE_NUM;
COMMIT;

--**********************************************
--40 new setting 2: RETAILER help to pay  20191128
--**********************************************
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT 'RETAILER help to pay',SYSDATE FROM DUAL;
COMMIT;
--20191209
INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection
with pay3party_con1 as 
(
SELECT -- /*+ CARDINALITY (FACC 1) */
dcc.SKP_CREDIT_CASE ,dcc.DATE_DECISION ,dcc.SKP_CREDIT_TYPE ,DCC.text_contract_number,FACC.TEXT_USERNAME_EMPLOYEE_SALES,FACC.code_salesroom AS POS_CODE,
DCC.skp_client,
facc.text_identity_card_number as ID_CARD,
s.text_login_mobile as LOGIN_MOBILE_NUM
, s.DTIME_INSERTED as  cdate
,t.NAME_DIRECT_DEBIT_CHANNEL as provider_name
,S.AMT_REPAYMENT_TOTAL as total_repay_amount
,FACC.amt_credit,facc.name_last_client
FROM OWNER_DWH.F_H5_PAYMENT_ORDER_HEAD_TT s
JOIN OWNER_DWH.F_H5_PAYMENT_ORDER_DETAIL_TT d ON d.SKF_H5_PAYMENT_ORDER_HEAD=s.SKF_H5_PAYMENT_ORDER_HEAD
JOIN OWNER_DWH.Cl_Direct_Debit_Channel T ON t.SKP_DIRECT_DEBIT_CHANNEL=s.SKP_DIRECT_DEBIT_CHANNEL
JOIN OWNER_DWH.Dc_Credit_Case dcc ON d.SKP_CREDIT_CASE =dcc.SKP_CREDIT_CASE 
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC
ON FACC.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE 
AND FACC.SKP_CREDIT_TYPE =DCC.SKP_CREDIT_TYPE 
AND FACC.DATE_DECISION =DCC.DATE_DECISION 
WHERE s.DTIME_INSERTED >=SYSDATE-30
AND D.DTIME_INSERTED  >=SYSDATE-30
AND DCC.DATE_DECISION >= DATE'2018-10-01' 
AND FACC.DATE_DECISION >=DATE'2018-10-01' 
AND d.NUM_WAPP_PAY_ORDER_STATUS=0
AND s.TEXT_LOGIN_MOBILE<>'XNA'
AND s.TEXT_LOGIN_MOBILE<>s.TEXT_MOBILE 
AND DCC.SKP_CREDIT_STATUS IN (2,3,5)
AND ((FACC.text_brand_exp NOT LIKE '%比亚乔%' AND upper(FACC.TEXT_MODEL_EXP) NOT LIKE '%APR150%'AND upper(FACC.TEXT_MODEL_EXP) NOT LIKE '%APR250%')
 OR FACC.text_brand_exp='XNA' OR FACC.text_brand_exp IS NULL)--REMOVE 3 BRAND MOTOR 20191223
)
,PARTY3_CON AS 
(
SELECT /*+materialize*/  con.*
,SE.CODE_SELLER||' (POS: '||SELLER_POSCODE||')' AS CODE_SELLER,se.NAME_MAIN_SELLER_CONTACT

FROM  pay3party_con1 con
JOIN (
SELECT /*+materialize*/ SE.CODE_SELLER,SE.NAME_MAIN_SELLER_CONTACT ,se.TEXT_MAIN_CONTACT_CELLPHONE
,listagg(SR.code_salesroom,';') within group(order by CODE_SELLER) as SELLER_POSCODE
FROM  OWNER_DWH.DC_SELLER SE
JOIN OWNER_DWH.Dc_Salesroom sr
ON SE.SKP_SELLER=SR.skp_seller
WHERE SR.code_salesroom_status='a'
GROUP BY SE.CODE_SELLER,se.NAME_MAIN_SELLER_CONTACT  ,se.TEXT_MAIN_CONTACT_CELLPHONE )SE
ON CON.LOGIN_MOBILE_NUM=SE.TEXT_MAIN_CONTACT_CELLPHONE
AND CON.name_last_client<>SE.NAME_MAIN_SELLER_CONTACT
)
,SA1 AS 
(
SELECT /*+materialize*/ LOGIN_MOBILE_NUM
,COUNT(DISTINCT SKP_CLIENT) as cnt_client1  
FROM PARTY3_CON C
LEFT JOIN AP_ANTIFRAUD.f_Trcontracts_Preselection pre
ON pre.skp_credit_case=c.SKP_CREDIT_CASE 
AND (pre.class=40 OR PRE.CLASS=538)
JOIN AP_ANTIFRAUD.Cl_Trigger_Excute_Time ET ON ET.CLASS=40
WHERE 1=1
AND C.cdate>=ET.MAX_DETECT 
AND pre.SKP_CREDIT_CASE is null
GROUP BY LOGIN_MOBILE_NUM
HAVING COUNT(DISTINCT SKP_CLIENT)>=1
)
,SA2 AS
(
SELECT  C.LOGIN_MOBILE_NUM,COUNT(DISTINCT SKP_CLIENT) as cnt_client4 ,MIN(cdate) AS MIN_DATE,MAX(cdate) as max_date
FROM PARTY3_CON C
LEFT JOIN AP_ANTIFRAUD.f_Trcontracts_Preselection pre ON pre.skp_credit_case=c.SKP_CREDIT_CASE 
AND (pre.class=40 OR PRE.CLASS=538)
JOIN sa1 s ON c.LOGIN_MOBILE_NUM=s.LOGIN_MOBILE_NUM
WHERE 1=1
AND pre.SKP_CREDIT_CASE is null
GROUP BY C.LOGIN_MOBILE_NUM 
HAVING COUNT(DISTINCT SKP_CLIENT)>=2
)
,CON_DE AS 
(
SELECT /*+materialize*/ C.SKP_CREDIT_CASE ,C.TEXT_CONTRACT_NUMBER,C.POS_CODE,TEXT_USERNAME_EMPLOYEE_SALES,LOGIN_MOBILE_NUM,NAME_MAIN_SELLER_CONTACT
,listagg(c.CODE_SELLER,';') within group(order by LOGIN_MOBILE_NUM) as POS_T

FROM 
     (
    SELECT DISTINCT 
    c.CODE_SELLER,
    C.TEXT_USERNAME_EMPLOYEE_SALES,
    C.POS_CODE,
    C.SKP_CREDIT_CASE 
    ,C.TEXT_CONTRACT_NUMBER
    ,C.LOGIN_MOBILE_NUM
    ，c.NAME_MAIN_SELLER_CONTACT
    FROM PARTY3_CON C
    LEFT join AP_ANTIFRAUD.f_Trcontracts_Preselection pre ON pre.skp_credit_case=c.SKP_CREDIT_CASE 
    AND( pre.class=40 OR PRE.CLASS=538)
    JOIN SA2 A
    ON C.LOGIN_MOBILE_NUM=A.LOGIN_MOBILE_NUM 
    WHERE 1=1
    AND pre.SKP_CREDIT_CASE IS  NULL
    )c
GROUP BY  C.SKP_CREDIT_CASE ,C.TEXT_CONTRACT_NUMBER,C.POS_CODE,TEXT_USERNAME_EMPLOYEE_SALES,LOGIN_MOBILE_NUM,NAME_MAIN_SELLER_CONTACT
)
, con_amt AS
(
SELECT  
C.SKP_CREDIT_CASE 
,C.TEXT_CONTRACT_NUMBER,
C.LOGIN_MOBILE_NUM,
A.cnt_client4,
MAX(C.total_repay_amount) as repay_amount
,MAX(C.cdate) AS CON_MAX_PAY_DATE
FROM PARTY3_CON C
JOIN SA2 A ON C.LOGIN_MOBILE_NUM=A.LOGIN_MOBILE_NUM
JOIN con_de d on d.SKP_CREDIT_CASE =c.SKP_CREDIT_CASE 
GROUP BY c.LOGIN_MOBILE_NUM,C.SKP_CREDIT_CASE ,C.TEXT_CONTRACT_NUMBER,A.cnt_client4
)

SELECT /*+materialize*/ 
DISTINCT 
'POS' AS UNIT,
C.POS_CODE AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'40' AS CLASS
,'HCC POS help client repay-Phone Concentration' AS TRIGGER_SOURCE
, 'Phone number:'||b.LOGIN_MOBILE_NUM||'('||C.NAME_MAIN_SELLER_CONTACT|| ') ; repaid for '||A.cnt_client4||' contracts within 1 month; For this contract：repaid date on :'||TO_CHAR(b.CON_MAX_PAY_DATE, 'YYYY/MM/DD HH24:MI:SS')||
'; repayment amount: '||TO_CHAR(B.repay_amount) || ', SELLER_CODE: '|| C.POS_T  as TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,C.SKP_CREDIT_CASE 
,C.TEXT_CONTRACT_NUMBER
FROM CON_DE C
JOIN con_amt b ON c.SKP_CREDIT_CASE =b.SKP_CREDIT_CASE 
AND c.LOGIN_MOBILE_NUM=b.LOGIN_MOBILE_NUM
JOIN SA2 A ON C.LOGIN_MOBILE_NUM=A.LOGIN_MOBILE_NUM;
COMMIT;


--更新所有ACL为第三block的SA 20190723
MERGE INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION TR
USING (
                  SELECT DC.SKP_CREDIT_CASE,EE.TEXT_USERNAME_EMPLOYEE
                  FROM OWNER_DWH.DC_CREDIT_CASE DC 
                  JOIN OWNER_DWH.F_APPLICATION_TT TT ON DC.skp_credit_case=TT.SKP_CREDIT_CASE 
                    AND TT.DATE_DECISION=DC.date_decision 
                    AND TT.SKP_CREDIT_TYPE=DC.skp_credit_type
                  JOIN OWNER_DWH.DC_EMPLOYEE EE ON TT.skp_employee_consult_3rd_block=EE.SKP_EMPLOYEE
                  WHERE DC.DATE_DECISION>SYSDATE-365
                  AND TT.DATE_DECISION>SYSDATE-365
                  AND DC.skp_credit_acquisition_chnl=6 --ACL
                  AND DC.skp_credit_type=2
                  AND EE.TEXT_USERNAME_EMPLOYEE IS NOT NULL
                  AND EE.TEXT_USERNAME_EMPLOYEE<>'XNA'
              )C
ON (C.SKP_CREDIT_CASE = TR.SKP_CREDIT_CASE AND TR.DATE_DETECT =TO_CHAR(SYSDATE,'YYYY/MM/DD') AND TR.UNIT='SA' AND TR.CLASS IN (40))  --20190912
WHEN MATCHED THEN
  UPDATE SET
  TR.ID_ENTITY=C.TEXT_USERNAME_EMPLOYEE;
 COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;

---------------Third Party Repayment 20200103 Zixuan--------------------------
PROCEDURE TRIGGER_40_3PARTY_PAYMENT IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name: length       
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_40_3PARTY';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP:40_3PARTY';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL); 
 --comment by zx 20201026 --uncomment by zx 20201030   
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '3PARTY REPAYMENT TRIGGER_40',SYSDATE FROM DUAL;
COMMIT;

---20201109 ZX
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION 

WITH BASE AS(
SELECT DISTINCT C.*,DENSE_RANK() OVER(ORDER BY C.TEXT_LOGIN_MOBILE) AS INSERT_TRI_RNK
FROM AP_ANTIFRAUD.ZX_TRIGGER_40_PRESELECT C
WHERE TRUNC(C.MODIFIED_TIME) >= SYSDATE-2  --20201126 ZX
)
SELECT DISTINCT
'SA' AS UNIT, 
B.ID_ENTITY, 
TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT,
'40' AS CLASS,
'Third party phone repayment concentration' AS TRIGGER_SOURCE,
'['||B.INSERT_TRI_RNK||']'||B.TRIGGER_VALUE AS TRIGGER_VALUE,
'SOFT' AS TRIGGER_TYPE,
B.SKP_CREDIT_CASE,
B.TEXT_CONTRACT_NUMBER
FROM BASE B;

COMMIT;


--更新所有ACL为第三block的SA 20200218 LINA
MERGE INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION TR
USING (
                  SELECT DC.SKP_CREDIT_CASE,EE.TEXT_USERNAME_EMPLOYEE
                  FROM OWNER_DWH.DC_CREDIT_CASE DC 
                  JOIN OWNER_DWH.F_APPLICATION_TT TT ON DC.skp_credit_case=TT.SKP_CREDIT_CASE 
                    AND TT.DATE_DECISION=DC.date_decision 
                    AND TT.SKP_CREDIT_TYPE=DC.skp_credit_type
                  JOIN OWNER_DWH.DC_EMPLOYEE EE ON TT.skp_employee_consult_3rd_block=EE.SKP_EMPLOYEE
                  WHERE DC.DATE_DECISION>SYSDATE-365
                  AND TT.DATE_DECISION>SYSDATE-365
                  AND DC.skp_credit_acquisition_chnl=6 --ACL
                  AND DC.skp_credit_type=2
                  AND EE.TEXT_USERNAME_EMPLOYEE IS NOT NULL
                  AND EE.TEXT_USERNAME_EMPLOYEE<>'XNA'
              )C
ON (C.SKP_CREDIT_CASE = TR.SKP_CREDIT_CASE AND TR.DATE_DETECT =TO_CHAR(SYSDATE,'YYYY/MM/DD') AND TR.UNIT='SA' AND TR.CLASS=40) 
WHEN MATCHED THEN
  UPDATE SET
  TR.ID_ENTITY=C.TEXT_USERNAME_EMPLOYEE;
 COMMIT;
-----Add into trigger 20191213 ellen

INSERT INTO AP_ANTIFRAUD.F_AF_FINAL_TRIGGERS
WITH FINAL_TRIGGER_BASE AS
(
SELECT DISTINCT 
UNIT,TO_DATE(DATE_DETECT,'YYYY-MM-DD')AS DATE_DETECT,CLASS
,TO_DATE(WEEK_DETECT,'YYYY-MM-DD')AS WEEK_DETECT
,ID_ENTITY
,TRIGGER_SOURCE
,TRIGGER_TYPE
,CASE WHEN CLASS=40 AND TRIGGER_SOURCE='Third party phone repayment concentration' THEN SUBSTR(PRE.TRIGGER_VALUE,1,INSTR(PRE.TRIGGER_VALUE,'，',1,1)-1)--20191202
             WHEN CLASS=40 AND TRIGGER_SOURCE='HCC POS help client repay-Phone Concentration' THEN SUBSTR(PRE.TRIGGER_VALUE,0,INSTR(PRE.TRIGGER_VALUE,';',1,1))--20191209
             /*WHEN CLASS=40 AND TRIGGER_SOURCE='One device repay for multi clients in capp' THEN SUBSTR(PRE.TRIGGER_VALUE,1,INSTR(PRE.TRIGGER_VALUE,'，',1,1)-1)*/--20200817 ZX --comment 20200928 zx
             ELSE TRIGGER_VALUE END AS TRIGGER_VALUE
,CASE WHEN (CLASS=508 OR CLASS=534 OR CLASS=40 AND trigger_source LIKE 'DSM%') AND UNIT='SA' THEN facc.name_last_superior --add 534 20190625
            WHEN  UNIT='SA' AND PRE.ID_ENTITY='XNA' THEN NULL --ALDI2.0 的name为空 20200113
              WHEN UNIT='SA' AND PRE.ID_ENTITY<>'XNA'THEN  EE.NAME_LAST
                 ELSE FACC.name_salesroom END AS NAME_ENTITY --20180504
,CASE WHEN (CLASS=508 OR CLASS=534 OR CLASS=40 AND trigger_source LIKE 'DSM%') AND UNIT='SA' THEN NULL
           WHEN  UNIT='SA' AND PRE.ID_ENTITY='XNA' THEN NULL --ALDI2.0 的name为空 20200113
            WHEN UNIT='SA' AND PRE.ID_ENTITY<>'XNA' THEN SA.cnt_days_from_first_credit ELSE FS.cnt_days_from_first_credit END as ACTIVE_DAYS

, CASE WHEN((FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR facc.code_salesroom='160212' OR PRE.ID_ENTITY='homer_o2o' 
       OR (/*PRE.ID_ENTITY='rpos' AND */ DCC.skp_product_channel=804 AND DCC.code_rpos_type<>'2') OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%' OR FACC.name_product LIKE '%MINI%') AND DSAC.CODE_SALES_AREA IS NOT NULL THEN DSAC.CODE_SALES_AREA 
       ELSE  PRO.CODE_SALES_AREA END  AS REGION--FACC改为PRE 20190514
, CASE WHEN((FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR facc.code_salesroom='160212' OR PRE.ID_ENTITY='homer_o2o'
       OR (/*PRE.ID_ENTITY='rpos' AND*/ DCC.skp_product_channel=804 AND DCC.code_rpos_type<>'2') OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%' OR FACC.name_product LIKE '%MINI%') AND DSA.CODE_SALES_AREA IS NOT NULL THEN DSA.CODE_SALES_AREA 
       ELSE  CC.CODE_SALES_AREA END AS CODE_SALES_AREA --add rpos 20190827
         
,MIN(CASE WHEN PRE.CLASS=541 THEN  '0 ELOAN'  --20191107 
                        WHEN FACC.name_channel='商品贷' AND FACC.text_username_employee_sales!='extreme' AND RSA.SKP_BANK_ROLE<>1962 THEN '1 POS LOAN'
                         WHEN FACC.name_channel LIKE '%无预约%' AND FACC.text_username_employee_sales!='extreme' THEN '2 WALK-IN'
                           WHEN (FACC.name_channel LIKE '消费贷%' AND FACC.text_username_employee_sales!='extreme')OR CLASS='533' THEN '3 XSELL'
                            -- WHEN FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme' THEN '4 ELOAN' ELSE '5 MINI' END 
                          WHEN FACC.name_channel='商品贷' AND RSA.SKP_BANK_ROLE=1962 THEN 
                             CASE WHEN PRE.CLASS='40' THEN '4 ELOAN' ELSE '0 ELOAN' END ELSE '5 MINI' END --REMOTE SA 20190517
                            )  OVER (PARTITION BY CASE WHEN CLASS='40' THEN ''ELSE ID_ENTITY END--20191202
                                    ,DATE_DETECT,TRIGGER_SOURCE
                                    ,CASE WHEN CLASS=40 AND TRIGGER_SOURCE='Third party phone repayment concentration' THEN SUBSTR(PRE.TRIGGER_VALUE,1,INSTR(PRE.TRIGGER_VALUE,'，',1,1)-1)--20191202
                                          WHEN CLASS=40 AND TRIGGER_SOURCE='HCC POS help client repay-Phone Concentration' THEN SUBSTR(PRE.TRIGGER_VALUE,0,INSTR(PRE.TRIGGER_VALUE,';',1,1))--20191209
                                          /*WHEN CLASS=40 AND TRIGGER_SOURCE='One device repay for multi clients in capp' THEN SUBSTR(PRE.TRIGGER_VALUE,1,INSTR(PRE.TRIGGER_VALUE,'，',1,1)-1)*/--20200817 ZX  --comment 20200928 zx
                                          ELSE TRIGGER_VALUE  END --trigger_value
                                    ,CASE WHEN CLASS='40' THEN ''ELSE 
                                        CASE WHEN ((FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR PRE.ID_ENTITY IN ('homer_o2o','rpos') OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%' OR FACC.name_product LIKE '%MINI%') AND DSA.CODE_SALES_AREA IS NOT NULL 
                                          THEN DSA.CODE_SALES_AREA ELSE  CC.CODE_SALES_AREA END END--city fpr payment trigger 20191202
                                    )AS CASE_CATEGORY

,NULL AS NAME_DISTRICT--20180423
FROM AP_ANTIFRAUD.f_Trcontracts_Preselection PRE
JOIN owner_dwh.DC_credit_case dcc ON pre.skp_credit_case = dcc.skp_credit_case AND pre.date_detect = to_char(SYSDATE, 'YYYY/MM/DD') AND PRE.CLASS IN ('40') 
JOIN dm_antifraud.f_af_credit_case_ad facc ON dcc.skp_credit_case = facc.skp_credit_case AND dcc.date_decision = facc.date_decision AND dcc.skp_credit_type = facc.skp_credit_type AND FACC.date_decision>=DATE'2015-01-01'
---20180504 NAME ENTITY
LEFT JOIN OWNER_DWH.DC_EMPLOYEE EE ON PRE.ID_ENTITY=EE.TEXT_USERNAME_EMPLOYEE AND EE.CODE_EMPLOYEE_STATUS<>'X'
LEFT JOIN OWNER_DWH.DC_SALES_AREA CC ON CC.NAME_SALES_AREA=FACC.name_region AND CC.code_sales_area_status='a' and  CC.skp_sales_area_type=1
LEFT JOIN OWNER_DWH.DC_SALES_AREA PRO ON CC.SKP_SALES_AREA_SUPERIOR=PRO.SKP_SALES_AREA AND  PRO.CODE_SALES_AREA_STATUS='a' and PRO.SKP_SALES_AREA_TYPE=2
---SA_ACTIVE_DAYS
LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON EE.SKP_EMPLOYEE=sa.skp_employee AND PRE.UNIT='SA'--20180606
---POS_ACTIVE_DAYS
LEFT JOIN DM_ANTIFRAUD.F_SALESROOM_AD FS ON FACC.skp_salesroom=FS.skp_salesroom AND PRE.UNIT='POS'
JOIN OWNER_DWH.f_Application_Client_Tt ACT ON ACT.SKP_CREDIT_CASE=DCC.SKP_CREDIT_CASE AND ACT.date_decision=DCC.DATE_DECISION AND ACT.SKP_CREDIT_TYPE=DCC.SKP_CREDIT_TYPE AND ACT.SKP_CLIENT_ROLE=14
LEFT JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR ON ADDR.SKP_CREDIT_CASE= DCC.SKP_CREDIT_CASE AND ACT.SKP_APPLICATION_CLIENT=ADDR.SKP_APPLICATION_CLIENT AND ADDR.SKP_ADDRESS_TYPE=2--CURRENT
LEFT JOIN OWNER_DWH.DC_CITY DC ON DC.SKP_CITY=ADDR.SKP_CITY
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSA ON DSA.NAME_SALES_AREA=DC.NAME_CITY AND DSA.code_sales_area_status='a' and  DSA.skp_sales_area_type=1
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSAC ON DSA.SKP_SALES_AREA_SUPERIOR=DSAC.SKP_SALES_AREA AND  DSAC.CODE_SALES_AREA_STATUS='a' and DSAC.SKP_SALES_AREA_TYPE=2
--for remote sa 20190527
LEFT JOIN OWNER_DWH.DC_EMPLOYEE RSA ON FACC.text_username_employee_sales=RSA.TEXT_USERNAME_EMPLOYEE AND RSA.CODE_EMPLOYEE_STATUS<>'X'
)

,PROVINCE AS (
SELECT DISTINCT TRIGGER_VALUE
,LISTAGG(REGION,'、' )WITHIN GROUP(ORDER BY REGION) OVER(PARTITION BY TRIGGER_VALUE) AS PROVINCE
FROM (SELECT DISTINCT TRIGGER_VALUE,REGION FROM FINAL_TRIGGER_BASE)
)
,REGION AS (
SELECT DISTINCT AA.TRIGGER_VALUE
,BB.PROVINCE
,LISTAGG(CODE_SALES_AREA,'、')WITHIN GROUP(ORDER BY CODE_SALES_AREA) OVER(PARTITION BY AA.TRIGGER_VALUE) AS CITY
FROM  (SELECT DISTINCT TRIGGER_VALUE, CODE_SALES_AREA FROM FINAL_TRIGGER_BASE) AA
JOIN PROVINCE BB ON AA.TRIGGER_VALUE=BB.TRIGGER_VALUE)

SELECT  
 AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID
,UNIT
,UNIT||'_'||AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID_TRIGGER
,DATE_DETECT
,WEEK_DETECT
,TRI.ID_ENTITY
,TRI.NAME_ENTITY
,BB.PROVINCE
,BB.CITY
,CASE WHEN UNIT='SA' AND SUBSTR(ID_ENTITY,1,1) IN ('6','D') THEN 'RA' WHEN UNIT= 'SA' AND SUBSTR(ID_ENTITY,1,1) NOT IN ('6','D')THEN 'SA'
             WHEN UNIT='POS' AND SUBSTR(ID_ENTITY,1,1) IN ('6','D') THEN 'ALDI'  ELSE 'NON-ALDI' END AS TYPE
,ACTIVE_DAYS
,'40' AS CLASS
,TRI.TRIGGER_SOURCE
,'SOFT' AS TRIGGER_TYPE
,TRI.TRIGGER_VALUE 
,NULL CHECKED_BY
,NULL CASE_STATUS
,NULL CASE_DECISION
,NULL CASE_NO
,NULL INTO_SECURITY
,SYSDATE AS TIME_DETECT
,CASE_CATEGORY
,NULL AS NAME_DISTRICT
,'是' AS FLAG_SEC_ALL_CONTRACT
FROM (SELECT DISTINCT UNIT,DATE_DETECT,WEEK_DETECT,ID_ENTITY,NAME_ENTITY,TRIGGER_SOURCE, TRIGGER_VALUE,ACTIVE_DAYS,CASE_CATEGORY FROM FINAL_TRIGGER_BASE) TRI
JOIN REGION BB ON TRI.TRIGGER_VALUE=BB.TRIGGER_VALUE;
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;

--pos visit table temp stop 20200423 
PROCEDURE TRIGGER_23_PRICE_CHEATING IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name: length       
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_23_PRICE';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start---------------------------------------------------------------------------------
v_step_message := 'STEP:23_PRICE';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL); 
  
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT 'PRICE CHEATING',SYSDATE FROM DUAL;
COMMIT;
--PRICE CHEATING------------------------------------------------------------------------------------------------------------------
--20180921 lina
INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection 
WITH PRICE_CHEATING_POS AS 
(
SELECT   --+MATERIALIZE FULL( AA ) FULL( EEE ) FULL( BB ) FULL( CC ) FULL( PO )
DISTINCT 
AA.DTIME_VISIT
,PO.NAME_SALES_AREA_CITY_EN AS CITY
,PO.NAME_SALES_AREA_PROVINCE_EN AS PROVINCE
,PO.TEXT_USERNAME_BUSMAN AS DSM_ID
,PO.CODE_SALESROOM AS POS_CODE
,PO.skp_salesroom
,PO.name_salesroom
,PO.code_salesroom_status
,EEE.SKP_EMPLOYEE
,EEE.TEXT_USERNAME_EMPLOYEE
FROM OWNER_DWH.F_SALESROOM_VISIT_TT AA
JOIN OWNER_DWH.DC_EMPLOYEE EEE ON AA.SKP_EMPLOYEE=EEE.SKP_EMPLOYEE
JOIN OWNER_DWH.F_SALESROOM_VISIT_DETAIL_TT BB ON AA.SKF_SALESROOM_VISIT = BB.SKF_SALESROOM_VISIT
JOIN OWNER_DWH.DC_POS_VISIT_QUESTION CC ON BB.SKP_POS_VISIT_QUESTION = CC.SKP_POS_VISIT_QUESTION
JOIN OWNER_DWH.DC_PV_QUESTION_OPTION DD ON BB.SKP_PV_QUESTION_OPTION = DD.SKP_PV_QUESTION_OPTION
JOIN OWNER_DWH.CL_POS_VISIT_CATEGORY EE ON CC.SKP_POS_VISIT_CATEGORY = EE.SKP_POS_VISIT_CATEGORY 
JOIN OWNER_DWH.DDC_SALESROOM PO ON AA.SKP_SALESROOM = PO.SKP_SALESROOM
WHERE 1=1
  AND EE.NAME_CATEGORY IN (N'门店潜在风险欺诈')
  AND (DD.NAME_QUESTION_OPTION  IN ('套现嫌疑','价格欺诈') OR TEXT_QUESTION_VALUE LIKE '%二手%') --20180927
  AND AA.DATE_EFFECTIVE>= DATE'2018-01-01'
  AND AA.DTIME_VISIT>=SYSDATE-7
)
, CONTRACT AS 
(
SELECT DISTINCT 
FACC.SKP_CREDIT_CASE
,FACC.AMT_CREDIT
,FACC.DATE_DECISION 
,FACC.NAME_BUSINESS_PROVINCE_EN
,FACC.SKP_SALESROOM
,FACC.CODE_SALESROOM
,FACC.TEXT_USERNAME_EMPLOYEE_SALES
,FACC.TEXT_CONTRACT_NUMBER
,FACC.NAME_REGION_EN
,GOODS.AMT_GOODS_PRICE
,BR.NAME_GOODS_BRAND_EN
,MO.NAME_GOODS_MODEL_EN 
,FACC.CODE_GOODS_CATEGORY_RISK_EXP
,PMP.CNT_APP 
,PMP.MODE_PROVINCE_PRICE
--,PP.DTIME_VISIT --20180927
,LISTAGG( TO_CHAR (PP.DTIME_VISIT,'YYYY-MM-DD HH:MI:SS' ) ,',') WITHIN GROUP(ORDER BY FACC.SKP_CREDIT_CASE) OVER(PARTITION BY FACC.SKP_CREDIT_CASE )  AS DTIME_VISIT
,GOODS.AMT_GOODS_PRICE/PMP.MODE_PROVINCE_PRICE AS PRICE_TIMES
,DCE.TEXT_CELLPHONE AS DSM_PHONE
,CASE WHEN GOODS.AMT_GOODS_PRICE/PMP.MODE_PROVINCE_PRICE<0.5 THEN 'LOW PRICE' ELSE 'HIGH PRICE' END AS FLAG_PRICE
FROM DM_ANTIFRAUD.FT_AF_CREDIT_CASE_AD FACC
JOIN OWNER_DWH.DC_EMPLOYEE DCE ON FACC.TEXT_USERNAME_SUPERIOR=DCE.TEXT_USERNAME_EMPLOYEE
JOIN  
(
  SELECT PP.*,CASE WHEN  PP.PROVINCE LIKE 'Neimenggu%' THEN 'Neimenggu' ELSE PP.PROVINCE END AS PROVINCE_EN 
  FROM PRICE_CHEATING_POS PP
) PP ON PP.PROVINCE_EN=FACC.NAME_BUSINESS_PROVINCE_EN
AND FACC.CODE_GOODS_CATEGORY_RISK_EXP<>'SERVICE'--20180927
AND FACC.DATE_DECISION >=SYSDATE-14 --14
AND FACC.SKP_CREDIT_CASE NOT IN
(
  SELECT /*+materialize*/ DISTINCT  CON.SKP_CREDIT_CASE 
  FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS CON WHERE CON.CLASS IN ('23','282')
  AND CON.DATE_DECISION >=SYSDATE-14---14
)
JOIN OWNER_DWH.F_PURCHASED_GOODS_TT GOODS ON GOODS.SKP_CREDIT_CASE=FACC.SKP_CREDIT_CASE 
  AND GOODS.SKP_CREDIT_TYPE =FACC.SKP_CREDIT_TYPE 
  AND GOODS.DATE_DECISION=FACC.DATE_DECISION 
  AND  GOODS.FLAG_MOST_EXPENSIVE='Y'
JOIN OWNER_DWH.CL_GOODS_MODEL MO ON GOODS.SKP_GOODS_MODEL=MO.SKP_GOODS_MODEL
JOIN OWNER_DWH.CL_GOODS_BRAND BR ON GOODS.SKP_GOODS_BRAND=BR.SKP_GOODS_BRAND
JOIN AP_ANTIFRAUD.PROVINCE_MODE_PRICE PMP ON PMP.NAME_BUSINESS_PROVINCE_EN=FACC.NAME_BUSINESS_PROVINCE_EN
  AND PMP.CODE_GOODS_CATEGORY_RISK_EXP=FACC.CODE_GOODS_CATEGORY_RISK_EXP
  AND PMP.NAME_GOODS_BRAND_EN=BR.NAME_GOODS_BRAND_EN
  AND PMP.NAME_GOODS_MODEL_EN=MO.NAME_GOODS_MODEL_EN
JOIN OWNER_DWH.DC_CREDIT_CASE DC ON DC.skp_credit_case=FACC.SKP_CREDIT_CASE----20191128
    AND DC.skp_credit_type=FACC.SKP_CREDIT_TYPE
    AND DC.date_decision=FACC.DATE_DECISION
WHERE FACC.SKP_CREDIT_TYPE =1
  AND MO.NAME_GOODS_MODEL_EN<>'Others'
  AND BR.NAME_GOODS_BRAND_EN<>'Others'
  AND FACC.CODE_CREDIT_STATUS IN ('a','k','n') 
  AND PMP.MODE_PROVINCE_PRICE>=3000
  AND DC.skp_product_channel<>804--RPOS
  AND DC.skp_credit_acquisition_chnl<>8--ALDI CAPP  20210302 YW
  AND DC.skp_credit_acquisition_chnl<>21--ALDI 
  AND (GOODS.AMT_GOODS_PRICE/PMP.MODE_PROVINCE_PRICE>1.5 OR GOODS.AMT_GOODS_PRICE/PMP.MODE_PROVINCE_PRICE<0.5)
)
,SALESROOM AS 
(
  SELECT /*+materialize*/ SKP_SALESROOM,
  NAME_GOODS_BRAND_EN,
  NAME_GOODS_MODEL_EN
  ,COUNT(DISTINCT SKP_CREDIT_CASE ) AS CNT_CON 
  FROM CONTRACT GROUP BY SKP_SALESROOM ,NAME_GOODS_BRAND_EN,
  NAME_GOODS_MODEL_EN
)
SELECT /*+materialize*/ DISTINCT 
'POS' AS UNIT,
CC.CODE_SALESROOM AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'23' AS CLASS
,'SMT PRICE CHEATING' AS TRIGGER_SOURCE
,'GOODS_CATEGORY:'||CC.CODE_GOODS_CATEGORY_RISK_EXP||', BRAND:'||
   CC.NAME_GOODS_BRAND_EN||CC.NAME_GOODS_MODEL_EN||',  PROVINCE MODE PRICE:'||
   CC.MODE_PROVINCE_PRICE ||' GOODS PRICE:'||CC.AMT_GOODS_PRICE||' , TIMES:'||
   ROUND(CC.PRICE_TIMES,5) ||', VISIT TIMES:'||CC.DTIME_VISIT||' ,DSM_PHONE:'||CC.DSM_PHONE
   ||',VENDOR MODEL:'||DB.STANDARDISED_FULL_NAME  AS TRIGGER_VALUE  --20190226
,'SOFT' AS TRIGGER_TYPE
,CC.SKP_CREDIT_CASE 
,CC.TEXT_CONTRACT_NUMBER 
FROM CONTRACT CC
JOIN SALESROOM PO
ON CC.SKP_SALESROOM=PO.SKP_SALESROOM
AND CC.NAME_GOODS_BRAND_EN=PO.NAME_GOODS_BRAND_EN
AND CC.NAME_GOODS_MODEL_EN=PO.NAME_GOODS_MODEL_EN
--20190226
LEFT JOIN OWNER_DWH.F_PURCHASED_GOODS_TT  T ON T.SKP_CREDIT_CASE=cc.SKP_CREDIT_CASE AND T.TEXT_IMEI!='XNA'  and t.DATE_DECISION  >= trunc(sysdate) -20
LEFT JOIN HCCN_WANGN1.IMEI_VERIFY_DB DB ON DB.TAC=SUBSTR(T.TEXT_IMEI,1,8)
WHERE PO.CNT_CON>=3;
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;


   PROCEDURE TRIGGER_27_CASH_ACCPT IS
  BEGIN
  --------------------------------------27 CASH ACCEPTANCE---------------------------------------------------------------------------------
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '27 CASH ACCPT',SYSDATE FROM DUAL;
COMMIT;
   
------BT还款姓名
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
SELECT DISTINCT 
'SA' AS UNIT 
,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'27' AS CLASS
,'SA CASH ACCEPTANCE BT' AS TRIGGER_SOURCE
,ACCA.TEXT_USERNAME_EMPLOYEE_SALES||':'||ACCA.NAME_LAST_SALES||'在'||TO_CHAR(IPIT.DATE_RECEIVING,'YYYY-MM-DD')||'给合同'||ACCA.TEXT_CONTRACT_NUMBER||'还款(还款姓名)' AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,ACCA.SKP_CREDIT_CASE
,ACCA.TEXT_CONTRACT_NUMBER                   
FROM OWNER_DWH.F_INCOMING_PAYMENT_TT IPT
JOIN OWNER_DWH.F_INCOMING_PAYMENT_IMPORT_TT IPIT ON IPIT.SKF_INCOMING_PAYMENT_IMPORT=IPT.SKF_INCOMING_PAYMENT_IMPORT
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA ON ACCA.SKP_CREDIT_CASE=IPT.SKP_CREDIT_CASE
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='27'
AND FLOOR(SYSDATE-IPT.DTIME_PAYMENT_INCOMING) BETWEEN 0 AND EX.DAYS  AND TRUNC(IPIT.DTIME_INSERTED) >= SYSDATE - 3
AND SUBSTR(IPIT.TEXT_SENDER_ACC_NUMBER,1,1)='6'
AND IPIT.NAME_SENDER=ACCA.NAME_LAST_SALES 
AND ACCA.NAME_LAST_CLIENT!=IPIT.NAME_SENDER
WHERE IPIT.CODE_TRN_TYPE IN ('60','90','93','99') 
AND IPIT.TEXT_SENDER_ACC_NUMBER NOT IN ('6221286892552576','6222980014197695','6228480084273915813',
'6228450050016405210','6222980021788064','6226220611646505','6222980016354773',
'6222601310029512282','6227003813540498405','6212264402005198415','6221886510032665914',
'6222802291021947352','6227003818670172308','6222081607001378247','6210985840023787721',
'6221540201300347033','6228480104594761017','6222082008001224284','6222022008013626453',
'6217002870011669353','6210985920000459443','6222021610013672733','6217002870015846734',
'6222082308000564221','6222802270061039577','6217002220001319470','6227003174130428447',
'6223282800091983779','6222082008001273620','6217002430015308274');
COMMIT;
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '27_FINISH_BT_NAME',SYSDATE FROM DUAL;
COMMIT;


------------add  BT 还款账号
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
SELECT DISTINCT 
'SA' AS UNIT 
,NA.TEXT_USERNAME_EMPLOYEE_SALES
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'27' AS CLASS
,'SA CASH ACCEPTANCE BT' AS TRIGGER_SOURCE
,NA.TEXT_USERNAME_EMPLOYEE_SALES||':'||NA.NAME_SALES_LAST||'在'||TO_CHAR(IPIT.DATE_RECEIVING,'YYYY-MM-DD')||'给合同'||ACCA.TEXT_CONTRACT_NUMBER||'还款(还款账号)' AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,ACCA.SKP_CREDIT_CASE
,ACCA.TEXT_CONTRACT_NUMBER                   
FROM OWNER_DWH.F_INCOMING_PAYMENT_TT IPT
JOIN OWNER_DWH.F_INCOMING_PAYMENT_IMPORT_TT IPIT ON IPIT.SKF_INCOMING_PAYMENT_IMPORT=IPT.SKF_INCOMING_PAYMENT_IMPORT
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA ON ACCA.SKP_CREDIT_CASE=IPT.SKP_CREDIT_CASE
JOIN AP_ANTIFRAUD.F_SA_BANK_ACC_LIST_NANCY NA ON IPIT.TEXT_SENDER_ACC_NUMBER=NA.TEXT_BANK_ACCOUNT
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='27'
AND FLOOR(SYSDATE-IPT.DTIME_PAYMENT_INCOMING) BETWEEN 0 AND EX.DAYS  AND TRUNC(IPIT.DTIME_INSERTED) >= SYSDATE - 3
AND SUBSTR(IPIT.TEXT_SENDER_ACC_NUMBER,1,1)='6'
AND ACCA.text_identity_card_number!=NA.TEXT_IDENT_NUMBER
WHERE IPIT.CODE_TRN_TYPE IN ('60','90','93','99') 
AND IPIT.TEXT_SENDER_ACC_NUMBER NOT IN ('6221286892552576','6222980014197695','6228480084273915813',
'6228450050016405210','6222980021788064','6226220611646505','6222980016354773',
'6222601310029512282','6227003813540498405','6212264402005198415','6221886510032665914',
'6222802291021947352','6227003818670172308','6222081607001378247','6210985840023787721',
'6221540201300347033','6228480104594761017','6222082008001224284','6222022008013626453',
'6217002870011669353','6210985920000459443','6222021610013672733','6217002870015846734',
'6222082308000564221','6222802270061039577','6217002220001319470','6227003174130428447',
'6223282800091983779','6222082008001273620','6217002430015308274');
COMMIT;
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '27_FINISH_BT_ACC',SYSDATE FROM DUAL;
COMMIT;

--PSBC 还款电话
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
SELECT DISTINCT 
'SA' AS UNIT 
,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'27' AS CLASS
,'SA CASH ACCEPTANCE PSBC' AS TRIGGER_SOURCE
,ACCA.TEXT_USERNAME_EMPLOYEE_SALES||':'||ACCA.NAME_LAST_SALES||'在'||TO_CHAR(IPIT.DATE_RECEIVING,'YYYY-MM-DD')||'给合同'||ACCA.TEXT_CONTRACT_NUMBER||'还款(还款电话)' AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,ACCA.SKP_CREDIT_CASE
,ACCA.TEXT_CONTRACT_NUMBER  
FROM OWNER_DWH.F_INCOMING_PAYMENT_TT IPT
JOIN OWNER_DWH.F_INCOMING_PAYMENT_IMPORT_TT IPIT ON IPIT.SKF_INCOMING_PAYMENT_IMPORT=IPT.SKF_INCOMING_PAYMENT_IMPORT
AND IPIT.SKP_PAYMENT_CHANNEL_GROUP=6
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='27'
AND FLOOR(SYSDATE-IPT.DTIME_PAYMENT_INCOMING) BETWEEN 0 AND EX.DAYS  AND TRUNC(IPIT.DTIME_INSERTED) >= SYSDATE - 3
AND  LENGTH(IPIT.TEXT_SENDER_ADDRESS)=11
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA ON ACCA.SKP_CREDIT_CASE=IPT.SKP_CREDIT_CASE
JOIN OWNER_DWH.DC_EMPLOYEE DE ON DE.TEXT_USERNAME_EMPLOYEE=ACCA.TEXT_USERNAME_EMPLOYEE_SALES
AND DE.TEXT_CELLPHONE=IPIT.TEXT_SENDER_ADDRESS;
COMMIT;
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '27_FINISH_PSBC',SYSDATE FROM DUAL;
COMMIT;

----ADD CMB还款姓名
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
SELECT DISTINCT 
'SA' AS UNIT 
,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'27' AS CLASS
,'SA CASH ACCEPTANCE CMB' AS TRIGGER_SOURCE
,ACCA.TEXT_USERNAME_EMPLOYEE_SALES||':'||ACCA.NAME_LAST_SALES||'在'||TO_CHAR(IPIT.DATE_RECEIVING,'YYYY-MM-DD')||'给合同'||ACCA.TEXT_CONTRACT_NUMBER||'还款(还款姓名)' AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,ACCA.SKP_CREDIT_CASE
,ACCA.TEXT_CONTRACT_NUMBER  
FROM OWNER_DWH.F_INCOMING_PAYMENT_TT IPT
JOIN OWNER_DWH.F_INCOMING_PAYMENT_IMPORT_TT IPIT ON IPIT.SKF_INCOMING_PAYMENT_IMPORT=IPT.SKF_INCOMING_PAYMENT_IMPORT
AND IPIT.SKP_PAYMENT_CHANNEL_GROUP=5 AND IPIT.CODE_TRN_TYPE!='93'--CMB
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='27'
AND FLOOR(SYSDATE-IPT.DTIME_PAYMENT_INCOMING) BETWEEN 0 AND EX.DAYS  AND TRUNC(IPIT.DTIME_INSERTED) >= SYSDATE - 3
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA ON ACCA.SKP_CREDIT_CASE=IPT.SKP_CREDIT_CASE
AND SUBSTR(IPIT.TEXT_SENDER_ACC_NUMBER,1,1)='6'
AND IPIT.NAME_SENDER=ACCA.NAME_LAST_SALES 
AND ACCA.NAME_LAST_CLIENT!=IPIT.NAME_SENDER
;
COMMIT;

---------------ADD CMB还款账号

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
SELECT DISTINCT 
'SA' AS UNIT 
,NA.TEXT_USERNAME_EMPLOYEE_SALES
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'27' AS CLASS
,'SA CASH ACCEPTANCE CMB' AS TRIGGER_SOURCE
,NA.TEXT_USERNAME_EMPLOYEE_SALES||':'||NA.NAME_SALES_LAST||'在'||TO_CHAR(IPIT.DATE_RECEIVING,'YYYY-MM-DD')||'给合同'||ACCA.TEXT_CONTRACT_NUMBER||'还款(还款账号)' AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,ACCA.SKP_CREDIT_CASE
,ACCA.TEXT_CONTRACT_NUMBER  
FROM OWNER_DWH.F_INCOMING_PAYMENT_TT IPT
JOIN OWNER_DWH.F_INCOMING_PAYMENT_IMPORT_TT IPIT ON IPIT.SKF_INCOMING_PAYMENT_IMPORT=IPT.SKF_INCOMING_PAYMENT_IMPORT
AND IPIT.SKP_PAYMENT_CHANNEL_GROUP=5 AND IPIT.CODE_TRN_TYPE!='93'--CMB
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='27'
AND FLOOR(SYSDATE-IPT.DTIME_PAYMENT_INCOMING) BETWEEN 0 AND EX.DAYS  AND TRUNC(IPIT.DTIME_INSERTED) >= SYSDATE - 3
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA ON ACCA.SKP_CREDIT_CASE=IPT.SKP_CREDIT_CASE
JOIN AP_ANTIFRAUD.F_SA_BANK_ACC_LIST_NANCY NA ON NA.TEXT_BANK_ACCOUNT=IPIT.TEXT_SENDER_ACC_NUMBER
AND SUBSTR(IPIT.TEXT_SENDER_ACC_NUMBER,1,1)='6'
AND ACCA.text_identity_card_number!=NA.TEXT_IDENT_NUMBER;

INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '27_FINISH_CMB',SYSDATE FROM DUAL;
COMMIT;

---------------ADD POS  BANK ACCOUNT=还款账号--------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
SELECT   /*+ CARDINALITY (ACCA 1)  */
'POS' AS UNIT 
,DS.CODE_SALESROOM
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
-- ,DS.TEXT_BANK_ACCOUNT_NUMBER,IPIT.TEXT_SENDER_ACC_NUMBER
,'27' AS CLASS
,'POS CASH ACCEPTANCE CMB' AS TRIGGER_SOURCE
,'POS'||'在'||TO_CHAR(IPIT.DATE_RECEIVING,'YYYY-MM-DD')||'给合同'||ACCA.TEXT_CONTRACT_NUMBER||'还款(还款卡号)'||DS.TEXT_BANK_ACCOUNT_NUMBER AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,ACCA.SKP_CREDIT_CASE
,ACCA.TEXT_CONTRACT_NUMBER  
FROM OWNER_DWH.F_CREDIT_CASE_AD ACCA 
JOIN OWNER_DWH.F_INCOMING_PAYMENT_TT IPT ON ACCA.SKP_CREDIT_CASE=IPT.SKP_CREDIT_CASE AND ACCA.date_decision=IPT.DATE_DECISION
AND ACCA.skp_credit_type=IPT.SKP_CREDIT_TYPE
JOIN OWNER_DWH.F_INCOMING_PAYMENT_IMPORT_TT IPIT 
ON IPIT.SKF_INCOMING_PAYMENT_IMPORT=IPT.SKF_INCOMING_PAYMENT_IMPORT
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='27'
AND FLOOR(SYSDATE-IPT.DTIME_PAYMENT_INCOMING) BETWEEN 0 AND EX.DAYS  AND IPIT.DTIME_INSERTED >= SYSDATE - 10
JOIN OWNER_DWH.DC_SALESROOM DS ON DS.SKP_SALESROOM=ACCA.skp_salesroom 
JOIN OWNER_DWH.DC_EMPLOYEE EE
ON EE.SKP_EMPLOYEE=ACCA.skp_employee_consultant
where  DS.TEXT_BANK_ACCOUNT_NUMBER=IPIT.TEXT_SENDER_ACC_NUMBER
AND DS.TEXT_BANK_ACCOUNT_NUMBER<>'XNA'
AND IPT.DATE_DECISION>=SYSDATE-90  AND IPIT.DTIME_INSERTED >= SYSDATE - 10 AND ACCA.date_decision>=SYSDATE-90;

INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '27_FINISH_POS_BC',SYSDATE FROM DUAL;
COMMIT;
 END;  
    
   PROCEDURE TRIGGER_28_WC_LOAN_FOR_OTHERS IS
  BEGIN
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '28 WC LOAN FOR OTHERS',SYSDATE FROM DUAL;
COMMIT;
--------------------------------------------------WELCOME CALL--------------------------------------------------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
SELECT  DISTINCT 
'SA' AS UNIT 
,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'15' AS CLASS
,CASE WHEN NAME_RESULT='客户否认申请贷款' THEN '客户否认申请贷款'
      WHEN NAME_QUESTION='WC-C.客户反馈已取消合同' AND NAME_ANSWER ='从未申请过' THEN '客户反馈已取消合同-从未申请过'
      WHEN NAME_QUESTION='WC-C.客户反馈已取消合同' AND NAME_ANSWER ='申请但已撤销' THEN '客户反馈已取消合同-申请但已撤销'
      END AS TRIGGER_SOURCE
,CASE WHEN NAME_RESULT='客户否认申请贷款' THEN '客户否认申请贷款'||'@'||ACCA.text_contract_number
      WHEN NAME_QUESTION='WC-C.客户反馈已取消合同' AND NAME_ANSWER ='从未申请过' THEN '客户反馈已取消合同-从未申请过 '||'@'||ACCA.text_contract_number
      WHEN NAME_QUESTION='WC-C.客户反馈已取消合同' AND NAME_ANSWER ='申请但已撤销' THEN '客户反馈已取消合同-申请但已撤销 '||'@'||ACCA.text_contract_number
      END AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,ACCA.SKP_CREDIT_CASE
,ACCA.TEXT_CONTRACT_NUMBER 
FROM (
SELECT  
WC.TEXT_CONTRACT_NUMBER
,WC.DTIME_REVIEW
,WC.NUM_DAYS_TILL_EVENT
,WC.NAME_QUESTION
,WC.NAME_ANSWER
,WC.NAME_RESULT 
,WC.SKP_CREDIT_CASE
,RANK () OVER (PARTITION BY WC.SKP_CREDIT_CASE ORDER BY WC.DTIME_ACTIVITY_START DESC) AS data_RANK
FROM DM_ANTIFRAUD.F_WC_CAMPAIGN_AD WC
WHERE WC.NUM_DAYS_TILL_EVENT<=9 AND TRUNC(SYSDATE)-TRUNC(WC.DTIME_REVIEW) BETWEEN 10 AND 15----------上trigger时改
)AA
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA ON ACCA.skp_credit_case=AA.SKP_CREDIT_CASE AND ACCA.date_decision>=trunc(sysdate)-20
WHERE data_RANK=1
AND (NAME_RESULT='客户否认申请贷款' OR  (NAME_QUESTION='WC-C.客户反馈已取消合同' AND NAME_ANSWER IN ('从未申请过','申请但已撤销')));
COMMIT;


----------申请时收取他人现金非客户本人使用--------------------------------------------------------
----------申请时收取他人现金非客户本人使用--------------------------------------------------------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH BASE AS (
SELECT TRUNC(WC.DTIME_REVIEW) AS DATE_DECISION
,TRUNC(TRUNC(WC.DTIME_REVIEW),'IW')+6 AS WEEK_DECISION
,WC.SKP_CREDIT_CASE
,WC.NAME_QUESTION,WC.NAME_ANSWER
,WC.TEXT_CONTRACT_NUMBER
,ACCA.text_username_employee_sales
FROM DM_ANTIFRAUD.F_WC_CAMPAIGN_AD WC
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA ON ACCA.skp_credit_case=WC.SKP_CREDIT_CASE AND ACCA.date_decision>=trunc(sysdate)-20
WHERE (
(WC.NAME_QUESTION IN ('WC-Q8.4 请问您办理分期时，是否有收取他人的现金？')AND WC.NAME_ANSWER='有')
OR 
(NAME_QUESTION ='WC-Q8.5 请问您是打算自己使用这件商品吗？' AND NAME_ANSWER IN ('给亲属用(父母/子女/兄弟姐妹/配偶/配偶父母/女婿儿媳)','不是'))
)
AND WC.NUM_DAYS_TILL_EVENT<=9 AND TRUNC(SYSDATE)-TRUNC(WC.DTIME_REVIEW) BETWEEN 10 AND 15---上trigger时让lenlen改
)

,BASE2 AS (
SELECT WEEK_DECISION
,text_username_employee_sales
,COUNT(DISTINCT SKP_CREDIT_CASE) AS CNT_CONTRACT
FROM BASE 
HAVING COUNT(DISTINCT SKP_CREDIT_CASE)>=3
GROUP BY WEEK_DECISION,text_username_employee_sales
)
,BASE3 AS (
SELECT 'SA' AS UNIT
,BB.text_username_employee_sales AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'28' AS CLASS
,DECODE(NAME_QUESTION, 'WC-Q8.4 请问您办理分期时，是否有收取他人的现金？','客户办理分期时收取他人现金','WC-Q8.5 请问您是打算自己使用这件商品吗？','非客户本人使用商品') AS TRIGGER_SOURCE
,'集中SA'||TO_CHAR(CNT_CONTRACT)||'单' AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM BASE BB
JOIN BASE2 B2 ON B2.WEEK_DECISION=BB.WEEK_DECISION AND BB.text_username_employee_sales=B2.text_username_employee_sales
)

SELECT UNIT
,ID_ENTITY
,DATE_DETECT,WEEK_DETECT,CLASS
,LISTAGG(TRIGGER_SOURCE,'#') WITHIN GROUP (ORDER BY TRIGGER_SOURCE)AS TRIGGER_SOURCE
,TRIGGER_VALUE
,TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM BASE3
GROUP BY UNIT
,ID_ENTITY
,DATE_DETECT
,WEEK_DETECT,CLASS
,TRIGGER_VALUE
,TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER;
COMMIT;

----------销售未将“借款人须知”和“消费信贷合同条款”给到客户'------------------------------
----------销售未将“借款人须知”和“消费信贷合同条款”给到客户'------------------------------

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH BASE AS (
SELECT TRUNC(WC.DTIME_REVIEW) AS DATE_DECISION
,TRUNC(TRUNC(WC.DTIME_REVIEW),'IW')+6 AS WEEK_DECISION
,WC.SKP_CREDIT_CASE
,WC.NAME_QUESTION,WC.NAME_ANSWER
,WC.TEXT_CONTRACT_NUMBER
,ACCA.text_username_employee_sales
FROM DM_ANTIFRAUD.F_WC_CAMPAIGN_AD WC
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA ON ACCA.skp_credit_case=WC.SKP_CREDIT_CASE AND ACCA.date_decision>=trunc(sysdate)-20
WHERE WC.NAME_QUESTION = 'WC-Q8.9 请问销售人员是否有将“借款人须知”和“消费信贷合同条款”给到您？' AND WC.NAME_ANSWER='没有'
AND WC.NUM_DAYS_TILL_EVENT<=9 AND TRUNC(SYSDATE)-TRUNC(WC.DTIME_REVIEW) BETWEEN 10 AND 15---上trigger时让lenlen改
)


,BASE2 AS (
SELECT *
FROM (
SELECT WEEK_DECISION
,text_username_employee_sales
,COUNT(DISTINCT SKP_CREDIT_CASE) AS CNT_CONTRACT
FROM BASE 
HAVING COUNT(DISTINCT SKP_CREDIT_CASE)>=3
GROUP BY WEEK_DECISION,text_username_employee_sales
)
WHERE ROWNUM<=10
)

SELECT 'SA' AS UNIT
,BB.text_username_employee_sales AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'28' AS CLASS
,'WC-销售未将“借款人须知”和“消费信贷合同条款”给到客户' AS TRIGGER_SOURCE
,'集中SA'||TO_CHAR(CNT_CONTRACT)||'单' AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM BASE BB
JOIN BASE2 B2 ON B2.WEEK_DECISION=BB.WEEK_DECISION AND BB.text_username_employee_sales=B2.text_username_employee_sales;
COMMIT;
END;
 
   PROCEDURE TRIGGER_29_SA_FRAUD IS
BEGIN
  
 INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '29 SA FRAUD DAY',SYSDATE FROM DUAL;
COMMIT;

------------------CLASS29-----------------------------------------------------------------------
------------------CLASS29-----------------------------------------------------------------------
------------------CLASS29-----------------------------------------------------------------------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH FRAUD_SELECT AS 
(
SELECT  /*+MATERIALIZE USE_HASH(FFC,EE,EX)*/ DISTINCT FFC.SKP_CREDIT_CASE,FFC.NAME_SEC_FRAUD_MEANS
,FFC.DATE_DECISION,FFC.TEXT_USERNAME_EMPLOYEE_SALES
,FFC.TEXT_CONTRACT_NUMBER,EE.SKP_EMPLOYEE,FFC.SKP_CLIENT
,FFC.DTIME_AF_CONFIRM_RESULT --TO DELETE
FROM AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS FFC
JOIN OWNER_DWH.DC_EMPLOYEE EE ON EE.TEXT_USERNAME_EMPLOYEE=FFC.TEXT_USERNAME_EMPLOYEE_SALES
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='29' AND FFC.DTIME_AF_CONFIRM_RESULT>=EX.MAX_DETECT
WHERE FFC.NAME_SEC_FRAUD_MEANS IN ('身份欺诈','套现')
AND FFC.TEXT_USERNAME_EMPLOYEE_SALES<>'capp' --20180802
AND FFC.TEXT_USERNAME_EMPLOYEE_SALES!='homer_o2o' --2018-10-08

UNION --added by Anny to collect ID fraud from old portal 2018-11-22

SELECT /*+MATERIALIZE*/   
DISTINCT FF.SKP_CREDIT_CASE,FF.FRAUD_TYPE AS NAME_SEC_FRAUD_MEANS
,FF.DATE_DECISION,FF.TEXT_USERNAME_EMPLOYEE_SALES,FF.TEXT_CONTRACT_NUMBER
,EE.SKP_EMPLOYEE,FF.SKP_CLIENT
,FF.IMPORT_DATE AS DTIME_AF_CONFIRM_RESULT --TO DELETE
FROM  AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FF
JOIN OWNER_DWH.DC_EMPLOYEE EE ON EE.TEXT_USERNAME_EMPLOYEE=FF.TEXT_USERNAME_EMPLOYEE_SALES
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='29' AND FF.IMPORT_DATE>=EX.MAX_DETECT
WHERE 1=1
AND (FF.FRAUD_TYPE LIKE '%套现%' OR FF.FRAUD_TYPE ='身份欺诈' OR FF.FRAUD_TYPE LIKE 'ID Fraud - %')
AND FF.TEXT_USERNAME_EMPLOYEE_SALES<>'capp' --20180802
AND FF.TEXT_USERNAME_EMPLOYEE_SALES!='homer_o2o' --2018-10-08

UNION -- anny 2018-10-08 to check and supplement whether something missing

SELECT  /*+MATERIALIZE USE_HASH(FFC,EE,EX)*/ 
DISTINCT FFC.SKP_CREDIT_CASE,FFC.NAME_SEC_FRAUD_MEANS,FFC.DATE_DECISION,FFC.TEXT_USERNAME_EMPLOYEE_SALES
,FFC.TEXT_CONTRACT_NUMBER,EE.SKP_EMPLOYEE,FFC.SKP_CLIENT
,FFC.DTIME_AF_CONFIRM_RESULT 
FROM AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS FFC
JOIN OWNER_DWH.DC_EMPLOYEE EE ON EE.TEXT_USERNAME_EMPLOYEE=FFC.TEXT_USERNAME_EMPLOYEE_SALES
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='29' AND TRUNC(FFC.DTIME_AF_CONFIRM_RESULT,'IW')+6=TRUNC(EX.MAX_DETECT-30,'IW')+6
WHERE FFC.NAME_SEC_FRAUD_MEANS IN ('身份欺诈','套现')
AND FFC.TEXT_USERNAME_EMPLOYEE_SALES<>'capp' --20180802
AND FFC.TEXT_USERNAME_EMPLOYEE_SALES!='homer_o2o' --2018-10-08 ANNY
)

,BASE AS
 (
SELECT /*+MATERIALIZE USE_HASH(FS,ACCA)*/  distinct 'SA' AS UNIT 
,FS.TEXT_USERNAME_EMPLOYEE_SALES
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'29' AS CLASS
,'FRAUD RELATED' AS TRIGGER_SOURCE
,FS.NAME_SEC_FRAUD_MEANS
,'SOFT' AS TRIGGER_TYPE 
,FS.TEXT_CONTRACT_NUMBER  AS SOURCE_TEXT_CONTRACT_NUMBER
,ACCA.SKP_CREDIT_CASE
,ACCA.TEXT_CONTRACT_NUMBER  
,FS.DTIME_AF_CONFIRM_RESULT --TO DELETE
FROM FRAUD_SELECT FS
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA ON ACCA.SKP_EMPLOYEE_CONSULTANT=FS.SKP_EMPLOYEE
AND ACCA.DATE_DECISION-FS.date_decision BETWEEN -1 AND 1 AND FS.SKP_CREDIT_CASE!=ACCA.skp_credit_case
AND FS.SKP_CLIENT!=ACCA.SKP_CLIENT
WHERE ACCA.date_decision >DATE '2017-01-01' 
--AND ACCA.name_channel NOT LIKE '交叉现金贷%'--REMOVE xsell 20170707 ELLEN
--CHANGE 2016 TO 2017 ANNY 2018-10
)

,DCM_COMPLAINT AS 
( --2018-11-22 ANNY
SELECT /*+ORDERED USE_HASH(AD,FF)*/DISTINCT FF.SKP_CREDIT_CASE,FF.DATE_DECISION 
FROM OWNER_DWH.F_COMPLAINT_AD AD 
JOIN OWNER_DWH.DC_CONTRACT FF
ON FF.SKP_CONTRACT=AD.SKP_CONTRACT
WHERE AD.CODE_COMPLAINT_CASE_TYPE='FRAUD_INVESTIGATION'
)

SELECT /*+ORDERED USE_HASH(B,AF, DC)*/ DISTINCT B.UNIT
,B.TEXT_USERNAME_EMPLOYEE_SALES
,B.DATE_DETECT
,B.WEEK_DETECT
,B.CLASS
,B.TRIGGER_SOURCE
--,'SAME SA AND APP TIME WITH' || NAME_SEC_FRAUD_MEANS||' CONTRACT: '||FS.TEXT_CONTRACT_NUMBER AS TRIGGER_VALUE
,'SAME SA AND APP TIME WITH ' || LISTAGG(B.NAME_SEC_FRAUD_MEANS || ', CONTRACT: ' || B.SOURCE_TEXT_CONTRACT_NUMBER, ',')
WITHIN GROUP(ORDER BY B.SOURCE_TEXT_CONTRACT_NUMBER) OVER(PARTITION BY B.SKP_CREDIT_CASE) AS TRIGGER_VALUE--20180305
,B.TRIGGER_TYPE 
,B.SKP_CREDIT_CASE
,B.TEXT_CONTRACT_NUMBER  
FROM BASE B--
LEFT JOIN AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS AF  --ANNY 2018-0929 not trigger duplicated cases
ON B.SKP_CREDIT_CASE =AF.SKP_CREDIT_CASE --TO REMOVE DUPLICATED IN 30 DAYS --2018-11-14 ANNY UPDATE
AND AF.CLASS IN (29,515)  AND  (SYSDATE-AF.DATE_DETECT)<=60-- AND (AF.ACTION='IV' OR AF.ACTION IS NULL )
LEFT JOIN DCM_COMPLAINT DC ON B.SKP_CREDIT_CASE =DC.SKP_CREDIT_CASE 
WHERE 1=1
AND AF.SKP_CREDIT_CASE IS NULL 
AND DC.SKP_CREDIT_CASE IS NULL;
COMMIT;
END;

  PROCEDURE TRIGGER_31_NETWORKING IS
  BEGIN
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'NETWORKING',SYSDATE FROM DUAL;
COMMIT;

--20181123
---------------------------BASE DATA---------------------
/*CREATE OR REPLACE VIEW TRIGGER_31_PIVOT_BASE AS--2:06
    SELECT text_contract_number,SKP_CREDIT_CASE,NAME_REGION,NAME_REGION_EN,DATE_DECISION
           ,code_credit_status,code_salesroom,TEXT_USERNAME_EMPLOYEE_SALES,NAME_LAST_SALES
           ,SKP_CLIENT,text_identity_card_number,name_last_client,contact_type,contact
    FROM (
            SELECT \*+MATERIALIZE USE_HASH( A, F, DCC) *\A.text_contract_number,A.SKP_CREDIT_CASE,A.NAME_REGION,A.NAME_REGION_EN,A.DATE_DECISION
                   ,A.code_credit_status,A.code_salesroom,A.TEXT_USERNAME_EMPLOYEE_SALES,A.NAME_LAST_SALES
                   ,A.SKP_CLIENT,A.text_identity_card_number,A.name_last_client
                   ,CAST(A.text_mobile_client as varchar(50)) as CLIENT_MOBILE  
                   ,CAST(A.text_phone_area_code_client||A.text_phone_client as varchar(50)) as CLIENT_PHONE 
                   ,CAST(A.text_mobile_SPOUSE as varchar(50)) as SPOUSE_MOBILE
                   ,CAST(A.text_mobile_parent as varchar(50)) as PARENTS_MOBILE
                   ,CAST(A.text_mobile_supply as varchar(50)) as SUPPLY_MOBILE
                   ,CAST(A.text_bank_account as varchar(50)) as NUM_ACCOUNT
                   ,CAST(CASE WHEN LENGTH(REGEXP_SUBSTR(F.text_sales_agent_comment,'[0-9]+'))=11
                              OR LENGTH(REGEXP_SUBSTR(F.text_sales_agent_comment,'[0-9]+'))=8
                         THEN REGEXP_SUBSTR(F.text_sales_agent_comment,'[0-9]+') 
                         ELSE NULL END AS VARCHAR(50)) AS SACOMMENT_MOBILE 
            FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD A
            JOIN OWNER_DWH.F_APPLICATION_TT F ON A.skp_credit_case=F.skp_credit_case
            AND A.skp_credit_type=F.SKP_CREDIT_TYPE
            AND A.date_decision=F.DATE_DECISION         
            JOIN OWNER_DWH.DC_CREDIT_CASE DCC ON F.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE AND F.DATE_DECISION =DCC.DATE_DECISION AND F.SKP_CREDIT_TYPE =DCC.SKP_CREDIT_TYPE    --ADDED ANNY 2018-11-20
            WHERE A.date_decision>=SYSDATE-70
            AND F.DATE_DECISION>=SYSDATE-70
            AND DCC.skp_alternative_type!=1 -- TO REMOVE CASH LOAN ALTERNATIVE TYPE 1
            AND A.text_identity_card_number 
                NOT IN(
                       SELECT I.TEXT_VALUE
                       FROM OWNER_DWH.F_CLIENT_UNDES_IDENT_TT I
                       WHERE I.TEXT_VALUE=A.text_identity_card_number 
                       AND I.DTIME_INSERTED<A.date_decision
                       AND (SUBSTR(I.TEXT_SOURCE,-2)='11' 
                            OR UPPER(I.TEXT_SOURCE)='MS' 
                            OR UPPER(I.TEXT_SOURCE)='MSER')) )  A
    UNPIVOT(contact  FOR contact_type  
                     IN (CLIENT_MOBILE,
                         CLIENT_PHONE,
                         SPOUSE_MOBILE,
                         PARENTS_MOBILE,
                         SUPPLY_MOBILE,
                         NUM_ACCOUNT,
                         SACOMMENT_MOBILE))P
    WHERE CONTACT IS NOT NULL
    AND CONTACT NOT IN ('XNA','00000000000','12345678999','1','XNAXNA');
COMMIT;*/

----------------------FIND RELATIONSHIPS----------------------------
EXECUTE IMMEDIATE'TRUNCATE TABLE TRIGGER_31_SAMPLE';
INSERT  /* APPEND+*/  INTO TRIGGER_31_SAMPLE NOLOGGING
    SELECT DISTINCT A.SKP_CREDIT_CASE AS SKP_CREDIT_CASE_B
           ,A.SKP_CLIENT AS SKP_CLIENT_B
           ,A.CODE_CREDIT_STATUS AS CODE_CREDIT_STATUS_B
           ,B.SKP_CREDIT_CASE
           ,B.SKP_CLIENT
           ,B.CODE_CREDIT_STATUS
           ,B.TEXT_USERNAME_EMPLOYEE_SALES
           ,B.TEXT_CONTRACT_NUMBER
           ,B.NAME_REGION_EN
    FROM TRIGGER_31_PIVOT_BASE A
    JOIN TRIGGER_31_PIVOT_BASE B ON A.contact=B.contact 
    JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='31'
    WHERE A.DATE_DECISION>EX.MAX_DETECT
    AND A.DATE_DECISION<SYSDATE
    AND A.DATE_DECISION-B.DATE_DECISION BETWEEN 0 AND 60;--app_date: A>B
COMMIT;

EXECUTE IMMEDIATE'TRUNCATE TABLE TRIGGER_31_S2';
INSERT  /* APPEND+*/ INTO TRIGGER_31_S2
    SELECT *
    FROM TRIGGER_31_SAMPLE
    UNION
    SELECT A.SKP_CREDIT_CASE_B,A.SKP_CLIENT_B,A.CODE_CREDIT_STATUS_B
          ,B.SKP_CREDIT_CASE,B.SKP_CLIENT, B.CODE_CREDIT_STATUS,B.TEXT_USERNAME_EMPLOYEE_SALES,B.TEXT_CONTRACT_NUMBER  
          ,B.NAME_REGION_EN      
    FROM TRIGGER_31_SAMPLE A
    JOIN TRIGGER_31_SAMPLE B ON A.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE_B;
COMMIT;

EXECUTE IMMEDIATE'TRUNCATE TABLE TRIGGER_31_S3';
INSERT  /* APPEND+*/ INTO TRIGGER_31_S3 
    SELECT *
    FROM TRIGGER_31_SAMPLE
    WHERE ROWNUM=1;
COMMIT;

DECLARE I NUMBER :=3;
BEGIN  
  WHILE I<=9 LOOP
    
      EXECUTE IMMEDIATE'TRUNCATE TABLE TRIGGER_31_S3';
 --   DELETE FROM TRIGGER_31_S3;
       INSERT /* APPEND+*/ INTO TRIGGER_31_S3 
       SELECT  *
        FROM TRIGGER_31_S2
        UNION
        SELECT A.SKP_CREDIT_CASE_B,A.SKP_CLIENT_B,A.CODE_CREDIT_STATUS_B
              ,B.SKP_CREDIT_CASE,B.SKP_CLIENT, B.CODE_CREDIT_STATUS,B.TEXT_USERNAME_EMPLOYEE_SALES,B.TEXT_CONTRACT_NUMBER 
              ,B.NAME_REGION_EN
        FROM TRIGGER_31_S2 A
        JOIN TRIGGER_31_SAMPLE B ON A.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE_B;
         COMMIT;

    EXECUTE IMMEDIATE'TRUNCATE TABLE TRIGGER_31_S2';
    --DELETE FROM TRIGGER_31_S2;
    INSERT /* APPEND+*/ INTO TRIGGER_31_S2 
       SELECT * FROM TRIGGER_31_S3;
    COMMIT;
    I := I+1;      

   END LOOP;
END;
--ADD INDEX
--CREATE INDEX  SKP_CREDIT_CASE_2 ON AP_ANTIFRAUD.TRIGGER_31_S3(SKP_CREDIT_CASE);

-------------------PICK CONTRACTS INTO NW TRIGGER--------------------
--change 20190128
/*CREATE OR REPLACE VIEW TRIGGER_31_SCORE AS----7:40
WITH BASE_G AS 
(
    SELECT \*+MATERIALIZE*\ S.*
           ,DENSE_RANK()OVER(ORDER BY S.SKP_CREDIT_CASE_B) AS ID_GROUP
           ,ROW_NUMBER()OVER(PARTITION BY S.SKP_CREDIT_CASE_B ORDER BY S.SKP_CREDIT_CASE) AS ORD
    FROM TRIGGER_31_S3 S
)
,BASE2_G AS 
(
    SELECT \*+MATERIALIZE*\BG.ID_GROUP
           ,COUNT(BG.SKP_CREDIT_CASE) AS CNT_APP
           ,SUM(CASE WHEN BG.CODE_CREDIT_STATUS='d' THEN 1 ELSE 0 END) AS CNT_REJ
           ,SUM(CASE WHEN BG.CODE_CREDIT_STATUS='d' THEN 1 ELSE 0 END) /COUNT(BG.SKP_CREDIT_CASE) AS REJ_RATE
           ,SUM(CASE WHEN BG.CODE_CREDIT_STATUS in('a','k','n') THEN 1 ELSE 0 END) AS CNT_APPROVED
           ,COUNT(DISTINCT BG.SKP_CLIENT) AS CNT_PERSON
           ,COUNT(DISTINCT BG.NAME_REGION_EN) AS CNT_REGION
    FROM BASE_G BG
    GROUP BY BG.ID_GROUP
)

,BASE3_G AS
(
-----------------GROUP BASE SELECT------------------
    SELECT \*+MATERIALIZE USE_HASH(BG2, BG)*\BG2.ID_GROUP
          ,BG2.CNT_APP
          ,BG2.CNT_REJ
          ,BG2.CNT_APPROVED
          ,BG2.CNT_REGION
          ,BG.SKP_CREDIT_CASE
          ,BG.TEXT_CONTRACT_NUMBER
          ,BG.CODE_CREDIT_STATUS
          ,BG.ORD
          ,BG.TEXT_USERNAME_EMPLOYEE_SALES  
          ,MAX(BG2.CNT_APP)OVER(PARTITION BY BG.SKP_CREDIT_CASE) AS MAX_APP
     FROM BASE2_G BG2   
     JOIN BASE_G BG ON BG2.ID_GROUP=BG.ID_GROUP 
    WHERE BG2.REJ_RATE>=0.6
      AND BG2.cnt_approved>0
      AND BG2.CNT_APP>=4
      AND BG2.CNT_PERSON>=3
)

,TRIGGER_31_GROUP AS
 (
    SELECT *
    FROM (
          SELECT \*+ MATERIALIZE*\ 
                 BG3.ID_GROUP AS GROUP_NO
                ,BG3.CNT_APP
                ,BG3.CNT_REJ
                ,BG3.CNT_APPROVED
                ,BG3.CNT_REGION
                ,BG3.SKP_CREDIT_CASE
                ,BG3.TEXT_CONTRACT_NUMBER
                ,BG3.CODE_CREDIT_STATUS
                ,BG3.ORD
                ,BG3.TEXT_USERNAME_EMPLOYEE_SALES  
                ,MAX_APP
                ,MAX(BG3.ID_GROUP)OVER(PARTITION BY BG3.SKP_CREDIT_CASE) AS MAX_ID_GROUP
           FROM BASE3_G BG3
          WHERE BG3.CNT_APP=BG3.MAX_APP
          )BB3
    WHERE BB3.MAX_ID_GROUP=BB3.GROUP_NO
)
, CNT_APP AS
(
SELECT 
LL.GROUP_NO
,COUNT(DISTINCT BG.SKP_CREDIT_CASE) AS CNT_APP
,COUNT(DISTINCT CASE WHEN BG.CODE_CREDIT_STATUS='d' THEN BG.SKP_CREDIT_CASE ELSE NULL END) AS CNT_REJ
,COUNT(DISTINCT CASE WHEN BG.CODE_CREDIT_STATUS='d' THEN BG.SKP_CREDIT_CASE ELSE NULL END) /COUNT(DISTINCT BG.SKP_CREDIT_CASE) AS REJ_RATE
,COUNT(DISTINCT CASE WHEN BG.CODE_CREDIT_STATUS in('a','k','n') THEN BG.SKP_CREDIT_CASE ELSE NULL END) AS CNT_APPROVED
,COUNT(DISTINCT BG.SKP_CLIENT) AS CNT_PERSON
,COUNT(DISTINCT BG.NAME_REGION_EN) AS CNT_REGION
FROM TRIGGER_31_GROUP LL
JOIN  TRIGGER_31_PIVOT_BASE BG ON BG.SKP_CREDIT_CASE=LL.SKP_CREDIT_CASE
GROUP BY LL.GROUP_NO
)
,TRIGGER_31_GROUP_SELECT AS
(
SELECT 
BB. GROUP_NO
,BB.CNT_APP
,BB.CNT_REJ
,BB.CNT_APPROVED
,BB.CNT_REGION
,LL.SKP_CREDIT_CASE
,LL.TEXT_CONTRACT_NUMBER
,LL.TEXT_USERNAME_EMPLOYEE_SALES  
FROM TRIGGER_31_GROUP LL
JOIN CNT_APP BB ON LL.GROUP_NO=BB.GROUP_NO
)
----------------CREATE HC SCORE------------------------
,BASE AS
 (
    SELECT \*+MATERIALIZE*\ CCA.SKP_CREDIT_CASE,CCA.DATE_DECISION
           ,REPLACE(REGEXP_SUBSTR(CCA.CODE_KO_LIST,'[^,]+',1,1,'i'),'1:','') AS REJECT_REASON         
           ,1 AS CNT         
      FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD CCA 
     WHERE CCA.code_ko_list IS NOT NULL
       AND CCA.CODE_KO_LIST!='XNA'
       AND CCA.DATE_DECISION>=SYSDATE-70
)

,BASE2 AS
 (
    SELECT \*+ MATERIALIZE USE_HASH(AI,CLA)*\ 
           DISTINCT AI.SKP_CREDIT_CASE,AI.DATE_DECISION,AI.SKP_APPRSTEP_ADD_INFO
           ,AI.NUM_VALUE,AI.TEXT_VALUE 
      FROM OWNER_DWH.F_APPRSTEP_ADDITIONAL_INFO_TT AI
     WHERE AI.SKP_APPRSTEP_ADD_INFO IN(14932,14937,6415)--modify 20180827 ellen
       AND AI.DATE_DECISION>=SYSDATE-70
       AND AI.SKP_CREDIT_CASE!=-1
)
----------------------CREATE BIG DATA SCORE-----------------------
,BASE3 AS
 (
    SELECT  \*+MATERIALIZE USE_HASH(GS, B)*\DISTINCT GS.SKP_CREDIT_CASE
           ,GS.GROUP_NO
           ,CASE WHEN B.REJECT_REASON IN('CSTFRAUD'
                                        ,'HISTREJECTED'
                                        ,'FRAUD11'
                                        ,'PHONEMATCHNC'
                                        ,'REPEATPHONE'
                                        ,'CSTDEFAULT'
                                        ,'HISTREJECTEDCASH'
                                        ,'INTCODE'
                                        ,'HISTREJECTEDPOS'
                                        ,'PHONEMATCHDFT'
                                        ,'FRAUD14'
                                        ,'FRAUD3'
                                        ,'FRAUD6APPLICANT'
                                        ,'PHONEMATCHIC'
                                        ,'PREVCREDIT'
                                        ,'NEGATIVEPBOC'
                                        ,'INTCODE2'
                                        ,'CEDENY'
                                        ,'CSTOVERDUE'
                                        ,'CSTBLK2'
                                        ,'FRAUD6'
                                        ,'CSTBLK1'
                                        ,'FRAUD4'
                                        ,'OVERDUE90'
                                        ,'PHONEMATCHBL'
                                        ,'ACTIVELCPBOC'
                                        ,'EMPPHONEOTHER'
                                        ,'INCOMELVL'
                                        ,'PHONEMATCHOVERDUE12M') 
                 THEN 'Hard check: '||REJECT_REASON 
                 WHEN B.REJECT_REASON IS NOT NULL THEN 'Hard check: OTHER' 
            END AS REJECT_REASON
           ,B.CNT
    FROM TRIGGER_31_GROUP_SELECT GS
    JOIN BASE B ON B.SKP_CREDIT_CASE=GS.SKP_CREDIT_CASE
    UNION
    
    SELECT \*+MATERIALIZE USE_HASH(GS, B)*\DISTINCT GS.SKP_CREDIT_CASE
           ,GS.GROUP_NO
           ,'WC unreach' AS REJECT_REASON
           ,W.FLAG_UNREACH
    FROM TRIGGER_31_GROUP_SELECT GS
    JOIN AP_ANTIFRAUD.WC_RESULT W ON GS.SKP_CREDIT_CASE =W.SKP_CREDIT_CASE AND  W.FLAG_UNREACH=1--ANNY 2018-11-20 CHANGE WELCOME CALL TABLE
    UNION 
    
    SELECT  \*+MATERIALIZE USE_HASH(GS, B2)*\DISTINCT GS.SKP_CREDIT_CASE
          ,GS.GROUP_NO
          ,'Bad score' AS BIGDATA
          ,CASE WHEN B2.NUM_VALUE>=20 THEN 1 ELSE 0 END AS A8_FINALSCORE   
    FROM TRIGGER_31_GROUP_SELECT GS
    JOIN BASE2 B2 ON B2.SKP_CREDIT_CASE=GS.SKP_CREDIT_CASE
    WHERE B2.SKP_APPRSTEP_ADD_INFO=14937--5521
      AND  B2.NUM_VALUE IS NOT NULL
    UNION
    
    SELECT  \*+MATERIALIZE USE_HASH(GS, B2)*\ DISTINCT GS.SKP_CREDIT_CASE
          ,GS.GROUP_NO
          ,'Hit BL' AS BIGDATA
          ,CASE WHEN INSTR(B2.TEXT_VALUE,'黑名单',1,1)>0 THEN 1 ELSE 0 END AS A8_ITEMNAME_BLACK   
    FROM TRIGGER_31_GROUP_SELECT GS
    JOIN BASE2 B2 ON B2.SKP_CREDIT_CASE=GS.SKP_CREDIT_CASE
    WHERE B2.SKP_APPRSTEP_ADD_INFO=14932--5516
      AND (B2.TEXT_VALUE!='XNA'AND B2.TEXT_VALUE IS NOT NULL)
    UNION
    SELECT  \*+MATERIALIZE USE_HASH(GS, B2)*\DISTINCT GS.SKP_CREDIT_CASE
          ,GS.GROUP_NO
          ,'Short Phone age' AS BIGDATA
          ,CASE WHEN INSTR(B2.TEXT_VALUE,'1-2个月',1,1)>0 OR INSTR(B2.TEXT_VALUE,'10-11个月',1,1)>0 OR INSTR(B2.TEXT_VALUE,'11-12个月',1,1)>0 
                        OR INSTR(B2.TEXT_VALUE,'2-3个月',1,1)>0 OR INSTR(B2.TEXT_VALUE,'3-4个月',1,1)>0 OR INSTR(B2.TEXT_VALUE,'3-6个月',1,1)>0 
                        OR INSTR(B2.TEXT_VALUE,'4-5个月',1,1)>0 OR INSTR(B2.TEXT_VALUE,'5-6个月',1,1)>0 OR INSTR(B2.TEXT_VALUE,'6-12个月',1,1)>0
                        OR INSTR(B2.TEXT_VALUE,'6-7个月',1,1)>0 OR INSTR(B2.TEXT_VALUE,'7-12个月',1,1)>0 OR INSTR(B2.TEXT_VALUE,'7-8个月',1,1)>0 
                        OR INSTR(B2.TEXT_VALUE,'8-9个月',1,1)>0 OR INSTR(B2.TEXT_VALUE,'9-10个月',1,1)>0 OR INSTR(B2.TEXT_VALUE,'三个月以下',1,1)>0
                        OR INSTR(B2.TEXT_VALUE,'在网时长不足1个月',1,1)>0
                THEN 1 ELSE 0 
            END AS A15_TIMELENGTH 
    FROM TRIGGER_31_GROUP_SELECT GS
    JOIN BASE2 B2 ON B2.SKP_CREDIT_CASE=GS.SKP_CREDIT_CASE
    WHERE B2.SKP_APPRSTEP_ADD_INFO=6415
      AND (B2.TEXT_VALUE!='XNA' AND B2.TEXT_VALUE IS NOT NULL) 
)

,CREDIT_LEVEL AS 
(
SELECT \*+MATERIALIZE*\GROUP_NO, B3.SKP_CREDIT_CASE, DCC.text_contract_number
 ,LISTAGG( B3.REJECT_REASON , ', ') WITHIN GROUP ( ORDER BY GROUP_NO, B3.SKP_CREDIT_CASE ) AS REJECT_REASON
FROM BASE3 B3
JOIN OWNER_DWH.DC_CREDIT_CASE DCC ON B3.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE 
WHERE DCC.DATE_DECISION >=SYSDATE-70
GROUP BY GROUP_NO, B3.SKP_CREDIT_CASE, DCC.text_contract_number
)

, BASE4 AS 
(
------SCORE SELECT------------
SELECT  \*+MATERIALIZE*\GROUP_NO
,ROUND(SCORE/CNT_APP,1) AS SCORE_P
FROM ( SELECT B3.GROUP_NO,COUNT(DISTINCT B3.SKP_CREDIT_CASE) AS CNT_APP  ,SUM(B3.CNT) AS SCORE 
FROM BASE3 B3
GROUP BY B3.GROUP_NO )
WHERE ROUND(SCORE/CNT_APP,1)>=1.2
)

SELECT  \*+ORDERED USE_HASH(B4, GS, C)*\DISTINCT 'SA' AS UNIT
,GS.TEXT_USERNAME_EMPLOYEE_SALES
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6, 'YYYY/MM/DD')  AS WEEK_DETECT
,'31' AS CLASS
,'NEW NETWORKING' AS TRIGGER_SOURCE
,CAST(DENSE_RANK()OVER(ORDER BY GS.GROUP_NO) AS VARCHAR(20))||'] APP:'||CAST(GS.CNT_APP AS VARCHAR(10))||', REJ:'||CAST(GS.CNT_REJ AS VARCHAR(10))||', ACT:'||CAST(GS.CNT_APPROVED AS VARCHAR(10))
||', Score:'||CAST(B4.SCORE_P AS VARCHAR(10))||CASE WHEN GS.CNT_REGION>1 THEN ', MULTI CITY'ELSE NULL END||' 此单: '||C.REJECT_REASON AS TRIGGER_VALUE
,'SOFT' AS TIRGGER_TYPE
,GS.SKP_CREDIT_CASE
,GS.TEXT_CONTRACT_NUMBER
FROM BASE4 B4   
JOIN TRIGGER_31_GROUP_SELECT GS ON GS.GROUP_NO=B4.GROUP_NO
LEFT JOIN CREDIT_LEVEL C ON GS.SKP_CREDIT_CASE =C.SKP_CREDIT_CASE ;
COMMIT;*/

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
SELECT * FROM TRIGGER_31_SCORE;--372
COMMIT;


 --DROP VIEW TRIGGER_31_FINAL_INPUT
 
----------INSERT TO TRIGGER------------------
INSERT INTO AP_ANTIFRAUD.F_AF_FINAL_TRIGGERS
WITH FINAL_TRIGGER_BASE AS
(
SELECT  /*+  use_hash(facc) */  DISTINCT 
 PRE.ID_ENTITY
,EE.SKP_EMPLOYEE AS skp_employee_consultant--20180626
,TRIGGER_VALUE 
,EE.NAME_LAST AS name_last_sales--20180626
,PRE.DATE_DETECT
,PRE.WEEK_DETECT
, CASE WHEN ((FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR FACC.text_username_employee_sales='homer_o2o')AND DSAC.CODE_SALES_AREA IS NOT NULL THEN DSAC.CODE_SALES_AREA ELSE  PRO.CODE_SALES_AREA END  AS REGION
, CASE WHEN ((FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR FACC.text_username_employee_sales='homer_o2o')AND DSA.CODE_SALES_AREA IS NOT NULL THEN DSA.CODE_SALES_AREA ELSE  CC.CODE_SALES_AREA END AS CODE_SALES_AREA
--,SA_TYPE
--,SA_ACTIVE_DAYS
,TRIGGER_SOURCE
,TRIGGER_TYPE
,substr(trigger_value,1,instr(trigger_value,']',1)-1) as ID_GROUP
,MIN(CASE WHEN FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme' AND EE.SKP_BANK_ROLE<>1962 THEN '2 POS LOAN'
                      WHEN FACC.name_channel LIKE '%无预约%' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme' THEN '3 WALK-IN'  
                      WHEN FACC.name_channel LIKE '消费贷%' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme'  THEN '1 XSELL' 
                       --WHEN FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme' THEN '4 ELOAN' ELSE '5 MINI' END 
                       WHEN FACC.name_channel='商品贷' AND EE.SKP_BANK_ROLE=1962 THEN '4 ELOAN' ELSE '5 MINI' END --REMOTE SA 20190517
                               ) OVER(PARTITION BY DATE_DETECT, substr(trigger_value,1,instr(trigger_value,']',1)-1))AS CASE_CATEGORY

FROM AP_ANTIFRAUD.f_Trcontracts_Preselection PRE
JOIN OWNER_DWH.DC_CREDIT_CASE DCC ON DCC.SKP_CREDIT_CASE=PRE.SKP_CREDIT_CASE AND PRE.DATE_DETECT=TO_CHAR(SYSDATE,'yyyy/mm/dd')and PRE.CLASS='31' 
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC ON DCC.id_source = facc.id_source AND  FACC.date_decision=DCC.DATE_DECISION AND DCC.skp_credit_type = facc.skp_credit_type --AND PRE.UNIT='SA'-- AND AA.CLASS=20
LEFT JOIN OWNER_DWH.DC_EMPLOYEE EE ON PRE.ID_ENTITY=EE.TEXT_USERNAME_EMPLOYEE AND EE.CODE_EMPLOYEE_STATUS<>'X'
LEFT JOIN OWNER_DWH.DC_SALES_AREA CC ON CC.NAME_SALES_AREA=FACC.name_region AND CC.code_sales_area_status='a' and  CC.skp_sales_area_type=1 
LEFT JOIN OWNER_DWH.DC_SALES_AREA PRO ON CC.SKP_SALES_AREA_SUPERIOR=PRO.SKP_SALES_AREA AND  PRO.CODE_SALES_AREA_STATUS='a' and PRO.SKP_SALES_AREA_TYPE=2 
---SA_ACTIVE_DAYS
--LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON FACC.skp_employee_consultant=sa.skp_employee AND PRE.UNIT='SA'

 JOIN OWNER_DWH.f_Application_Client_Tt ACT ON ACT.SKP_CREDIT_CASE=DCC.SKP_CREDIT_CASE AND ACT.SKP_CREDIT_TYPE=DCC.SKP_CREDIT_TYPE AND ACT.SKP_CLIENT_ROLE=14
LEFT JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR ON ADDR.SKP_CREDIT_CASE= DCC.SKP_CREDIT_CASE AND ACT.SKP_APPLICATION_CLIENT=ADDR.SKP_APPLICATION_CLIENT AND ADDR.SKP_ADDRESS_TYPE=2--CURRENT
LEFT JOIN OWNER_DWH.DC_CITY DC ON DC.SKP_CITY=ADDR.SKP_CITY
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSA ON DSA.NAME_SALES_AREA=DC.NAME_CITY AND DSA.code_sales_area_status='a' and  DSA.skp_sales_area_type=1
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSAC ON DSA.SKP_SALES_AREA_SUPERIOR=DSAC.SKP_SALES_AREA AND  DSAC.CODE_SALES_AREA_STATUS='a' and DSAC.SKP_SALES_AREA_TYPE=2 

)
,PROVINCE AS 
(
SELECT DISTINCT ID_GROUP
,LISTAGG(REGION,'、' )WITHIN GROUP(ORDER BY REGION) OVER(PARTITION BY ID_GROUP) AS PROVINCE
FROM (SELECT DISTINCT ID_GROUP,REGION FROM FINAL_TRIGGER_BASE)
)
,REGION AS 
(
SELECT DISTINCT AA.ID_GROUP
,BB.PROVINCE
,LISTAGG(CODE_SALES_AREA,'、')WITHIN GROUP(ORDER BY CODE_SALES_AREA) OVER(PARTITION BY AA.ID_GROUP) AS CITY
,CASE WHEN CASE_CATEGORY='1 XSELL' THEN '3 XSELL' 
              WHEN CASE_CATEGORY='2 POS LOAN' THEN '1 POS LOAN'
                WHEN CASE_CATEGORY='3 WALK-IN' THEN '2 WALK-IN'
              ELSE CASE_CATEGORY END AS CASE_CATEGORY     ----------PRIORITY XSELL
FROM  (SELECT DISTINCT ID_GROUP, CODE_SALES_AREA,CASE_CATEGORY FROM FINAL_TRIGGER_BASE) AA
JOIN PROVINCE BB ON AA.ID_GROUP=BB.ID_GROUP
)

SELECT  
 AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID
,'SA' AS UNIT
,'SA'||'_'||AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID_TRIGGER
,TO_DATE(TRI.DATE_DETECT,'YYYY-MM-DD') AS DATE_DETECT
,TO_DATE(TRI.WEEK_DETECT,'YYYY-MM-DD')AS WEEK_DETECT
,TRI.ID_ENTITY
,TRI.name_last_sales
,BB.PROVINCE
,BB.CITY
,CASE WHEN SUBSTR(ID_ENTITY,1,1) IN ('6','D') THEN 'RA' ELSE 'SA' END AS SA_TYPE
,SA.cnt_days_from_first_credit
,'31' AS CLASS
,TRI.TRIGGER_SOURCE
,'SOFT' AS TRIGGER_TYPE
,TRI.TRIGGER_VALUE 
,NULL CHECKED_BY
,NULL CASE_STATUS
,NULL CASE_DECISION
,NULL CASE_NO
,NULL INTO_SECURITY
,SYSDATE AS TIME_DETECT
,BB.CASE_CATEGORY
,NULL AS NAME_DISTRICT 
,'是' AS FLAG_SEC_ALL_CONTRACT
FROM (SELECT DISTINCT DATE_DETECT,WEEK_DETECT,ID_ENTITY,name_last_sales,skp_employee_consultant,TRIGGER_SOURCE, TRIGGER_VALUE,ID_GROUP FROM FINAL_TRIGGER_BASE) TRI
JOIN REGION BB ON TRI.ID_GROUP=BB.ID_GROUP 
---SA_ACTIVE_DAYS
LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON TRI.skp_employee_consultant=sa.skp_employee
WHERE length( BB.CITY)<300;--lengthB 改为length 2018-09-03
COMMIT; 
END;
 
   
    PROCEDURE TRIGGER_33_MARKETING_PART1 IS
BEGIN
  
 INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '33 MARKETING P1',SYSDATE FROM DUAL;
COMMIT;

/*SELECT INSTR(ACCA.CODE_PRODUCT,'MINI',1,1),ACCA.CODE_PRODUCT FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA
WHERE INSTR(ACCA.CODE_PRODUCT,'MINI',1,1) >0
AND ACCA.CODE_CREDIT_TYPE='SS'*/
---------------------------------------------------------------------------------------------------------------------------
--------33 TRIGGER INCREASE SALES---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------
--testing stop 20180719
/*INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection
WITH BASE AS (
SELECT  TRUNC(ACCA.DATE_DECISION,'IW')+6 AS WEEK_DECISION
      ,ACCA.CODE_SALESROOM
      ,COUNT(SKP_CREDIT_CASE) AS CNT_APP
FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA
WHERE ACCA.DATE_DECISION BETWEEN TRUNC(SYSDATE,'IW')-14 AND TRUNC(SYSDATE,'IW')- 1
AND ACCA.CODE_CREDIT_TYPE='SS' AND INSTR(ACCA.CODE_PRODUCT,'MINI',1,1)=0 AND INSTR(ACCA.NAME_PRODUCT,'ESHOP',1,1)=0
AND  INSTR(ACCA.CODE_PRODUCT,'ACL',1,1)=0 --20170928
--20170207
AND (ACCA.cnt_instalment!=6 AND INSTR(ACCA.CODE_PRODUCT,'APZ',1,1)=0)
AND ACCA.text_identity_card_number NOT IN (
                                          SELECT I.TEXT_VALUE
                                          FROM OWNER_DWH.F_CLIENT_UNDES_IDENT_TT I
                                          WHERE I.TEXT_VALUE=ACCA.text_identity_card_number
                                          AND I.DTIME_INSERTED<ACCA.date_decision
                                          AND (SUBSTR(I.TEXT_SOURCE,-2)='11'
                                                OR UPPER(I.TEXT_SOURCE)='MS'
                                                OR UPPER(I.TEXT_SOURCE)='MSER'
                                               )
                                           )
------------
GROUP BY TRUNC(ACCA.DATE_DECISION,'IW')+6 ,ACCA.CODE_SALESROOM
)
,BASE2 AS (
SELECT B1.WEEK_DECISION AS PREVIOUS_WEEK
,B1.CNT_APP AS PREVIOUS_CNT_APP
,B1.CODE_SALESROOM
,B2.WEEK_DECISION AS LATER_WEEK
,B2.CNT_APP AS LATER_CNT_APP
,B2.CNT_APP/B1.CNT_APP AS INCREASE_TIMES
FROM BASE B1
JOIN BASE B2 ON B1.WEEK_DECISION=B2.WEEK_DECISION-7
AND B1.CODE_SALESROOM=B2.CODE_SALESROOM
)
,BASE3 AS(
SELECT WEEK_DECISION,MIN(CNT_APP) AS LINE,COUNT(CODE_SALESROOM) AS CNT_POS
FROM (
      SELECT AA.*,NTILE(200) OVER(PARTITION BY WEEK_DECISION ORDER BY CNT_APP DESC) AS ORD
      FROM (
            SELECT COUNT(SKP_CREDIT_CASE) AS CNT_APP
            ,TRUNC(ACCA.DATE_DECISION,'IW')+6 AS WEEK_DECISION
            ,ACCA.CODE_SALESROOM
            FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA
            WHERE ACCA.DATE_DECISION BETWEEN TRUNC(SYSDATE,'IW')-14 AND TRUNC(SYSDATE,'IW')-1
            --20170207
            AND ACCA.CODE_CREDIT_TYPE='SS' AND INSTR(ACCA.CODE_PRODUCT,'MINI',1,1)=0 AND INSTR(ACCA.NAME_PRODUCT,'ESHOP',1,1)=0
            AND (ACCA.cnt_instalment!=6 AND INSTR(ACCA.CODE_PRODUCT,'APZ',1,1)=0)
            ----------
            GROUP BY CODE_SALESROOM,TRUNC(ACCA.DATE_DECISION,'IW')+6
           )AA
      )
WHERE ORD=1
GROUP BY WEEK_DECISION
)
,BASE4 AS(
SELECT B2.*,DS.DATE_SALESROOM_ACT_START
FROM BASE2 B2
JOIN BASE3 B3 ON B2.LATER_WEEK=B3.WEEK_DECISION
 AND B2.LATER_CNT_APP>B3.LINE
JOIN OWNER_DWH.DC_SALESROOM DS ON DS.CODE_SALESROOM=B2.CODE_SALESROOM
AND B2.INCREASE_TIMES>=5--4 20170906 ELLEN
 AND (B2.PREVIOUS_WEEK-DS.DATE_SALESROOM_ACT_START)>30
 AND B2.PREVIOUS_CNT_APP>=5--10--20170906/1020 change to 5 ELLEN
)

,ORIGIN AS (
SELECT 'POS' AS UNIT
,ACCA.CODE_SALESROOM AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'33' AS CLASS
,'MARKETING TRIGGER' AS TRIGGER_SOURCE
,CAST(LATER_WEEK AS VARCHAR(30))||'较前一周激增约'||CAST(INCREASE_TIMES AS VARCHAR(5))||'倍的销售量'||CAST(PREVIOUS_CNT_APP AS VARCHAR(10))||'/'
||CAST(LATER_CNT_APP AS VARCHAR(10)) AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,ACCA.SKP_CREDIT_CASE
,ACCA.TEXT_CONTRACT_NUMBER
FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA
JOIN BASE4 B4 ON B4.LATER_WEEK=TRUNC(ACCA.DATE_DECISION,'IW')+6
 AND B4.CODE_SALESROOM=ACCA.CODE_SALESROOM
AND ACCA.CODE_CREDIT_TYPE='SS' AND INSTR(ACCA.CODE_PRODUCT,'MINI',1,1)=0 AND INSTR(ACCA.NAME_PRODUCT,'ESHOP',1,1)=0
--20170207
AND (ACCA.cnt_instalment!=6 AND INSTR(ACCA.CODE_PRODUCT,'APZ',1,1)=0)
AND ACCA.text_identity_card_number NOT IN (
                                          SELECT I.TEXT_VALUE
                                          FROM OWNER_DWH.F_CLIENT_UNDES_IDENT_TT I
                                          WHERE I.TEXT_VALUE=ACCA.text_identity_card_number
                                          AND I.DTIME_INSERTED<ACCA.date_decision
                                          AND (SUBSTR(I.TEXT_SOURCE,-2)='11'
                                                OR UPPER(I.TEXT_SOURCE)='MS'
                                                OR UPPER(I.TEXT_SOURCE)='MSER'
                                               )
                                           )
)


SELECT \*+MATERIALIZE*\ 
 UNIT
,ID_ENTITY
,DATE_DETECT
,WEEK_DETECT
,CLASS
,TRIGGER_SOURCE
,TRIGGER_VALUE
,TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM 
(
SELECT \*+MATERIALIZE*\ O.*
,ROW_NUMBER () OVER (PARTITION BY O.ID_ENTITY,  O.TRIGGER_VALUE ORDER BY DCC.SKP_CREDIT_STATUS) AS RNK
FROM ORIGIN O 
JOIN OWNER_DWH.DC_CREDIT_CASE DCC
ON O.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE 
)
WHERE RNK<=30
--------------
;
COMMIT;

------------------006-------------------
INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection
WITH BASE AS 
(
SELECT TRUNC(ACCA.DATE_DECISION,'IW')+6 AS WEEK_DECISION
      ,ACCA.CODE_SALESROOM
      ,COUNT(SKP_CREDIT_CASE) AS CNT_APP
FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA
WHERE ACCA.DATE_DECISION BETWEEN TRUNC(SYSDATE,'IW')-14 AND TRUNC(SYSDATE,'IW')- 1
AND ACCA.CODE_CREDIT_TYPE='SS'
--20170207
AND (ACCA.cnt_instalment=6 AND INSTR(ACCA.CODE_PRODUCT,'APZ',1,1)>0)
AND ACCA.text_identity_card_number NOT IN (
                                          SELECT I.TEXT_VALUE
                                          FROM OWNER_DWH.F_CLIENT_UNDES_IDENT_TT I
                                          WHERE I.TEXT_VALUE=ACCA.text_identity_card_number
                                          AND I.DTIME_INSERTED<ACCA.date_decision
                                          AND (SUBSTR(I.TEXT_SOURCE,-2)='11'
                                                OR UPPER(I.TEXT_SOURCE)='MS'
                                                OR UPPER(I.TEXT_SOURCE)='MSER'
                                               )
                                           )
------------
GROUP BY TRUNC(ACCA.DATE_DECISION,'IW')+6 ,ACCA.CODE_SALESROOM
)
,BASE2 AS 
(
SELECT B1.WEEK_DECISION AS PREVIOUS_WEEK
,B1.CNT_APP AS PREVIOUS_CNT_APP
,B1.CODE_SALESROOM
,B2.WEEK_DECISION AS LATER_WEEK
,B2.CNT_APP AS LATER_CNT_APP
,B2.CNT_APP/B1.CNT_APP AS INCREASE_TIMES
FROM BASE B1
JOIN BASE B2 ON B1.WEEK_DECISION=B2.WEEK_DECISION-7
AND B1.CODE_SALESROOM=B2.CODE_SALESROOM
)
,BASE3 AS
(
SELECT WEEK_DECISION,MIN(CNT_APP) AS LINE,COUNT(CODE_SALESROOM) AS CNT_POS
FROM (
      SELECT AA.*,NTILE(10) OVER(PARTITION BY WEEK_DECISION ORDER BY CNT_APP DESC) AS ORD
      FROM (
            SELECT COUNT(SKP_CREDIT_CASE) AS CNT_APP
            ,TRUNC(ACCA.DATE_DECISION,'IW')+6 AS WEEK_DECISION
            ,ACCA.CODE_SALESROOM
            FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA
            WHERE ACCA.DATE_DECISION BETWEEN TRUNC(SYSDATE,'IW')-14 AND TRUNC(SYSDATE,'IW')-1
            --20170207
            AND ACCA.CODE_CREDIT_TYPE='SS'
            AND (ACCA.cnt_instalment=6 AND INSTR(ACCA.CODE_PRODUCT,'APZ',1,1)>0)
            ----------
            GROUP BY CODE_SALESROOM,TRUNC(ACCA.DATE_DECISION,'IW')+6
           )AA
      )
WHERE ORD=1
GROUP BY WEEK_DECISION
)
,BASE4 AS
(
SELECT B2.*,DS.DATE_SALESROOM_ACT_START
FROM BASE2 B2
JOIN BASE3 B3 ON B2.LATER_WEEK=B3.WEEK_DECISION
 AND B2.LATER_CNT_APP>B3.LINE
JOIN OWNER_DWH.DC_SALESROOM DS ON DS.CODE_SALESROOM=B2.CODE_SALESROOM
--20170207
AND B2.INCREASE_TIMES>=20
AND (B2.PREVIOUS_WEEK-DS.DATE_SALESROOM_ACT_START)>60
AND B2.PREVIOUS_CNT_APP>=2--20180620
-----------
)

,ORIGIN AS 
(
SELECT 'POS'AS UNIT
,ACCA.CODE_SALESROOM AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'33' AS CLASS
,'MARKETING TRIGGER' AS TRIGGER_SOURCE
,CAST(LATER_WEEK AS VARCHAR(30))||'较前一周激增约'||CAST(INCREASE_TIMES AS VARCHAR(5))||'倍的销售量'||CAST(PREVIOUS_CNT_APP AS VARCHAR(10))||'/'
||CAST(LATER_CNT_APP AS VARCHAR(10)) AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,ACCA.SKP_CREDIT_CASE
,ACCA.TEXT_CONTRACT_NUMBER
FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA
JOIN BASE4 B4 ON B4.LATER_WEEK=TRUNC(ACCA.DATE_DECISION,'IW')+6
 AND B4.CODE_SALESROOM=ACCA.CODE_SALESROOM
--20170207
 AND ACCA.CODE_CREDIT_TYPE='SS'
AND (ACCA.cnt_instalment=6 AND INSTR(ACCA.CODE_PRODUCT,'APZ',1,1)>0)
 AND ACCA.text_identity_card_number NOT IN (
                                            SELECT I.TEXT_VALUE
                                            FROM OWNER_DWH.F_CLIENT_UNDES_IDENT_TT I
                                            WHERE I.TEXT_VALUE=ACCA.text_identity_card_number
                                            AND I.DTIME_INSERTED<ACCA.date_decision
                                            AND (SUBSTR(I.TEXT_SOURCE,-2)='11'
                                                  OR UPPER(I.TEXT_SOURCE)='MS'
                                                  OR UPPER(I.TEXT_SOURCE)='MSER'
                                                 )
                                           )
 )                                          
                                           
                                           ----------
SELECT \*+MATERIALIZE*\ 
 UNIT
,ID_ENTITY
,DATE_DETECT
,WEEK_DETECT
,CLASS
,TRIGGER_SOURCE
,TRIGGER_VALUE
,TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM 
(
SELECT \*+MATERIALIZE*\ O.*
,ROW_NUMBER () OVER (PARTITION BY O.ID_ENTITY,  O.TRIGGER_VALUE ORDER BY DCC.SKP_CREDIT_STATUS) AS RNK 
FROM ORIGIN O 
JOIN OWNER_DWH.DC_CREDIT_CASE DCC
ON O.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE 
)
WHERE RNK<=30
--------------
;
COMMIT;*/
  
 -----------------------------------------------------------------------------------------------------------------
--------33 early repay
------------------------------------------------------------------------------------------------------------------
INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection
WITH base AS(
SELECT s.code_salesroom,f.SKP_CREDIT_CASE,con.text_contract_number,f.SKP_CLIENT,f.DTIME_NOTE_CREATED 
FROM owner_dwh.cl_note_type cl
  join owner_dwh.f_business_note_tt f  
    on f.SKP_NOTE_TYPE = cl.SKP_NOTE_TYPE
  --join OWNER_DWH.f_contract_ad con
  JOIN OWNER_DWH.F_CONTRACT_BASE_AD CON
    on f.SKP_CREDIT_CASE = con.skp_credit_case
   and f.skp_credit_type = con.skp_credit_type
   and f.date_decision = con.date_decision
  JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD AD ON CON.skp_credit_case=AD.skp_credit_case 
  AND CON.skp_credit_type=AD.skp_credit_type
  AND CON.date_decision=AD.date_decision

   join owner_dwh.dc_product p
   on p.SKP_PRODUCT=con.skp_product
   and p.SKP_PRODUCT_CHANNEL=con.skp_product_channel
   join owner_dwh.dc_salesroom s on con.skp_salesroom=s.skp_salesroom
                  JOIN  OWNER_DWH.Dc_Credit_Case dcc
         on dcc.SKP_CREDIT_CASE=con.skp_credit_case
and dcc.DATE_DECISION=con.date_decision and dcc.SKP_CREDIT_TYPE=con.skp_credit_type
/*   left join ap_antifraud.f_af_final_fraud_contracts fraud
   on f.SKP_CREDIT_CASE=fraud.skp_credit_case
   and f.DATE_DECISION=fraud.date_decision*/
where cl.skp_note_type in (402, 603, 114)
   and f.DATE_NOTE_CREATED >=TRUNC(SYSDATE)-10--change to date_note_created 2017117 lina
   and trunc(f.DTIME_NOTE_CREATED) = f.date_decision
   and f.skp_credit_type = 1
   and date_first_due != date_First_instalment
   and date_first_due!=date'3000-01-01'
   and p.SKP_CREDIT_TYPE = 1
   and p.SKP_PRODUCT_CHANNEL = 3 --posloan
   and dcc.SKP_CREDIT_ACQUISITION_CHNL!=4--183066 20180125
   AND dcc.SKP_CREDIT_ACQUISITION_CHNL !=6--207247 --O2O 20170928 ELLEN
   AND F.DATE_DECISION BETWEEN TRUNC(SYSDATE,'IW')-7 AND TRUNC(SYSDATE,'IW')- 1
)
----20190311 ellen listagg
,dtime AS (
SELECT CODE_SALESROOM,SKP_CREDIT_CASE ,TEXT_CONTRACT_NUMBER ,skp_client
,listagg(to_char(dtime_note_created,'YYYY-MM-DD HH24:mi:ss'),'|') WITHIN GROUP( ORDER BY dtime_note_created) AS dtime_note_created--20190305
FROM base b
GROUP BY  CODE_SALESROOM,SKP_CREDIT_CASE ,TEXT_CONTRACT_NUMBER ,skp_client
)
SELECT DISTINCT 'POS'AS UNIT
,CODE_SALESROOM AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'33' AS CLASS,
'MARKETING TRIGGER-early-repay' AS TRIGGER_SOURCE,
'该合同于生效一天之内申请提前还款,申请日期：' || DTIME_NOTE_CREATED 
AS TRIGGER_VALUE--20190226
,'SOFT' AS TRIGGER_TYPE
,SKP_CREDIT_CASE
,text_contract_number
from dtime;
COMMIT;

END;


 PROCEDURE TRIGGER_33_CONCENTRATION_1_500 IS
BEGIN
 INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '33 MARKETING P2 500',SYSDATE FROM DUAL;
COMMIT;
-------------------------------------------------------------------------------------------------------------------------------------------------
--500  dsitinct /week
-------------------------------------------------------------------------------------------------------------------------------------------------

--1. New: concentration
-------------------------------------------------------------------------
--1.1 marriage status:----------------------------------------------------
-------------------------------------------------------------------------

/*drop table CONCENTRATION_ONE_PRE;
Create table TRIGGER_33_CONCENTRA_ONE_PRE
(UNIT VARCHAR2(5),
TYPE VARCHAR2(30),
ID_ENTITY VARCHAR2(15),
DATE_DETECT DATE,
WEEK_DETECT DATE,
CLASS NUMBER,
TRIGGER_SOURCE VARCHAR2(50),
TRIGGER_VALUE_P1 VARCHAR2(150),
TRIGGER_VALUE_P2 VARCHAR2(150),
SKP_CREDIT_CASE NUMBER,
TEXT_CONTRACT_NUMBER VARCHAR2(15)
);
COMMIT;*/
---------------------------------------------------------------------------------------------------------------------------------------
--collect no 006 app  checked as distiinct apps
/*drop table raw_app_no_006;*/
EXECUTE IMMEDIATE 'truncate table TRIGGER_33_raw_app_no_006';
INSERT INTO TRIGGER_33_raw_app_no_006
--CREATE GLOBAL TEMPORARY TABLE TRIGGER_33_raw_app_no_006 ON COMMIT PRESERVE ROWS AS 
 select
   trunc(cre.date_decision, 'month') AS MONTH_DECISION,
   TRUNC(cre.DATE_DECISION, 'IW') + 6 AS WEEK_DECISION,
   cre.date_decision,
   cre.skp_salesroom,
   cre.text_contract_number,
   cre.SKP_CREDIT_CASE,
   cre.date_effective,
   cre.amt_goods_price,
   cre.skp_client,
   edu.NAME_EDUCATION_TYPE,
   family.NAME_FAMILY_STATUS,
   housing.NAME_HOUSING_TYPE,
   work_e.NAME_WORK_EXPERIENCE,
   s.CODE_SALESROOM,
   case
     when cre.amt_goods_price <= 1500 then
      '(0-1500]'
     when cre.amt_goods_price <= 3000 then
      '(1500-3000]'
     when cre.amt_goods_price <= 5000 then
      '(3000-5000]'
     else
      '(5000+'
   end as price_interval,
   count(cre.skp_credit_case) over(partition by trunc(cre.date_decision, 'MM'), cre.skp_salesroom) as cnt_app_month,
   count(cre.skp_credit_case) over(partition by TRUNC(cre.date_decision , 'IW') + 6 , cre.skp_salesroom) as cnt_app_week
    from owner_dwh.dc_product p
    join owner_dwh.f_credit_case_ad cre
      on cre.SKP_PRODUCT = p.skp_product
     and cre.SKP_PRODUCT_CHANNEL = p.skp_product_channel
     and cre.skp_credit_type = p.skp_credit_type
      --adjust---------------------------------------------------------
    join owner_dwh.dc_salesroom s
      on cre.skp_salesroom = s.skp_salesroom
    join owner_dwh.dc_client client
      on cre.SKP_CLIENT = client.skp_client
    left join owner_dwh.cl_education_type edu --5
      on client.SKP_EDUCATION_TYPE = edu.SKP_EDUCATION_TYPE
    left join owner_dwh.cl_family_status family --7
      on family.SKP_FAMILY_STATUS = client.SKP_FAMILY_STATUS
    left join owner_dwh.cl_housing_type housing --8
      on client.SKP_HOUSING_TYPE = housing.SKP_HOUSING_TYPE
    left join owner_dwh.cl_work_experience work_e --9
      on client.skp_work_experience = work_e.SKP_WORK_EXPERIENCE
   where cre.DATE_DECISION BETWEEN TRUNC(SYSDATE,'IW')-14 AND TRUNC(SYSDATE,'IW')- 1
     and p.SKP_CREDIT_TYPE = 1
     and p.SKP_PRODUCT_CHANNEL = 3 --posloan
     and p.CODE_PRODUCT not like 'FESP%'
     AND  INSTR(P.CODE_PRODUCT,'ACL',1,1)=0 --20170928
     and p.skp_product not in
     (select /*+ materialize */ skp_product from owner_dwh.dc_product
                                where p.CODE_PRODUCT like '%APZ%'
                             and CNT_PAYMENT = 6);
 COMMIT;

---------------------------------------------------------------------------------------------------------------------------------------




insert into TRIGGER_33_CONCENTRA_ONE_PRE
with group_by as
 (select /*+ materialize */ distinct WEEK_DECISION,
         skp_salesroom,
         cnt_app_week
    from TRIGGER_33_raw_app_no_006
   where cnt_app_week >= 10) --adjust---------------------------------------------------------
,
times as
 (select /*+ materialize */ lat.week_decision as lat_week,
         lat.skp_salesroom,
         lat.cnt_app_week as lat_cnt,
         pre.week_decision as pre_week,
         pre.cnt_app_week as pre_cnt,
         round(lat.cnt_app_week / pre.cnt_app_week,2) as times_app
    from group_by lat
    join group_by pre
      on pre.week_decision = lat.week_decision - 7
     and pre.skp_salesroom = lat.skp_salesroom
   where lat.cnt_app_week / pre.cnt_app_week >= 3 --adjust---------------------------------------------------------
  )
,group_by_segment as
 (select /*+ materialize */ week_decision,
         skp_salesroom,
         NAME_FAMILY_STATUS,  --change
         count(skp_credit_case) as cnt_app
    from (select /*+ materialize */
         times.times_app,
         times.lat_cnt,
         times.pre_cnt,
         times.pre_week,
         times.lat_week,
         cre.SKP_CREDIT_CASE,
         cre.DATE_DECISION,
         cre.WEEK_DECISION,
         cre.SKP_SALESROOM,
         cre.text_contract_number,
         cre.NAME_FAMILY_STATUS,
         cre.CODE_SALESROOM
    from times times
    join TRIGGER_33_raw_app_no_006 cre
      on cre.DATE_DECISION between times.lat_week-13 and times.lat_week --checked as correct)
     and times.skp_salesroom=cre.skp_salesroom
    where NAME_FAMILY_STATUS!='XNA')
   group by week_decision, skp_salesroom, NAME_FAMILY_STATUS --change
  having count(skp_credit_case) >= 3)    --adjust---------------------------------------------------------
,
times_segment as
(select /*+ materialize */ lat.week_decision as lat_week,
               lat.skp_salesroom,lat.NAME_FAMILY_STATUS,
               lat.cnt_app as lat_cnt,
               pre.week_decision as pre_week,
               pre.cnt_app as pre_cnt,
               round(lat.cnt_app / pre.cnt_app,2) as times_segment
          from group_by_segment lat
          join group_by_segment pre
            on pre.week_decision = lat.week_decision - 7
           and pre.skp_salesroom = lat.skp_salesroom
           and pre.NAME_FAMILY_STATUS=lat.NAME_FAMILY_STATUS)

select 'POS' AS UNIT,
       'marriage_status' as type,
       raw_contracts.code_salesroom as ID_ENTITY,
TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT,
       '33' AS CLASS,
       'MARKETING TRIGGER-concentration-no-006' AS TRIGGER_SOURCE,
       '该POS在' || TO_CHAR(times.LAT_WEEK,'YYYY-MM-DD') || '这一周的申请量为前一周' ||
       CAST(times.times_app AS VARCHAR(5)) || '倍: ' ||
       CAST(times.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times.pre_cnt AS VARCHAR(10)) || '; 且' AS TRIGGER_VALUE_P1,
       '婚姻状况为' ||
       times_segment.NAME_FAMILY_STATUS --change
       || '的为前一周的' || times_segment.times_segment || '倍: '||
       CAST(times_segment.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times_segment.pre_cnt AS VARCHAR(10)) AS TRIGGER_VALUE_P2,
       'SOFT' AS TRIGGER_TYPE,
       raw_contracts.SKP_CREDIT_CASE,
       raw_contracts.text_contract_number
  from times_segment times_segment
  join times times
    on times.lat_week = times_segment.lat_week
   and times.pre_week = times_segment.pre_week
   and times.skp_salesroom = times_segment.skp_salesroom
   and times_segment.times_segment>=1.8*times.times_app  --adjust---------------------------------------------------------
  join TRIGGER_33_raw_app_no_006 raw_contracts
   on raw_contracts.skp_salesroom = times_segment.skp_salesroom
   and raw_contracts.week_decision = times_segment.lat_week;
COMMIT;
-------------------------------------------------------------------------
--2. price:--------------------------------------------------------------
-------------------------------------------------------------------------

insert into TRIGGER_33_CONCENTRA_ONE_PRE
with group_by as
 (select /*+ materialize */ distinct WEEK_DECISION,
         skp_salesroom,
         cnt_app_week
    from TRIGGER_33_raw_app_no_006
   where cnt_app_week >= 10) --adjust---------------------------------------------------------
,
times as
 (select /*+ materialize */ lat.week_decision as lat_week,
         lat.skp_salesroom,
         lat.cnt_app_week as lat_cnt,
         pre.week_decision as pre_week,
         pre.cnt_app_week as pre_cnt,
         round(lat.cnt_app_week / pre.cnt_app_week,2) as times_app
    from group_by lat
    join group_by pre
      on pre.week_decision = lat.week_decision - 7
     and pre.skp_salesroom = lat.skp_salesroom
   where lat.cnt_app_week / pre.cnt_app_week >= 5 --adjust---------------------------------------------------------
  )

,group_by_segment as
 (select /*+ materialize */ week_decision,
         skp_salesroom,
         price_interval,  --change
         count(skp_credit_case) as cnt_app
    from (select /*+ materialize */
         times.times_app,
         times.lat_cnt,
         times.pre_cnt,
         times.pre_week,
         times.lat_week,
         cre.SKP_CREDIT_CASE,
         cre.DATE_DECISION,
         cre.WEEK_DECISION,
         cre.SKP_SALESROOM,
         cre.text_contract_number,
         cre.price_interval,--change
         cre.CODE_SALESROOM
    from times times
    join TRIGGER_33_raw_app_no_006 cre
      on cre.DATE_DECISION between times.lat_week-13 and times.lat_week --checked as correct)
     and times.skp_salesroom=cre.skp_salesroom
    where price_interval!='XNA') --change
   group by week_decision, skp_salesroom, price_interval --change
  having count(skp_credit_case) >= 3)    --adjust---------------------------------------------------------

,
times_segment as
(select /*+ materialize */ lat.week_decision as lat_week,
               lat.skp_salesroom,lat.price_interval,--change
               lat.cnt_app as lat_cnt,
               pre.week_decision as pre_week,
               pre.cnt_app as pre_cnt,
               round(lat.cnt_app / pre.cnt_app,2) as times_segment
          from group_by_segment lat
          join group_by_segment pre
            on pre.week_decision = lat.week_decision - 7
           and pre.skp_salesroom = lat.skp_salesroom
           and pre.price_interval=lat.price_interval) --change

select 'POS' AS UNIT,
       'price_interval' as type,
       raw_contracts.code_salesroom as ID_ENTITY,
TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT,
       '33' AS CLASS,
       'MARKETING TRIGGER-concentration-no-006' AS TRIGGER_SOURCE,
       '该POS在' || TO_CHAR(times.LAT_WEEK,'YYYY-MM-DD') || '这一周的申请量为前一周' ||
       CAST(times.times_app AS VARCHAR(5)) || '倍: ' ||
       CAST(times.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times.pre_cnt AS VARCHAR(10)) || '; 且' AS TRIGGER_VALUE_P1,
       '价格区间为' || --change
       times_segment.price_interval --change
       || '的为前一周的' || times_segment.times_segment || '倍: '||
       CAST(times_segment.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times_segment.pre_cnt AS VARCHAR(10)) AS TRIGGER_VALUE_P2,
       'SOFT' AS TRIGGER_TYPE,
       raw_contracts.SKP_CREDIT_CASE,
       raw_contracts.text_contract_number
  from times_segment times_segment
  join times times
    on times.lat_week = times_segment.lat_week
   and times.pre_week = times_segment.pre_week
   and times.skp_salesroom = times_segment.skp_salesroom
   and times_segment.times_segment>=2*times.times_app   --adjust---------------------------------------------------------
  join TRIGGER_33_raw_app_no_006 raw_contracts
   on raw_contracts.skp_salesroom = times_segment.skp_salesroom
   and raw_contracts.week_decision = times_segment.lat_week
   and raw_contracts.skp_salesroom = times_segment.skp_salesroom;
COMMIT;
-------------------------------------------------------------------------
--3. work experience: ---------------------------------------------------
-------------------------------------------------------------------------
insert into TRIGGER_33_CONCENTRA_ONE_PRE
with group_by as
 (select /*+ materialize */ distinct WEEK_DECISION,
         skp_salesroom,
         cnt_app_week
    from TRIGGER_33_raw_app_no_006
   where cnt_app_week >= 10) --adjust---------------------------------------------------------
,
times as
 (select /*+ materialize */ lat.week_decision as lat_week,
         lat.skp_salesroom,
         lat.cnt_app_week as lat_cnt,
         pre.week_decision as pre_week,
         pre.cnt_app_week as pre_cnt,
         round(lat.cnt_app_week / pre.cnt_app_week,2) as times_app
    from group_by lat
    join group_by pre
      on pre.week_decision = lat.week_decision - 7
     and pre.skp_salesroom = lat.skp_salesroom
   where lat.cnt_app_week / pre.cnt_app_week >= 3 --adjust---------------------------------------------------------
  )

,group_by_segment as
 (select /*+ materialize */ week_decision,
         skp_salesroom,
         NAME_WORK_EXPERIENCE,  --change
         count(skp_credit_case) as cnt_app
    from (select /*+ materialize */
         times.times_app,
         times.lat_cnt,
         times.pre_cnt,
         times.pre_week,
         times.lat_week,
         cre.SKP_CREDIT_CASE,
         cre.DATE_DECISION,
         cre.WEEK_DECISION,
         cre.SKP_SALESROOM,
         cre.text_contract_number,
         cre.NAME_WORK_EXPERIENCE, --change
         cre.CODE_SALESROOM
    from times times
    join TRIGGER_33_raw_app_no_006 cre
      on cre.DATE_DECISION between times.lat_week-13 and times.lat_week --checked as correct)
     and times.skp_salesroom=cre.skp_salesroom
    where NAME_WORK_EXPERIENCE!='XNA') --change
   group by week_decision, skp_salesroom, NAME_WORK_EXPERIENCE --change
  having count(skp_credit_case) >= 3)    --adjust---------------------------------------------------------

,
times_segment as
(select /*+ materialize */ lat.week_decision as lat_week,
               lat.skp_salesroom,lat.NAME_WORK_EXPERIENCE,--change
               lat.cnt_app as lat_cnt,
               pre.week_decision as pre_week,
               pre.cnt_app as pre_cnt,
               round(lat.cnt_app / pre.cnt_app,2) as times_segment
          from group_by_segment lat
          join group_by_segment pre
            on pre.week_decision = lat.week_decision - 7
           and pre.skp_salesroom = lat.skp_salesroom
           and pre.NAME_WORK_EXPERIENCE=lat.NAME_WORK_EXPERIENCE) --change

select 'POS' AS UNIT,
       'work_experience' as type,
       raw_contracts.code_salesroom as ID_ENTITY,
TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT,
       '33' AS CLASS,
       'MARKETING TRIGGER-concentration-no-006' AS TRIGGER_SOURCE,
       '该POS在' || TO_CHAR(times.LAT_WEEK,'YYYY-MM-DD') || '这一周的申请量为前一周' ||
       CAST(times.times_app AS VARCHAR(5)) || '倍: ' ||
       CAST(times.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times.pre_cnt AS VARCHAR(10)) || '; 且' AS TRIGGER_VALUE_P1,
       '工作年限为' || --change
       times_segment.NAME_WORK_EXPERIENCE --change
       || '的为前一周的' || times_segment.times_segment || '倍: '||
       CAST(times_segment.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times_segment.pre_cnt AS VARCHAR(10)) AS TRIGGER_VALUE_P2,
       'SOFT' AS TRIGGER_TYPE,
       raw_contracts.SKP_CREDIT_CASE,
       raw_contracts.text_contract_number
  from times_segment times_segment
  join times times
    on times.lat_week = times_segment.lat_week
   and times.pre_week = times_segment.pre_week
   and times.skp_salesroom = times_segment.skp_salesroom
   and times_segment.times_segment>=1.5*times.times_app    --adjust---------------------------------------------------------
  join TRIGGER_33_raw_app_no_006 raw_contracts
   on raw_contracts.skp_salesroom = times_segment.skp_salesroom
   and raw_contracts.week_decision = times_segment.lat_week
   and raw_contracts.skp_salesroom = times_segment.skp_salesroom;
COMMIT;
-------------------------------------------------------------------------
--4. housing type:-------------------------------------------------------
-------------------------------------------------------------------------
insert into TRIGGER_33_CONCENTRA_ONE_PRE
with group_by as
 (select /*+ materialize */ distinct WEEK_DECISION,
         skp_salesroom,
         cnt_app_week
    from TRIGGER_33_raw_app_no_006
   where cnt_app_week >= 10) --adjust---------------------------------------------------------
,
times as
 (select /*+ materialize */ lat.week_decision as lat_week,
         lat.skp_salesroom,
         lat.cnt_app_week as lat_cnt,
         pre.week_decision as pre_week,
         pre.cnt_app_week as pre_cnt,
         round(lat.cnt_app_week / pre.cnt_app_week,2) as times_app
    from group_by lat
    join group_by pre
      on pre.week_decision = lat.week_decision - 7
     and pre.skp_salesroom = lat.skp_salesroom
   where lat.cnt_app_week / pre.cnt_app_week >= 3 --adjust---------------------------------------------------------
  )

,group_by_segment as
 (select /*+ materialize */ week_decision,
         skp_salesroom,
         NAME_HOUSING_TYPE,  --change
         count(skp_credit_case) as cnt_app
    from (select /*+ materialize */
         times.times_app,
         times.lat_cnt,
         times.pre_cnt,
         times.pre_week,
         times.lat_week,
         cre.SKP_CREDIT_CASE,
         cre.DATE_DECISION,
         cre.WEEK_DECISION,
         cre.SKP_SALESROOM,
         cre.text_contract_number,
         cre.NAME_HOUSING_TYPE, --change
         cre.CODE_SALESROOM
    from times times
    join TRIGGER_33_raw_app_no_006 cre
      on cre.DATE_DECISION between times.lat_week-13 and times.lat_week --checked as correct)
     and times.skp_salesroom=cre.skp_salesroom
    where NAME_HOUSING_TYPE!='XNA') --change
   group by week_decision, skp_salesroom, NAME_HOUSING_TYPE --change
  having count(skp_credit_case) >= 5)    --adjust---------------------------------------------------------

,
times_segment as
(select /*+ materialize */ lat.week_decision as lat_week,
               lat.skp_salesroom,lat.NAME_HOUSING_TYPE,--change
               lat.cnt_app as lat_cnt,
               pre.week_decision as pre_week,
               pre.cnt_app as pre_cnt,
               round(lat.cnt_app / pre.cnt_app,2) as times_segment
          from group_by_segment lat
          join group_by_segment pre
            on pre.week_decision = lat.week_decision - 7
           and pre.skp_salesroom = lat.skp_salesroom
           and pre.NAME_HOUSING_TYPE=lat.NAME_HOUSING_TYPE) --change
select 'POS' AS UNIT,
       'housing_type' as type,
       raw_contracts.code_salesroom as ID_ENTITY,
TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT,
       '33' AS CLASS,
       'MARKETING TRIGGER-concentration-no-006' AS TRIGGER_SOURCE,
       '该POS在' || TO_CHAR(times.LAT_WEEK,'YYYY-MM-DD') || '这一周的申请量为前一周' ||
       CAST(times.times_app AS VARCHAR(5)) || '倍: ' ||
       CAST(times.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times.pre_cnt AS VARCHAR(10)) || '; 且' AS TRIGGER_VALUE_P1,
       '住房类型为' || --change
       times_segment.NAME_HOUSING_TYPE --change
       || '的为前一周的' || times_segment.times_segment || '倍: '||
       CAST(times_segment.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times_segment.pre_cnt AS VARCHAR(10)) AS TRIGGER_VALUE_P2,
       'SOFT' AS TRIGGER_TYPE,
       raw_contracts.SKP_CREDIT_CASE,
       raw_contracts.text_contract_number
  from times_segment times_segment
  join times times
    on times.lat_week = times_segment.lat_week
   and times.pre_week = times_segment.pre_week
   and times.skp_salesroom = times_segment.skp_salesroom
   and times_segment.times_segment>=1.5*times.times_app   --adjust---------------------------------------------------------
  join TRIGGER_33_raw_app_no_006 raw_contracts
   on raw_contracts.skp_salesroom = times_segment.skp_salesroom
   and raw_contracts.week_decision = times_segment.lat_week
   and raw_contracts.skp_salesroom = times_segment.skp_salesroom;
COMMIT;
-------------------------------------------------------------------------
--5. education:----------------------------------------------------------
-------------------------------------------------------------------------
insert into TRIGGER_33_CONCENTRA_ONE_PRE
with group_by as
 (select /*+ materialize */ distinct WEEK_DECISION,
         skp_salesroom,
         cnt_app_week
    from TRIGGER_33_raw_app_no_006
   where cnt_app_week >= 10) --adjust---------------------------------------------------------
,
times as
 (select /*+ materialize */ lat.week_decision as lat_week,
         lat.skp_salesroom,
         lat.cnt_app_week as lat_cnt,
         pre.week_decision as pre_week,
         pre.cnt_app_week as pre_cnt,
         round(lat.cnt_app_week / pre.cnt_app_week,2) as times_app
    from group_by lat
    join group_by pre
      on pre.week_decision = lat.week_decision - 7
     and pre.skp_salesroom = lat.skp_salesroom
   where lat.cnt_app_week / pre.cnt_app_week >= 3 --adjust---------------------------------------------------------
  )

,group_by_segment as
 (select /*+ materialize */ week_decision,
         skp_salesroom,
         NAME_EDUCATION_TYPE,  --change
         count(skp_credit_case) as cnt_app
    from (select /*+ materialize */
         times.times_app,
         times.lat_cnt,
         times.pre_cnt,
         times.pre_week,
         times.lat_week,
         cre.SKP_CREDIT_CASE,
         cre.DATE_DECISION,
         cre.WEEK_DECISION,
         cre.SKP_SALESROOM,
         cre.text_contract_number,
         cre.NAME_EDUCATION_TYPE, --change
         cre.CODE_SALESROOM
    from times times
    join TRIGGER_33_raw_app_no_006 cre
      on cre.DATE_DECISION between times.lat_week-13 and times.lat_week --checked as correct)
     and times.skp_salesroom=cre.skp_salesroom
    where NAME_EDUCATION_TYPE!='XNA') --change
   group by week_decision, skp_salesroom, NAME_EDUCATION_TYPE --change
  having count(skp_credit_case) >= 5)    --adjust---------------------------------------------------------

,
times_segment as
(select /*+ materialize */ lat.week_decision as lat_week,
               lat.skp_salesroom,lat.NAME_EDUCATION_TYPE,--change
               lat.cnt_app as lat_cnt,
               pre.week_decision as pre_week,
               pre.cnt_app as pre_cnt,
               round(lat.cnt_app / pre.cnt_app,2) as times_segment
          from group_by_segment lat
          join group_by_segment pre
            on pre.week_decision = lat.week_decision - 7
           and pre.skp_salesroom = lat.skp_salesroom
           and pre.NAME_EDUCATION_TYPE=lat.NAME_EDUCATION_TYPE) --change

select 'POS' AS UNIT,
       'education' as type,
       raw_contracts.code_salesroom as ID_ENTITY,
TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT,
       '33' AS CLASS,
       'MARKETING TRIGGER-concentration-no-006' AS TRIGGER_SOURCE,
       '该POS在' || TO_CHAR(times.LAT_WEEK,'YYYY-MM-DD') || '这一周的申请量为前一周' ||
       CAST(times.times_app AS VARCHAR(5)) || '倍: ' ||
       CAST(times.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times.pre_cnt AS VARCHAR(10)) || '; 且' AS TRIGGER_VALUE_P1,
       '教育程度为' || --change
       times_segment.NAME_EDUCATION_TYPE --change
       || '的为前一周的' || times_segment.times_segment || '倍: '||
       CAST(times_segment.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times_segment.pre_cnt AS VARCHAR(10)) AS TRIGGER_VALUE_P2,
       'SOFT' AS TRIGGER_TYPE,
       raw_contracts.SKP_CREDIT_CASE,
       raw_contracts.text_contract_number
  from times_segment times_segment
  join times times
    on times.lat_week = times_segment.lat_week
   and times.pre_week = times_segment.pre_week
   and times.skp_salesroom = times_segment.skp_salesroom
   and times_segment.times_segment>=1.6*times.times_app    --adjust---------------------------------------------------------
  join TRIGGER_33_raw_app_no_006 raw_contracts
   on raw_contracts.skp_salesroom = times_segment.skp_salesroom
   and raw_contracts.week_decision = times_segment.lat_week
   and raw_contracts.skp_salesroom = times_segment.skp_salesroom;
COMMIT;

INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection
WITH ORIGIN AS 
(
SELECT UNIT,
       ID_ENTITY,
       DATE_DETECT,
       WEEK_DETECT,
       CLASS,
       TRIGGER_SOURCE,
       TRIGGER_VALUE_P1 || listagg(TRIGGER_VALUE_P2, '; ') WITHIN GROUP(ORDER BY TRIGGER_VALUE_P2) AS TRIGGER_VALUE,
        TRIGGER_TYPE,
       SKP_CREDIT_CASE,
       TEXT_CONTRACT_NUMBER
  FROM TRIGGER_33_CONCENTRA_ONE_PRE
 GROUP BY UNIT,
          ID_ENTITY,
          DATE_DETECT,
          WEEK_DETECT,
          CLASS,
          TRIGGER_SOURCE,
           TRIGGER_VALUE_P1,
          TRIGGER_TYPE,
          SKP_CREDIT_CASE,
          TEXT_CONTRACT_NUMBER
)
          
          
SELECT /*+MATERIALIZE*/ 
 UNIT
,ID_ENTITY
,DATE_DETECT
,WEEK_DETECT
,CLASS
,TRIGGER_SOURCE
,TRIGGER_VALUE
,TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM 
(
SELECT /*+MATERIALIZE*/ O.*
,ROW_NUMBER () OVER (PARTITION BY O.ID_ENTITY,  O.TRIGGER_VALUE ORDER BY DCC.SKP_CREDIT_STATUS) AS RNK
FROM ORIGIN O 
JOIN OWNER_DWH.DC_CREDIT_CASE DCC
ON O.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE 
)
WHERE RNK<=30
--------------
;
COMMIT;





END;

PROCEDURE TRIGGER_33_CONCENTRATION_2_300 IS
BEGIN
   INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '33 MARKETING P3 300',SYSDATE FROM DUAL;
COMMIT;
/*DROP TABLE TRIGGER_33_CONCENTRA_TWO_PRE
Create table TRIGGER_33_CONCENTRA_TWO_PRE
 --CREATE GLOBAL TEMPORARY TABLE TRIGGER_33_CONCENTRA_TWO_PRE ON COMMIT PRESERVE ROWS 
(UNIT VARCHAR2(5),
TYPE VARCHAR2(30),
ID_ENTITY VARCHAR2(15),
DATE_DETECT DATE,
WEEK_DETECT DATE,
CLASS NUMBER,
TRIGGER_SOURCE VARCHAR2(50),
TRIGGER_VALUE_P1 VARCHAR2(150),
TRIGGER_VALUE_P2 VARCHAR2(150),
TRIGGER_TYPE VARCHAR2(20),
SKP_CREDIT_CASE NUMBER,
TEXT_CONTRACT_NUMBER VARCHAR2(15)
);
COMMIT;*/

EXECUTE IMMEDIATE 'truncate table TRIGGER_33_CONCENTRA_TWO_PRE';
---------------------------------------------------------------------------------------------------------------------------------------
--collect no 006 app  checked as distiinct apps
/*drop table raw_app_no_006;*/
EXECUTE IMMEDIATE 'truncate table TRIGGER_33_raw_app_no_006';
INSERT INTO TRIGGER_33_raw_app_no_006
--CREATE GLOBAL TEMPORARY TABLE TRIGGER_33_raw_app_no_006 ON COMMIT PRESERVE ROWS AS 
 select
   trunc(cre.date_decision, 'month') AS MONTH_DECISION,
   TRUNC(cre.DATE_DECISION, 'IW') + 6 AS WEEK_DECISION,
   cre.date_decision,
   cre.skp_salesroom,
   cre.text_contract_number,
   cre.SKP_CREDIT_CASE,
   cre.date_effective,
   cre.amt_goods_price,
   cre.skp_client,
   edu.NAME_EDUCATION_TYPE,
   family.NAME_FAMILY_STATUS,
   housing.NAME_HOUSING_TYPE,
   work_e.NAME_WORK_EXPERIENCE,
   s.CODE_SALESROOM,
   case
     when cre.amt_goods_price <= 1500 then
      '(0-1500]'
     when cre.amt_goods_price <= 3000 then
      '(1500-3000]'
     when cre.amt_goods_price <= 5000 then
      '(3000-5000]'
     else
      '(5000+'
   end as price_interval,
   count(cre.skp_credit_case) over(partition by trunc(cre.date_decision, 'MM'), cre.skp_salesroom) as cnt_app_month,
   count(cre.skp_credit_case) over(partition by TRUNC(cre.date_decision , 'IW') + 6 , cre.skp_salesroom) as cnt_app_week
    from owner_dwh.dc_product p
    join owner_dwh.f_credit_case_ad cre
      on cre.SKP_PRODUCT = p.skp_product
     and cre.SKP_PRODUCT_CHANNEL = p.skp_product_channel
     and cre.skp_credit_type = p.skp_credit_type
      --adjust---------------------------------------------------------
    join owner_dwh.dc_salesroom s
      on cre.skp_salesroom = s.skp_salesroom
    join owner_dwh.dc_client client
      on cre.SKP_CLIENT = client.skp_client
    left join owner_dwh.cl_education_type edu --5
      on client.SKP_EDUCATION_TYPE = edu.SKP_EDUCATION_TYPE
    left join owner_dwh.cl_family_status family --7
      on family.SKP_FAMILY_STATUS = client.SKP_FAMILY_STATUS
    left join owner_dwh.cl_housing_type housing --8
      on client.SKP_HOUSING_TYPE = housing.SKP_HOUSING_TYPE
    left join owner_dwh.cl_work_experience work_e --9
      on client.skp_work_experience = work_e.SKP_WORK_EXPERIENCE
   where cre.DATE_DECISION BETWEEN TRUNC(SYSDATE,'IW')-14 AND TRUNC(SYSDATE,'IW')- 1
     and p.SKP_CREDIT_TYPE = 1
     and p.SKP_PRODUCT_CHANNEL = 3 --posloan
     and p.CODE_PRODUCT not like 'FESP%'
     AND  INSTR(P.CODE_PRODUCT,'ACL',1,1)=0 --20170928
     and p.skp_product not in
     (select /*+ materialize */ skp_product from owner_dwh.dc_product
                                where p.CODE_PRODUCT like '%APZ%'
                             and CNT_PAYMENT = 6);
 COMMIT;

-------------------------------------------------------------------------------------------------------------------------------------------------
--300  dsitinct /week
-------------------------------------------------------------------------------------------------------------------------------------------------

--1. New: concentration
-------------------------------------------------------------------------
--1.1 marriage status:----------------------------------------------------
-------------------------------------------------------------------------
insert into TRIGGER_33_CONCENTRA_TWO_PRE
with group_by as
 (select /*+ materialize */ distinct WEEK_DECISION,
         skp_salesroom,
         cnt_app_week
    from TRIGGER_33_raw_app_no_006
   where cnt_app_week >= 10) --adjust---------------------------------------------------------
,
times as
 (select /*+ materialize */ lat.week_decision as lat_week,
         lat.skp_salesroom,
         lat.cnt_app_week as lat_cnt,
         pre.week_decision as pre_week,
         pre.cnt_app_week as pre_cnt,
         round(lat.cnt_app_week / pre.cnt_app_week,2) as times_app
    from group_by lat
    join group_by pre
      on pre.week_decision = lat.week_decision - 7
     and pre.skp_salesroom = lat.skp_salesroom
   where lat.cnt_app_week / pre.cnt_app_week >= 3 --adjust---------------------------------------------------------
  )
,group_by_segment as
 (select /*+ materialize */ week_decision,
         skp_salesroom,
         NAME_FAMILY_STATUS,  --change
         count(skp_credit_case) as cnt_app
    from (select /*+ materialize */
         times.times_app,
         times.lat_cnt,
         times.pre_cnt,
         times.pre_week,
         times.lat_week,
         cre.SKP_CREDIT_CASE,
         cre.DATE_DECISION,
         cre.WEEK_DECISION,
         cre.SKP_SALESROOM,
         cre.text_contract_number,
         cre.NAME_FAMILY_STATUS,
         cre.CODE_SALESROOM
    from times times
    join TRIGGER_33_raw_app_no_006 cre
      on cre.DATE_DECISION between times.lat_week-13 and times.lat_week --checked as correct)
     and times.skp_salesroom=cre.skp_salesroom
    where NAME_FAMILY_STATUS!='XNA')
   group by week_decision, skp_salesroom, NAME_FAMILY_STATUS --change
  having count(skp_credit_case) >= 5)    --adjust---------------------------------------------------------
,
times_segment as
(select /*+ materialize */ lat.week_decision as lat_week,
               lat.skp_salesroom,lat.NAME_FAMILY_STATUS,
               lat.cnt_app as lat_cnt,
               pre.week_decision as pre_week,
               pre.cnt_app as pre_cnt,
               round(lat.cnt_app / pre.cnt_app,2) as times_segment
          from group_by_segment lat
          join group_by_segment pre
            on pre.week_decision = lat.week_decision - 7
           and pre.skp_salesroom = lat.skp_salesroom
           and pre.NAME_FAMILY_STATUS=lat.NAME_FAMILY_STATUS)

select 'POS' AS UNIT,
       'marriage_status' as type,
       raw_contracts.code_salesroom as ID_ENTITY,
TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT,
       '33' AS CLASS,
       'MARKETING TRIGGER-concentration-no-006' AS TRIGGER_SOURCE,
       '该POS在' || TO_CHAR(times.LAT_WEEK,'YYYY-MM-DD') || '这一周的申请量为前一周' ||
       CAST(times.times_app AS VARCHAR(5)) || '倍: ' ||
       CAST(times.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times.pre_cnt AS VARCHAR(10)) || '; 且' AS TRIGGER_VALUE_P1,
       '婚姻状况为' ||
       times_segment.NAME_FAMILY_STATUS --change
       || '的为前一周的' || times_segment.times_segment || '倍: '||
       CAST(times_segment.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times_segment.pre_cnt AS VARCHAR(10)) AS TRIGGER_VALUE_P2,
       'SOFT' AS TRIGGER_TYPE,
       raw_contracts.SKP_CREDIT_CASE,
       raw_contracts.text_contract_number
  from times_segment times_segment
  join times times
    on times.lat_week = times_segment.lat_week
   and times.pre_week = times_segment.pre_week
   and times.skp_salesroom = times_segment.skp_salesroom
   and times_segment.times_segment>=2*times.times_app  --adjust---------------------------------------------------------
  join TRIGGER_33_raw_app_no_006 raw_contracts
   on raw_contracts.skp_salesroom = times_segment.skp_salesroom
   and raw_contracts.week_decision = times_segment.lat_week;
COMMIT;
-------------------------------------------------------------------------
--2. price:--------------------------------------------------------------
-------------------------------------------------------------------------

insert into TRIGGER_33_CONCENTRA_TWO_PRE
with group_by as
 (select /*+ materialize */ distinct WEEK_DECISION,
         skp_salesroom,
         cnt_app_week
    from TRIGGER_33_raw_app_no_006
   where cnt_app_week >= 10) --adjust---------------------------------------------------------
,
times as
 (select /*+ materialize */ lat.week_decision as lat_week,
         lat.skp_salesroom,
         lat.cnt_app_week as lat_cnt,
         pre.week_decision as pre_week,
         pre.cnt_app_week as pre_cnt,
         round(lat.cnt_app_week / pre.cnt_app_week,2) as times_app
    from group_by lat
    join group_by pre
      on pre.week_decision = lat.week_decision - 7
     and pre.skp_salesroom = lat.skp_salesroom
   where lat.cnt_app_week / pre.cnt_app_week >= 5 --adjust---------------------------------------------------------
  )

,group_by_segment as
 (select /*+ materialize */ week_decision,
         skp_salesroom,
         price_interval,  --change
         count(skp_credit_case) as cnt_app
    from (select /*+ materialize */
         times.times_app,
         times.lat_cnt,
         times.pre_cnt,
         times.pre_week,
         times.lat_week,
         cre.SKP_CREDIT_CASE,
         cre.DATE_DECISION,
         cre.WEEK_DECISION,
         cre.SKP_SALESROOM,
         cre.text_contract_number,
         cre.price_interval,--change
         cre.CODE_SALESROOM
    from times times
    join TRIGGER_33_raw_app_no_006 cre
      on cre.DATE_DECISION between times.lat_week-13 and times.lat_week --checked as correct)
     and times.skp_salesroom=cre.skp_salesroom
    where price_interval!='XNA') --change
   group by week_decision, skp_salesroom, price_interval --change
  having count(skp_credit_case) >= 5)    --adjust---------------------------------------------------------

,
times_segment as
(select /*+ materialize */ lat.week_decision as lat_week,
               lat.skp_salesroom,lat.price_interval,--change
               lat.cnt_app as lat_cnt,
               pre.week_decision as pre_week,
               pre.cnt_app as pre_cnt,
               round(lat.cnt_app / pre.cnt_app,2) as times_segment
          from group_by_segment lat
          join group_by_segment pre
            on pre.week_decision = lat.week_decision - 7
           and pre.skp_salesroom = lat.skp_salesroom
           and pre.price_interval=lat.price_interval) --change

select 'POS' AS UNIT,
       'price_interval' as type,
       raw_contracts.code_salesroom as ID_ENTITY,
TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT,
       '33' AS CLASS,
       'MARKETING TRIGGER-concentration-no-006' AS TRIGGER_SOURCE,
       '该POS在' || TO_CHAR(times.LAT_WEEK,'YYYY-MM-DD') || '这一周的申请量为前一周' ||
       CAST(times.times_app AS VARCHAR(5)) || '倍: ' ||
       CAST(times.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times.pre_cnt AS VARCHAR(10)) || '; 且' AS TRIGGER_VALUE_P1,
       '价格区间为' || --change
       times_segment.price_interval --change
       || '的为前一周的' || times_segment.times_segment || '倍: '||
       CAST(times_segment.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times_segment.pre_cnt AS VARCHAR(10)) AS TRIGGER_VALUE_P2,
       'SOFT' AS TRIGGER_TYPE,
       raw_contracts.SKP_CREDIT_CASE,
       raw_contracts.text_contract_number
  from times_segment times_segment
  join times times
    on times.lat_week = times_segment.lat_week
   and times.pre_week = times_segment.pre_week
   and times.skp_salesroom = times_segment.skp_salesroom
   and times_segment.times_segment>=1.7*times.times_app   --adjust---------------------------------------------------------
  join TRIGGER_33_raw_app_no_006 raw_contracts
   on raw_contracts.skp_salesroom = times_segment.skp_salesroom
   and raw_contracts.week_decision = times_segment.lat_week
   and raw_contracts.skp_salesroom = times_segment.skp_salesroom;
COMMIT;
-------------------------------------------------------------------------
--3. work experience: ---------------------------------------------------
-------------------------------------------------------------------------
insert into TRIGGER_33_CONCENTRA_TWO_PRE
with group_by as
 (select /*+ materialize */ distinct WEEK_DECISION,
         skp_salesroom,
         cnt_app_week
    from TRIGGER_33_raw_app_no_006
   where cnt_app_week >= 10) --adjust---------------------------------------------------------
,
times as
 (select /*+ materialize */ lat.week_decision as lat_week,
         lat.skp_salesroom,
         lat.cnt_app_week as lat_cnt,
         pre.week_decision as pre_week,
         pre.cnt_app_week as pre_cnt,
         round(lat.cnt_app_week / pre.cnt_app_week,2) as times_app
    from group_by lat
    join group_by pre
      on pre.week_decision = lat.week_decision - 7
     and pre.skp_salesroom = lat.skp_salesroom
   where lat.cnt_app_week / pre.cnt_app_week >= 3 --adjust---------------------------------------------------------
  )

,group_by_segment as
 (select /*+ materialize */ week_decision,
         skp_salesroom,
         NAME_WORK_EXPERIENCE,  --change
         count(skp_credit_case) as cnt_app
    from (select /*+ materialize */
         times.times_app,
         times.lat_cnt,
         times.pre_cnt,
         times.pre_week,
         times.lat_week,
         cre.SKP_CREDIT_CASE,
         cre.DATE_DECISION,
         cre.WEEK_DECISION,
         cre.SKP_SALESROOM,
         cre.text_contract_number,
         cre.NAME_WORK_EXPERIENCE, --change
         cre.CODE_SALESROOM
    from times times
    join TRIGGER_33_raw_app_no_006 cre
      on cre.DATE_DECISION between times.lat_week-13 and times.lat_week --checked as correct)
     and times.skp_salesroom=cre.skp_salesroom
    where NAME_WORK_EXPERIENCE!='XNA') --change
   group by week_decision, skp_salesroom, NAME_WORK_EXPERIENCE --change
  having count(skp_credit_case) >= 4)    --adjust---------------------------------------------------------

,
times_segment as
(select /*+ materialize */ lat.week_decision as lat_week,
               lat.skp_salesroom,lat.NAME_WORK_EXPERIENCE,--change
               lat.cnt_app as lat_cnt,
               pre.week_decision as pre_week,
               pre.cnt_app as pre_cnt,
               round(lat.cnt_app / pre.cnt_app,2) as times_segment
          from group_by_segment lat
          join group_by_segment pre
            on pre.week_decision = lat.week_decision - 7
           and pre.skp_salesroom = lat.skp_salesroom
           and pre.NAME_WORK_EXPERIENCE=lat.NAME_WORK_EXPERIENCE) --change

select 'POS' AS UNIT,
       'work_experience' as type,
       raw_contracts.code_salesroom as ID_ENTITY,
TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT,
       '33' AS CLASS,
       'MARKETING TRIGGER-concentration-no-006' AS TRIGGER_SOURCE,
       '该POS在' || TO_CHAR(times.LAT_WEEK,'YYYY-MM-DD') || '这一周的申请量为前一周' ||
       CAST(times.times_app AS VARCHAR(5)) || '倍: ' ||
       CAST(times.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times.pre_cnt AS VARCHAR(10)) || '; 且' AS TRIGGER_VALUE_P1,
       '工作年限为' || --change
       times_segment.NAME_WORK_EXPERIENCE --change
       || '的为前一周的' || times_segment.times_segment || '倍: '||
       CAST(times_segment.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times_segment.pre_cnt AS VARCHAR(10)) AS TRIGGER_VALUE_P2,
       'SOFT' AS TRIGGER_TYPE,
       raw_contracts.SKP_CREDIT_CASE,
       raw_contracts.text_contract_number
  from times_segment times_segment
  join times times
    on times.lat_week = times_segment.lat_week
   and times.pre_week = times_segment.pre_week
   and times.skp_salesroom = times_segment.skp_salesroom
   and times_segment.times_segment>=1.7*times.times_app    --adjust---------------------------------------------------------
  join TRIGGER_33_raw_app_no_006 raw_contracts
   on raw_contracts.skp_salesroom = times_segment.skp_salesroom
   and raw_contracts.week_decision = times_segment.lat_week
   and raw_contracts.skp_salesroom = times_segment.skp_salesroom;
COMMIT;
-------------------------------------------------------------------------
--4. housing type:-------------------------------------------------------
-------------------------------------------------------------------------
insert into TRIGGER_33_CONCENTRA_TWO_PRE
with group_by as
 (select /*+ materialize */ distinct WEEK_DECISION,
         skp_salesroom,
         cnt_app_week
    from TRIGGER_33_raw_app_no_006
   where cnt_app_week >= 10) --adjust---------------------------------------------------------
,
times as
 (select /*+ materialize */ lat.week_decision as lat_week,
         lat.skp_salesroom,
         lat.cnt_app_week as lat_cnt,
         pre.week_decision as pre_week,
         pre.cnt_app_week as pre_cnt,
         round(lat.cnt_app_week / pre.cnt_app_week,2) as times_app
    from group_by lat
    join group_by pre
      on pre.week_decision = lat.week_decision - 7
     and pre.skp_salesroom = lat.skp_salesroom
   where lat.cnt_app_week / pre.cnt_app_week >= 3 --adjust---------------------------------------------------------
  )

,group_by_segment as
 (select /*+ materialize */ week_decision,
         skp_salesroom,
         NAME_HOUSING_TYPE,  --change
         count(skp_credit_case) as cnt_app
    from (select /*+ materialize */
         times.times_app,
         times.lat_cnt,
         times.pre_cnt,
         times.pre_week,
         times.lat_week,
         cre.SKP_CREDIT_CASE,
         cre.DATE_DECISION,
         cre.WEEK_DECISION,
         cre.SKP_SALESROOM,
         cre.text_contract_number,
         cre.NAME_HOUSING_TYPE, --change
         cre.CODE_SALESROOM
    from times times
    join TRIGGER_33_raw_app_no_006 cre
      on cre.DATE_DECISION between times.lat_week-13 and times.lat_week --checked as correct)
     and times.skp_salesroom=cre.skp_salesroom
    where NAME_HOUSING_TYPE!='XNA') --change
   group by week_decision, skp_salesroom, NAME_HOUSING_TYPE --change
  having count(skp_credit_case) >= 4)    --adjust---------------------------------------------------------

,
times_segment as
(select /*+ materialize */ lat.week_decision as lat_week,
               lat.skp_salesroom,lat.NAME_HOUSING_TYPE,--change
               lat.cnt_app as lat_cnt,
               pre.week_decision as pre_week,
               pre.cnt_app as pre_cnt,
               round(lat.cnt_app / pre.cnt_app,2) as times_segment
          from group_by_segment lat
          join group_by_segment pre
            on pre.week_decision = lat.week_decision - 7
           and pre.skp_salesroom = lat.skp_salesroom
           and pre.NAME_HOUSING_TYPE=lat.NAME_HOUSING_TYPE) --change
select 'POS' AS UNIT,
       'housing_type' as type,
       raw_contracts.code_salesroom as ID_ENTITY,
TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT,
       '33' AS CLASS,
       'MARKETING TRIGGER-concentration-no-006' AS TRIGGER_SOURCE,
       '该POS在' || TO_CHAR(times.LAT_WEEK,'YYYY-MM-DD') || '这一周的申请量为前一周' ||
       CAST(times.times_app AS VARCHAR(5)) || '倍: ' ||
       CAST(times.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times.pre_cnt AS VARCHAR(10)) || '; 且' AS TRIGGER_VALUE_P1,
       '住房类型为' || --change
       times_segment.NAME_HOUSING_TYPE --change
       || '的为前一周的' || times_segment.times_segment || '倍: '||
       CAST(times_segment.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times_segment.pre_cnt AS VARCHAR(10)) AS TRIGGER_VALUE_P2,
       'SOFT' AS TRIGGER_TYPE,
       raw_contracts.SKP_CREDIT_CASE,
       raw_contracts.text_contract_number
  from times_segment times_segment
  join times times
    on times.lat_week = times_segment.lat_week
   and times.pre_week = times_segment.pre_week
   and times.skp_salesroom = times_segment.skp_salesroom
   and times_segment.times_segment>=1.7*times.times_app   --adjust---------------------------------------------------------
  join TRIGGER_33_raw_app_no_006 raw_contracts
   on raw_contracts.skp_salesroom = times_segment.skp_salesroom
   and raw_contracts.week_decision = times_segment.lat_week
   and raw_contracts.skp_salesroom = times_segment.skp_salesroom;
COMMIT;
-------------------------------------------------------------------------
--5. education:----------------------------------------------------------
-------------------------------------------------------------------------
insert into TRIGGER_33_CONCENTRA_TWO_PRE
with group_by as
 (select /*+ materialize */ distinct WEEK_DECISION,
         skp_salesroom,
         cnt_app_week
    from TRIGGER_33_raw_app_no_006
   where cnt_app_week >= 10) --adjust---------------------------------------------------------
,
times as
 (select /*+ materialize */ lat.week_decision as lat_week,
         lat.skp_salesroom,
         lat.cnt_app_week as lat_cnt,
         pre.week_decision as pre_week,
         pre.cnt_app_week as pre_cnt,
         round(lat.cnt_app_week / pre.cnt_app_week,2) as times_app
    from group_by lat
    join group_by pre
      on pre.week_decision = lat.week_decision - 7
     and pre.skp_salesroom = lat.skp_salesroom
   where lat.cnt_app_week / pre.cnt_app_week >= 3 --adjust---------------------------------------------------------
  )

,group_by_segment as
 (select /*+ materialize */ week_decision,
         skp_salesroom,
         NAME_EDUCATION_TYPE,  --change
         count(skp_credit_case) as cnt_app
    from (select /*+ materialize */
         times.times_app,
         times.lat_cnt,
         times.pre_cnt,
         times.pre_week,
         times.lat_week,
         cre.SKP_CREDIT_CASE,
         cre.DATE_DECISION,
         cre.WEEK_DECISION,
         cre.SKP_SALESROOM,
         cre.text_contract_number,
         cre.NAME_EDUCATION_TYPE, --change
         cre.CODE_SALESROOM
    from times times
    join TRIGGER_33_raw_app_no_006 cre
      on cre.DATE_DECISION between times.lat_week-13 and times.lat_week --checked as correct)
     and times.skp_salesroom=cre.skp_salesroom
    where NAME_EDUCATION_TYPE!='XNA') --change
   group by week_decision, skp_salesroom, NAME_EDUCATION_TYPE --change
  having count(skp_credit_case) >= 5)    --adjust---------------------------------------------------------

,
times_segment as
(select /*+ materialize */ lat.week_decision as lat_week,
               lat.skp_salesroom,lat.NAME_EDUCATION_TYPE,--change
               lat.cnt_app as lat_cnt,
               pre.week_decision as pre_week,
               pre.cnt_app as pre_cnt,
               round(lat.cnt_app / pre.cnt_app,2) as times_segment
          from group_by_segment lat
          join group_by_segment pre
            on pre.week_decision = lat.week_decision - 7
           and pre.skp_salesroom = lat.skp_salesroom
           and pre.NAME_EDUCATION_TYPE=lat.NAME_EDUCATION_TYPE) --change

select 'POS' AS UNIT,
       'education' as type,
       raw_contracts.code_salesroom as ID_ENTITY,
TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT,
       '33' AS CLASS,
       'MARKETING TRIGGER-concentration-no-006' AS TRIGGER_SOURCE,
       '该POS在' || TO_CHAR(times.LAT_WEEK,'YYYY-MM-DD') || '这一周的申请量为前一周' ||
       CAST(times.times_app AS VARCHAR(5)) || '倍: ' ||
       CAST(times.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times.pre_cnt AS VARCHAR(10)) || '; 且' AS TRIGGER_VALUE_P1,
       '教育程度为' || --change
       times_segment.NAME_EDUCATION_TYPE --change
       || '的为前一周的' || times_segment.times_segment || '倍: '||
       CAST(times_segment.lat_cnt AS VARCHAR(10)) || '/' ||
       CAST(times_segment.pre_cnt AS VARCHAR(10)) AS TRIGGER_VALUE_P2,
       'SOFT' AS TRIGGER_TYPE,
       raw_contracts.SKP_CREDIT_CASE,
       raw_contracts.text_contract_number
  from times_segment times_segment
  join times times
    on times.lat_week = times_segment.lat_week
   and times.pre_week = times_segment.pre_week
   and times.skp_salesroom = times_segment.skp_salesroom
   and times_segment.times_segment>=1.7*times.times_app    --adjust---------------------------------------------------------
  join TRIGGER_33_raw_app_no_006 raw_contracts
   on raw_contracts.skp_salesroom = times_segment.skp_salesroom
   and raw_contracts.week_decision = times_segment.lat_week
   and raw_contracts.skp_salesroom = times_segment.skp_salesroom;
COMMIT;

INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection
WITH ORIGIN AS 
(
SELECT UNIT,
       ID_ENTITY,
       DATE_DETECT,
       WEEK_DETECT,
       CLASS,
       TRIGGER_SOURCE,
       TRIGGER_VALUE_P1 || listagg(TRIGGER_VALUE_P2, '; ') WITHIN GROUP(ORDER BY TRIGGER_VALUE_P2) AS TRIGGER_VALUE,
        TRIGGER_TYPE,
       SKP_CREDIT_CASE,
       TEXT_CONTRACT_NUMBER
  FROM TRIGGER_33_CONCENTRA_TWO_PRE
 GROUP BY UNIT,
          ID_ENTITY,
          DATE_DETECT,
          WEEK_DETECT,
          CLASS,
          TRIGGER_SOURCE,
          TRIGGER_VALUE_P1,
          TRIGGER_TYPE,
          SKP_CREDIT_CASE,
          TEXT_CONTRACT_NUMBER
)
          
SELECT /*+MATERIALIZE*/ 
 UNIT
,ID_ENTITY
,DATE_DETECT
,WEEK_DETECT
,CLASS
,TRIGGER_SOURCE
,TRIGGER_VALUE
,TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM 
(
SELECT /*+MATERIALIZE*/ O.*
,ROW_NUMBER () OVER (PARTITION BY O.ID_ENTITY,  O.TRIGGER_VALUE ORDER BY DCC.SKP_CREDIT_STATUS) AS RNK
FROM ORIGIN O 
JOIN OWNER_DWH.DC_CREDIT_CASE DCC
ON O.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE 
)
WHERE RNK<=30;
COMMIT;
END;

PROCEDURE TRIGGER_33_MARKETING_EXTREMELY IS
BEGIN
  
 INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '33 MARKETING EXTREMELY',SYSDATE FROM DUAL;
COMMIT;
--new setting 20181120
--=======================================================================================
-- Marketing extremely increase setting for regular team 
--=======================================================================================
--1'31'' GET CONTRACTS
EXECUTE IMMEDIATE 'TRUNCATE TABLE TRIGGER_33_TOP_CON';
INSERT INTO TRIGGER_33_TOP_CON
WITH APPLICATIONS AS 
(
SELECT /*+MATERIALIZE*/ 
TRUNC(CRE.DATE_DECISION, 'IW') + 6 AS WEEK_DECISION,CRE.SKP_SALESROOM,CRE.SKP_CLIENT
FROM  OWNER_DWH.F_CREDIT_CASE_AD CRE
WHERE  CRE.DATE_DECISION > TRUNC(SYSDATE-7, 'IW')+6-28 AND CRE.DATE_DECISION <=TRUNC(SYSDATE-7, 'IW')+6  -- TAKE 4 WEEKS DATA
AND CRE.SKP_CREDIT_TYPE = 1
)
,GROUPBY AS 
(
SELECT /*+ordered use_hash(a,t)*/ A.WEEK_DECISION ,A.SKP_SALESROOM
,A.WEEK_DECISION -7 AS WEEK_DECISION_1
,A.WEEK_DECISION -14 AS WEEK_DECISION_2
,A.WEEK_DECISION -21 AS WEEK_DECISION_3
,COUNT(DISTINCT A.SKP_CLIENT) AS CNT_CLIENT
FROM APPLICATIONS A
GROUP BY  A.WEEK_DECISION  ,A.SKP_SALESROOM
)
,PRE1 AS 
(
SELECT /*+MATERIALIZE*/ LEF.*, CASE WHEN RIG.CNT_CLIENT IS NOT NULL THEN RIG.CNT_CLIENT ELSE 0 END AS CNT_CLIENT_PRE1 FROM GROUPBY LEF
LEFT JOIN GROUPBY RIG ON LEF.WEEK_DECISION_1 =RIG.WEEK_DECISION AND LEF.SKP_SALESROOM=RIG.SKP_SALESROOM 
)

,PRE2 AS 
(
SELECT /*+MATERIALIZE*/ LEF.*, CASE WHEN RIG.CNT_CLIENT IS NOT NULL THEN RIG.CNT_CLIENT ELSE 0 END AS CNT_CLIENT_PRE2 FROM PRE1 LEF
LEFT JOIN GROUPBY RIG ON LEF.WEEK_DECISION_2 =RIG.WEEK_DECISION AND LEF.SKP_SALESROOM=RIG.SKP_SALESROOM 
)

,PRE3 AS 
(
SELECT /* +MATERIALIZE*/ LEF.*, CASE WHEN RIG.CNT_CLIENT IS NOT NULL THEN RIG.CNT_CLIENT ELSE 0 END AS CNT_CLIENT_PRE3 FROM PRE2 LEF
LEFT JOIN GROUPBY RIG ON LEF.WEEK_DECISION_3=RIG.WEEK_DECISION AND LEF.SKP_SALESROOM=RIG.SKP_SALESROOM 
)

,NUMBERS  AS
(
SELECT /*+MATERIALIZE*/ P.WEEK_DECISION, P.SKP_SALESROOM, P.CNT_CLIENT
,greatest(P.CNT_CLIENT_PRE1, P.CNT_CLIENT_PRE2,P.CNT_CLIENT_PRE3) AS MAX_PRE3,P.CNT_CLIENT_PRE1,P.CNT_CLIENT_PRE2,P.CNT_CLIENT_PRE3
FROM PRE3 P
)

,ABS_DIV AS 
(
SELECT /*+MATERIALIZE*/  DISTINCT  P.WEEK_DECISION, P.SKP_SALESROOM, P.CNT_CLIENT,P.CNT_CLIENT_PRE1,P.CNT_CLIENT_PRE2,P.CNT_CLIENT_PRE3, MAX_PRE3
,CASE WHEN MAX_PRE3=0 THEN -1 ELSE ROUND(CNT_CLIENT/MAX_PRE3,2) END AS DIV_CUR_MAX
FROM NUMBERS P
)

,CMP_POS AS 
(
    SELECT /*+MATERIALIZE*/ SKP_SALESROOM, DTIME_VALID_FROM
    FROM
    (
    SELECT /*+MATERIALIZE*/ t.SKP_SALESROOM, t.DTIME_VALID_FROM
    ,ROW_NUMBER()OVER (PARTITION BY T.SKP_SALESROOM ORDER BY T.DTIME_VALID_FROM ) AS RNK
    FROM owner_dwh.f_salesroom_2_product_set_at T
    JOIN OWNER_DWH.DC_PRODUCT_SET P ON T.SKP_PRODUCT_SET=P.SKP_PRODUCT_SET
    WHERE p.name_product_set LIKE 'F_CMPay%'   --这里一个POS可能有多条，因为先后绑定了不同类型的CMPAY
    )
    WHERE RNK=1--TO FIND THE INITIAL COOPERATE DATE
)
 
,TOP_10 AS 
(
    SELECT /*+MATERIALIZE*/ * FROM 
    (
    SELECT /*+ORDERED USE_HASH(P,C)*/ P.WEEK_DECISION, P.SKP_SALESROOM, P.CNT_CLIENT,P.CNT_CLIENT_PRE1,P.CNT_CLIENT_PRE2,P.CNT_CLIENT_PRE3,P.MAX_PRE3
    ,ROW_NUMBER()OVER (ORDER BY  DIV_CUR_MAX DESC) AS RNK
    FROM ABS_DIV P
    LEFT JOIN CMP_POS C ON P.SKP_SALESROOM=C.SKP_SALESROOM AND C.DTIME_VALID_FROM >= WEEK_DECISION-40 AND C.DTIME_VALID_FROM<=WEEK_DECISION
    WHERE 1=1
    AND C.SKP_SALESROOM IS NULL --NOT RECENTLY START COOPERATION WITH CMP
    AND CNT_CLIENT>=50 
    )A
    WHERE A.RNK<=10
)

SELECT /*+MATERIALIZE USE_HASH(T, DCC)*/T.*, DCC.SKP_CREDIT_CASE , DCC.DATE_DECISION , DCC.SKP_CREDIT_TYPE , DCC.SKP_CREDIT_STATUS
 FROM TOP_10 T
JOIN OWNER_DWH.F_CREDIT_CASE_AD DCC ON DCC.skp_salesroom=T.SKP_SALESROOM 
  AND TRUNC(DCC.DATE_DECISION,'IW')+6 =T.WEEK_DECISION
  AND SKP_CREDIT_TYPE =1;

--9': GET WELCOME CALL RESULTS
EXECUTE IMMEDIATE 'TRUNCATE TABLE TRIGGER_33_WC_UNREACH';
INSERT INTO TRIGGER_33_WC_UNREACH
WITH  CALLED AS
(
SELECT /*+MATERIALIZE USE_HASH(C,DCC,TD)*/ DISTINCT C.SKP_CREDIT_CASE ,C.DATE_DECISION , C.SKP_CREDIT_TYPE , 1 AS FLAG_WC_CALLED
FROM TRIGGER_33_TOP_CON C
JOIN OWNER_DWH.DC_CREDIT_CASE DCC ON C.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE AND C.DATE_DECISION =DCC.DATE_DECISION AND C.SKP_CREDIT_TYPE =DCC.SKP_CREDIT_TYPE 
JOIN OWNER_DWH.F_CALL_RESULT_OPS_TD td
ON TD.SKP_CONTRACT= DCC.SKP_CONTRACT
WHERE  TD.DATE_CALL_LIST>=SYSDATE-12
AND TD.DATE_CALL_LIST>=C.DATE_DECISION 
AND INSTR(NAME_CALL_LIST, 'Welcome_Call_List')>0
)

,NOT_PICK_UP AS 
(
SELECT /*+ORDERED USE_HASH(C,W)*/ DISTINCT C.SKP_CREDIT_CASE ,C.DATE_DECISION , C.SKP_CREDIT_TYPE , 1 AS FLAG_WC_UNREACH
FROM  TRIGGER_33_TOP_CON C
LEFT JOIN DM_ANTIFRAUD.F_WC_CAMPAIGN_AD W ON C.SKP_CREDIT_CASE =W.SKP_CREDIT_CASE AND INSTR(W.NAME_CAMPAIGN , 'CFC-WC')>0
AND W.DTIME_REVIEW>=SYSDATE-12
WHERE W.SKP_CREDIT_CASE IS NULL 
)

,WC_RESULT AS 
(
    SELECT /*+MATERIALIZE*/ SKP_CREDIT_CASE ,DATE_DECISION , SKP_CREDIT_TYPE, NAME_RESULT
    ,CASE WHEN   INSTR(NAME_RESULT , '不方便接听')>0 OR INSTR(NAME_RESULT , '第三方接听')>0  OR INSTR(NAME_RESULT , '无应答丢失')>0 OR INSTR(NAME_RESULT , '批量操作')>0  THEN 'UNREACH'
      END AS FLAG_WC_RESULT
    FROM
    (
        SELECT /*+MATERIALIZE USE_HASH(C,W)*/ C.SKP_CREDIT_CASE ,C.DATE_DECISION , C.SKP_CREDIT_TYPE ,  W.DTIME_ACTIVITY_START, W.NAME_RESULT
        ,ROW_NUMBER()  OVER (PARTITION BY W.SKP_CREDIT_CASE  ORDER BY W.DTIME_ACTIVITY_START DESC) AS RNK
        FROM TRIGGER_33_TOP_CON C
        JOIN DM_ANTIFRAUD.F_WC_CAMPAIGN_AD W ON C.SKP_CREDIT_CASE =W.SKP_CREDIT_CASE 
        WHERE W.DTIME_REVIEW>=SYSDATE-12
        AND INSTR(W.NAME_CAMPAIGN , 'CFC-WC')>0
    )
    WHERE RNK=1
)

,UNREACH AS 
(
SELECT /*+ORDERED USE_HASH(C,CALL,NO,W)*/ C.SKP_CREDIT_CASE ,C.DATE_DECISION , C.SKP_CREDIT_TYPE , C.SKP_CREDIT_STATUS , 1 AS FLAG_UNREACH
FROM  TRIGGER_33_TOP_CON C
LEFT JOIN CALLED CALL ON C.SKP_CREDIT_CASE =CALL.SKP_CREDIT_CASE AND C.DATE_DECISION =CALL.DATE_DECISION AND C.SKP_CREDIT_TYPE =CALL.SKP_CREDIT_TYPE 
LEFT JOIN NOT_PICK_UP NO ON C.SKP_CREDIT_CASE =NO.SKP_CREDIT_CASE AND C.DATE_DECISION =NO.DATE_DECISION AND C.SKP_CREDIT_TYPE =NO.SKP_CREDIT_TYPE 
LEFT JOIN WC_RESULT W ON C.SKP_CREDIT_CASE =W.SKP_CREDIT_CASE AND C.DATE_DECISION =W.DATE_DECISION AND C.SKP_CREDIT_TYPE =W.SKP_CREDIT_TYPE 
WHERE NO.FLAG_WC_UNREACH=1 OR FLAG_WC_RESULT='UNREACH' 
)

SELECT /*+MATERIALIZE*/ * FROM UNREACH;

--3'
INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection
WITH ORIGIN AS 
(
SELECT /*+MATERIALIZE USE_HASH(T,S,DCC)*/ 
'POS' AS UNIT,
S.CODE_SALESROOM as ID_ENTITY,
TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE,'IW')+6, 'YYYY/MM/DD') AS WEEK_DETECT,
'33' AS CLASS,
'Marketing-Extremely weekly increase POS' AS TRIGGER_SOURCE
,'POS: ' || S.CODE_SALESROOM || ' (CODE_SALESROOM) shows extreme increase of  clients, recent 4 weeks are: ' 
|| T.CNT_CLIENT_PRE3 || '; ' || T.CNT_CLIENT_PRE2 ||'; ' || T.CNT_CLIENT_PRE1 ||'; ' || T.CNT_CLIENT 
|| ' | and starting date of this POS is ' || to_char(S.DATE_SALESROOM_1ST_START, 'YYYY-MM-DD')
AS   TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,DCC.SKP_CREDIT_CASE
,DCC.TEXT_CONTRACT_NUMBER
,ROW_NUMBER () OVER (PARTITION BY S.SKP_SALESROOM ORDER BY CASE WHEN FLAG_UNREACH=1 THEN FLAG_UNREACH ELSE DCC.SKP_CREDIT_STATUS END) AS RNK
 FROM TRIGGER_33_TOP_CON T
JOIN OWNER_DWH.DC_SALESROOM S ON T.SKP_SALESROOM=S.SKP_SALESROOM 
JOIN OWNER_DWH.F_CREDIT_CASE_AD DCC ON T.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE AND T.DATE_DECISION =DCC.DATE_DECISION 
  AND T.SKP_CREDIT_TYPE =1
LEFT JOIN TRIGGER_33_WC_UNREACH W ON W.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE AND W.DATE_DECISION =DCC.DATE_DECISION 
)

SELECT /*+MATERIALIZE*/ 
 UNIT
,ID_ENTITY
,DATE_DETECT
,WEEK_DETECT
,CLASS
,TRIGGER_SOURCE
,TRIGGER_VALUE
,TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM ORIGIN O 
WHERE RNK<=20;
COMMIT;

END;

   PROCEDURE TRIGGER_34_HARD_POS_RELATED IS
BEGIN
  
 INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '34 HARD POS RELATED',SYSDATE FROM DUAL;
COMMIT;
INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection
------key_account
WITH KEY_ACCOUNT AS
 (SELECT DISTINCT SELL.SKP_SELLER,
                  gro.NAME_SELLERCHAIN_GROUP,
                  cha.NAME_SELLERCHAIN
    FROM OWNER_DWH.Dc_Salesroom DCS
    JOIN OWNER_DWH.F_SELLERCHAIN_2_SELLER_TT SELL
      ON DCS.SKP_SELLER = SELL.SKP_SELLER
    JOIN OWNER_DWH.Dc_Sellerchain CHA
      ON SELL.SKP_SELLERCHAIN = CHA.SKP_SELLERCHAIN
     and SELL.CODE_STATUS = 'a'
    JOIN OWNER_DWH.Dc_Sellerchain_Group GRO
      ON GRO.SKP_SELLERCHAIN_GROUP = CHA.SKP_SELLERCHAIN_GROUP
   WHERE UPPER(gro.NAME_SELLERCHAIN_group) in
         ('SUNING', 'DIXINTONG', 'GOME', 'KA','LKA')
         OR  UPPER(cha.NAME_SELLERCHAIN) in ('DIXINTONG'))
------find small retailer pos
, retailer_code AS(
  
  SELECT dcs.CODE_SALESROOM, dcs.SKP_SELLER, dcs.NAME_SALESROOM
    FROM OWNER_DWH.Dc_Salesroom DCS
   WHERE DCS.SKP_SELLER IN (SELECT DCS.SKP_SELLER
                              FROM OWNER_DWH.Dc_Salesroom DCS
                             WHERE DCS.SKP_SELLER not in
                                   (select bb.SKP_SELLER from KEY_ACCOUNT bb)
                             group by DCS.SKP_SELLER
                            having count(*) < 30))

-------2: trigger and later inactive---------------------
,
contract_t as
 (select facc.date_decision,
         facc.text_contract_number,
         facc.code_salesroom,
         facc.name_region,
         aa.dif,
         aa.trigger_source,
         aa.skp_seller,
         aa.skp_credit_case
    from (select distinct tt.text_contract_number,tt.skp_credit_case
                 ,months_between(tt.date_detect, dcs.DATE_EFFECTIVE) as dif,
                 tt.trigger_source,
                 dcs.SKP_SELLER
            from ap_antifraud.f_af_final_contracts tt
            join OWNER_DWH.Dc_Salesroom dcs
              on tt.code_salesroom = dcs.CODE_SALESROOM and tt.unit='POS'
           where dcs.DATE_EFFECTIVE >= sysdate - 10
             and UPPER(tt.trigger_type) = 'HARD'
             and DCS.CODE_SALESROOM_STATUS = 'b'
             and tt.code_salesroom_status='a'
             and dcs.DATE_EFFECTIVE > tt.date_detect
             and months_between(dcs.DATE_EFFECTIVE, tt.date_detect) < 3) aa
    join DM_ANTIFRAUD.Ft_Af_Credit_Case_Ad facc
      on aa.skp_credit_case = facc.skp_credit_case)

--- find contract--------
--,final_contract_30 AS (
select 'POS' AS UNIT,
       facc.CODE_SALESROOM AS ID_ENTITY,
       TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT,
       TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT,
       '34' as CLASS,
       'HARD TRIGGER INACTIVE POS RELATED' AS TRIGGER_SOURCE,
       'RELATED POS: ' || cn.code_salesroom || '(' || cn.trigger_source ||
       ');RATAILER:' || CN.SKP_SELLER AS TRIGGER_VALUE,
       'SOFT' AS TRUGGER_TYPE,
       facc.SKP_CREDIT_CASE,
       facc.TEXT_CONTRACT_NUMBER
  from contract_t cn
join OWNER_DWH.Dc_Salesroom dcs on cn.skp_seller=dcs.skp_seller--facc.SKP_SALESROOM = dcs.SKP_SALESROOM
join  DM_ANTIFRAUD.Ft_Af_Credit_Case_Ad facc on facc.skp_salesroom=dcs.SKP_SALESROOM
   and facc.CODE_SALESROOM <> cn.CODE_SALESROOM
   and facc.DATE_DECISION BETWEEN CN.DATE_DECISION - 5 AND  CN.DATE_DECISION + 5
   AND CN.NAME_REGION = facc.NAME_REGION
 WHERE EXISTS
 (SELECT 1 FROM retailer_code RR WHERE dcs.SKP_SELLER = RR.SKP_SELLER)
   and not EXISTS (select 1
          from contract_t CC
         WHERE CC.code_salesroom = facc.code_salesroom)
   AND NOT EXISTS
 (SELECT 1
          FROM ap_antifraud.f_af_final_contracts BB
         WHERE facc.CODE_SALESROOM = BB.CODE_SALESROOM
           AND BB.CLASS = 34)
   AND facc.TEXT_CONTRACT_NUMBER NOT IN
       (select FACC.TEXT_CONTRACT_NUMBER
          from DM_ANTIFRAUD.F_Af_Credit_Case_Ad facc
          join OWNER_DWH.f_Client_Undes_Ident_Tt bl
            on bl.TEXT_VALUE = facc.text_identity_card_number
           and (upper(bl.TEXT_SOURCE) = 'MS' or
               upper(bl.TEXT_SOURCE) = 'MSER' or bl.TEXT_SOURCE like '%11'));
               COMMIT;
END;

    PROCEDURE TRIGGER_39_ONLINE_HIT_OFFLINE IS
BEGIN
  
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '39 ONLINE HIT OFFLINE',SYSDATE FROM DUAL;
COMMIT;
  --------------------------------------------------ONLINE HIT OFFLINE---------------------------------------------------
---------------------------------------------------------------------------------------------------------------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
--OFFLINE BEFORE ONLINE  
SELECT 
UNIT
,ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,CLASS
,TRIGGER_SOURCE
,TRIGGER_VALUE
,TRIGGER_TYPE
,SKP_CREDIT_CASE 
,TEXT_CONTRACT_NUMBER
FROM 
(             
        SELECT BAI.*
        ,'SA' AS UNIT
        ,'ONLINE HIT OFFLINE'  AS TRIGGER_SOURCE
        ,'SOFT'  AS TRIGGER_TYPE
        ,'OFFLINE_CONTRACT OWNER also apply ONLINE PRODUCT:'||ONL_TEXT_CONTRACT_NUMBER AS TRIGGER_VALUE
        ,'39' AS CLASS
       ,RANK() OVER(ORDER BY AMT_CREDIT DESC) AS RANK_N
        FROM 
        (
                SELECT  
                OFL.TEXT_USERNAME_EMPLOYEE_SALES AS ID_ENTITY
                ,OFL.TEXT_CONTRACT_NUMBER
                ,OFL.DATE_DECISION
                ,OFL.SKP_CLIENT
                ,OFL.SKP_CREDIT_CASE
                ,OFL.CODE_CREDIT_STATUS
                ,OFL.AMT_CREDIT
                ,LISTAGG(ONL.TEXT_CONTRACT_NUMBER, '| ') WITHIN GROUP (ORDER BY ONL.TEXT_CONTRACT_NUMBER DESC) "ONL_TEXT_CONTRACT_NUMBER"
                FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD  OFL
                JOIN 
                (
                  SELECT AD.TEXT_CONTRACT_NUMBER,AD.SKP_CREDIT_CASE,AD.DATE_DECISION,AD.CODE_CREDIT_STATUS,
                  AD.CODE_PRODUCT,AD.SKP_CLIENT
                  FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD
                  JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='39' AND TRUNC(SYSDATE,'DD')-AD.DATE_DECISION BETWEEN 1 AND DAYS
                  WHERE AD.date_decision>trunc(SYSDATE)-30
                   AND AD.text_username_employee_sales='extreme'
                  
                )ONL 
                ON OFL.SKP_CLIENT=ONL.SKP_CLIENT
                AND ONL.DATE_DECISION-OFL.DATE_DECISION BETWEEN 10 AND 30
                WHERE OFL.DATE_DECISION>DATE'2015-01-01'
                AND OFL.NAME_CHANNEL='商品贷'
                AND OFL.text_username_employee_sales!='extreme'
                GROUP BY 
                 OFL.TEXT_USERNAME_EMPLOYEE_SALES
                ,OFL.TEXT_CONTRACT_NUMBER
                ,OFL.DATE_DECISION
                ,OFL.SKP_CLIENT
                ,OFL.SKP_CREDIT_CASE
                ,OFL.CODE_CREDIT_STATUS
                ,OFL.AMT_CREDIT
        )BAI
        WHERE CODE_CREDIT_STATUS IN ('a','k','n')
)BB
WHERE rank_n<=80
UNION
---OFFLINE AFTER ONLINE 20170720
SELECT 
UNIT
,ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,CLASS
,TRIGGER_SOURCE
,TRIGGER_VALUE
,TRIGGER_TYPE
,SKP_CREDIT_CASE 
,TEXT_CONTRACT_NUMBER
FROM
( 
    SELECT BAI.*
        ,'SA' AS UNIT
        ,'ONLINE HIT OFFLINE2'  AS TRIGGER_SOURCE
        ,'SOFT'  AS TRIGGER_TYPE
         ,'ONLINE_CONTRACT :'||ONL_TEXT_CONTRACT_NUMBER||' also apply OFFLINE' AS TRIGGER_VALUE
        ,'39' AS CLASS
       ,RANK() OVER(ORDER BY AMT_CREDIT DESC) AS RANK_N
    FROM
    (   
                SELECT  
                OFL.TEXT_USERNAME_EMPLOYEE_SALES AS ID_ENTITY
               ,OFL.TEXT_CONTRACT_NUMBER
                ,OFL.DATE_DECISION
                ,OFL.SKP_CLIENT
                ,OFL.SKP_CREDIT_CASE
                ,OFL.CODE_CREDIT_STATUS
                ,OFL.AMT_CREDIT
                ,LISTAGG(ONL.TEXT_CONTRACT_NUMBER, '| ') WITHIN GROUP (ORDER BY ONL.TEXT_CONTRACT_NUMBER DESC) "ONL_TEXT_CONTRACT_NUMBER" 
                FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD  OFL
                JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='39' 
                JOIN 
                (
                  SELECT AD.TEXT_CONTRACT_NUMBER,AD.SKP_CREDIT_CASE,AD.DATE_DECISION,AD.CODE_CREDIT_STATUS,
                  AD.CODE_PRODUCT,AD.SKP_CLIENT
                  FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD           
                  WHERE AD.date_decision>trunc(SYSDATE)-30
                   AND AD.text_username_employee_sales='extreme'      
                )ONL 
                ON OFL.SKP_CLIENT=ONL.SKP_CLIENT
                AND OFL.DATE_DECISION-ONL.DATE_DECISION>0
                WHERE OFL.DATE_DECISION>trunc(SYSDATE)-30
                AND OFL.NAME_CHANNEL='商品贷'
                AND OFL.text_username_employee_sales!='extreme'
                AND TRUNC(SYSDATE,'DD')-OFL.DATE_DECISION BETWEEN 1 AND DAYS
                GROUP BY 
                 OFL.TEXT_USERNAME_EMPLOYEE_SALES
                ,OFL.TEXT_CONTRACT_NUMBER
                ,OFL.DATE_DECISION
                ,OFL.SKP_CLIENT
                ,OFL.SKP_CREDIT_CASE
                ,OFL.CODE_CREDIT_STATUS
                ,OFL.AMT_CREDIT
    )BAI
     WHERE CODE_CREDIT_STATUS IN ('a','k','n')
)BB
WHERE rank_n<=20;

INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '39 ONLINE PHONE HIT OFFLINE',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
--ONLINE PHONE HIT OFFLINE
SELECT 
UNIT
,ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,CLASS
,TRIGGER_SOURCE
,TRIGGER_VALUE
,TRIGGER_TYPE
,SKP_CREDIT_CASE 
,TEXT_CONTRACT_NUMBER
FROM
    (
    SELECT 
    'SA' AS UNIT
    ,'ONLINE PHONE HIT OFFLINE'  AS TRIGGER_SOURCE
    ,'SOFT'  AS TRIGGER_TYPE
    ,'ONLINE CLIENT:'||ONL_CONTRACT_NUMBER||' PHONE SAME WITH OFFLINE CLIENT PHONE:'||DD.TEXT_CONTRACT_NUMBER AS TRIGGER_VALUE
    ,'39' AS CLASS
    ,DD.ID_ENTITY
    ,DD.TEXT_CONTRACT_NUMBER
    ,DD.DATE_DECISION
    ,DD.SKP_CLIENT
    ,DD.SKP_CREDIT_CASE
    ,DD.CODE_CREDIT_STATUS
    ,DD.AMT_CREDIT
    FROM
    (
        SELECT DISTINCT
        OFL.TEXT_USERNAME_EMPLOYEE_SALES AS ID_ENTITY
        ,OFL.TEXT_CONTRACT_NUMBER
        ,OFL.DATE_DECISION
        ,OFL.SKP_CLIENT
        ,OFL.SKP_CREDIT_CASE
        ,OFL.CODE_CREDIT_STATUS
        ,OFL.AMT_CREDIT
        ,LISTAGG(ONL.TEXT_CONTRACT_NUMBER, '| ') WITHIN GROUP (ORDER BY ONL.TEXT_CONTRACT_NUMBER DESC) OVER(PARTITION BY OFL.text_contract_number) AS ONL_CONTRACT_NUMBER
        FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD OFL
        JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD  ONL ON ONL.text_mobile_client=OFL.text_mobile_client
        AND OFL.skp_client<>ONL.skp_client
        JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='39' 
        AND TRUNC(SYSDATE,'DD')-OFL.DATE_DECISION BETWEEN 1 AND DAYS
        WHERE OFL.date_decision>SYSDATE-15
        AND ONL.date_decision>SYSDATE-90
        AND ONL.date_decision BETWEEN OFL.date_decision-60 AND OFL.date_decision
        AND OFL.code_credit_status IN ('a','k','n')
        AND ONL.text_username_employee_sales='extreme'
        AND OFL.text_username_employee_sales<>'extreme'
    )DD
);
COMMIT;
 END;
  
    PROCEDURE TRIGGER_42_SAME_QQ IS
BEGIN
  
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '42 SAME QQ CONCENTRATION',SYSDATE FROM DUAL;
COMMIT;

--------------QQ----------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH BASE AS (
SELECT *
FROM (
SELECT ACCA.DATE_DECISION
,NEXT_DAY(ACCA.DATE_DECISION-1,1)AS WEEK_DECISION
,ACCA.SKP_CREDIT_CASE
,ACCA.SKP_CLIENT
,ACCA.TEXT_CONTRACT_NUMBER
,ACCA.text_client_email_address
,SUBSTR(ACCA.text_client_email_address,1,INSTR(ACCA.text_client_email_address,'@',1,1)-1) AS QQ
,ACCA.TEXT_USERNAME_EMPLOYEE_SALES AS SALES_ID
,ROW_NUMBER()OVER(PARTITION BY ACCA.SKP_CLIENT,NEXT_DAY(ACCA.DATE_DECISION-1,1) ORDER BY ACCA.SKP_CREDIT_CASE) AS ORD
FROM -- OWNER_DWH.F_APPLICATION_CLIENT_TT ACT
 DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA-- ON  ACT.DATE_DECISION>=SYSDATE-30
--AND ACT.SKP_CREDIT_CASE=ACCA.SKP_CREDIT_CASE
WHERE ACCA.DATE_DECISION>=SYSDATE-30 
AND TRUNC(SYSDATE)-ACCA.DATE_DECISION BETWEEN 1 AND 7
AND INSTR(UPPER(ACCA.text_client_email_address),'QQ',1,1)>0 AND ACCA.CODE_CREDIT_STATUS IN ('a','n','k')
AND INSTR(ACCA.CODE_PRODUCT,'MINI',1,1)=0 AND INSTR(ACCA.NAME_PRODUCT,'ESHOP',1,1)=0
)
WHERE ORD=1
)
,BASE2 AS 
(SELECT *
FROM (SELECT QQ,SALES_ID,WEEK_DECISION,COUNT(DISTINCT SKP_CREDIT_CASE)AS CNT_CONTRACT
             ,ROW_NUMBER()OVER(PARTITION BY WEEK_DECISION ORDER BY COUNT(DISTINCT SKP_CREDIT_CASE)DESC) AS ORD_QQ
      FROM BASE
      GROUP BY QQ,SALES_ID,WEEK_DECISION
      HAVING COUNT(DISTINCT SKP_CREDIT_CASE)>=3)
WHERE ORD_QQ<=2
)

SELECT 'SA' AS UNIT
,B1.SALES_ID AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'42' AS CLASS
,'REPEATED QQ >=3 SAME SA' AS TRIGGER_SOURCE
,'该合同的SA一周之内有>=3合同用相同QQ号'||': '||B1.QQ AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,B1.SKP_CREDIT_CASE
,B1.TEXT_CONTRACT_NUMBER
FROM BASE B1
JOIN BASE2 B2 ON B1.WEEK_DECISION=B2.WEEK_DECISION AND B1.QQ=B2.QQ AND B1.SALES_ID=B2.SALES_ID;
COMMIT;
END;

/*
   PROCEDURE TRIGGER_45_COLL_INVALID_PHONE IS
BEGIN
  
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '45 COLL INVAILD PHONE',SYSDATE FROM DUAL;
COMMIT;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------INVILD PHONE TRIGGER-------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
INSERT INTO  AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION

WITH  INVILD_PHONE_TRIGGER1 AS
(SELECT DE.SKP_CREDIT_CASE
            ,DE.TEXT_CONTRACT_NUMBER
            ,MAX(VH.DTIME_LAST_CONNECT) AS call_time
            ,VH.TEXT_CONTACT AS PHONE_NUMBER
            ,SUM(CASE WHEN VH.FLAG_CALLED='Y'THEN 1 ELSE 0 END) AS VH_CALL
            ,SUM(CASE WHEN VH.FLAG_CONNECTED='Y' THEN 1 ELSE 0 END)  AS VH_CONNECT
            ,(SUM(CASE WHEN VH.FLAG_CONNECTED='Y' THEN 1 ELSE 0 END)/ (CASE WHEN SUM(CASE WHEN VH.FLAG_CALLED='Y' THEN 1 ELSE 0 END) <>0 THEN SUM(CASE WHEN VH.FLAG_CALLED='Y' THEN 1 ELSE 0 END)  END ) )  AS CONNECT_RATIO
FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD DE
   JOIN  owner_dwh.F_RECOVERY_ACTION_AT VH 
      ON VH.SKP_CREDIT_CASE=DE.SKP_CREDIT_CASE
   JOIN     AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='45'
WHERE  DE.date_decision>=SYSDATE-60 AND ROUND(TO_NUMBER(VH.DTIME_ACTION - DE.date_first_instalment )) BETWEEN 0 AND 15
               AND DE.TEXT_USERNAME_EMPLOYEE_SALES!= 'extreme'
               AND (DE.date_first_instalment+16) BETWEEN EX.MAX_DETECT AND  EX.MAX_DETECT+6
                --AND DE.date_first_instalment  BETWEEN DATE'2016-06-01' AND DATE'2016-07-01'
GROUP BY DE.SKP_CREDIT_CASE
                  ,DE.TEXT_CONTRACT_NUMBER
                  ,VH.TEXT_CONTACT  )
 
, INVILD_PHONE_TRIGGER2 AS
( SELECT SKP_CREDIT_CASE
            ,TEXT_CONTRACT_NUMBER
            ,1.0*SUM(CASE WHEN CONNECT_RATIO<=0.2 THEN 1 ELSE 0 END) AS INVALID_CNT  
            ,SUM(CASE WHEN PHONE_NUMBER IS NOT NULL THEN 1 ELSE 0 END) AS PHONE_CNT
            ,CASE WHEN SUM(CASE WHEN PHONE_NUMBER IS NOT NULL THEN 1 ELSE 0 END)=0 THEN 0
                                                         ELSE 1.0*SUM(CASE WHEN CONNECT_RATIO<=0.2 THEN 1 ELSE 0 END)/SUM(CASE WHEN PHONE_NUMBER IS NOT NULL THEN 1 ELSE 0 END) END AS INVALID_PHONE_RATIO
FROM INVILD_PHONE_TRIGGER1
WHERE  VH_CALL <>0
GROUP BY  SKP_CREDIT_CASE ,TEXT_CONTRACT_NUMBER)
 
 , INVILD_PHONE_TRIGGER3 AS
( SELECT SKP_CREDIT_CASE
            ,TEXT_CONTRACT_NUMBER
FROM INVILD_PHONE_TRIGGER2
WHERE INVALID_PHONE_RATIO  BETWEEN 0.6 AND 0.8
      AND INVALID_CNT  <>0
     AND TEXT_CONTRACT_NUMBER NOT IN (SELECT TEXT_CONTRACT_NUMBER FROM  ap_antifraud.f_af_final_contracts))
 
,  INVILD_PHONE_TRIGGER4 AS 
(SELECT 
'SA' AS UNIT,
BB.TEXT_USERNAME_EMPLOYEE_SALES AS ID_ENTITY,
TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
'45' AS CLASS,
'COLLECTION INVALID PHONE'  AS TRIGGER_SOURCE,
'电催无效号码率高@' ||BB.TEXT_CONTRACT_NUMBER AS  TRIGGER_VALUE,
'SOFT' AS TRIGGER_TYPE,
BB.SKP_CREDIT_CASE,
BB.TEXT_CONTRACT_NUMBER,
DENSE_RANK() OVER(PARTITION BY BB.TEXT_CONTRACT_NUMBER ORDER BY BB.amt_credit  DESC) AS  RAK
FROM INVILD_PHONE_TRIGGER3  AA
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD BB ON AA.SKP_CREDIT_CASE=BB.SKP_CREDIT_CASE )
 
SELECT  UNIT,ID_ENTITY,DATE_DETECT,WEEK_DETECT,CLASS,TRIGGER_SOURCE,TRIGGER_VALUE,TRIGGER_TYPE,SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER
FROM  INVILD_PHONE_TRIGGER4
WHERE RAK<=100;
COMMIT;
  END;*/
  
    PROCEDURE TRIGGER_46_DEACTIVATE_DD IS
BEGIN

INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '46 Deactivated DD',SYSDATE FROM DUAL;
COMMIT;

--------------------------------CLASS=46 deactived dd----------------------------------------------------------------------------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH BASE AS (
SELECT *
FROM (
SELECT FCA.skp_contract,FCA.skp_credit_case,FCA.text_contract_number
,DD.text_result_note,DD.DTIME_DD_RESPONSE_INSERTED
,ROW_NUMBER()OVER(PARTITION BY FCA.skp_credit_case ORDER BY DTIME_DD_RESPONSE_INSERTED ) AS ORD
--FROM OWNER_DWH.F_CONTRACT_AD FCA
FROM OWNER_DWH.F_CONTRACT_BASE_AD FCA
JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD AD ON FCA.skp_credit_case=AD.skp_credit_case
AND FCA.skp_credit_type=AD.skp_credit_type
AND FCA.date_decision=AD.date_decision
JOIN OWNER_DWH.f_Direct_Debit_Response_Tt DD ON DD.SKP_CONTRACT=FCA.skp_contracT AND DD.DATE_DECISION=FCA.date_decision
AND FCA.date_decision>=TRUNC(SYSDATE)-100 AND DD.date_decision>=TRUNC(SYSDATE)-100
WHERE AD.date_first_due-TRUNC(SYSDATE) BETWEEN 1 AND 7
)
WHERE ORD=1 AND text_result_note IN ('[1449]已销卡',
'账户已关户',
'账户已冻结',
'[E3556]卡状态不正常',
'[E4500]帐户控制状态不允许支取',
'[1457]卡止付',
'[5418]只收不付冻结',
'[E4500]单向冻结状态不允许支取',
'已挂失卡'
)
)
SELECT DISTINCT 
'SA' AS UNIT 
,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'46' AS CLASS
,'DEACTIVATED DD' AS TRIGGER_SOURCE
,'客户：'|| text_result_note AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,ACCA.SKP_CREDIT_CASE
,ACCA.TEXT_CONTRACT_NUMBER  
FROM BASE BB 
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA ON ACCA.SKP_CREDIT_CASE=BB.SKP_CREDIT_CASE
AND ACCA.date_decision>=TRUNC(SYSDATE)-100;
COMMIT;
END;

 ------------------------        
  PROCEDURE TRIGGER_47_IC_REJ_EMPPHONE IS
BEGIN

INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '47 IC REJECTION-EMP PHONE',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION

WITH PREVIOUS_WEEK AS 
(
SELECT ACT.SKP_CREDIT_CASE
,ACT.TEXT_WORK_PHONE_AREA_CODE||ACT.TEXT_WORK_PHONE AS EMP_PHONE
,ACCA.DATE_DECISION
FROM OWNER_DWH.F_APPLICATION_CLIENT_TT ACT  
JOIN DM_ANTIFRAUD.F_Af_Credit_Case_Ad ACCA ON ACCA.SKP_CREDIT_CASE=ACT.SKP_CREDIT_CASE
AND TRUNC(SYSDATE)-ACCA.DATE_DECISION >=1 AND TRUNC(SYSDATE)-ACCA.DATE_DECISION <=7
AND ACCA.DATE_DECISION >=TRUNC(SYSDATE-10)
WHERE TEXT_WORK_PHONE !='XNA' 
)

,ONE_MONTH AS 
(
SELECT DISTINCT ACT.SKP_CREDIT_CASE
,PR.EMP_PHONE
,ACCA.TEXT_CONTRACT_NUMBER
,ACCA.DATE_DECISION
,ACCA.CODE_CREDIT_STATUS
,ACCA.SKP_INTERNAL_FRAUD_2
,CIF.NAME_INTERNAL_FRAUD_EN AS INTER_CODE
,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
,ACCA.CODE_KO_LIST
FROM OWNER_DWH.F_APPLICATION_CLIENT_TT ACT  
JOIN PREVIOUS_WEEK PR ON PR.EMP_PHONE=ACT.TEXT_WORK_PHONE_AREA_CODE||ACT.TEXT_WORK_PHONE
AND PR.DATE_DECISION-ACT.DATE_DECISION BETWEEN 0 AND 31
JOIN DM_ANTIFRAUD.F_Af_Credit_Case_Ad ACCA ON ACCA.SKP_CREDIT_CASE=ACT.SKP_CREDIT_CASE
AND ACCA.DATE_DECISION >=TRUNC(SYSDATE-40)
JOIN OWNER_DWH.CL_INTERNAL_FRAUD CIF ON CIF.SKP_INTERNAL_FRAUD=ACCA.SKP_INTERNAL_FRAUD_2
WHERE NOT EXISTS
(SELECT * FROM OWNER_DWH.f_Ms_Base_Ad AD WHERE ACCA.TEXT_CONTRACT_NUMBER=AD.TEXT_CONTRACT_NUMBER) --排除暗访合同 20191010
)

,INTER_RATIO AS
(
SELECT EMP_PHONE
,COUNT(DISTINCT CASE WHEN INTER_CODE IN ('HCR04','HCR03') THEN SKP_CREDIT_CASE END) /COUNT(DISTINCT SKP_CREDIT_CASE) AS RATE
,COUNT(DISTINCT CASE WHEN INTER_CODE IN ('HCR04','HCR03') THEN SKP_CREDIT_CASE END) AS CNT_INT
,COUNT(DISTINCT SKP_CREDIT_CASE) AS CNT_APP
FROM ONE_MONTH HH
GROUP BY EMP_PHONE
HAVING COUNT(DISTINCT CASE WHEN INTER_CODE IN ('HCR04','HCR03') THEN SKP_CREDIT_CASE END)>=2
AND COUNT(DISTINCT SKP_CREDIT_CASE)>=3
AND COUNT(DISTINCT CASE WHEN INTER_CODE IN ('HCR04','HCR03') THEN SKP_CREDIT_CASE END) /COUNT(DISTINCT SKP_CREDIT_CASE) >=0.3
AND  COUNT(DISTINCT CASE WHEN INTER_CODE IN ('HCR04','HCR03') THEN SKP_CREDIT_CASE END) /COUNT(DISTINCT SKP_CREDIT_CASE) <1
)

SELECT 'SA' AS UNIT
,OM.TEXT_USERNAME_EMPLOYEE_SALES
,TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT
,'47' AS CLASS
,'INTERNAL CODE REJECTION-EMP_PHONE' AS TRIGGER_SOURCE
,'Group '||IR.EMP_PHONE||' : '||'APP :'||TO_CHAR(CNT_APP)
||' REJECT ||'|| TO_CHAR(CNT_INT )||' REMAIN: '||TO_CHAR(CNT_APP-CNT_INT)
||': '|| OM.CODE_KO_LIST AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,OM.SKP_CREDIT_CASE
,OM.TEXT_CONTRACT_NUMBER
--,'XNA' AS ROW_NUM
FROM ONE_MONTH OM
JOIN INTER_RATIO IR ON IR.EMP_PHONE=OM.EMP_PHONE;
COMMIT;
END;
  

     PROCEDURE TRIGGER_48_ESHOP IS
  BEGIN
    
    
  ------------------------------------------------------------------------------------------------
--CLASS 48 E LOAN TRIGGER: WEEKLY SA SOFT-------------------------------------------------------   
------------------------------------------------------------------------------------------------

  INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'ESHOP TRIGGER',SYSDATE FROM DUAL;
COMMIT;
----------------------------------------------------------------------
--SAME DELIVERY ADDRESS----------------------------------
----------------------------------------------------------------------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH BASE AS
 (select AA.SKP_CREDIT_CASE,
         CREDIT.text_contract_number,
         AA.CODE_CREDIT_STATUS,
         AA.DATE_DECISION,
         CREDIT.SKP_CLIENT,
         AA.A5_DELIVERY_ESHOP_ADRS AS 收货地址
    from AP_ANTIFRAUD.F_AF_ONLINE_CONTRACT_INFO_AD AA
    JOIN OWNER_DWH.F_CREDIT_CASE_AD CREDIT
      ON AA.SKP_CREDIT_CASE = CREDIT.SKP_CREDIT_CASE
     AND AA.DATE_DECISION = CREDIT.DATE_DECISION
   WHERE PRO_TYPE = 'ELOAN'
     AND CREDIT.DATE_DECISION >= TRUNC(SYSDATE, 'DD')  - 31)

SELECT 'SA' AS UNIT,
       'extreme' AS TEXT_USERNAME_EMPLOYEE_SALES,
       TO_CHAR(SYSDATE, 'YYYY/MM/DD')  AS DATE_DETECT,
       TO_CHAR((7 - (TO_CHAR(SYSDATE, 'D') - 1)) + SYSDATE, 'YYYY/MM/DD') AS WEEK_DETECT,
       '48' AS CLASS,
       'SAME DEL ADDR' AS TRIGGER_SOURCE,
       B.TEXT_CONTRACT_NUMBER AS TRIGGER_VALUE,
       'SOFT' AS TRIGGER_TYPE,
       A.SKP_CREDIT_CASE,
       A.TEXT_CONTRACT_NUMBER
  FROM BASE A --triggered contract
  JOIN BASE B --reference
    ON A.收货地址 = B.收货地址
   AND A.SKP_CLIENT != B.SKP_CLIENT
   AND TRUNC(A.DATE_DECISION, 'DD') - TRUNC(B.DATE_DECISION, 'DD') BETWEEN 0 AND 30
  JOIN (SELECT DISTINCT 收货地址
          FROM BASE
         GROUP BY 收货地址
        HAVING COUNT(DISTINCT SKP_CLIENT) >= 3) THREE
    ON A.收货地址 = THREE.收货地址
    JOIN OWNER_DWH.F_CREDIT_CASE_AD CREDIT ON A.SKP_CREDIT_CASE=CREDIT.SKP_CREDIT_CASE AND A.DATE_DECISION=CREDIT.DATE_DECISION
    AND CREDIT.SKP_SELLER NOT IN (3288246,3407761)
    WHERE A.DATE_DECISION >= TRUNC(SYSDATE, 'DD') - 7 --WEEKLY 
      AND A.CODE_CREDIT_STATUS IN ('a','k','n')
 ORDER BY B.SKP_CREDIT_CASE ;
COMMIT;

-------------------------------------------------------------------------
--WC DENY LOAN--------------------------------------------------- Time: 3' 55''
-------------------------------------------------------------------------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
--不是客户本人申请 NO RECORD
SELECT 'SA' AS UNIT,
       'extreme' AS TEXT_USERNAME_EMPLOYEE_SALES,
       TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
       TO_CHAR((7 - (TO_CHAR(SYSDATE, 'D') - 1)) + SYSDATE, 'YYYY/MM/DD') AS WEEK_DETECT,
       '48' AS CLASS,
       '不是客户本人申请' AS TRIGGER_SOURCE,
       '不是客户本人申请' || '@' || J.TEXT_CONTRACT_NUMBER AS TRIGGER_VALUE,
       'SOFT' AS TRIGGER_TYPE,
       J.SKP_CREDIT_CASE,
       J.TEXT_CONTRACT_NUMBER
  FROM DM_ANTIFRAUD.F_WC_CAMPAIGN_AD W
  JOIN OWNER_DWH.F_CREDIT_CASE_AD J
    ON W.SKP_CREDIT_CASE = J.skp_credit_case
   AND W.SKP_CLIENT = J.SKP_CLIENT
   AND J.DATE_DECISION >= TRUNC(SYSDATE, 'DD') - 30
 WHERE NAME_CAMPAIGN_PROCESS_STEP = 'E-loan问卷'
   AND J.CODE_CREDIT_STATUS IN ('a', 'k', 'n')
   AND ((NAME_QUESTION = 'WC-Qs3.2 请问是您本人办理的分期吗？' AND NAME_ANSWER != '是') OR
       NAME_RESULT = '客户否认申请贷款')
   AND W.DTIME_ACTIVITY_START >= TRUNC(SYSDATE, 'DD') - 7 --WEEKLY 
UNION
--客户申请时付钱给其他人 
SELECT 'SA' AS UNIT,
       'extreme' AS TEXT_USERNAME_EMPLOYEE_SALES,
        TO_CHAR(SYSDATE, 'YYYY/MM/DD')  AS DATE_DETECT,
       TO_CHAR((7 - (TO_CHAR(SYSDATE, 'D') - 1)) + SYSDATE, 'YYYY/MM/DD') AS WEEK_DETECT,
       '48' AS CLASS,
       '客户申请时付钱给其他人' AS TRIGGER_SOURCE,
       '客户申请时付钱给其他人' || '@' || J.TEXT_CONTRACT_NUMBER AS TRIGGER_VALUE,
       'SOFT' AS TRIGGER_TYPE,
       J.SKP_CREDIT_CASE,
       J.TEXT_CONTRACT_NUMBER
  FROM DM_ANTIFRAUD.FT_WC_CAMPAIGN_AD W
  --JOIN OWNER_DWH.F_CONTRACT_AD J
  JOIN OWNER_DWH.F_CONTRACT_BASE_AD J
    ON W.SKP_CREDIT_CASE = J.skp_credit_case
   AND W.SKP_CLIENT = J.SKP_CLIENT
   AND J.DATE_DECISION >= TRUNC(SYSDATE, 'DD') - 30
  JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
    ON EX.CLASS IN ('48')
   AND W.DTIME_ACTIVITY_START >= EX.MAX_DETECT --打欢迎电话的时间
 WHERE NAME_CAMPAIGN_PROCESS_STEP = 'E-loan问卷'
   AND NAME_QUESTION = 'WC-Qs3.3 请问办理分期之前，您是否有付款给其他人？'
   AND NAME_ANSWER = '是'
   AND J.CODE_CREDIT_STATUS IN ('a', 'k', 'n')
   AND W.DTIME_ACTIVITY_START >= TRUNC(SYSDATE, 'DD') - 7 --WEEKLY 
;
COMMIT;

INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'ESHOP TRIGGER PART2.1',SYSDATE FROM DUAL;
COMMIT;
-------------------------------------------------------------------------
--High risk concentration on seller--------------------------------------
-------------------------------------------------------------------------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH BASE AS
 (SELECT TO_CHAR((7 - (TO_CHAR(J.DATE_DECISION, 'D') - 1)) + J.DATE_DECISION,
                 'YYYY-MM-DD') AS WEEK_DECISION,
         SE.NAME_SELLER,
         J.SKP_CREDIT_CASE,
         J.DATE_DECISION,
         AD.text_contract_number,
         J.num_min_inst_def10_dd,
         CASE
           WHEN J.num_min_inst_def10_dd = 1 THEN
            1
           ELSE
            0
         END AS DEF_FPD10,
         1 AS AGR_FPD10
    FROM --OWNER_DWH.F_CONTRACT_AD J
    OWNER_DWH.F_CONTRACT_INSHEAD_AD J
    JOIN OWNER_DWH.F_CONTRACT_BASE_AD AD
      ON J.skp_credit_case=AD.skp_credit_case
      AND J.skp_credit_type=AD.skp_credit_type
      AND J.date_decision=AD.date_decision
    JOIN OWNER_DWH.DC_PRODUCT P
      ON J.skp_product = P.SKP_PRODUCT
    JOIN OWNER_DWH.DC_SALESROOM SALESROOM
      ON J.skp_salesroom = SALESROOM.SKP_SALESROOM
    JOIN OWNER_DWH.DC_SELLER SE
      ON SALESROOM.SKP_SELLER = SE.SKP_SELLER
   WHERE J.NUM_OBSERV_DEF10_MAXINST >= 1
     AND J.DATE_DECISION >= TRUNC(SYSDATE, 'DD') -80
     AND P.CODE_PRODUCT LIKE 'FESP%'
     AND AD.CODE_CREDIT_STATUS IN ('a', 'k', 'n'))

SELECT 'SA' AS UNIT,
       'extreme' AS TEXT_USERNAME_EMPLOYEE_SALES,
       TO_CHAR(SYSDATE, 'YYYY/MM/DD')  AS DATE_DETECT,
       TO_CHAR((7 - (TO_CHAR(SYSDATE, 'D') - 1)) + SYSDATE, 'YYYY/MM/DD') AS WEEK_DETECT,
       '48' AS CLASS,
       'High risk concentration on seller' AS TRIGGER_SOURCE,
       B.NAME_SELLER || '; Week_decicion: ' || B.WEEK_DECISION ||
       '; AGR_FPD10: ' || SELLER.AGR_FPD10 || '; R_FPD10: ' ||
       SELLER.R_FPD10 AS TRIGGER_VALUE,
       'SOFT' AS TRIGGER_TYPE,
       B.SKP_CREDIT_CASE,
       B.TEXT_CONTRACT_NUMBER
  FROM (SELECT WEEK_DECISION,
               NAME_SELLER,
               SUM(AGR_FPD10) AS AGR_FPD10,
               TO_CHAR(round(SUM(DEF_FPD10) / SUM(AGR_FPD10) * 100, 3),
                       '00.00') || '%' AS R_FPD10
          FROM BASE
         GROUP BY WEEK_DECISION, NAME_SELLER
        HAVING SUM(AGR_FPD10) >= 5 AND SUM(DEF_FPD10) / SUM(AGR_FPD10) >= 0.3) SELLER
  JOIN BASE B
    ON SELLER.WEEK_DECISION = B.WEEK_DECISION
   AND SELLER.NAME_SELLER = B.NAME_SELLER
   WHERE B.DATE_DECISION >= TRUNC(SYSDATE, 'DD') -47;
   COMMIT;
   
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'ESHOP TRIGGER PART2.2',SYSDATE FROM DUAL;
COMMIT;
   
------------------------------------------------------------------------------------
-----1. current city concentration--------------------------------------------------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION----1sec
WITH CURRENT_ADD AS (
select  /*+ materialize */ DCC.SKP_CREDIT_CASE
,DCC.DATE_DECISION,dcc.SKP_CREDIT_STATUS
,P.NAME_PROVINCE||'省' AS CU_PRO_AP
,C.NAME_CITY||'市' AS CU_CITY_AP
,REGEXP_REPLACE(ADDR.NAME_DISTRICT,'[市区县]','')||'区' AS CU_DIS_AP
,ADDR.NAME_TOWN||ADDR.NAME_STREET||ADDR.TEXT_STREET_NUMBER||ADDR.TEXT_APARTMENT_NUMBER AS CURRENT_ADDR_AFTER
,EE.TEXT_USERNAME_EMPLOYEE
,DCC.text_contract_number
from OWNER_DWH.DC_CREDIT_CASE DCC
JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR ON DCC.SKP_CREDIT_CASE=ADDR.SKP_CREDIT_CASE AND DCC.DATE_DECISION=ADDR.DATE_DECISION
AND DCC.SKP_CREDIT_TYPE=ADDR.SKP_CREDIT_TYPE
JOIN OWNER_DWH.CL_PROVINCE P ON P.SKP_PROVINCE=ADDR.SKP_PROVINCE
JOIN OWNER_DWH.DC_CITY C ON C.SKP_CITY=ADDR.SKP_CITY
join OWNER_DWH.f_Credit_Case_Ad ACCA ON ACCA.skp_credit_case=dcc.SKP_CREDIT_CASE and acca.date_decision=dcc.DATE_DECISION
and dcc.SKP_CREDIT_TYPE=acca.skp_credit_type
join OWNER_DWH.Dc_Employee ee on acca.SKP_EMPLOYEE_CONSULTANT=ee.SKP_EMPLOYEE
where ADDR.SKP_ADDRESS_TYPE=2 
AND DCC.SKP_CREDIT_ACQUISITION_CHNL=4--183066 
AND DCC.SKP_PRODUCT_CHANNEL=3 
AND DCC.DATE_DECISION > DATE '2017-02-01' AND ADDR.DATE_DECISION > DATE '2017-02-01'AND acca.DATE_DECISION > DATE '2017-02-01'
AND TRUNC(SYSDATE)-DCC.DATE_DECISION BETWEEN 1 AND 7 
AND TRUNC(SYSDATE)-ADDR.DATE_DECISION BETWEEN 1 AND 7
AND TRUNC(SYSDATE)-acca.DATE_DECISION BETWEEN 1 AND 7
)

,CURRENT_AGGREGATION AS (
SELECT /*+ materialize */  CU_CITY_AP
,COUNT(SKP_CREDIT_CASE) AS CNT_APP_CURRENT
FROM CURRENT_ADD
GROUP BY CU_CITY_AP
HAVING COUNT(SKP_CREDIT_CASE)>=6
)

, PREVIOUS_ADD AS (
select  /*+ materialize */ DCC.SKP_CREDIT_CASE
,DCC.DATE_DECISION
,P.NAME_PROVINCE||'省' AS CU_PRO_AP
,C.NAME_CITY||'市' AS CU_CITY_AP
,REGEXP_REPLACE(ADDR.NAME_DISTRICT,'[市区县]','')||'区' AS CU_DIS_AP
,ADDR.NAME_TOWN||ADDR.NAME_STREET||ADDR.TEXT_STREET_NUMBER||ADDR.TEXT_APARTMENT_NUMBER AS CURRENT_ADDR_AFTER
,trunc(DCC.date_decision + 6, 'd') as WEEK_DECISION
from OWNER_DWH.DC_CREDIT_CASE DCC
JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR ON DCC.SKP_CREDIT_CASE=ADDR.SKP_CREDIT_CASE AND DCC.DATE_DECISION=ADDR.DATE_DECISION
AND DCC.SKP_CREDIT_TYPE=ADDR.SKP_CREDIT_TYPE
JOIN OWNER_DWH.CL_PROVINCE P ON P.SKP_PROVINCE=ADDR.SKP_PROVINCE
JOIN OWNER_DWH.DC_CITY C ON C.SKP_CITY=ADDR.SKP_CITY
where ADDR.SKP_ADDRESS_TYPE=2 AND DCC.SKP_CREDIT_CASE=ADDR.SKP_CREDIT_CASE
AND DCC.SKP_CREDIT_ACQUISITION_CHNL=4--183066 
AND DCC.SKP_PRODUCT_CHANNEL=3 
AND DCC.DATE_DECISION > DATE '2017-02-01' AND ADDR.DATE_DECISION > DATE '2017-02-01'
AND TRUNC(SYSDATE)-DCC.DATE_DECISION BETWEEN 8 AND 15
AND TRUNC(SYSDATE)-ADDR.DATE_DECISION BETWEEN 8 AND 15
)

,PREVIOUS_AGGREGATION AS (
SELECT /*+ materialize */  CU_CITY_AP
,COUNT(SKP_CREDIT_CASE) AS CNT_APP_PREVIOUS
FROM PREVIOUS_ADD
GROUP BY CU_CITY_AP
)

,FINAL_SELECT AS (
SELECT /*+ materialize */ CU_CITY_AP
,CNT_APP_CURRENT
,CNT_APP_PREVIOUS
,INCREASE_TIMES
FROM (
SELECT CC.CU_CITY_AP
,CNT_APP_CURRENT
,CNT_APP_PREVIOUS
,DENSE_RANK()OVER(ORDER BY CNT_APP_CURRENT/CNT_APP_PREVIOUS DESC) AS ORD
,CNT_APP_CURRENT/CNT_APP_PREVIOUS AS INCREASE_TIMES
FROM CURRENT_AGGREGATION CC
JOIN PREVIOUS_AGGREGATION PP ON CC.CU_CITY_AP=PP.CU_CITY_AP
)
WHERE ORD<=3 and INCREASE_TIMES>=5
)

SELECT distinct 'SA' AS UNIT 
,CA.TEXT_USERNAME_EMPLOYEE
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'48' AS CLASS
,'CITY CONCENTRARION INCREASE' AS TRIGGER_SOURCE 
,'current city: '||ca.CU_CITY_AP ||' recent CNT application: '||CNT_APP_CURRENT||'app' ||'increase '||INCREASE_TIMES||'times than previous 14 days '||CNT_APP_PREVIOUS||' app' AS TRIGGER_value
,'SOFT' AS TRIGGER_TYPE
,CA.SKP_CREDIT_CASE
,CA.TEXT_CONTRACT_NUMBER  
FROM CURRENT_ADD CA
JOIN FINAL_SELECT FS ON FS.CU_CITY_AP=CA.CU_CITY_AP
WHERE CA.SKP_CREDIT_STATUS IN (2,3,5);
commit;

INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'ESHOP TRIGGER PART2.3',SYSDATE FROM DUAL;
COMMIT;
------------------------------------------------------------------------------------
-----2. current city /phone city/bank city/delivery city//21 CITY---------------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION---4 min 
WITH CURRENT_ADD AS (
select  /*+ materialize */ DCC.SKP_CREDIT_CASE
,DCC.DATE_DECISION
,C.NAME_CITY||'市' AS CU_CITY_AP
,EE.TEXT_USERNAME_EMPLOYEE
,DCC.text_contract_number
from OWNER_DWH.DC_CREDIT_CASE DCC
JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR ON DCC.SKP_CREDIT_CASE=ADDR.SKP_CREDIT_CASE AND DCC.DATE_DECISION=ADDR.DATE_DECISION
AND DCC.SKP_CREDIT_TYPE=ADDR.SKP_CREDIT_TYPE
JOIN OWNER_DWH.DC_CITY C ON C.SKP_CITY=ADDR.SKP_CITY
join OWNER_DWH.f_Credit_Case_Ad ACCA ON ACCA.skp_credit_case=dcc.SKP_CREDIT_CASE and acca.date_decision=dcc.DATE_DECISION
and dcc.SKP_CREDIT_TYPE=acca.skp_credit_type
join OWNER_DWH.Dc_Employee ee on acca.SKP_EMPLOYEE_CONSULTANT=ee.SKP_EMPLOYEE
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME TT ON TT.CLASS='48' AND DCC.DATE_DECISION>=TT.MAX_DETECT AND DCC.DATE_DECISION!=TRUNC(SYSDATE)
where ADDR.SKP_ADDRESS_TYPE=2 
AND DCC.SKP_CREDIT_ACQUISITION_CHNL=4--183066 
AND DCC.SKP_PRODUCT_CHANNEL=3 
AND DCC.DATE_DECISION >TRUNC(SYSDATE)-10 AND ADDR.DATE_DECISION > TRUNC(SYSDATE)-10 AND acca.DATE_DECISION > TRUNC(SYSDATE)-10 
and dcc.SKP_CREDIT_STATUS IN (2,3,5)
)

,BDI_CITY AS (
SELECT /*+ materialize */ SKP_CREDIT_CASE
,DATE_DECISION
,bank_city||'市' AS BANKCARD_CITY
,IP_city
,substr(phone_city,INSTR(phone_city,'省',1,1)+1,INSTR(phone_city,'市',1,1)) AS phoneNO_city
FROM (
SELECT dcc.SKP_CREDIT_CASE,cl.CODE_ADDITIONAL_INFO,FAA.TEXT_VALUE
,dcc.DATE_DECISION
FROM  OWNER_DWH.DC_CREDIT_CASE DCC
JOIN OWNER_DWH.F_APPRSTEP_ADDITIONAL_INFO_TT FAA ON FAA.SKP_CREDIT_CASE=DCC.SKP_CREDIT_CASE AND FAA.SKP_CREDIT_TYPE=DCC.SKP_CREDIT_TYPE
AND FAA.DATE_DECISION=DCC.DATE_DECISION
JOIN OWNER_DWH.CL_APPRSTEP_ADD_INFO CL ON CL.SKP_APPRSTEP_ADD_INFO=FAA.SKP_APPRSTEP_ADD_INFO
WHERE DCC.SKP_CREDIT_ACQUISITION_CHNL=4--183066 
AND DCC.SKP_PRODUCT_CHANNEL=3 
AND DCC.DATE_DECISION > TRUNC(SYSDATE)-10 AND FAA.DATE_DECISION > TRUNC(SYSDATE)-10 
and dcc.SKP_CREDIT_STATUS IN (2,3,5)
AND CL.CODE_ADDITIONAL_INFO IN ('a5_bank_acc_city','a21_city','a15_areaInfoCheck','a15_areaInfoStatus','a5_delivery_eshop_adrs')
)
PIVOT(MAX(TEXT_VALUE) FOR CODE_ADDITIONAL_INFO IN ('a5_bank_acc_city' as bank_city,'a21_city' as IP_city
                                                   ,'a15_areaInfoCheck' as phone_city)
      )

      )




SELECT distinct 'SA' AS UNIT 
,CA.TEXT_USERNAME_EMPLOYEE
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'48' AS CLASS
,'DIF CITY' AS TRIGGER_SOURCE
,'bank city: '||BANKCARD_CITY||','||'phone city: '||phoneNO_city||','||'IP city: '||IP_city||','||'current city: '||CU_CITY_AP as trigger_value
,'SOFT' AS TRIGGER_TYPE
,CA.SKP_CREDIT_CASE
,CA.TEXT_CONTRACT_NUMBER  
FROM BDI_CITY BD
JOIN CURRENT_ADD CA ON CA.SKP_CREDIT_CASE= BD.SKP_CREDIT_CASE
AND BD.DATE_DECISION=CA.DATE_DECISION 
WHERE (BANKCARD_CITY !=' ' AND IP_city!=' '  AND phoneNO_city!=' ' and BANKCARD_CITY!=IP_city AND phoneNO_city!=BANKCARD_CITY AND IP_city!=phoneNO_city)
OR (BANKCARD_CITY !=' ' AND IP_city!=' '  AND CU_CITY_AP!=' ' and BANKCARD_CITY!=IP_city AND CU_CITY_AP!=BANKCARD_CITY AND IP_city!=CU_CITY_AP)
OR (phoneNO_city !=' ' AND IP_city!=' '  AND CU_CITY_AP!=' ' and phoneNO_city!=IP_city AND CU_CITY_AP!=phoneNO_city AND IP_city!=CU_CITY_AP)
;
commit;

INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'ESHOP TRIGGER PART2.4',SYSDATE FROM DUAL;
COMMIT;
------------------------------------------------------------------------------------
-----3. multi-app-------------------------------------------------------------------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION--1 SEC
WITH ACTIVE_CLIENTS AS (
select  /*+ materialize */ DCC.SKP_CREDIT_CASE
,DCC.DATE_DECISION
,EE.TEXT_USERNAME_EMPLOYEE
,DCC.text_contract_number
,dcc.SKP_CLIENT
,dcc.SKP_CREDIT_STATUS
,DCC.DTIME_DECISION
from OWNER_DWH.DC_CREDIT_CASE DCC
join OWNER_DWH.f_Credit_Case_Ad ACCA ON ACCA.skp_credit_case=dcc.SKP_CREDIT_CASE and acca.date_decision=dcc.DATE_DECISION
and dcc.SKP_CREDIT_TYPE=acca.skp_credit_type
join OWNER_DWH.Dc_Employee ee on acca.SKP_EMPLOYEE_CONSULTANT=ee.SKP_EMPLOYEE
where  DCC.SKP_CREDIT_ACQUISITION_CHNL=4--183066 
AND DCC.SKP_PRODUCT_CHANNEL=3 
AND DCC.DATE_DECISION > DATE '2017-03-10'
AND TRUNC(SYSDATE)-DCC.DATE_DECISION BETWEEN 1 AND 7 
AND dcc.SKP_CREDIT_STATUS IN (2,3,5)
)

, REJECT_CLIENTS AS (
select  /*+ materialize */ DCC.SKP_CREDIT_CASE
,DCC.DATE_DECISION
,DCC.text_contract_number
,dcc.SKP_CLIENT
,dcc.SKP_CREDIT_STATUS
,DCC.DTIME_DECISION
from OWNER_DWH.DC_CREDIT_CASE DCC
where  DCC.SKP_CREDIT_ACQUISITION_CHNL=4--183066 
AND DCC.SKP_PRODUCT_CHANNEL=3 
AND DCC.DATE_DECISION > DATE '2017-03-10'
AND TRUNC(SYSDATE)-DCC.DATE_DECISION BETWEEN 1 AND 7 
AND dcc.SKP_CREDIT_STATUS IN (7,8)
)

, PRE_INSERT AS (
SELECT  /*+ materialize */ 'SA' AS UNIT 
,TEXT_USERNAME_EMPLOYEE
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'48' AS CLASS
,'MULTI-APP' AS TRIGGER_SOURCE
, REJECT_APP
,'SOFT' AS TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER  
FROM (
SELECT AA.SKP_CREDIT_CASE
,AA.DATE_DECISION,AA.SKP_CLIENT,AA.TEXT_CONTRACT_NUMBER,AA.TEXT_USERNAME_EMPLOYEE
,RR.TEXT_CONTRACT_NUMBER||' status: '||to_char(RR.SKP_CREDIT_STATUS)||' app time: '||to_char(RR.DTIME_DECISION,'yyyy-mm-dd hh24:mi:ss') AS REJECT_APP
FROM ACTIVE_CLIENTS AA
JOIN REJECT_CLIENTS RR ON AA.SKP_CLIENT=RR.SKP_CLIENT
AND RR.DTIME_DECISION>AA.DTIME_DECISION
)

)

SELECT UNIT 
,TEXT_USERNAME_EMPLOYEE
,DATE_DETECT
, WEEK_DETECT
, CLASS
, TRIGGER_SOURCE
,listagg(REJECT_APP,'  #  ') within group (order by REJECT_APP) as TRGGER_VALUE
,TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER  
FROM PRE_INSERT
GROUP BY UNIT
,TEXT_USERNAME_EMPLOYEE
,DATE_DETECT
,WEEK_DETECT
,CLASS
,TRIGGER_SOURCE
,TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER;
COMMIT;

INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'ESHOP TRIGGER PART2.5',SYSDATE FROM DUAL;
COMMIT;
------------------------------------------------------------------------------------
-----4. del-------------------------------------------------------------------------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION---2 MIN
WITH ALL_CONTRACT AS (
select  /*+ materialize */ DCC.SKP_CREDIT_CASE
,DCC.DATE_DECISION
,DCC.text_contract_number
,dcc.SKP_CLIENT
,dcc.SKP_CREDIT_STATUS
,EE.NAME_SALESROOM
,date_first_instalment
,decode(AD.flag_def30_inst01,'N','0','Y','1') AS DEF_FPD30
,decode(AD.flag_observ_def30_inst01,'N','0','Y','1') AS AGR_FPD30
,CASE WHEN INSTR(EE.NAME_SALESROOM,'五八',1,1)>0 THEN '58'
      WHEN INSTR(EE.NAME_SALESROOM,'迪信通',1,1)>0 THEN 'DXT'
      WHEN INSTR(EE.NAME_SALESROOM,'O2O',1,1)>0 THEN 'O2O'
      END AS RETAILER_NAME 
from OWNER_DWH.DC_CREDIT_CASE DCC
--join OWNER_DWH.F_CONTRACT_AD ACCA 
JOIN OWNER_DWH.F_CONTRACT_BASE_AD ACCA ON ACCA.skp_credit_case=dcc.SKP_CREDIT_CASE AND acca.date_decision=dcc.DATE_DECISION
   AND  dcc.SKP_CREDIT_TYPE=acca.skp_credit_type
JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD AD ON ACCA.skp_credit_case=AD.skp_credit_case AND ACCA.skp_credit_type=AD.skp_credit_type
  AND ACCA.date_decision=AD.date_decision
JOIN OWNER_DWH.DC_SALESROOM ee ON acca.SKP_SALESROOM=ee.SKP_SALESROOM
WHERE  DCC.SKP_CREDIT_ACQUISITION_CHNL=4--183066 
AND DCC.SKP_PRODUCT_CHANNEL=3 
AND DCC.DATE_DECISION > DATE '2016-10-01'
AND TRUNC(SYSDATE)-(ACCA.date_first_instalment+30) BETWEEN 1 AND 30
AND dcc.SKP_CREDIT_STATUS IN (2,3,5)
AND (INSTR(EE.NAME_SALESROOM,'五八',1,1)>0 or INSTR(EE.NAME_SALESROOM,'迪信通',1,1)>0 or INSTR(EE.NAME_SALESROOM,'O2O',1,1)>0)
)


,retailer_selected as (
SELECT /*+ materialize */ RETAILER_NAME
,CNT_DEF,CNT_AGR
,P_VALUE(CNT_DEF,CNT_AGR,0.015) as PVALUE
FROM (
SELECT RETAILER_NAME
,SUM(DEF_FPD30) AS CNT_DEF
,SUM(AGR_FPD30) AS CNT_AGR
FROM ALL_CONTRACT
GROUP BY RETAILER_NAME
) 
where P_VALUE(CNT_DEF,CNT_AGR,0.015)<0.0005
)

select distinct 'SA' AS UNIT 
,'extreme' AS TEXT_USERNAME_EMPLOYEE
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'48' AS CLASS
,'DELINQUENCY-BIG RETAILER' AS TRIGGER_SOURCE
,'retailer: ' ||AC.RETAILER_NAME||' rencent 30days FPD30OB: '||rr.CNT_AGR||' DEL: '||rr.CNT_DEF AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER 
from retailer_selected rr
join ALL_CONTRACT AC ON RR.RETAILER_NAME=AC.RETAILER_NAME
where DEF_FPD30=1 
AND AC.SKP_CREDIT_CASE NOT IN (SELECT SKP_CREDIT_CASE FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS WHERE CLASS='48' AND TRIGGER_SOURCE='DELINQUENCY-BIG RETAILER' );
COMMIT;
END;

PROCEDURE TRIGGER_50_CLIENT_APP_DIFF_POS IS
  BEGIN
  
  INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'ONE CLIENT APPLY IN DIFF POS',SYSDATE FROM DUAL;
COMMIT;
  
/*CREATE OR REPLACE VIEW TRIGGER_50_CONTACT_BASE AS
   WITH BASE AS (
     --CREATE TABLE BASE AS--8:15
      SELECT \*+ materialize*\ A.text_contract_number,A.SKP_CREDIT_CASE,A.NAME_REGION,A.NAME_REGION_EN,A.DATE_DECISION
             ,A.code_credit_status,A.code_salesroom,A.TEXT_USERNAME_EMPLOYEE_SALES,A.NAME_LAST_SALES
             ,A.SKP_CLIENT,A.text_identity_card_number,A.name_last_client
             ,CAST(A.text_mobile_client as varchar(50)) as CLIENT_MOBILE  
             ,CAST(A.text_phone_area_code_client||A.text_phone_client as varchar(50)) as CLIENT_PHONE 
             ,CAST(A.text_mobile_SPOUSE as varchar(50)) as SPOUSE_MOBILE
             ,CAST(A.text_mobile_parent as varchar(50)) as PARENTS_MOBILE
             ,CAST(A.text_mobile_supply as varchar(50)) as SUPPLY_MOBILE
             ,CAST(A.text_bank_account as varchar(50)) as NUM_ACCOUNT
             ,CAST(A.text_client_email_address as varchar(50)) as EMAIL
             ,CAST(CASE WHEN LENGTH(REGEXP_SUBSTR(F.text_sales_agent_comment,'[0-9]+'))=11
                        OR LENGTH(REGEXP_SUBSTR(F.text_sales_agent_comment,'[0-9]+'))=8
                   THEN REGEXP_SUBSTR(F.text_sales_agent_comment,'[0-9]+') 
                   ELSE NULL END AS VARCHAR(50)) AS SACOMMENT_MOBILE 
      FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD A
      JOIN OWNER_DWH.F_APPLICATION_TT F ON A.skp_credit_case=F.skp_credit_case
      AND A.skp_credit_type=F.SKP_CREDIT_TYPE
     AND A.date_decision=F.DATE_DECISION
      WHERE A.date_decision>=SYSDATE-74
      AND F.DATE_DECISION>=SYSDATE-74
      AND NOT EXISTS( SELECT I.TEXT_VALUE
                       FROM OWNER_DWH.F_CLIENT_UNDES_IDENT_TT I
                       WHERE I.TEXT_VALUE=A.text_identity_card_number 
                         AND I.DTIME_INSERTED<A.date_decision
                         AND (SUBSTR(I.TEXT_SOURCE,-2)='11' 
                              OR UPPER(I.TEXT_SOURCE)='MS' 
                              OR UPPER(I.TEXT_SOURCE)='MSER'
                             )
                      )
     )
    SELECT text_contract_number,SKP_CREDIT_CASE,NAME_REGION,NAME_REGION_EN,DATE_DECISION
           ,code_credit_status,code_salesroom,TEXT_USERNAME_EMPLOYEE_SALES,NAME_LAST_SALES
           ,SKP_CLIENT,text_identity_card_number,name_last_client,contact_type,contact--
    FROM BASE A
    UNPIVOT(CONTACT  FOR CONTACT_TYPE  IN (CLIENT_MOBILE,
                                           CLIENT_PHONE,
                                           SPOUSE_MOBILE,
                                           PARENTS_MOBILE,
                                           SUPPLY_MOBILE,
                                           NUM_ACCOUNT,
                                           EMAIL,
                                           SACOMMENT_MOBILE
                                          )
              )P
    WHERE CONTACT IS NOT NULL
    AND CONTACT NOT IN ('XNA','XNAXNA','00000000000','12345678999','1');
COMMIT;    */
   
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH TRIGGER_50_SUSPICIOUS AS(
--CREATE OR REPLACE VIEW TRIGGER_50_SUSPICIOUS AS
    SELECT  /*+ MATERIALIZE*/  B.*,S.DATE_RANGE,S.CNT_CONTRACT,S.CNT_REJ/*,S.CNT_CANCEL*/,S.CNT_APP,S.CNT_POS
    FROM (
          SELECT * 
          FROM (
                SELECT A.SKP_CLIENT
                       ,CAST(MAX(A.DATE_DECISION)-MIN(A.DATE_DECISION) AS INT) AS DATE_RANGE
                       ,COUNT(CASE WHEN A.SKP_CREDIT_STATUS IN(2,3,5) THEN A.SKP_CREDIT_CASE END) AS CNT_CONTRACT
                       ,COUNT(DECODE(A.SKP_CREDIT_STATUS,8,A.SKP_CREDIT_CASE)) AS CNT_REJ
                       --,COUNT(DECODE(A.SKP_CREDIT_STATUS,7,A.SKP_CREDIT_CASE)) AS CNT_CANCEL
                       ,COUNT(A.SKP_CREDIT_CASE) AS CNT_APP
                       ,COUNT(DISTINCT A.SKP_SALESROOM) AS CNT_POS          
                FROM OWNER_DWH.Dc_Application A
                WHERE A.DATE_DECISION>=SYSDATE-74
                AND A.SKP_CREDIT_STATUS !='7'
                GROUP BY A.SKP_CLIENT
               )
          WHERE CNT_CONTRACT=0
          AND CNT_APP!=1
          AND CNT_POS!=1
          AND CNT_REJ>1
          AND DATE_RANGE BETWEEN 8 AND 60
        )S
    JOIN TRIGGER_50_CONTACT_BASE B ON B.SKP_CLIENT=S.SKP_CLIENT  
    AND B.code_credit_status='d'
)
,BASE AS(
  SELECT  /*+ MATERIALIZE*/  A.*,RANK()OVER(PARTITION BY A.SKP_CREDIT_CASE ORDER BY A.SKP_CREDIT_CASE_BASE DESC,A.CONTACT_TYPE) AS ORD 
  FROM (     
        SELECT DISTINCT B.*
               ,COUNT(DISTINCT S.SKP_CREDIT_CASE)OVER(PARTITION BY B.SKP_CREDIT_CASE) AS CNT_TRIGGER_50_SUSPICIOUS_APP
               ,CASE WHEN S.SKP_CREDIT_CASE=MAX(S.SKP_CREDIT_CASE)OVER(PARTITION BY B.SKP_CREDIT_CASE) 
                     THEN S.SKP_CREDIT_CASE END AS SKP_CREDIT_CASE_BASE
               ,CASE WHEN S.SKP_CREDIT_CASE=MAX(S.SKP_CREDIT_CASE)OVER(PARTITION BY B.SKP_CREDIT_CASE) 
                     THEN S.text_contract_number END AS TEXT_CONTRACT_NUMBER_BASE
               ,CASE WHEN S.SKP_CREDIT_CASE=MAX(S.SKP_CREDIT_CASE)OVER(PARTITION BY B.SKP_CREDIT_CASE) 
                     THEN S.text_identity_card_number END AS IDENT_BASE
               ,CAST(B.DATE_DECISION-S.DATE_DECISION AS INT) AS DATE_RANGE2
               ,CASE WHEN S.SKP_CREDIT_CASE=MAX(S.SKP_CREDIT_CASE)OVER(PARTITION BY B.SKP_CREDIT_CASE) 
                     THEN S.CONTACT_TYPE END AS CONTACT_TYPE_BASE
        FROM TRIGGER_50_CONTACT_BASE B
        JOIN TRIGGER_50_SUSPICIOUS S ON B.contact=S.CONTACT
        AND B.DATE_DECISION>=SYSDATE-7
        AND B.DATE_DECISION-S.DATE_DECISION BETWEEN 0 AND 60
        AND S.SKP_CLIENT!=B.SKP_CLIENT
        AND S.SKP_CREDIT_CASE!=B.SKP_CREDIT_CASE 
        AND B.CODE_CREDIT_STATUS in ('a','k','n')      
       )A
  WHERE A.TEXT_CONTRACT_NUMBER_BASE IS NOT NULL
   AND name_channel NOT IN ('消费贷','消费贷（捷乐贷）' ) 
)

, ADDR AS (
SELECT dcc.text_contract_number,DCC.Skp_Credit_Case,DCC.DATE_DECISION,DCC.SKP_CREDIT_CASE_BASE
,NVL(DC.NAME_CITY,DSA.NAME_SALES_AREA)||CASE WHEN (ADDR.NAME_DISTRICT IS NULL OR ADDR.NAME_DISTRICT='XNA') THEN DIS.NAME_DISTRICT END ||DECODE(ADDR.NAME_TOWN,'XNA','',ADDR.NAME_TOWN) ||ADDR.NAME_STREET||ADDR.TEXT_STREET_NUMBER||ADDR.TEXT_APARTMENT_NUMBER AS APP_CURRENT--CURRENT_ADDR,
FROM BASE dcc
JOIN OWNER_DWH.f_Application_Client_Tt ACT ON ACT.SKP_CREDIT_CASE=DCC.SKP_CREDIT_CASE AND ACT.date_decision=dcc.DATE_DECISION AND ACT.SKP_CLIENT_ROLE=14
LEFT JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR ON ADDR.SKP_CREDIT_CASE= DCC.SKP_CREDIT_CASE AND ACT.SKP_APPLICATION_CLIENT=ADDR.SKP_APPLICATION_CLIENT AND ADDR.SKP_ADDRESS_TYPE=2--CURRENT
LEFT JOIN OWNER_DWH.DC_CITY DC ON DC.SKP_CITY=ADDR.SKP_CITY
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSA ON DSA.NAME_SALES_AREA=DC.NAME_CITY AND DSA.code_sales_area_status='a' and  DSA.skp_sales_area_type=1
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSAC ON DSA.SKP_SALES_AREA_SUPERIOR=DSAC.SKP_SALES_AREA AND  DSAC.CODE_SALES_AREA_STATUS='a' and DSAC.SKP_SALES_AREA_TYPE=2
LEFT JOIN OWNER_DWH.DC_DISTRICT DIS ON ADDR.SKP_DISTRICT=DIS.SKP_DISTRICT 
 )
 
,REJ_ADDR AS (
 SELECT BB.*
 ,NVL(DC.NAME_CITY,DSA.NAME_SALES_AREA)||CASE WHEN (ADDR.NAME_DISTRICT IS NULL OR ADDR.NAME_DISTRICT='XNA') THEN DIS.NAME_DISTRICT END ||DECODE(ADDR.NAME_TOWN,'XNA','',ADDR.NAME_TOWN) ||ADDR.NAME_STREET||ADDR.TEXT_STREET_NUMBER||ADDR.TEXT_APARTMENT_NUMBER AS REJ_CURRENT
 FROM ADDR BB
 JOIN OWNER_DWH.f_Application_Client_Tt ACT ON ACT.SKP_CREDIT_CASE=BB.SKP_CREDIT_CASE_BASE  AND ACT.SKP_CLIENT_ROLE=14
LEFT JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR ON ADDR.SKP_CREDIT_CASE= ACT.SKP_CREDIT_CASE AND ACT.SKP_APPLICATION_CLIENT=ADDR.SKP_APPLICATION_CLIENT AND ADDR.SKP_ADDRESS_TYPE=2--CURRENT
LEFT JOIN OWNER_DWH.DC_CITY DC ON DC.SKP_CITY=ADDR.SKP_CITY
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSA ON DSA.NAME_SALES_AREA=DC.NAME_CITY AND DSA.code_sales_area_status='a' and  DSA.skp_sales_area_type=1
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSAC ON DSA.SKP_SALES_AREA_SUPERIOR=DSAC.SKP_SALES_AREA AND  DSAC.CODE_SALES_AREA_STATUS='a' and DSAC.SKP_SALES_AREA_TYPE=2
LEFT JOIN OWNER_DWH.DC_DISTRICT DIS ON ADDR.SKP_DISTRICT=DIS.SKP_DISTRICT 
 )
 
,ADDR_SCORE AS (
 SELECT  AA.*
,UTL_MATCH.edit_distance_similarity(APP_CURRENT,REJ_CURRENT) AS SCORE_SIMILAR
FROM REJ_ADDR AA
)
SELECT DISTINCT  'SA' AS UNIT
       ,A.TEXT_USERNAME_EMPLOYEE_SALES
       ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
       ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
       ,'50' AS CLASS
       ,'A CLIENT REJECTED BY DIFFERENT POS' AS TRIGGER_SOURCE
       ,CAST(DENSE_RANK()OVER(ORDER BY A.CONTACT) AS VARCHAR(20))
          ||'| '||CAST(A.CONTACT_TYPE AS VARCHAR(25))||':'||CAST(A.CONTACT AS VARCHAR(15))
          ||', MATCH_APP: '||CAST(A.TEXT_CONTRACT_NUMBER_BASE AS VARCHAR(20))
          ||', REJ_IDENT: '||CAST(A.IDENT_BASE AS VARCHAR(20))
          ||CASE WHEN CNT_TRIGGER_50_SUSPICIOUS_APP>1 THEN ', MULTI MATCHED '||CNT_TRIGGER_50_SUSPICIOUS_APP||' APPS'ELSE NULL END
           AS TRIGGER_VALUE
       ,'SOFT' AS TIRGGER_TYPE
       ,A.SKP_CREDIT_CASE
       ,A.TEXT_CONTRACT_NUMBER
FROM BASE A
LEFT JOIN ADDR_SCORE ADDR ON ADDR.SKP_CREDIT_CASE=A.SKP_CREDIT_CASE 
WHERE ORD=1
AND (
  CONTACT_TYPE_BASE|| CONTACT_TYPE not in ('SPOUSE_MOBILEPARENTS_MOBILE','SPOUSE_MOBILECLIENT_MOBILE' ,'CLIENT_PHONESPOUSE_MOBILE')
  OR (CONTACT_TYPE_BASE|| CONTACT_TYPE  in ('SPOUSE_MOBILEPARENTS_MOBILE','SPOUSE_MOBILECLIENT_MOBILE' ,'CLIENT_PHONESPOUSE_MOBILE') and ADDR.score_similar<10)
  );
COMMIT;
END;

 PROCEDURE TRIGGER_51_ESHOP_NEW_CONTR IS
  BEGIN
  
  INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '51 ESHOP NEW CONTRACT',SYSDATE FROM DUAL;
COMMIT;

----------------------------------------------------------------------------------------------------
-----  51: 1. CURRENT PROVINCE != DELIVERY PROVINCE--------------------------------------
----------------------------------------------------------------------------------------------------
/*INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
SELECT 
      'SA' AS UNIT
      ,'extreme' AS TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE, 'YYYY/MM/DD')  AS DATE_DETECT
      ,TO_CHAR((7-(TO_CHAR(SYSDATE,'D')-1))+SYSDATE,'YYYY/MM/DD') AS WEEK_DETECT
      ,'51' AS CLASS
      ,'DIF CURRENT DEL PROVINCE'   AS TRIGGER_SOURCE
      ,CREDIT.text_contract_number||' Current Province!=Delivery Province' AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,A.SKP_CREDIT_CASE
      ,CREDIT.TEXT_CONTRACT_NUMBER
FROM AP_ANTIFRAUD.F_AF_ONLINE_CONTRACT_INFO_AD A
JOIN OWNER_DWH.F_CREDIT_CASE_AD CREDIT ON A.SKP_CREDIT_CASE=CREDIT.SKP_CREDIT_CASE 
 AND A.DATE_DECISION=CREDIT.DATE_DECISION
WHERE SUBSTR2(A.A5_DELIVERY_ESHOP_ADRS,2)!=SUBSTR2(A.A5_PROVINCE,2) 
AND SUBSTR2(A.A5_PROVINCE,2)  IN ('安徽',
'北京',
'福建',
'甘肃',
'广东',
'广西',
'贵州',
'海南',
'河北',
'河南',
'黑龙',
'湖北',
'湖南',
'吉林',
'江苏',
'江西',
'辽宁',
'内蒙',
'宁夏',
'青海',
'山东',
'山西',
'陕西',
'上海',
'四川',
'天津',
'西藏',
'香港',
'新疆',
'云南',
'浙江',
'重庆')
AND A.DATE_DECISION >= TRUNC(SYSDATE, 'DD') - 7  --WEEKLY 
AND CREDIT.CODE_CREDIT_STATUS IN ('a','k','n')
AND A.A5_DELIVERY_ESHOP_ADRS IS NOT NULL 
AND CREDIT.SKP_SELLER NOT IN (3288246,3407761);

*/
------------------------------------------------------------------------------------------------------
------51: 2. DEL PHONE !=APP PHONE----------------------------------------------------------
------------------------------------------------------------------------------------------------------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
SELECT 
'SA' AS UNIT
,'extreme' AS TEXT_USERNAME_EMPLOYEE_SALES
,TO_CHAR(SYSDATE, 'YYYY/MM/DD')   AS DATE_DETECT
,TO_CHAR((7-(TO_CHAR(SYSDATE,'D')-1))+SYSDATE,'YYYY/MM/DD') AS WEEK_DETECT
,'51' AS CLASS
,'DEL PHONE!=APP PHONE'    AS TRIGGER_SOURCE
/*,A.A5_Delivery_Phone_Num
,J.TEXT_MOBILE_CLIENT */
,'DEL PHONE: '||A.A5_Delivery_Phone_Num || '!=APP PHONE: '||J.TEXT_MOBILE_CLIENT AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,A.SKP_CREDIT_CASE
,J.TEXT_CONTRACT_NUMBER
FROM AP_ANTIFRAUD.F_AF_ONLINE_CONTRACT_INFO_AD A
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD J ON A.SKP_CREDIT_CASE=J.SKP_CREDIT_CASE AND A.DATE_DECISION=J.DATE_DECISION
JOIN OWNER_DWH.F_CREDIT_CASE_AD CREDIT ON A.SKP_CREDIT_CASE=CREDIT.SKP_CREDIT_CASE AND A.DATE_DECISION=CREDIT.DATE_DECISION
WHERE A.A5_Delivery_Phone_Num IS NOT NULL
AND A.A5_Delivery_Phone_Num!=J.TEXT_MOBILE_CLIENT
AND CREDIT.SKP_SELLER NOT IN (3288246,3407761)
AND J.CODE_CREDIT_STATUS IN ('a','k','n')
AND J.TEXT_MOBILE_CLIENT IS NOT NULL 
AND A.A5_Delivery_Phone_Num IS NOT NULL
AND A.DATE_DECISION >= TRUNC(SYSDATE, 'DD') - 7; --WEEKLY 
COMMIT;
END;

  PROCEDURE TRIGGER_52_SIMILAR_ADDR IS
  BEGIN
    
    INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '52  SIMILAR ADDR',SYSDATE FROM DUAL;
COMMIT;
------------------------------------------------------------------
--1.TRUNCATE PREVIOUS FRAUD ADRRESS TABLE ---------------------------
----------------------------------------------------------------------

execute immediate'TRUNCATE TABLE TRIGGER_52_FRAUD_ADD';
--DROP TABLE TRIGGER_52_FRAUD_ADD;
INSERT INTO  TRIGGER_52_FRAUD_ADD --ON COMMIT PRESERVE ROWS AS 
WITH BASE AS (
SELECT DISTINCT TEXT_CONTRACT_NUMBER,NAME_SEC_FRAUD_MEANS,TEXT_Addr_Contract
FROM AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS
WHERE (TEXT_Addr_Contract='地址不存在'  OR NAME_SEC_FRAUD_MEANS=N'身份欺诈' OR NAME_SEC_FRAUD_MEANS LIKE '%套现%')
AND SYSDATE-DTIME_SUPERVISOR_CONFIRM BETWEEN 1 AND 7
)
,BASE2 AS (
SELECT TEXT_CONTRACT_NUMBER
,CASE WHEN NAME_SEC_FRAUD_MEANS='身份欺诈'  THEN 'ID FRAUD'
                     WHEN NAME_SEC_FRAUD_MEANS LIKE '%套现%' THEN 'ENCASHMENT'
                      WHEN TEXT_Addr_Contract ='地址不存在' THEN 'FAKE CURRENR ADDRESS'
                      ELSE NULL END as TYPE
FROM BASE 
)
SELECT 
distinct ADDR.TEXT_CONTRACT_NUMBER
,ADDR.CU_PRO_AP AS CU_PROV
,ADDR.CU_CITY_AP AS CU_CITY
,ADDR.CU_DIS_AP AS CU_DIS
,ADDR.CURRENT_ADDR_AFTER AS CU_FRAUD_ADD
,ADDR.EMP_PRO  AS EMP_PROV
,ADDR.EMP_CITY AS EMP_CITY
,ADDR.EMP_DISTRICT AS EMP_DIS
,ADDR.EMP_ADDR AS EMP_ADDR
,TYPE 
,ADDR.SKP_CLIENT
,ADDR.DATE_DECISION
,ADDR.TEXT_USERNAME_EMPLOYEE_SALES
,ADDR.CODE_SALESROOM
,ADDR.SKP_EMPLOYEE_CONSULTANT
,ADDR.SKP_CREDIT_CASE
FROM ALL_APP_ADD_TRIGGER ADDR
JOIN BASE2 BB ON BB.TEXT_CONTRACT_NUMBER=ADDR.TEXT_CONTRACT_NUMBER
WHERE ADDR.DATE_DECISION>=DATE '2016-01-01' ;
COMMIT;

----------------------------------------------------------------------------
------------------------------5.CALCULATE SIMI----------------------------
-----------------------------------------------------------------------------

---5.1FAKE CURRENT=APP CURRENT
---5.1FAKE CURRENT=APP CURRENT
execute immediate'TRUNCATE TABLE TRIGGER_52_SAME_PRO_CITY';
--DROP TABLE TRIGGER_52_SAME_PRO_CITY;
INSERT INTO TRIGGER_52_SAME_PRO_CITY-- ON COMMIT PRESERVE ROWS AS 
SELECT AA.SKP_CREDIT_CASE AS FRAUD_SKP_CREDIT
,AA.CU_FRAUD_ADD,AA.SKP_CLIENT AS FRAUD_CLIENT
,AA.EMP_ADDR AS FRAUD_EMP
,AA.TEXT_CONTRACT_NUMBER AS CONTRACT_NO
,BB.SKP_CREDIT_CASE AS APP_CREDIT,BB.SKP_CLIENT AS APP_CLIENT
,BB.TEXT_CONTRACT_NUMBER
,bb.text_username_employee_sales
,BB.EMP_ADDR,BB.CURRENT_ADDR_AFTER
,bb.date_decision
,AA.TYPE
FROM TRIGGER_52_FRAUD_ADD AA
JOIN ALL_APP_ADD_TRIGGER BB ON AA.CU_PROV||AA.CU_CITY||AA.CU_DIS=BB.CU_PRO_AP||BB.CU_CITY_AP||BB.CU_DIS_AP AND BB.DATE_DECISION-AA.DATE_DECISION BETWEEN -7 AND 7
AND ( AA.CODE_SALESROOM=BB.CODE_SALESROOM OR AA.SKP_EMPLOYEE_CONSULTANT=BB.SKP_EMPLOYEE_CONSULTANT)
AND AA.SKP_CLIENT!=BB.SKP_CLIENT
WHERE AA.TYPE='FAKE CURRENR ADDRESS';
COMMIT;

execute immediate'TRUNCATE TABLE TRIGGER_52_SIMI_FAKE_CURRENT' ;
--DROP TABLE TRIGGER_52_SIMI_FAKE_CURRENT ;
INSERT INTO TRIGGER_52_SIMI_FAKE_CURRENT-- ON COMMIT PRESERVE ROWS AS 
SELECT DISTINCT 
'SA' AS UNIT
,text_username_employee_sales
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR((7-(TO_CHAR(SYSDATE,'D')-1))+SYSDATE,'YYYY/MM/DD') AS WEEK_DETECT
,'52' AS CLASS
,'SIMILARLY ADD' AS TRIGGER_SOURCE
,'current addr: '||spc.current_addr_after ||' similar with: '||SPC.CONTRACT_NO||' confirmed not existing current addr: '||spc.cu_fraud_add
||' in the same two weeks and same POS/SA' AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,SPC.APP_CREDIT
,SPC.TEXT_CONTRACT_NUMBER
FROM TRIGGER_52_SAME_PRO_CITY SPC
WHERE UTL_MATCH.edit_distance_similarity(SPC.CU_FRAUD_ADD,SPC.CURRENT_ADDR_AFTER)>=75;
COMMIT;


---5.2 FRAUD CURRENT=APP CURRENT
---5.2 FRAUD CURRENT=APP CURRENT
execute immediate'TRUNCATE TABLE TRIGGER_52_SAME_PRO_CITY';
--DROP TABLE TRIGGER_52_SAME_PRO_CITY;
INSERT INTO TRIGGER_52_SAME_PRO_CITY-- ON COMMIT PRESERVE ROWS AS 
SELECT AA.SKP_CREDIT_CASE AS FRAUD_SKP_CREDIT
,AA.CU_FRAUD_ADD,AA.SKP_CLIENT AS FRAUD_CLIENT
,AA.EMP_ADDR AS FRAUD_EMP
,AA.TEXT_CONTRACT_NUMBER AS CONTRACT_NO
,BB.SKP_CREDIT_CASE AS APP_CREDIT,BB.SKP_CLIENT AS APP_CLIENT
,BB.TEXT_CONTRACT_NUMBER
,bb.text_username_employee_sales
,BB.EMP_ADDR,BB.CURRENT_ADDR_AFTER
,bb.date_decision
,AA.TYPE
FROM TRIGGER_52_FRAUD_ADD AA
JOIN ALL_APP_ADD_TRIGGER BB ON AA.CU_PROV||AA.CU_CITY||AA.CU_DIS=BB.CU_PRO_AP||BB.CU_CITY_AP||BB.CU_DIS_AP AND BB.DATE_DECISION-AA.DATE_DECISION BETWEEN -7 AND 7
AND ( AA.CODE_SALESROOM=BB.CODE_SALESROOM OR AA.SKP_EMPLOYEE_CONSULTANT=BB.SKP_EMPLOYEE_CONSULTANT)
AND AA.SKP_CLIENT!=BB.SKP_CLIENT
WHERE AA.TYPE!='FAKE CURRENR ADDRESS';
COMMIT;

execute immediate'TRUNCATE TABLE TRIGGER_52_SIMI_FRAUD_CURRENT';
--DROP TABLE TRIGGER_52_SIMI_FRAUD_CURRENT ;
INSERT INTO TRIGGER_52_SIMI_FRAUD_CURRENT --ON COMMIT PRESERVE ROWS AS 
SELECT DISTINCT 
'SA' AS UNIT
,text_username_employee_sales
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR((7-(TO_CHAR(SYSDATE,'D')-1))+SYSDATE,'YYYY/MM/DD') AS WEEK_DETECT
,'52' AS CLASS
,'SIMILARLY ADD' AS TRIGGER_SOURCE
,'current addr: '||spc.current_addr_after ||' similar with: '||SPC.CONTRACT_NO||' confirmed:'||SPC.TYPE|| ' current addr: '||spc.cu_fraud_add 
||' in the same two weeks and same POS/SA' AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,SPC.APP_CREDIT
,SPC.TEXT_CONTRACT_NUMBER
FROM TRIGGER_52_SAME_PRO_CITY SPC
WHERE UTL_MATCH.edit_distance_similarity(SPC.CU_FRAUD_ADD,SPC.CURRENT_ADDR_AFTER)>=75;
COMMIT;

---5.3 FRAUD EMP=APP EMP
---5.3 FRAUD EMP=APP EMP

execute immediate'TRUNCATE TABLE TRIGGER_52_SAME_PRO_CITY';
--DROP TABLE TRIGGER_52_SAME_PRO_CITY;
INSERT INTO TRIGGER_52_SAME_PRO_CITY --ON COMMIT PRESERVE ROWS AS 
SELECT AA.SKP_CREDIT_CASE AS FRAUD_SKP_CREDIT
,AA.CU_FRAUD_ADD,AA.SKP_CLIENT AS FRAUD_CLIENT
,AA.EMP_ADDR AS FRAUD_EMP
,AA.TEXT_CONTRACT_NUMBER as CONTRACT_NO
,BB.SKP_CREDIT_CASE AS APP_CREDIT,BB.SKP_CLIENT AS APP_CLIENT
,BB.TEXT_CONTRACT_NUMBER
,bb.text_username_employee_sales
,BB.EMP_ADDR,BB.CURRENT_ADDR_AFTER
,bb.date_decision
,AA.TYPE
FROM TRIGGER_52_FRAUD_ADD AA
JOIN ALL_APP_ADD_TRIGGER BB ON AA.EMP_PROV||AA.EMP_CITY||AA.EMP_DIS=BB.EMP_PRO||BB.EMP_CITY||BB.EMP_DISTRICT AND BB.DATE_DECISION-AA.DATE_DECISION BETWEEN -7 AND 7
AND ( AA.CODE_SALESROOM=BB.CODE_SALESROOM OR AA.SKP_EMPLOYEE_CONSULTANT=BB.SKP_EMPLOYEE_CONSULTANT)
AND AA.SKP_CLIENT!=BB.SKP_CLIENT
WHERE AA.TYPE!='FAKE CURRENR ADDRESS';
COMMIT;

execute immediate'TRUNCATE TABLE TRIGGER_52_SIMI_FRAUD_EMP' ;
--DROP TABLE TRIGGER_52_SIMI_FRAUD_EMP ;
INSERT INTO TRIGGER_52_SIMI_FRAUD_EMP-- ON COMMIT PRESERVE ROWS AS 
SELECT DISTINCT 
'SA' AS UNIT
,text_username_employee_sales
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR((7-(TO_CHAR(SYSDATE,'D')-1))+SYSDATE,'YYYY/MM/DD') AS WEEK_DETECT
,'52' AS CLASS
,'SIMILARLY ADD' AS TRIGGER_SOURCE
,'EMP addr: '||spc.emp_addr ||' similar with: '||SPC.CONTRACT_NO||' confirmed:'||SPC.TYPE|| ' EMP addr: '||spc.Fraud_Emp
||' in the same two weeks and same POS/SA' AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,SPC.APP_CREDIT
,SPC.TEXT_CONTRACT_NUMBER
FROM TRIGGER_52_SAME_PRO_CITY SPC
WHERE UTL_MATCH.edit_distance_similarity(SPC.FRAUD_EMP,SPC.EMP_ADDR)>=75;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
with base as (
SELECT UNIT
,TEXT_USERNAME_EMPLOYEE_SALES
,DATE_DETECT
,WEEK_DETECT
,CLASS
,TRIGGER_SOURCE
,listagg(trigger_value,'  #  ') within group (order by trigger_value) as TRGGER_VALUE
,TRIGGER_TYPE
,APP_CREDIT
,TEXT_CONTRACT_NUMBER
FROM (
SELECT * FROM TRIGGER_52_SIMI_FAKE_CURRENT
UNION
SELECT * FROM TRIGGER_52_SIMI_FRAUD_CURRENT
UNION
SELECT * FROM TRIGGER_52_SIMI_FRAUD_EMP
)
GROUP BY UNIT
,TEXT_USERNAME_EMPLOYEE_SALES
,DATE_DETECT
,WEEK_DETECT
,CLASS
,TRIGGER_SOURCE
,TRIGGER_TYPE
,APP_CREDIT
,TEXT_CONTRACT_NUMBER
)

select UNIT
,BB.TEXT_USERNAME_EMPLOYEE_SALES
,DATE_DETECT
,WEEK_DETECT
,CLASS
,TRIGGER_SOURCE
,CAST(DENSE_RANK()OVER(ORDER BY APP_CREDIT) AS VARCHAR(10))||'| '|| TRGGER_VALUE AS TRGGER_VALUE
,TRIGGER_TYPE
,APP_CREDIT
,BB.TEXT_CONTRACT_NUMBER
from base bb
join DM_ANTIFRAUD.Ft_Af_Credit_Case_Ad ACCA ON ACCA.SKP_CREDIT_CASE=bb.APP_CREDIT
WHERE ACCA.DATE_DECISION>=DATE '2016-01-01'  and ACCA.CODE_CREDIT_STATUS NOT IN ('d','t');
commit;
END; 


  PROCEDURE TRIGGER_53_VERIF_OK_WC_FAILED IS
  BEGIN
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '53 VERIF OK WC FAILED',SYSDATE FROM DUAL;
COMMIT;
/****************************************************************************/
--verification and welcome trigger
--20161013--Lina
--verification results is ('信息已确认','信息已经确认') but welcome call is 'unreached' :identify those contracts as 'bad contracts'
--SA who have 'bad contracts'>1
--SA who 'bad contracts'/'total contracts'>0.2
--trigger those SA's all 'bad contracts'
/****************************************************************************/
---1> CREATE DATASET
--DROP TABLE DATA_BASE;
--CREATE TABLE DATA_BASE AS 
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH DATA_BASE AS (
SELECT AD.*,WC.SKP_CREDIT_STATUS
FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD
JOIN 
(
      SELECT * 
      FROM 
      (
      SELECT DISTINCT bb.SKP_CREDIT_CASE,BB.SKP_CREDIT_TYPE,BB.DATE_DECISION,RANK()OVER(PARTITION BY bb.SKP_CREDIT_CASE ORDER BY bb.SKP_APPROVAL_STEP_STATUS DESC) AS RANK_
      FROM OWNER_DWH.F_APPROVAL_PROCESS_STEP_TT bb 
      JOIN OWNER_DWH.DC_APPROVAL_STEP_RESULT CC 
      ON BB.SKP_APPROVAL_STEP_RESULT=CC.SKP_APPROVAL_STEP_RESULT
      WHERE bb.DATE_DECISION>TRUNC(SYSDATE)-30
      AND CC.NAME_STEP='打移动电话' AND CC.NAME_RESULT IN ('信息已确认','信息已经确认')    
      )WHERE RANK_=1
)AA  ON AA.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE
AND AA.SKP_CREDIT_TYPE=AD.SKP_CREDIT_TYPE
AND AA.DATE_DECISION=AD.DATE_DECISION
--AND AD.FLAG_WC_UNREACHED='Y'
JOIN AP_ANTIFRAUD.Wc_Result WC----2018.10.25
ON AA.SKP_CREDIT_CASE=WC.SKP_CREDIT_CASE
AND AA.SKP_CREDIT_TYPE=WC.SKP_CREDIT_TYPE
AND AA.DATE_DECISION=WC.DATE_DECISION
AND WC.FLAG_UNREACH=1----2018.10.25

WHERE AD.DATE_DECISION>TRUNC(SYSDATE)-30
AND TRUNC(SYSDATE,'DD')-AA.DATE_DECISION BETWEEN 8 AND 14
AND AD.text_username_employee_sales<>'extreme'
/*AND AD.text_contract_number NOT IN
(SELECT * FROM HCCN_ZHOUE.WC_TRIGGERED_CONTR)*/
)

--2> PICK OUT TOP BAD SA
--DROP TABLE WC_VERI_DATA;
--CREATE TABLE WC_VERI_DATA AS 
,WC_VERI_DATA AS (
SELECT 
AD.text_username_employee_sales,
COUNT(*) AS APPLI_NUMBER,
COUNT(CASE WHEN AD.SKP_CREDIT_STATUS IN (2,3,5) THEN AD.skp_credit_case ELSE NULL END) AS BAD_CONT_NUMBER
FROM DATA_BASE AD 
GROUP BY 
AD.text_username_employee_sales
HAVING COUNT(CASE WHEN AD.SKP_CREDIT_STATUS IN (2,3,5) THEN AD.skp_credit_case ELSE NULL END)>1
)

--DROP TABLE TOP_BAD_SA;
--CREATE TABLE TOP_BAD_SA AS 
,TOP_BAD_SA AS (
SELECT * 
FROM 
(
    SELECT BSA.*,RANK() OVER(ORDER BY BSA.BAD_CONT_NUMBER DESC,BSA.BAD_CONT_NUMBER/TT.TOTAL_CONT_NUMBER DESC)  AS RANK_ 
    FROM 
    (
        SELECT 
        AD.text_username_employee_sales
        ,COUNT(CASE WHEN AD.code_credit_status IN ('a','k','n') THEN AD.skp_credit_case ELSE NULL END) AS TOTAL_CONT_NUMBER
        FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD
        JOIN WC_VERI_DATA SA ON AD.text_username_employee_sales=SA.TEXT_USERNAME_EMPLOYEE_SALES
        WHERE 
        TRUNC(SYSDATE,'DD')-AD.DATE_DECISION BETWEEN 8 AND 14
        GROUP BY AD.text_username_employee_sales HAVING COUNT(CASE WHEN AD.code_credit_status IN ('a','k','n') THEN AD.skp_credit_case ELSE NULL END)>1--approved contract number >1
    )TT
    JOIN WC_VERI_DATA BSA ON TT.text_username_employee_sales=BSA.TEXT_USERNAME_EMPLOYEE_SALES
    WHERE BSA.BAD_CONT_NUMBER/TT.TOTAL_CONT_NUMBER>=0.2
)BAD_SA
WHERE BAD_SA.RANK_<=20
)

SELECT 
'SA' AS UNIT,
DD.TEXT_USERNAME_EMPLOYEE_SALES AS SALES_ID,
TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
'53' AS CLASS,
'Verification result is ok, but Welcome call result unreached' AS TRIGGER_SOURCE,
--listagg contract no to trigger_value 20180305 lina
'SA:'||DD.TEXT_USERNAME_EMPLOYEE_SALES||' have bad contracts: '||LISTAGG(DD.TEXT_CONTRACT_NUMBER||'|')WITHIN GROUP(ORDER BY DD.SKP_CREDIT_CASE) OVER(PARTITION BY DD.TEXT_USERNAME_EMPLOYEE_SALES) AS  TRIGGER_VALUE,    
--'SA:'||DD.TEXT_USERNAME_EMPLOYEE_SALES||' have bad contract: '||DD.TEXT_CONTRACT_NUMBER  AS  TRIGGER_VALUE,    
'SOFT' AS TRIGGER_TYPE,
DD.SKP_CREDIT_CASE,
DD.TEXT_CONTRACT_NUMBER

FROM DATA_BASE DD
WHERE DD.TEXT_USERNAME_EMPLOYEE_SALES IN
(SELECT TEXT_USERNAME_EMPLOYEE_SALES FROM TOP_BAD_SA);
--check contract_no in  SQL server,only send those contracts not been triggered

INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'WEEKLY TRIGGER FINISH',SYSDATE FROM DUAL;
COMMIT;
END; 

  PROCEDURE TRIGGER_122_CANCEL_DD_1ST_DUE IS
  BEGIN
    
  --create two tables for Vivian 20180126
/*INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'ms_assign and faraway_pos',SYSDATE FROM DUAL;
COMMIT;
execute immediate'TRUNCATE TABLE f_ms_assign_temp';
INSERT INTO  f_ms_assign_temp
SELECT * FROM ap_antifraud.f_ms_assign;
execute immediate'TRUNCATE TABLE f_faraway_pos_temp';
INSERT INTO  f_faraway_pos_temp
SELECT * FROM ap_antifraud.f_faraway_pos;
COMMIT;*/

INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '122 CANCEL DD',SYSDATE FROM DUAL;
COMMIT;

-----------------------CLASS =122 ---------------------------------------------------
-----------------------CLASS =122 ---------------------------------------------------1MIN
--CHANGE 20180607
/*WITH PREVIOUS_WEEK_CANCEL AS (
SELECT \*+ materialize *\ FCA.skp_client,FCA.date_first_due,FCA.SKP_PRODUCT,FCA.text_contract_number,FCA.skp_employee_consultant,DD.SKP_CREDIT_CASE,DD.SKP_CREDIT_TYPE,DD.DATE_DECISION
,DD.DTIME_VALID_FROM--,DD.FLAG_DIRECT_DEBIT
--,ROW_NUMBER()OVER(PARTITION BY DD.SKP_CREDIT_CASE ORDER BY DD.DTIME_VALID_TO DESC) AS RNK_DD
FROM  OWNER_DWH.F_BANK_ACCOUNT_2_CREDCASE_TT DD 
JOIN OWNER_DWH.F_CONTRACT_AD FCA ON DD.SKP_CREDIT_CASE=FCA.SKP_CREDIT_CASE AND DD.SKP_CREDIT_TYPE=FCA.SKP_CREDIT_TYPE AND DD.DATE_DECISION=FCA.DATE_DECISION
JOIN OWNER_DWH.Dc_Credit_Case dcc ON DCC.SKP_CREDIT_CASE=FCA.skp_credit_case AND DCC.DATE_DECISION=FCA.date_decision AND DCC.SKP_CREDIT_TYPE=FCA.skp_credit_type
--JOIN ap_antifraud.cl_trigger_excute_time CT ON CT.CLASS='122' AND DTIME_VALID_FROM>=CT.MAX_DETECT and date_first_due>TRUNC(sysdate)
AND DTIME_VALID_FROM>=SYSDATE-7 AND date_first_due>TRUNC(sysdate)--DELETE AT 2017-09-18
WHERE FCA.flag_direct_debit_application='Y'  
AND FCA.flag_direct_debit_current='N' AND DD.FLAG_DIRECT_DEBIT='N'  AND DD.DTIME_VALID_TO>SYSDATE
AND FCA.date_decision>=DATE'2017-02-01'
AND DCC.date_decision>=DATE'2017-02-01'
AND FCA.date_first_due>=DATE'2017-03-01'
AND TRUNC(DTIME_VALID_FROM) BETWEEN FCA.DATE_DECISION+1 AND date_first_due-1
AND DCC.SKP_CREDIT_ACQUISITION_CHNL!=4--183066
AND FCA.skp_credit_status IN (2,5)
),
WEEK_CANCEL_EXT AS(
SELECT  DISTINCT PWC.SKP_CREDIT_CASE
 FROM PREVIOUS_WEEK_CANCEL PWC
JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD FCI  ON PWC.SKP_CLIENT=fci.skp_client AND FCI.date_decision<PWC.DATE_DECISION AND PWC.SKP_CREDIT_CASE!=FCI.skp_credit_case
 WHERE
 SUBSTR(PWC.TEXT_CONTRACT_NUMBER,-1)>1
AND FCI.skp_credit_status=2
AND FCI.cnt_days_past_due=0

UNION--add 20171128
SELECT  DISTINCT PWC.SKP_CREDIT_CASE\*,PWC.SKP_CLIENT,TO_CHAR(FCI.date_LAST_due,'DD') AS DATE_LAST_DUE,TO_CHAR(PWC.DTIME_VALID_FROM,'DD') AS DATE_VALID_FROM*\
 FROM PREVIOUS_WEEK_CANCEL PWC
JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD FCI  
ON PWC.SKP_CLIENT=fci.skp_client AND FCI.date_decision<PWC.DATE_DECISION AND PWC.SKP_CREDIT_CASE!=FCI.skp_credit_case 
AND TO_CHAR(PWC.DTIME_VALID_FROM,'DD')=TO_CHAR(FCI.date_last_due,'DD')
 WHERE
 SUBSTR(PWC.TEXT_CONTRACT_NUMBER,-1)>1
AND FCI.skp_credit_status IN (2,3)
),
PREVIOUS_WEEK_APP AS(
SELECT \*+ materialize *\  DD.date_first_due,DD.DTIME_VALID_FROM,DD.SKP_CREDIT_CASE,DD.text_contract_number,DD.skp_client, DD.skp_employee_consultant,DD.SKP_CREDIT_TYPE,DD.DATE_DECISION,
\*CASE WHEN APP.SKP_CLIENT IS NOT NULL THEN '是' ELSE '否' END AS CANCELLED,*\
CASE WHEN APP.SKP_CP_REQUEST_CHANNEL=1 THEN 'MOBILE_APP'
  WHEN APP.SKP_CP_REQUEST_CHANNEL=2 THEN 'WEBSITE' 
    WHEN CCAT.SKP_CLIENT IS NOT NULL THEN 'CS_PHONE' ELSE 'NULL' END AS CANCEL_CHANNEL\*,
ROW_NUMBER()OVER(PARTITION BY DD.SKP_CREDIT_CASE ORDER BY APP.DTIME_INSERTED DESC) AS RNK_APP*\
FROM  PREVIOUS_WEEK_CANCEL DD 
LEFT JOIN WEEK_CANCEL_EXT EXT ON DD.SKP_CREDIT_CASE=EXT.SKP_CREDIT_CASE 
LEFT JOIN OWNER_DWH.F_CLIENT_REQUEST_ONLINE_TT APP ON DD.SKP_CLIENT=APP.skp_client
AND APP.SKP_CP_REQUEST_TYPE=3  AND  SUBSTR(APP.ID_SOURCE,1,9)= 'DDCHANGE.'AND TRUNC(DD.DTIME_VALID_FROM)=TRUNC(APP.DTIME_INSERTED)
AND APP.SKP_CP_REQUEST_CHANNEL IN (1,2)----1.MOBILE; 2.WEB
--AND DD.RNK_DD=1 --and dd.FLAG_DIRECT_DEBIT='N'
AND APP.SKP_CREDIT_CASE!=-1
LEFT JOIN  owner_dwh.F_CAMPAIGN_CLIENT_ACTIVITY_TT CCAT ON DD.SKP_CLIENT=CCAT.SKP_CLIENT
AND CCAT.SKP_CAMPAIGN IN (236,242)--DD信息变更
AND CCAT.FLAG_DELETED='N'
AND CCAT.SKP_CAMPAIGN_PROCESS_STEP IN (2009,2011)   --DD 信息变更请求
AND CCAT.SKP_CAMPAIGN_ACTIVITY_RESULT=32--取消DD
WHERE EXT.SKP_CREDIT_CASE IS NULL
)
SELECT 'SA' AS UNIT
,EE.TEXT_USERNAME_EMPLOYEE AS TEXT_USERNAME_EMPLOYEE_SALES
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT
,'122' AS CLASS
,'CANCEL DD BEFORE FIRST DUE' AS TRIGGER_SOURCE
,'CLIENT'||' FIRST_DUE_DATE:'||TO_CHAR(DD.DATE_FIRST_DUE, 'YYYY/MM/DD')||'; CANCEL DD ON DATE:'||TO_CHAR(DD.DTIME_VALID_FROM,'YYYY/MM/DD HH24:MI:SS')|| ' CANCELLED TYPE:'||DD.CANCEL_CHANNEL 
||' AND BIG DATA IS: '||CASE WHEN AA.TEXT_VALUE IS NOT NULL THEN AA.TEXT_VALUE ELSE ' NULL' END  AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,DD.SKP_CREDIT_CASE
,DD.TEXT_CONTRACT_NUMBER
FROM OWNER_DWH.F_CLIENT_AD CLI
JOIN PREVIOUS_WEEK_APP DD ON CLI.SKP_CLIENT=DD.SKP_CLIENT
JOIN OWNER_DWH.DC_EMPLOYEE EE ON DD.skp_employee_consultant=EE.SKP_EMPLOYEE
LEFT JOIN OWNER_DWH.F_APPRSTEP_ADDITIONAL_INFO_TT AA ON DD.skp_credit_case=AA.SKP_CREDIT_CASE AND DD.skp_credit_type=AA.SKP_CREDIT_TYPE AND AA.DATE_DECISION=DD.date_decision
AND AA.SKP_APPRSTEP_ADD_INFO=5516--ITEMNAME 
AND AA.DATE_DECISION>=DATE'2017-02-01' AND (INSTR(AA.TEXT_VALUE,'黑名单')>0 or INSTR(AA.TEXT_VALUE,'灰名单')>0 or INSTR(AA.TEXT_VALUE,'平台')>0)
WHERE 
\*DD.RNK_APP=1 
AND*\ 
NOT EXISTS (SELECT 1 FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS BB WHERE BB.SKP_CREDIT_CASE=DD.SKP_CREDIT_CASE AND BB.CLASS='122');
COMMIT;*/

--20180621
/*INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH CS_CANCEL AS 
(
SELECT \*+ materialize *\  
DISTINCT FCA.skp_credit_case, max(CCAT.DTIME_INSERTED ) AS DTIME_EVENT,
AD.text_contract_number,
FCA.skp_client, FCA.SKP_CREDIT_TYPE,
FCA.DATE_DECISION,'CS_CANCEL' AS FLAG
FROM owner_dwh.F_CAMPAIGN_CLIENT_ACTIVITY_TT CCAT 
--JOIN OWNER_DWH.F_CONTRACT_AD FCA     ON CCAT.SKP_CLIENT=FCA.skp_client
JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD FCA ON FCA.skp_client=CCAT.SKP_CLIENT
JOIN OWNER_DWH.F_CONTRACT_BASE_AD AD ON FCA.skp_credit_case=AD.skp_credit_case
  AND FCA.skp_credit_type=AD.skp_credit_type
  AND FCA.date_decision=AD.date_decision
  AND AD.skp_credit_status=2

JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME TIM ON TIM.CLASS='122'
AND TRUNC(CCAT.DTIME_INSERTED ) >= TIM.MAX_DETECT
AND CCAT.SKP_CAMPAIGN IN (236,242)--DD信息变更
AND CCAT.FLAG_DELETED='N'
AND CCAT.SKP_CAMPAIGN_PROCESS_STEP IN (2009,2011)   --DD 信息变更请求
AND CCAT.SKP_CAMPAIGN_ACTIVITY_RESULT=32--取消DD
WHERE FCA.date_decision>=TRUNC(SYSDATE)-60
AND TRUNC(CCAT.DTIME_INSERTED ) BETWEEN FCA.DATE_DECISION+1 AND fca.date_first_due-1
AND TRUNC(CCAT.DTIME_INSERTED )>=SYSDATE-10
AND AD.flag_direct_debit_application='Y'  
AND AD.flag_direct_debit_current='N'    
GROUP BY FCA.skp_credit_case, 
AD.text_contract_number,
FCA.skp_client, FCA.SKP_CREDIT_TYPE,
FCA.DATE_DECISION,'CS_CANCEL'  
)

,CAPP_CANCEL AS
(
SELECT DISTINCT FCA.skp_credit_case, MAX(CAPP.DTIME_EVENT) AS DTIME_EVENT
,AD.text_contract_number,
FCA.skp_client, FCA.SKP_CREDIT_TYPE,
FCA.DATE_DECISION, 'CAPP_CANCEL' AS FLAG
FROM OWNER_DWH.f_Mobile_App_Event_Log_Tt CAPP
--JOIN OWNER_DWH.F_CONTRACT_AD FCA     ON CAPP.SKP_CLIENT=FCA.skp_client
JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD FCA ON FCA.skp_client=CAPP.SKP_CLIENT
JOIN OWNER_DWH.F_CONTRACT_BASE_AD AD ON FCA.skp_credit_case=AD.skp_credit_case
  AND FCA.skp_credit_type=AD.skp_credit_type
  AND FCA.date_decision=AD.date_decision
  
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME TIM ON TIM.CLASS='122'
AND TRUNC(CAPP.DTIME_EVENT) >= TIM.MAX_DETECT
WHERE CAPP.SKP_MOBILE_APP_EVENT_TYPE=74   ------------DD – cancelled
AND FCA.date_decision>= TRUNC(SYSDATE)-60
AND TRUNC( CAPP.DTIME_EVENT ) BETWEEN FCA.DATE_DECISION+1 AND fca.date_first_due-1
AND AD.flag_direct_debit_application='Y'  
AND TRUNC(CAPP.DTIME_EVENT)>=SYSDATE-10
AND AD.flag_direct_debit_current='N'   
GROUP BY  FCA.skp_credit_case 
,AD.text_contract_number,
FCA.skp_client, FCA.SKP_CREDIT_TYPE,
FCA.DATE_DECISION, 'CAPP_CANCEL' 
)

,ONLINE_CANCEL AS
(
SELECT DISTINCT FCA.skp_credit_case,  max(fn.DATE_NOTE_CREATED)  AS DTIME_EVENT
,AD.text_contract_number,
FCA.skp_client, FCA.SKP_CREDIT_TYPE,
FCA.DATE_DECISION, 'ONLINE_CANCEL' AS FLAG
FROM OWNER_DWH.f_Business_Note_Tt fn
--JOIN OWNER_DWH.F_CONTRACT_AD FCA     ON FN.SKP_CLIENT=FCA.skp_client
JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD FCA ON FCA.skp_client=FN.SKP_CLIENT
JOIN OWNER_DWH.F_CONTRACT_BASE_AD AD ON FCA.skp_credit_case=AD.skp_credit_case
  AND FCA.skp_credit_type=AD.skp_credit_type
  AND FCA.date_decision=AD.date_decision
  
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME TIM ON TIM.CLASS='122'
AND TRUNC(fn.DATE_NOTE_CREATED) >= TIM.MAX_DETECT
WHERE  FCA.date_decision>=TRUNC(SYSDATE)-60
AND fn.SKP_NOTE_TYPE=1806 AND fn.SKP_EMPLOYEE=57469346  --------在线更改
AND TRUNC(  fn.DATE_NOTE_CREATED) BETWEEN FCA.DATE_DECISION+1 AND fca.date_first_due-1
AND TRUNC( fn.DATE_NOTE_CREATED)>=SYSDATE-10
AND AD.flag_direct_debit_application='Y'  
AND AD.flag_direct_debit_current='N'   
GROUP BY FCA.skp_credit_case 
,AD.text_contract_number,
FCA.skp_client, FCA.SKP_CREDIT_TYPE,
FCA.DATE_DECISION, 'ONLINE_CANCEL'  
)

,DD_ABNORMAL AS
(
SELECT \*+ materialize *\  
 DISTINCT  FCA.skp_credit_case,MAX(DD.DTIME_DD_RESPONSE_INSERTED)  AS DTIME_EVENT ,AD.text_contract_number, 
FCA.skp_client, FCA.SKP_CREDIT_TYPE,
FCA.DATE_DECISION, DD.TEXT_RESULT_NOTE AS FLAG
FROM OWNER_DWH.F_DIRECT_DEBIT_RESPONSE_TT  DD
--JOIN OWNER_DWH.F_CONTRACT_AD FCA     ON DD.SKP_CLIENT=FCA.skp_client
JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD FCA ON FCA.skp_client=DD.SKP_CLIENT
JOIN OWNER_DWH.F_CONTRACT_BASE_AD AD ON FCA.skp_credit_case=AD.skp_credit_case
  AND FCA.skp_credit_type=AD.skp_credit_type
  AND FCA.date_decision=AD.date_decision
  
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME TIM ON TIM.CLASS='122'
AND TRUNC(DD.DTIME_DD_RESPONSE_INSERTED) >= TIM.MAX_DETECT
LEFT JOIN  OWNER_DWH.F_APPLICATION_OCR_DATA_TT OCR ON OCR.TEXT_BANK_CARD_NUMBER=AD.text_bank_account_current   AND OCR.TEXT_OCR_DATA_TYPE='BANK'
WHERE FCA.date_decision>=TRUNC(SYSDATE)-60
AND TRUNC(DD.DTIME_DD_RESPONSE_INSERTED ) BETWEEN FCA.DATE_DECISION+1 AND fca.date_first_due-1
AND TRUNC(DD.DTIME_DD_RESPONSE_INSERTED)>=SYSDATE-10
AND DD.SKP_DIRECT_DEBIT_RESULT IN 
   (--784,--携带账号户名与中心协议库不一致
  154,--携带账号户名与中心协议库不一致
  66,--查发卡行
  216,--户名不符/证件信息有误
  181,--无效卡号
  689,--持卡人信息有误
  695,--交易失败，请联系发卡行
  7,--账号/卡号不合法
  661,--户名不一致
  737,--卡号无效，请确认后输入
  62,--查发卡行
  69,--查询账/卡号开户省失败!
  63,--查发卡行
  764,--验证失败（姓名有误）
  240,--卡被冻结
  749,--卡号校验失败
  694,--当前银行卡不支持该业务，请联系发卡行
  738,--该卡已冻结，请联系发卡行
  4,--帐户冻结
  763,--验证失败（卡号有误）
  690,--银行卡已过有效期，请联系发卡行
  765,--验证失败（身份证号有误）
  12,--账户已关户
  772,--暂不支持信用卡交易 
  185,--无效账号/卡号!
  133,--查询他行账户支付行号失败 / 扣款金额不允许为0
  68,--查询他行账户支付行号失败 / 扣款金额不允许为0
  710,--该卡已被注销
  247 --卡已冻结
  )
AND OCR.SKP_CREDIT_CASE IS NULL 
group by   FCA.skp_credit_case,  AD.text_contract_number, 
FCA.skp_client, FCA.SKP_CREDIT_TYPE,
FCA.DATE_DECISION, DD.TEXT_RESULT_NOTE  
)

,FINAL_DD AS
(
SELECT * FROM CS_CANCEL 
UNION
SELECT * FROM CAPP_CANCEL 
UNION
SELECT * FROM DD_ABNORMAL 
UNION
SELECT * FROM ONLINE_CANCEL
)

,FINAL_DDD AS
(
SELECT   skp_credit_case,  DTIME_EVENT , text_contract_number, 
 skp_client,  SKP_CREDIT_TYPE,
DATE_DECISION,  FLAG,
LISTAGG ( FLAG, ',' ) WITHIN GROUP( ORDER BY   FLAG )  as trigger_value
FROM FINAL_DD
GROUP BY skp_credit_case,  DTIME_EVENT , text_contract_number, 
 skp_client,  SKP_CREDIT_TYPE,
DATE_DECISION,  FLAG
)


SELECT 'SA' AS UNIT
,CLI.TEXT_USERNAME_EMPLOYEE_SALES  
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT
,'122' AS CLASS
,'CANCEL DD BEFORE FIRST DUE' AS TRIGGER_SOURCE
,'CANCEL DD ON DATE:'||TO_CHAR(DD.DTIME_EVENT,'YYYY/MM/DD HH24:MI:SS')|| ' CANCELLED TYPE:'||DD.trigger_value   AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,CLI.SKP_CREDIT_CASE
,CLI.TEXT_CONTRACT_NUMBER
FROM FINAL_DDD DD
JOIN DM_ANTIFRAUD.FT_AF_CREDIT_CASE_AD CLI ON CLI.skp_credit_case=DD.skp_credit_case  
WHERE   CLI.CODE_CREDIT_STATUS='a' AND 
NOT EXISTS (SELECT 1 FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS BB WHERE BB.SKP_CREDIT_CASE=DD.SKP_CREDIT_CASE AND BB.CLASS='122');
COMMIT;*/

END;



PROCEDURE TRIGGER_162_FRAUD_MATRIX  IS
  BEGIN
    
  INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '162 FRAUD MATRIX',SYSDATE FROM DUAL;
COMMIT;

INSERT /*+ append*/  INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH BASE AS
(SELECT A.SKP_CREDIT_CASE,  a.DATE_DECISION,CC.SKP_CREDIT_STATUS,CC.SKP_PRODUCT_CHANNEL
              ,SCL.CODE_ADDITIONAL_INFO,SCL.NAME_ADDITIONAL_INFO,A.TEXT_VALUE ,CC.text_contract_number
  FROM OWNER_DWH.DC_CREDIT_CASE CC
  JOIN OWNER_DWH.f_Apprstep_Additional_Info_Tt A ON CC.SKP_CREDIT_CASE=A.SKP_CREDIT_CASE
  AND CC.SKP_CREDIT_TYPE=A.SKP_CREDIT_TYPE
  AND CC.SKP_CLIENT=A.SKP_CLIENT
  AND CC.DATE_DECISION=A.DATE_DECISION
  AND CC.SKP_APPLICATION=A.SKP_APPLICATION
  AND CC.DATE_DECISION>=SYSDATE-20
  AND A.DATE_DECISION>=SYSDATE-20
  AND CC.SKP_CREDIT_ACQUISITION_CHNL<>4--183066--EXTREME
  AND CC.SKP_PRODUCT_CHANNEL IN(3,1)         --- POSLXSELL
  AND A.SKP_APPRSTEP_ADD_INFO IN (14932,14934,14935) --( 5516,5518,5519 )--20180627
  JOIN OWNER_DWH.CL_APPRSTEP_ADD_INFO SCL ON SCL.SKP_APPRSTEP_ADD_INFO=A.SKP_APPRSTEP_ADD_INFO 
  JOIN   AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='162' ----!!!
  WHERE  
    CC.DATE_DECISION>=SYSDATE-20
  AND A.DATE_DECISION>=SYSDATE-20
  AND FLOOR(SYSDATE-CC.DATE_DECISION) BETWEEN 0 AND EX.DAYS
  AND FLOOR(SYSDATE-A.DATE_DECISION) BETWEEN 0 AND EX.DAYS
  AND CC.DATE_DECISION>=SYSDATE-20
  AND A.DATE_DECISION>=SYSDATE-20
)      
  ,FM_CONTRACTS AS 
(SELECT * FROM base 
PIVOT (MAX(text_value) FOR CODE_ADDITIONAL_INFO IN ('a8_PlatformDetail'AS  PlatformDetail,'a8_ItemName'AS ItemName,'a8_PlatformCount'AS PlatformCount))aa)

, CONTRACTS_1M AS  
(
    SELECT aa.*
    ,CASE WHEN cnt_=0 THEN SUBSTR(platformcount,1,1) 
          ELSE SUBSTR(platformcount, REGEXP_INSTR(platformcount,'#',1,cnt_,1,'i'),DECODE(REGEXP_INSTR(platformcount,'#',1,cnt_+1,1,'i'),0,LENGTH(platformcount)+1,REGEXP_INSTR(platformcount,'#',1,cnt_+1,0,'i'))-REGEXP_INSTR(platformcount,'#',1,cnt_,1,'i'))END AS CNT_PF
    ,CASE WHEN cnt_=0 THEN SUBSTR(platformdetail,1,REGEXP_INSTR(platformdetail,']')) 
          ELSE SUBSTR(platformdetail,REGEXP_INSTR(platformdetail,'#',1,cnt_,1,'i'),REGEXP_INSTR(platformdetail,']',REGEXP_INSTR(platformdetail,'#',1,cnt_,1,'i'))-REGEXP_INSTR(platformdetail,'#',1,cnt_))END AS PF
    FROM 
        (
            SELECT aa.*
            ,REGEXP_COUNT(ItemName,'#')-REGEXP_COUNT(ItemName,'#',INSTR(ItemName, '1个月内申请人在多个平台申请借款'),'i')AS cnt_
            FROM FM_CONTRACTS aa  
            WHERE aa.ItemName LIKE '%1个月内申请人在多个平台申请借款%' AND
            AA.ItemName LIKE '%黑%'
        ) AA
)
,CONTRACTS_1M_ORD AS
(
    SELECT   GG.*,RANK()OVER(PARTITION BY  SKP_CREDIT_CASE ORDER BY CNT_ DESC) AS ORD
    FROM   CONTRACTS_1M   GG
    WHERE (SKP_PRODUCT_CHANNEL=3 AND CNT_>=10) OR  (SKP_PRODUCT_CHANNEL=1  AND CNT_>=8) 
    AND  SKP_CREDIT_STATUS=2 
) 
  
SELECT 'SA' AS UNIT
,GG.text_username_employee_sales  
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'162'AS CLASS  ------!!!
,'FRAUD MATRIX' AS TRIGGER_SOURCE
,'HIT MULTI PLATFORM WITHIN 1 MONTH' ||': '||CNT_||'+'||'HIT FRAUD MATRIX BLACKLIST' AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,A.SKP_CREDIT_CASE AS FIRST_SKP_CREDIT_CASE
,GG.text_contract_number AS FIRST_CONTRACT
FROM CONTRACTS_1M_ORD A 
JOIN  DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD GG ON GG.SKP_CREDIT_CASE=A.SKP_CREDIT_CASE
WHERE     GG.DATE_DECISION>SYSDATE-20
 AND (SKP_PRODUCT_CHANNEL=3 AND CNT_>=10) OR  (SKP_PRODUCT_CHANNEL=1  AND CNT_>=8) 
 AND  SKP_CREDIT_STATUS=2 
 AND ORD<=120;
 COMMIT;
END;
    

   PROCEDURE  TRIGGER_182_CS_COMPLAINT IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_182_CS_COMPLAINT';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
    
        INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '182 CS Complaint',SYSDATE FROM DUAL;
COMMIT;


INSERT INTO AP_ANTIFRAUD.F_CS_FRAUD_COMPLAINT 
with  cs_call_recevie AS 
(
SELECT   /*+ leading(cmp) cardinality(act 4000) use_hash(cmp act ) */
      CMP.NAME_CAMPAIGN AS CAMPAIGN_NAME
     ,ACT.DTIME_ACTIVITY_START AS EVENT_DATE
    ,ACC.TEXT_BIRTH_NUMBER AS IDENT
    ,ACC.NAME_LAST AS CLIENT_NAME
    ,ACT.TEXT_STAGE_RESULT_NOTE AS RESULT_NOTE
,ACT.SKP_CAMPAIGN_ACCOUNT
,act.SKF_CAMPAIGN_CLIENT_ACTIVITY
,act.SKF_CAMPAIGN_CLIENT
FROM OWNER_DWH.DC_CAMPAIGN_ACCOUNT ACC
JOIN OWNER_DWH.F_CAMPAIGN_CLIENT_ACTIVITY_TT ACT ON ACC.SKP_CAMPAIGN_ACCOUNT = ACT.SKP_CAMPAIGN_ACCOUNT AND ACC.SKP_CLIENT = ACT.SKP_CLIENT AND ACT.DTIME_ACTIVITY_START>=TRUNC(SYSDATE-10)
JOIN OWNER_DWH.DC_CAMPAIGN CMP ON ACT.SKP_CAMPAIGN = CMP.SKP_CAMPAIGN AND ACT.SKP_CAMPAIGN_TYPE=CMP.SKP_CAMPAIGN_TYPE AND act.dtime_campaign_valid_from = cmp.dtime_campaign_valid_from 
AND ACT.SKP_CAMPAIGN in (53, 54,144917,145617) 
AND act.SKP_CAMPAIGN_PROCESS_STEP IN (1667, 1888,32076,32544)
JOIN ap_antifraud.cl_trigger_excute_time cl on cl.class='182' 
WHERE  ACT.DTIME_ACTIVITY_START>=cl.max_detect
)

SELECT BB.*
FROM (
SELECT /*+ materialize */
       act.CAMPAIGN_NAME
    --   ,WF.NAME_CAMPAIGN_PROCESS_STEP AS STAGE_NAME
       ,ACT.EVENT_DATE
       ,ACIF.TEXT_ACTIVITY_INFO AS CONTRACT_NO
       ,act. IDENT
       ,act.CLIENT_NAME
       ,ACI.TEXT_ACTIVITY_INFO AS C10_COMPLAIN_DETAIL
       ,IIT.NAME_CAMPAIGN_INFO_ITEM AS COMPLAINT_CONTENTS
       ,ACT.RESULT_NOTE
       ,LIIT.SKP_CAMPAIGN_INFO_ITEM AS C1_NEED_IV
      ,IITS.NAME_CAMPAIGN_INFO_ITEM AS CS_SOURCE
       ,CREDIT.skp_credit_case 
       ,CREDIT.date_decision AS DATE_RATIF
       ,CREDIT.skp_client AS SKP_CLIENT
      ,row_number()over(partition by ACIF.TEXT_ACTIVITY_INFO order by event_date desc ) as ord
FROM cs_call_recevie act
LEFT JOIN OWNER_DWH.F_CAMPAIGN_ACTIVITY_INFO_TT ACI ON ACT.SKP_CAMPAIGN_ACCOUNT = ACI.SKP_CAMPAIGN_ACCOUNT -- AND act.dtime_campaign_valid_from = aci.dtime_campaign_valid_from
AND ACT.SKF_CAMPAIGN_CLIENT_ACTIVITY=ACI.SKF_CAMPAIGN_CLIENT_ACTIVITY
AND ACT.SKF_CAMPAIGN_CLIENT=ACI.SKF_CAMPAIGN_CLIENT 
and ACI.SKP_CAMPAIGN_INFO = 7411 ----C10.1投诉详情
--and ACI.SKP_CAMPAIGN_INFO = 10 ----C10 投诉详情  

LEFT JOIN OWNER_DWH.F_CAMPAIGN_ACTIVITY_INFO_TT ACS ON ACT.SKP_CAMPAIGN_ACCOUNT = ACS.SKP_CAMPAIGN_ACCOUNT
AND ACT.SKF_CAMPAIGN_CLIENT_ACTIVITY=ACS.SKF_CAMPAIGN_CLIENT_ACTIVITY
AND ACT.SKF_CAMPAIGN_CLIENT=ACS.SKF_CAMPAIGN_CLIENT
and ACS.SKP_CAMPAIGN_INFO = 285 ----C4 投诉来源
--and ACS.SKP_CAMPAIGN_INFO = 7404 ----升级案例

LEFT JOIN OWNER_DWH.F_CAMPAIGN_ACTIVITY_INFO_TT ACIE ON  ACT.SKF_CAMPAIGN_CLIENT_ACTIVITY = ACIE.SKF_CAMPAIGN_CLIENT_ACTIVITY
AND ACT.SKP_CAMPAIGN_ACCOUNT = ACIE.SKP_CAMPAIGN_ACCOUNT  
AND ACT.SKF_CAMPAIGN_CLIENT=ACIE.SKF_CAMPAIGN_CLIENT
AND ACIE.SKP_CAMPAIGN_INFO =7401--Ca投诉内容 / --168 ---C5.1 投诉内容 

LEFT JOIN OWNER_DWH.F_CAMPAIGN_ACTIVITY_INFO_TT ACIF ON ACT.SKF_CAMPAIGN_CLIENT_ACTIVITY = ACIF.SKF_CAMPAIGN_CLIENT_ACTIVITY 
AND ACT.SKP_CAMPAIGN_ACCOUNT = ACIF.SKP_CAMPAIGN_ACCOUNT  
AND ACT.SKF_CAMPAIGN_CLIENT=ACIF.SKF_CAMPAIGN_CLIENT
 AND ACIF.SKP_CAMPAIGN_INFO = 617 ----合同号  
 
LEFT JOIN OWNER_DWH.F_CAMPAIGN_ACTIVITY_INFO_TT ACIG ON ACT.SKF_CAMPAIGN_CLIENT_ACTIVITY =ACIG.SKF_CAMPAIGN_CLIENT_ACTIVITY 
AND ACT.SKP_CAMPAIGN_ACCOUNT = ACIG.SKP_CAMPAIGN_ACCOUNT  
AND ACT.SKF_CAMPAIGN_CLIENT=ACIG.SKF_CAMPAIGN_CLIENT
AND ACIG.SKP_CAMPAIGN_INFO = 4901 ----C1是否需要调查    
                                          
LEFT JOIN OWNER_DWH.F_CAMPAIGN_ACT_INFO_ITEM_TT AIIT  ON AIIT.SKF_CAMPAIGN_ACTIVITY_INFO=ACIE.SKF_CAMPAIGN_ACTIVITY_INFO
AND AIIT.SKP_CAMPAIGN_ACCOUNT=ACIE.SKP_CAMPAIGN_ACCOUNT

LEFT JOIN OWNER_DWH.CL_CAMPAIGN_INFO_ITEM IIT ON AIIT.SKP_CAMPAIGN_INFO_ITEM = IIT.SKP_CAMPAIGN_INFO_ITEM  
LEFT JOIN OWNER_DWH.CL_CAMPAIGN_INFO_ITEM LIIT  ON ACIG.SKP_CAMPAIGN_INFO = LIIT.SKP_CAMPAIGN_INFO AND LIIT.SKP_CAMPAIGN_INFO_ITEM = 8401 --C1'否，风控部 Risk' 

---------------------------
LEFT JOIN OWNER_DWH.F_CAMPAIGN_ACT_INFO_ITEM_TT AIITS  ON AIITS.SKF_CAMPAIGN_ACTIVITY_INFO=ACS.SKF_CAMPAIGN_ACTIVITY_INFO
AND AIITS.SKP_CAMPAIGN_ACCOUNT=ACS.SKP_CAMPAIGN_ACCOUNT
LEFT JOIN OWNER_DWH.CL_CAMPAIGN_INFO_ITEM IITS ON AIITS.SKP_CAMPAIGN_INFO_ITEM = IITS.SKP_CAMPAIGN_INFO_ITEM
JOIN OWNER_DWH.DC_CREDIT_CASE CREDIT ON CREDIT.text_contract_number=ACIF.TEXT_ACTIVITY_INFO
)BB
WHERE instr(complaint_contents,'欺诈调查',1,1) >0 AND instr(complaint_contents,'否认申请',1,1) =0 AND ORD=1;
COMMIT;

--BIG CHANGE 20180323
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH PREBASE AS
 (SELECT /*+materialize use_hash(CC,FACC,TRI)*/
   CC.*,
   FACC.TEXT_USERNAME_EMPLOYEE_SALES,
   FACC.TEXT_USERNAME_SUPERIOR,
   FACC.CODE_SALESROOM,
   FACC.NAME_SALESROOM,
   FACC.DATE_DECISION,
   'cs_source' || ': ' || CC.CS_SOURCE || CC.CLIENT_NAME || CC.IDENT ||
   TO_CHAR(CC.EVENT_DATE, 'yyyy-mm-dd') || ', ' || CC.COMPLAINT_CONTENTS || ': ' ||
   CC.RESULT_NOTE AS NOTE,
   CASE
     WHEN CC.COMPLAINT_CONTENTS LIKE '%三方平台%' OR
          CC.COMPLAINT_CONTENTS LIKE '%冒充%' OR
          CC.COMPLAINT_CONTENTS LIKE '%套现%' OR
          CC.COMPLAINT_CONTENTS LIKE '%信息泄露%' OR
          CC.COMPLAINT_CONTENTS LIKE '%虚假宣传%' OR
          CC.RESULT_NOTE LIKE '%三方平台%' OR
          CC.RESULT_NOTE LIKE '%学生%' THEN
      'FLEVEL_1'
     WHEN CC.COMPLAINT_CONTENTS LIKE '%争议合同%' OR
          CC.COMPLAINT_CONTENTS LIKE '%否认签字%' OR
          CC.COMPLAINT_CONTENTS LIKE '%未经客户允许%' OR
          CC.COMPLAINT_CONTENTS LIKE '%否认提货%' OR
          CC.COMPLAINT_CONTENTS LIKE '%欺诈%价格%' THEN
      'FLEVEL_2'
     WHEN CC.COMPLAINT_CONTENTS LIKE '%信息造假%' OR
          CC.COMPLAINT_CONTENTS LIKE '%收客户款项%' OR
          CC.COMPLAINT_CONTENTS LIKE '%收取现金%' THEN
      'FLEVEL_3'
   END AS FLEVEL
    FROM AP_ANTIFRAUD.F_CS_FRAUD_COMPLAINT CC
    JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC
      ON FACC.SKP_CREDIT_CASE = CC.SKP_CREDIT_CASE
     AND FACC.DATE_DECISION = CC.DATE_RATIF
     JOIN OWNER_DWH.DC_CREDIT_CASE DC ON FACC.skp_credit_case=DC.SKP_CREDIT_CASE
     AND FACC.skp_credit_type=DC.SKP_CREDIT_TYPE
     AND FACC.date_decision=DC.DATE_DECISION
     AND DC.SKP_CREDIT_ACQUISITION_CHNL<>2
    LEFT JOIN AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS TRI
      ON TRI.SKP_CREDIT_CASE = CC.SKP_CREDIT_CASE
     AND TRI.DATE_DECISION = CC.DATE_RATIF
     AND (TRI.CLASS = '182' OR TRI.ACTION = 'IV')
   WHERE CC.EVENT_DATE > TRUNC(SYSDATE) - 60
     AND (LENGTH(CC.RESULT_NOTE) >= 100 OR
         (LENGTH(CC.RESULT_NOTE) >= 80 AND
         UPPER(CC.RESULT_NOTE) NOT LIKE '%SMS%'))
     AND TRI.SKP_CREDIT_CASE IS NULL)

,BASE AS
 (SELECT /*+materialize*/
   *
    FROM PREBASE
   WHERE (TEXT_USERNAME_EMPLOYEE_SALES NOT IN
         ('capp', 'homer_o2o', 'extreme') OR FLEVEL = 'FLEVEL_1')
     AND FLEVEL IS NOT NULL
   )

,FLEVEL_1 AS --online contracts are categorized into CITY
 (SELECT /*+materialize*/
   TEXT_USERNAME_EMPLOYEE_SALES,
   FLEVEL,
   CAST(COUNT(DISTINCT SKP_CREDIT_CASE) AS VARCHAR2(10)) AS CNT_CONTR
    FROM BASE
   WHERE EVENT_DATE > TRUNC(SYSDATE) - 30
     AND FLEVEL = 'FLEVEL_1'
   GROUP BY TEXT_USERNAME_EMPLOYEE_SALES, FLEVEL)

,
SA AS
 (SELECT /*+materialize*/
   TEXT_USERNAME_EMPLOYEE_SALES,
   FLEVEL,
   CAST(COUNT(DISTINCT SKP_CREDIT_CASE) AS VARCHAR2(10)) AS CNT_CONTR
    FROM BASE
   WHERE EVENT_DATE > TRUNC(SYSDATE) - 30
     AND FLEVEL = 'FLEVEL_2'
   GROUP BY TEXT_USERNAME_EMPLOYEE_SALES, FLEVEL
  HAVING COUNT(DISTINCT SKP_CREDIT_CASE) >= 3
  
  UNION
  SELECT /*+materialize*/
   TEXT_USERNAME_EMPLOYEE_SALES,
   FLEVEL,
   CAST(COUNT(DISTINCT SKP_CREDIT_CASE) AS VARCHAR2(10)) AS CNT_CONTR
    FROM BASE
   WHERE EVENT_DATE > TRUNC(SYSDATE) - 30
     AND FLEVEL = 'FLEVEL_3'
   GROUP BY TEXT_USERNAME_EMPLOYEE_SALES, FLEVEL
  HAVING COUNT(DISTINCT SKP_CREDIT_CASE) >= 5)

,
POS AS
 (SELECT /*+materialize use_hash(TRI,SA)*/
   TRI.CODE_SALESROOM,
   TRI.FLEVEL,
   CAST(COUNT(DISTINCT TRI.SKP_CREDIT_CASE) AS VARCHAR2(10)) AS CNT_CONTR
    FROM BASE TRI
    LEFT JOIN SA
      ON TRI.TEXT_USERNAME_EMPLOYEE_SALES = SA.TEXT_USERNAME_EMPLOYEE_SALES
     AND TRI.FLEVEL = SA.FLEVEL
   WHERE SA.TEXT_USERNAME_EMPLOYEE_SALES IS NULL
     AND TRI.EVENT_DATE > TRUNC(SYSDATE) - 30
     AND TRI.FLEVEL = 'FLEVEL_2'
   GROUP BY TRI.CODE_SALESROOM, TRI.FLEVEL
  HAVING COUNT(DISTINCT TRI.SKP_CREDIT_CASE) >= 3
  
  UNION
  SELECT /*+materialize use_hash(TRI,SA)*/
   TRI.CODE_SALESROOM,
   TRI.FLEVEL,
   CAST(COUNT(DISTINCT TRI.SKP_CREDIT_CASE) AS VARCHAR2(10)) AS CNT_CONTR
    FROM BASE TRI
    LEFT JOIN SA
      ON TRI.TEXT_USERNAME_EMPLOYEE_SALES = SA.TEXT_USERNAME_EMPLOYEE_SALES
     AND TRI.FLEVEL = SA.FLEVEL
   WHERE SA.TEXT_USERNAME_EMPLOYEE_SALES IS NULL
     AND TRI.EVENT_DATE > TRUNC(SYSDATE) - 30
     AND TRI.FLEVEL = 'FLEVEL_3'
   GROUP BY TRI.CODE_SALESROOM, TRI.FLEVEL
  HAVING COUNT(DISTINCT TRI.SKP_CREDIT_CASE) >= 5)

,
DSM AS
 (SELECT /*+materialize use_hash(TRI,SA,POS)*/
   TRI.TEXT_USERNAME_SUPERIOR,
   TRI.FLEVEL,
   CAST(COUNT(DISTINCT SKP_CREDIT_CASE) AS VARCHAR2(10)) AS CNT_CONTR
    FROM BASE TRI
    LEFT JOIN SA
      ON TRI.TEXT_USERNAME_EMPLOYEE_SALES = SA.TEXT_USERNAME_EMPLOYEE_SALES
     AND TRI.FLEVEL = SA.FLEVEL
    LEFT JOIN POS
      ON TRI.CODE_SALESROOM = POS.CODE_SALESROOM
     AND TRI.FLEVEL = POS.FLEVEL
   WHERE SA.TEXT_USERNAME_EMPLOYEE_SALES IS NULL
     AND POS.CODE_SALESROOM IS NULL
     AND TRI.EVENT_DATE > TRUNC(SYSDATE) - 30
     AND TRI.FLEVEL = 'FLEVEL_2'
   GROUP BY TRI.TEXT_USERNAME_SUPERIOR, TRI.FLEVEL
  HAVING COUNT(DISTINCT SKP_CREDIT_CASE) >= 6
  
  UNION
  SELECT /*+materialize use_hash(TRI,SA,POS)*/
   TRI.TEXT_USERNAME_SUPERIOR,
   TRI.FLEVEL,
   CAST(COUNT(DISTINCT SKP_CREDIT_CASE) AS VARCHAR2(10)) AS CNT_CONTR
    FROM BASE TRI
    LEFT JOIN SA
      ON TRI.TEXT_USERNAME_EMPLOYEE_SALES = SA.TEXT_USERNAME_EMPLOYEE_SALES
     AND TRI.FLEVEL = SA.FLEVEL
    LEFT JOIN POS
      ON TRI.CODE_SALESROOM = POS.CODE_SALESROOM
     AND TRI.FLEVEL = POS.FLEVEL
   WHERE SA.TEXT_USERNAME_EMPLOYEE_SALES IS NULL
     AND POS.CODE_SALESROOM IS NULL
     AND TRI.EVENT_DATE > TRUNC(SYSDATE) - 30
     AND TRI.FLEVEL = 'FLEVEL_3'
   GROUP BY TRI.TEXT_USERNAME_SUPERIOR, TRI.FLEVEL
  HAVING COUNT(DISTINCT SKP_CREDIT_CASE) >= 10
  )

,BASE_CITY_CONTR AS
 (SELECT /*+ordered use_hash(TRI,SA,POS,DSM,ACT,ADDR,DC)*/
   CASE
     WHEN EVENT_DATE > TRUNC(SYSDATE) - 30 THEN
      'MP'
     ELSE
      'CP'
   END AS TYPE,
   TRI.*,
   DC.NAME_CITY_EN
    FROM BASE TRI
    LEFT JOIN SA
      ON TRI.TEXT_USERNAME_EMPLOYEE_SALES = SA.TEXT_USERNAME_EMPLOYEE_SALES
     AND TRI.FLEVEL = SA.FLEVEL
    LEFT JOIN POS
      ON TRI.CODE_SALESROOM = POS.CODE_SALESROOM
     AND TRI.FLEVEL = POS.FLEVEL
    LEFT JOIN DSM
      ON TRI.TEXT_USERNAME_SUPERIOR = DSM.TEXT_USERNAME_SUPERIOR
     AND TRI.FLEVEL = DSM.FLEVEL
    JOIN OWNER_DWH.F_APPLICATION_CLIENT_TT ACT
      ON TRI.SKP_CREDIT_CASE = ACT.SKP_CREDIT_CASE
     AND TRI.DATE_DECISION = ACT.DATE_DECISION
     AND ACT.SKP_CLIENT_ROLE = 14
    LEFT JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR
      ON TRI.SKP_CREDIT_CASE = ADDR.SKP_CREDIT_CASE
     AND ADDR.SKP_APPLICATION_CLIENT = ACT.SKP_APPLICATION_CLIENT
     AND ADDR.SKP_ADDRESS_TYPE = 2 --CURRENT
    LEFT JOIN OWNER_DWH.DC_CITY DC
      ON ADDR.SKP_CITY = DC.SKP_CITY
   WHERE SA.TEXT_USERNAME_EMPLOYEE_SALES IS NULL
     AND POS.CODE_SALESROOM IS NULL
     AND DSM.TEXT_USERNAME_SUPERIOR IS NULL
     )

,BASE_CITY AS
 (SELECT /*+materialize*/
   TYPE,
   NAME_CITY_EN,
   FLEVEL,
   COUNT(DISTINCT SKP_CREDIT_CASE) AS CNT_CONTR,
   LAG(COUNT(DISTINCT SKP_CREDIT_CASE)) OVER(PARTITION BY NAME_CITY_EN ORDER BY TYPE) AS LAST_MONTH
    FROM BASE_CITY_CONTR
   WHERE FLEVEL = 'FLEVEL_2'
   GROUP BY NAME_CITY_EN, TYPE, FLEVEL
  HAVING COUNT(DISTINCT SKP_CREDIT_CASE) >= 6
  
  UNION
  SELECT /*+materialize*/
   TYPE,
   NAME_CITY_EN,
   FLEVEL,
   COUNT(DISTINCT SKP_CREDIT_CASE) AS CNT_CONTR,
   LAG(COUNT(DISTINCT SKP_CREDIT_CASE)) OVER(PARTITION BY NAME_CITY_EN ORDER BY TYPE) AS LAST_MONTH
    FROM BASE_CITY_CONTR
   WHERE FLEVEL = 'FLEVEL_3'
   GROUP BY NAME_CITY_EN, TYPE, FLEVEL
  HAVING COUNT(DISTINCT SKP_CREDIT_CASE) >= 10
  )

,CITY AS
 (SELECT /*+materialize*/
   CC.*,
   CASE
     WHEN LAST_MONTH > 0 THEN
      CNT_CONTR / LAST_MONTH
     ELSE
      NULL
   END AS LIFT
    FROM BASE_CITY CC
   WHERE CNT_CONTR / LAST_MONTH > 1.5
   )
,CONTR AS
 (SELECT /*+materialize use_hash(TRI,L1)*/
   'SA' AS TYPE,
   L1.TEXT_USERNAME_EMPLOYEE_SALES,
   L1.CNT_CONTR,
   TRI.CONTRACT_NO,
   TRI.SKP_CREDIT_CASE,
   TRI.DATE_DECISION,
   TRI.NOTE
    FROM BASE TRI
    JOIN FLEVEL_1 L1
      ON TRI.TEXT_USERNAME_EMPLOYEE_SALES = L1.TEXT_USERNAME_EMPLOYEE_SALES
     AND TRI.FLEVEL = L1.FLEVEL
   WHERE TRI.EVENT_DATE > TRUNC(SYSDATE) - 30
  
  UNION
  SELECT /*+materialize use_hash(TRI,SA)*/
   'SA' AS TYPE,
   SA.TEXT_USERNAME_EMPLOYEE_SALES,
   SA.CNT_CONTR,
   TRI.CONTRACT_NO,
   TRI.SKP_CREDIT_CASE,
   TRI.DATE_DECISION,
   TRI.NOTE
    FROM BASE TRI
    JOIN SA
      ON TRI.TEXT_USERNAME_EMPLOYEE_SALES = SA.TEXT_USERNAME_EMPLOYEE_SALES
     AND TRI.FLEVEL = SA.FLEVEL
   WHERE TRI.EVENT_DATE > TRUNC(SYSDATE) - 30
  
  UNION
  SELECT /*+materialize use_hash(TRI,POS,SA)*/
   'POS' AS TYPE,
   TRI.TEXT_USERNAME_EMPLOYEE_SALES,
   POS.CNT_CONTR,
   TRI.CONTRACT_NO,
   TRI.SKP_CREDIT_CASE,
   TRI.DATE_DECISION,
   TRI.NOTE
    FROM BASE TRI
    JOIN POS
      ON TRI.CODE_SALESROOM = POS.CODE_SALESROOM
     AND TRI.FLEVEL = POS.FLEVEL
    LEFT JOIN SA
      ON TRI.TEXT_USERNAME_EMPLOYEE_SALES = SA.TEXT_USERNAME_EMPLOYEE_SALES
     AND TRI.FLEVEL = SA.FLEVEL
   WHERE SA.TEXT_USERNAME_EMPLOYEE_SALES IS NULL
     AND TRI.EVENT_DATE > TRUNC(SYSDATE) - 30
  
  UNION
  SELECT /*+ordered use_hash(TRI,DSM,SA,POS)*/
   'DSM' AS TYPE,
   TRI.TEXT_USERNAME_EMPLOYEE_SALES,
   DSM.CNT_CONTR,
   TRI.CONTRACT_NO,
   TRI.SKP_CREDIT_CASE,
   TRI.DATE_DECISION,
   TRI.NOTE
    FROM BASE TRI
    JOIN DSM
      ON TRI.TEXT_USERNAME_SUPERIOR = DSM.TEXT_USERNAME_SUPERIOR
     AND TRI.FLEVEL = DSM.FLEVEL
    LEFT JOIN SA
      ON TRI.TEXT_USERNAME_EMPLOYEE_SALES = SA.TEXT_USERNAME_EMPLOYEE_SALES
     AND TRI.FLEVEL = SA.FLEVEL
    LEFT JOIN POS
      ON TRI.CODE_SALESROOM = POS.CODE_SALESROOM
     AND TRI.FLEVEL = POS.FLEVEL
   WHERE TRI.EVENT_DATE > TRUNC(SYSDATE) - 30
     AND SA.TEXT_USERNAME_EMPLOYEE_SALES IS NULL
     AND POS.CODE_SALESROOM IS NULL
  
  UNION
  SELECT /*+materialize use_hash(TRI,CC)*/
   'CITY' AS TYPE,
   TRI.TEXT_USERNAME_EMPLOYEE_SALES,
   CC.NAME_CITY_EN || CNT_CONTR || '/' || LAST_MONTH,
   TRI.CONTRACT_NO,
   TRI.SKP_CREDIT_CASE,
   TRI.DATE_DECISION,
   TRI.NOTE
    FROM BASE_CITY_CONTR TRI
    JOIN CITY CC
      ON TRI.NAME_CITY_EN = CC.NAME_CITY_EN
     AND TRI.FLEVEL = CC.FLEVEL
  --  LEFT JOIN SA on SA.TEXT_USERNAME_EMPLOYEE_SALES=TRI.TEXT_USERNAME_EMPLOYEE_SALES
  -- LEFT JOIN POS ON POS.CODE_SALESROOM=TRI.CODE_SALESROOM
  --LEFT JOIN DSM on DSM.TEXT_USERNAME_SUPERIOR=TRI.TEXT_USERNAME_SUPERIOR
   WHERE TRI.EVENT_DATE > TRUNC(SYSDATE) - 30 --AND SA.TEXT_USERNAME_EMPLOYEE_SALES is null AND POS.CODE_SALESROOM is null AND DSM.TEXT_USERNAME_SUPERIOR IS NULL
  )

SELECT /*+materialize*/
DISTINCT 'SA' AS UNIT,
TEXT_USERNAME_EMPLOYEE_SALES AS ID_ENTITY,
TO_CHAR(TRUNC(SYSDATE), 'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
'182' AS CLASS,
'CS complaint' AS TRIGGER_SOURCE,
TYPE || ' CNT: ' || CNT_CONTR || '; ' || NOTE AS TRIGGER_VALUE,
'SOFT' AS TRIGGER_TYPE,
SKP_CREDIT_CASE,
CONTRACT_NO
FROM CONTR;
COMMIT;
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;

-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;


PROCEDURE TRIGGER_282_EWS_COMBINATION IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_282_EWS';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP:TRIGGER_282_EWS';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL); 
  
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '282 PRICE CHEATING',SYSDATE FROM DUAL;
COMMIT;

--add new setting 20180920 --big change 20181018--delete 4setting 20191104
EXECUTE IMMEDIATE' TRUNCATE TABLE TRIGGER_282_CONCEN_FINAL'; 
--change 20190226 --20201120
INSERT INTO TRIGGER_282_CONCEN_FINAL 
WITH pc_base AS
(
    SELECT DISTINCT ad.skp_credit_case,
                    ad.text_contract_number,
                    ad.date_decision,
                    ad.skp_client,
                    ad.name_business_province_en,
                    ad.name_region_en,
                    ad.skp_salesroom,
                    ad.code_salesroom,
                    ad.text_username_employee_sales,
                    ad.code_goods_category_risk_exp,
                    ad.rate_down_payment,
                    ad.amt_down_payment,
                    ad.amt_income_main_occupation,
                    ad.amt_credit,
                    bra.NAME_GOODS_BRAND_EN,
                    mo.NAME_GOODS_MODEL_EN,
                    bra.NAME_GOODS_BRAND_EN||mo.NAME_GOODS_MODEL_EN as brand_model,
                    tt.AMT_GOODS_PRICE,
                    zs.mode_province_price,
                    zs.cnt_app,
                    tt.AMT_GOODS_PRICE/zs.mode_province_price AS times_price
    FROM OWNER_DWH.f_Purchased_Goods_Tt tt  
    JOIN dm_antifraud.f_af_credit_case_ad ad  ON tt.skp_credit_case=ad.skp_credit_case 
    JOIN owNER_DWH.dc_credit_case ddc  ON ddc.skp_credit_case=ad.skp_credit_case
    JOIN OWNER_DWH.Cl_Goods_Brand bra  ON bra.SKP_GOODS_BRAND=tt.SKP_GOODS_BRAND
    JOIN OWNER_DWH.Cl_Goods_Model mo  ON mo.SKP_GOODS_MODEL=tt.SKP_GOODS_MODEL  
    JOIN AP_ANTIFRAUD.PROVINCE_MODE_PRICE zs  ON zs.name_business_province_en=ad.name_business_province_en 
                                              AND bra.NAME_GOODS_BRAND_EN=zs.NAME_GOODS_BRAND_EN 
                                              AND mo.NAME_GOODS_MODEL_EN=zs.name_goods_model_en
    WHERE tt.FLAG_MOST_EXPENSIVE='Y' 
      AND ad.DATE_DECISION>=TRUNC(SYSDATE)-7
      AND ad.DATE_DECISION<TRUNC(SYSDATE) 
      AND tt.DATE_DECISION>=TRUNC(SYSDATE)-7
      AND tt.DATE_DECISION<TRUNC(SYSDATE) 
      AND ad.code_credit_status IN ('a','k','n')
      AND ad.skp_credit_type=1
      AND ddc.skp_credit_acquisition_chnl=21 
      AND ( (bra.NAME_GOODS_BRAND_EN='Apple' AND mo.NAME_GOODS_MODEL_EN='iPhone 11 256G')  OR
            (bra.NAME_GOODS_BRAND_EN='Apple' AND mo.NAME_GOODS_MODEL_EN='iPhone 11 Pro Max 256G')  OR 
            (bra.NAME_GOODS_BRAND_EN='Apple' AND mo.NAME_GOODS_MODEL_EN='iPhone 11 Pro Max 512G')  OR
            (bra.NAME_GOODS_BRAND_EN='Apple' AND mo.NAME_GOODS_MODEL_EN='iPhone XS Max 64G')  OR
            (bra.NAME_GOODS_BRAND_EN='Huawei' AND mo.NAME_GOODS_MODEL_EN='Changxiang 10 Plus')  OR
            (bra.NAME_GOODS_BRAND_EN='Huawei' AND mo.NAME_GOODS_MODEL_EN='Changxiang 20 Pro')  OR
            (bra.NAME_GOODS_BRAND_EN='Huawei' AND mo.NAME_GOODS_MODEL_EN='Honor 30')  OR
            (bra.NAME_GOODS_BRAND_EN='Huawei' AND mo.NAME_GOODS_MODEL_EN='Honor 30 Pro')  OR
            (bra.NAME_GOODS_BRAND_EN='Huawei' AND mo.NAME_GOODS_MODEL_EN='Honor 30s')  OR
            (bra.NAME_GOODS_BRAND_EN='Huawei' AND mo.NAME_GOODS_MODEL_EN='Honor V30')  OR
            (bra.NAME_GOODS_BRAND_EN='Huawei' AND mo.NAME_GOODS_MODEL_EN='Honor X10')  OR
            (bra.NAME_GOODS_BRAND_EN='Huawei' AND mo.NAME_GOODS_MODEL_EN='Mate 30 Pro')  OR
            (bra.NAME_GOODS_BRAND_EN='Huawei' AND mo.NAME_GOODS_MODEL_EN='Nova6')  OR     
            (bra.NAME_GOODS_BRAND_EN='Huawei' AND mo.NAME_GOODS_MODEL_EN='Nova7')  OR 
            (bra.NAME_GOODS_BRAND_EN='Huawei' AND mo.NAME_GOODS_MODEL_EN='Nova7 Pro')  OR 
            (bra.NAME_GOODS_BRAND_EN='Huawei' AND mo.NAME_GOODS_MODEL_EN='Nova7 SE')  OR
            (bra.NAME_GOODS_BRAND_EN='Huawei' AND mo.NAME_GOODS_MODEL_EN='P40')  OR
            (bra.NAME_GOODS_BRAND_EN='Huawei' AND mo.NAME_GOODS_MODEL_EN='P40 Pro')  OR
            (bra.NAME_GOODS_BRAND_EN='OPPO' AND mo.NAME_GOODS_MODEL_EN='A52')  OR
            (bra.NAME_GOODS_BRAND_EN='OPPO' AND mo.NAME_GOODS_MODEL_EN='A72')  OR
            (bra.NAME_GOODS_BRAND_EN='OPPO' AND mo.NAME_GOODS_MODEL_EN='Find X2')  OR 
            (bra.NAME_GOODS_BRAND_EN='OPPO' AND mo.NAME_GOODS_MODEL_EN='Reno 3')  OR
            (bra.NAME_GOODS_BRAND_EN='OPPO' AND mo.NAME_GOODS_MODEL_EN='Reno 4')  OR 
            (bra.NAME_GOODS_BRAND_EN='OPPO' AND mo.NAME_GOODS_MODEL_EN='Reno 4 Pro')  OR
            (bra.NAME_GOODS_BRAND_EN='VIVO' AND mo.NAME_GOODS_MODEL_EN='NEX3S')  OR
            (bra.NAME_GOODS_BRAND_EN='VIVO' AND mo.NAME_GOODS_MODEL_EN='S6')  OR
            (bra.NAME_GOODS_BRAND_EN='VIVO' AND mo.NAME_GOODS_MODEL_EN='S7')  OR
            (bra.NAME_GOODS_BRAND_EN='VIVO' AND mo.NAME_GOODS_MODEL_EN='X30')  OR
            (bra.NAME_GOODS_BRAND_EN='VIVO' AND mo.NAME_GOODS_MODEL_EN='X50 Pro')  OR
            (bra.NAME_GOODS_BRAND_EN='VIVO' AND mo.NAME_GOODS_MODEL_EN='Y50')  OR
            (bra.NAME_GOODS_BRAND_EN='VIVO' AND mo.NAME_GOODS_MODEL_EN='Y70s') )  
      AND ad.code_goods_category_risk_exp='CELLPHONE'
)
,pos_concentration AS
(
    SELECT code_salesroom,COUNT(DISTINCT skp_credit_case) AS cnt_app_persa
    FROM pc_base
    WHERE times_price>1.15
    GROUP BY code_salesroom
)
SELECT a.*
FROM pc_base a
JOIN pos_concentration b ON a.code_salesroom=b.code_salesroom
WHERE cnt_app_persa>=2 AND  times_price>1.15 ;
COMMIT;


INSERT INTO  AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION  -----!!!
SELECT DISTINCT
'POS' AS UNIT
,CODE_SALESROOM
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT 
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'282' AS CLASS  
,'EXTREME_HIGH_PRICE_POS_CONCENTRATION' AS TRIGGER_SOURCE
,'POS:'||CODE_SALESROOM||',TIMES_TO_PROVINCE_MODE_PRICE:' ||SUBSTR(times_price,1,4)||',GOODS PRICE:'|| a.AMT_GOODS_PRICE||',MODE PRICE:'||mode_province_price||
',GOODS MODEL:'||brand_model||',VENDOR MODEL:'||DB.name_vendor_brand||' '||DB.name_vendor_model 
AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE       
,a.SKP_CREDIT_CASE
,a.text_contract_number
FROM TRIGGER_282_CONCEN_FINAL  a 
LEFT JOIN OWNER_DWH.F_PURCHASED_GOODS_TT  T ON T.SKP_CREDIT_CASE=A.SKP_CREDIT_CASE AND T.TEXT_IMEI!='XNA' and t.DATE_DECISION  >= trunc(sysdate) -10
LEFT JOIN OWNER_DWH.F_PHONE_INFO_TT  db ON DB.code_tac=SUBSTR(T.TEXT_IMEI,1,8)
WHERE  NOT EXISTS (SELECT 1 FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS BB WHERE BB.SKP_CREDIT_CASE=a.SKP_CREDIT_CASE AND BB.CLASS  IN ('282','23'));
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;


PROCEDURE TRIGGER_322_WCL_BAD_UW_SCORE IS
  BEGIN
  
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '322 WCL BAD UW SCORE',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection
WITH raw_app AS
 (
SELECT /*+materialize*/ dcc.SKP_CREDIT_CASE ,DCC.SKP_CREDIT_TYPE,dcc.skp_client, dcc.DATE_DECISION, dcc.SKP_CREDIT_STATUS
, TRUNC(DCC.DATE_DECISION ,'IW')+6 AS WEEK_DECISION
FROM OWNER_DWH.Dc_Credit_Case dcc
WHERE  dcc.SKP_CREDIT_TYPE = 2
AND dcc.skp_product_channel = 2 --无预约现金贷 
AND dcc.SKP_CREDIT_ACQUISITION_CHNL != 4--183066 -- extreme
AND dcc.SKP_CREDIT_ACQUISITION_CHNL !=6--207247 --O2O 20170928 ELLEN
AND dcc.DATE_DECISION<DATE'3000-1-1'
AND DCC.DATE_DECISION BETWEEN TRUNC(SYSDATE,'IW')-14 AND TRUNC(SYSDATE,'IW')-1
AND dcc.skp_alternative_type!=1
)  
,CON_UW AS
(
SELECT /*+USE_HASH(J,S)*/ J.*
FROM raw_app J
JOIN OWNER_DWH.f_Application_Tt_Score S
ON J.SKP_CREDIT_CASE =S.SKP_CREDIT_CASE AND J.DATE_DECISION =S.DATE_DECISION AND J.SKP_CREDIT_TYPE=S.SKP_CREDIT_TYPE
WHERE S.skp_credit_type=2
AND S.DATE_DECISION  BETWEEN SYSDATE-60  AND SYSDATE-1  --adjust
AND S.NUM_SCORE_CUTOFF_PRE>=0.07
)

, CON_LEAD AS 
(
SELECT  /*+materialize*/ * 
FROM 
    (
    SELECT /*+USE_HASH(R,AT)*/ R.*
    ,AT.CODE_LEAD_CHANNEL
    ,ROW_NUMBER() OVER (PARTITION BY R.SKP_CLIENT ORDER BY AT.date_effective  DESC) AS RNK_FIRST_LEAD
    FROM CON_UW r
    JOIN OWNER_DWH.F_APPLICATION_VCT_CREDIT_AT AT ON R.SKP_CREDIT_CASE =AT.SKP_CREDIT_CASE 
    AND R.DATE_DECISION =AT.DATE_DECISION AND R.SKP_CREDIT_TYPE=AT.SKP_CREDIT_TYPE
    WHERE AT.skp_credit_type=2
    AND  CODE_LEAD_CHANNEL!='XNA' 
    AND CODE_LEAD_CHANNEL IS NOT NULL
    AND AT.DATE_DECISION BETWEEN SYSDATE-60  AND SYSDATE-1   --adjust
    ) WHERE RNK_FIRST_LEAD=1
)     
, A_LOAN_LEAD AS 
(
SELECT /*+MATERIALIZE*/ DISTINCT CODE_LEAD_CHANNEL 
FROM CON_LEAD R
WHERE R.SKP_CREDIT_STATUS  IN (2,3,5)
)   
, group_by AS
(
SELECT /*+USE_HASH(CRE,A)*/ 
TRUNC(cre.DATE_DECISION, 'IW') + 6 AS WEEK_DECISION,
CRE.CODE_LEAD_CHANNEL,
COUNT(skp_credit_case) AS cnt_app
FROM CON_LEAD CRE
JOIN A_LOAN_LEAD A
ON CRE.CODE_LEAD_CHANNEL=A.CODE_LEAD_CHANNEL
GROUP BY TRUNC(cre.DATE_DECISION, 'IW') + 6, CRE.CODE_LEAD_CHANNEL
) 
 ,times AS
(
SELECT /*+USE_HASH(lat,pre)*/ 
lat.week_decision AS lat_week,
lat.CODE_LEAD_CHANNEL,
lat.cnt_app AS lat_cnt,
pre.week_decision AS pre_week,
pre.cnt_app AS pre_cnt,
ROUND(lat.cnt_app / pre.cnt_app, 2) AS times_app
FROM group_by lat
JOIN group_by pre
ON pre.week_decision = lat.week_decision - 7
AND pre.CODE_LEAD_CHANNEL = lat.CODE_LEAD_CHANNEL
WHERE lat.cnt_app / pre.cnt_app >= 3--adjust---------------------------------------------------------
)

SELECT /*+USE_HASH(T,R,AD)*/ 'SA' AS UNIT
,AD.text_username_employee_sales AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'322' AS CLASS
,'WCL-MARKETING  BAD UW SCORE' AS TRIGGER_SOURCE
,'WCL-LEAD: '|| r.CODE_LEAD_CHANNEL ||'; WITH UW SCORE>=0.07 increases ' ||T.times_app ||' times compared to previous week: '||lat_cnt||'/'||pre_cnt  AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,AD.SKP_CREDIT_CASE
,AD.TEXT_CONTRACT_NUMBER
FROM times T
JOIN CON_LEAD r ON TRUNC(r.DATE_DECISION , 'IW') + 6=T.lat_week
AND T.CODE_LEAD_CHANNEL = r.CODE_LEAD_CHANNEL
JOIN dm_antifraud.f_af_credit_case_ad ad ON  r.SKP_CREDIT_CASE =ad.SKP_CREDIT_CASE 
AND r.DATE_DECISION =ad.DATE_DECISION AND r.SKP_CREDIT_TYPE =ad.SKP_CREDIT_TYPE 
WHERE (pre_cnt=1 AND times_app>=20)
OR (pre_cnt=2 AND times_app>=10)
OR (pre_cnt>2 AND times_app>=3);
COMMIT;
END;


PROCEDURE TRIGGER_422_ACL_WEEKLY IS
  BEGIN
  
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '422 ACL WEEKLY',SYSDATE FROM DUAL;
COMMIT;

--updated 20180508 --stop 20190816
--========================================================================
--========================================================================
--   
--         ANNY :    ACL SAME QQ----------WEEKLY
--
--========================================================================  
--======================================================================== 
/*INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH CONTRACT AS
  (
  SELECT ACCA.DATE_DECISION
  \*,NEXT_DAY(ACCA.DATE_DECISION-1,1)AS WEEK_DECISION,*\,
  ACCA.SKP_CREDIT_TYPE,
  ACCA.SKP_CREDIT_CASE,
  ACCA.SKP_CLIENT,
  ACCA.TEXT_CONTRACT_NUMBER,
  SUBSTR(ACCA.TEXT_CLIENT_EMAIL_ADDRESS,1,INSTR(ACCA.TEXT_CLIENT_EMAIL_ADDRESS, '@', 1, 1) - 1) AS QQ,
  EE.TEXT_USERNAME_EMPLOYEE,--ACCA.TEXT_USERNAME_EMPLOYEE_SALES,
  tt.skp_employee_consult_3rd_block--ACCA.SKP_EMPLOYEE_CONSULTANT
  FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA
  JOIN OWNER_DWH.f_application_tt tt--2018/05/04 KATE
  ON acca.DATE_DECISION =tt.DATE_DECISION AND acca.SKP_CREDIT_TYPE =tt.SKP_CREDIT_TYPE AND acca.SKP_CREDIT_CASE =tt.SKP_CREDIT_CASE 
  JOIN owNER_DWH.dc_employee ee
  ON tt.skp_employee_consult_3rd_block=ee.SKP_EMPLOYEE
  JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS = 422
  AND TRUNC(SYSDATE)-ACCA.DATE_DECISION BETWEEN 1 AND EX.DAYS
  WHERE ACCA.DATE_DECISION >= DATE'2017-08-28'
  AND INSTR(UPPER(ACCA.TEXT_CLIENT_EMAIL_ADDRESS), 'QQ', 1, 1) > 0
  AND ACCA.NAME_LAST_SALES NOT IN ('Homer o2o user', 'Extreme online user')
  AND ACCA.NAME_SALESROOM NOT LIKE '%Big%' --add conditions 20171127
  AND ACCA.NAME_SALESROOM NOT LIKE '%Super%'
  AND TT.SKP_CREDIT_TYPE=2
  AND TT.DATE_DECISION >=DATE'2017-08-28' ),

GROUP_BY AS
  (
  SELECT \*+MATERIALIZE *\
  QQ,skp_employee_consult_3rd_block,
  COUNT(DISTINCT SKP_CLIENT) AS CNT_APP,--20171127
  LISTAGG(TEXT_CONTRACT_NUMBER, ';') WITHIN GROUP(ORDER BY DATE_DECISION) AS APP_DETAIL
  FROM CONTRACT
  GROUP BY QQ, skp_employee_consult_3rd_block
  HAVING COUNT(DISTINCT SKP_CREDIT_CASE) >= 3
  ),
  
SUS_CONTRACT AS
  (
  SELECT \*+USE_HASH(G,C)*\
  C.*, CNT_APP, APP_DETAIL
  FROM GROUP_BY G
  JOIN CONTRACT C ON G.skp_employee_consult_3rd_block = C.skp_employee_consult_3rd_block
  AND G.QQ = C.QQ
  ),
  
ACL_CON AS
  (
  SELECT \*+materialize*\
  SKP_CREDIT_CASE,
  SKP_CREDIT_TYPE,
  DATE_DECISION,
  SKP_CREDIT_STATUS,
  TEXT_CONTRACT_NUMBER
  FROM OWNER_DWH.DC_CREDIT_CASE
  WHERE DATE_DECISION >= DATE '2017-08-28'
  AND DATE_DECISION < TRUNC(SYSDATE)
  AND SKP_CREDIT_TYPE = 2
  AND SKP_PRODUCT_CHANNEL = 2
  AND SKP_CREDIT_ACQUISITION_CHNL = 6--207247
  AND SKP_ALTERNATIVE_TYPE IN (2, 3, 4)
  ),
  
SA AS
  (
  SELECT \*+MATERIALIZE*\
  S.QQ, S.skp_employee_consult_3rd_block, S.CNT_APP, S.APP_DETAIL
  FROM SUS_CONTRACT S
  JOIN ACL_CON A
  ON S.SKP_CREDIT_CASE = A.SKP_CREDIT_CASE
  AND S.DATE_DECISION = A.DATE_DECISION
  AND S.SKP_CREDIT_TYPE = A.SKP_CREDIT_TYPE
  )
  
SELECT 'SA' AS UNIT,
SC.TEXT_USERNAME_EMPLOYEE AS ID_ENTITY,
TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
'422' AS CLASS,
'ACL online2offline - SAME SA REPEATED QQ >=3' AS TRIGGER_SOURCE,
'该ACL合同的SA一周之内有' || S.CNT_APP || '个申请共用QQ号' || ': ' || S.QQ ||
'; Involved applications are:  ' || S.APP_DETAIL AS TRIGGER_VALUE,
'SOFT' AS TRIGGER_TYPE,
A.SKP_CREDIT_CASE,
A.TEXT_CONTRACT_NUMBER
FROM SA S
JOIN SUS_CONTRACT SC ON S.QQ = SC.QQ
AND S.skp_employee_consult_3rd_block = SC.skp_employee_consult_3rd_block
JOIN ACL_CON A
ON SC.SKP_CREDIT_CASE = A.SKP_CREDIT_CASE
AND SC.DATE_DECISION = A.DATE_DECISION
AND SC.SKP_CREDIT_TYPE = A.SKP_CREDIT_TYPE;
COMMIT;
*/
/********************************************************
--=====setting 1: 422-ACL-phone network 20190805--20191211
********************************************************/

EXECUTE IMMEDIATE'TRUNCATE TABLE AP_ANTIFRAUD.F_KATE_PHONE_NETWORK_BASE';
INSERT INTO AP_ANTIFRAUD.F_KATE_PHONE_NETWORK_BASE
WITH ACL AS 
(
    SELECT * 
    FROM 
    (
    SELECT /*+MATERIALIZE*/  CC.DATE_DECISION,CC.SKP_CREDIT_TYPE ,CC.SKP_CREDIT_CASE ,CC.SKp_CLIENT ,CC.SKP_CREDIT_STATUS , CC.TEXT_CONTRACT_NUMBER 
                ,ROW_NUMBER()OVER (PARTITION BY CC.SKp_CLIENT ORDER BY CC.SKP_CREDIT_STATUS ASC, DATE_DECISION DESC) AS ORK 
    FROM OWNER_DWH.DC_CREDIT_CASE CC
    JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='422'--------WEEK FRIDAY
    WHERE CC.SKP_CREDIT_TYPE =2 
    AND CC.DATE_DECISION >=TRUNC(SYSDATE) - 7
    AND CC.SKP_CREDIT_ACQUISITION_CHNL =6
    AND CC.DATE_DECISION>=EX.MAX_DETECT
    AND CC.DATE_DECISION<SYSDATE
    )WHERE ORK=1
)-----------only one contract is triggered out if one client applied more than once

,FIND_PHONE AS 
(
SELECT /*+MATERIALIZE ORDERED USE_HASH(AA,PH,PP,FF,EE)*/  AA.*
            ,PH.MOBILE , PH.MOBILE_TYPE AS MOBILE_TYPE_EN
            ,CASE WHEN MOBILE_TYPE LIKE '%SPOUSE%' THEN '客户配偶电话' 
                      WHEN MOBILE_TYPE LIKE '%PARENT%' THEN '客户父母电话' 
                      WHEN MOBILE_TYPE LIKE '%SUPPLY%' THEN '客户补充电话' 
                      WHEN MOBILE_TYPE ='TEXT_MOBILE_CLIENT' THEN '客户本人电话'  
                      WHEN MOBILE_TYPE ='CLIENT_PHONE' THEN '客户住宅电话'  
                      WHEN MOBILE_TYPE LIKE '%EMP%' THEN '客户雇主电话'
             END AS  MOBILE_TYPE
            ,PP.SKP_EMPLOYEE_CONSULT_3RD_BLOCK
            ,FF.TEXT_USERNAME_EMPLOYEE_SALES AS SA
            ,EE.TEXT_USERNAME_EMPLOYEE
            ,EE.TEXT_IDENT_NUMBER AS SA_ID
FROM ACL AA
JOIN AP_ANTIFRAUD.F_AF_ALL_PHONE_CHARLOTTE PH
ON AA.SKP_CREDIT_CASE =PH.SKP_CREDIT_CASE AND PH.DATE_DECISION=AA.DATE_DECISION 
JOIN OWNER_DWH.F_APPLICATION_TT PP
ON AA.DATE_DECISION =PP.DATE_DECISION AND PP.SKP_CREDIT_TYPE =AA.SKP_CREDIT_TYPE AND AA.SKP_CREDIT_CASE =PP.SKP_CREDIT_CASE 
JOIN DM_ANTIFRAUD.FT_AF_CREDIT_CASE_AD FF
ON AA.DATE_DECISION =FF.DATE_DECISION AND AA.SKP_CREDIT_TYPE =FF.SKP_CREDIT_TYPE AND FF.SKP_CREDIT_CASE =AA.SKP_CREDIT_CASE 
JOIN OWNER_DWH.DC_EMPLOYEE EE
ON PP.SKP_EMPLOYEE_CONSULT_3RD_BLOCK=EE.SKP_EMPLOYEE
WHERE PH.DATE_DECISION >=TRUNC(SYSDATE)-15
AND PP.SKP_CREDIT_TYPE =2 AND PP.DATE_DECISION >=TRUNC(SYSDATE)-15
AND FF.SKP_CREDIT_TYPE =2 AND FF.DATE_DECISION >=TRUNC(SYSDATE)-15
AND MOBILE NOT LIKE '%00000%'
)

SELECT /*+MATERIALIZE ORDERED USE_HASH(AA,BB)*/  AA.*,AA.TEXT_CONTRACT_NUMBER AS A_CON, BB.TEXT_CONTRACT_NUMBER AS B_CON,BB.MOBILE_TYPE AS B_TYPE
FROM FIND_PHONE   AA
JOIN FIND_PHONE  BB
ON AA.MOBILE =BB.MOBILE AND AA.SKp_CLIENT <> BB.SKp_CLIENT;
COMMIT;

---------====LOOP TO FIND COMPONENT ID
---===DROP TABLE F_KATE_GROUP 
EXECUTE IMMEDIATE'TRUNCATE TABLE AP_ANTIFRAUD.TRIGGER_KATE_PHONE_LOOP';
INSERT INTO AP_ANTIFRAUD.TRIGGER_KATE_PHONE_LOOP
SELECT DISTINCT A_CON , B_CON, RANK()OVER (ORDER BY TEXT_CONTRACT_NUMBER ) AS ORD ,0 AS TIMES
FROM  AP_ANTIFRAUD.F_KATE_PHONE_NETWORK_BASE;
COMMIT;

DECLARE I NUMBER:= 1;
BEGIN
WHILE(i<10)
LOOP
---update group
INSERT INTO AP_ANTIFRAUD.TRIGGER_KATE_PHONE_LOOP
WITH BASE AS 
(
    SELECT A_CON, MIN(ORD) AS ORD
    FROM 
    (
    SELECT DISTINCT BB.A_CON, ORD
    FROM AP_ANTIFRAUD.TRIGGER_KATE_PHONE_LOOP BB
    UNION
    SELECT DISTINCT BB.B_CON, ORD
    FROM AP_ANTIFRAUD.TRIGGER_KATE_PHONE_LOOP BB
    )GROUP BY A_CON
)
,AA AS 
(
    SELECT A_CON, MIN(ORD) AS ORD
    FROM 
    (
    SELECT DISTINCT BB.A_CON,LEAST(BB.ORD,CC.ORD ) AS ord
    FROM BASE BB
    JOIN AP_ANTIFRAUD.TRIGGER_KATE_PHONE_LOOP CC
    ON (BB.A_CON =CC.B_CON OR BB.A_CON =CC.A_CON )
    )GROUP BY A_CON
)

SELECT EE.b_CON,EE.A_CON, AA.ORD, I AS TIMES
FROM AA
JOIN AP_ANTIFRAUD.TRIGGER_KATE_PHONE_LOOP EE
ON AA.A_CON =EE.A_CON;
COMMIT;

DELETE FROM AP_ANTIFRAUD.TRIGGER_KATE_PHONE_LOOP
WHERE TIMES=I-1;
COMMIT;
I:=I+1;
COMMIT;
END LOOP;
END;

----====
INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection
WITH BASE AS 
(
    SELECT A_CON, MIN(ORD) AS ORD
    FROM 
    (
    SELECT DISTINCT BB.A_CON, ORD
    FROM AP_ANTIFRAUD.TRIGGER_KATE_PHONE_LOOP BB
    UNION
    SELECT DISTINCT BB.B_CON, ORD
    FROM AP_ANTIFRAUD.TRIGGER_KATE_PHONE_LOOP BB
    )
    GROUP BY A_CON
)
,CNT_MEMBER AS 
(
SELECT ORD,COUNT(DISTINCT A_CON) AS CNT_MEMBER
FROM BASE
GROUP BY ORD
)

,DETAIL AS 
(
SELECT DISTINCT  AA.ORD, CNT_MEMBER, DE.*
FROM BASE AA
JOIN CNT_MEMBER CM
ON AA.ORD=CM.ORD
JOIN  AP_ANTIFRAUD.F_KATE_PHONE_NETWORK_BASE DE
ON AA.A_CON=DE.TEXT_CONTRACT_NUMBER 
)

,PHONE_CUT AS 
(
SELECT ORD
            ,COUNT(DISTINCT SKP_CREDIT_CASE ) AS CNT_APPLICATION
            ,COUNT(DISTINCT SKp_CLIENT )  AS CNT_CLIENT
            ,COUNT(DISTINCT CASE WHEN SKP_CREDIT_STATUS IN (2,3,5) THEN SKP_CREDIT_CASE END ) AS CNT_ACTIVE 
            ,COUNT(DISTINCT MOBILE)  AS CNT_PHONE
            ,COUNT(DISTINCT TEXT_USERNAME_EMPLOYEE  )  AS CNT_SA
FROM DETAIL 
GROUP BY ORD
HAVING COUNT(DISTINCT CASE WHEN SKP_CREDIT_STATUS IN (2,3,5) THEN SKP_CREDIT_CASE END ) >1
AND COUNT(DISTINCT SKP_CREDIT_CASE ) >=3
)

,PHONE_TYPE_CUT AS 
(
SELECT ORD,CNT_DETAIL_APPLICATION,MOBILE,MOBILE_TYPE,RANK_TYPE,LABLE,CNT_APPLICATION,CNT_CLIENT ,CNT_PHONE,CNT_DETAIL_CLIENT
            ,RANK()OVER (ORDER BY ORD) AS P_GROUP
FROM (SELECT DISTINCT  ORD, MOBILE,MOBILE_TYPE,CNT_DETAIL_APPLICATION,CNT_APPLICATION,CNT_DETAIL_CLIENT,CNT_PHONE,CNT_CLIENT
                        ,ROW_NUMBER()OVER (PARTITION BY MOBILE_TYPE ORDER BY CNT_DETAIL_APPLICATION DESC) AS RANK_TYPE
                        ,LISTAGG (CNT_DETAIL_APPLICATION||'单申请填写成'||MOBILE_TYPE,';') WITHIN GROUP (ORDER BY CNT_DETAIL_APPLICATION DESC )OVER (PARTITION BY MOBILE)  AS LABLE
            FROM (SELECT TT.ORD,SE.MOBILE,MOBILE_TYPE,CNT_PHONE, COUNT(DISTINCT SKP_CREDIT_CASE ) AS CNT_DETAIL_APPLICATION, 
                                     COUNT(DISTINCT SE.SKp_CLIENT )AS CNT_DETAIL_CLIENT,  TT.CNT_APPLICATION,CNT_CLIENT
                        FROM  AP_ANTIFRAUD.F_KATE_PHONE_NETWORK_BASE SE
                        JOIN BASE BB
                        ON BB.A_CON=SE.TEXT_CONTRACT_NUMBER 
                        JOIN PHONE_CUT TT
                        ON BB.ORD =TT.ORD 
                        GROUP BY TT.ORD,SE.MOBILE ,MOBILE_TYPE,CNT_PHONE,CNT_APPLICATION,CNT_CLIENT
                        )
             )
)
-----phone+ contract
,CONTRACT_DETAILS AS 
(
SELECT DISTINCT SKP_CREDIT_CASE ,LISTAGG ('使用号码'||MOBILE||'作为'||MOBILE_TYPE||';') WITHIN GROUP (ORDER BY MOBILE )OVER (PARTITION BY SKP_CREDIT_CASE ) AS CONTRACT_DETAILS
FROM (
            SELECT DISTINCT FI.MOBILE, FI.SKP_CREDIT_CASE,MOBILE_TYPE 
            FROM  AP_ANTIFRAUD.F_KATE_PHONE_NETWORK_BASE FI
            WHERE FI.MOBILE IN (SELECT MOBILE FROM PHONE_TYPE_CUT TT)
            )
)

,MOBILE_DETAILS AS 
(
SELECT DISTINCT  * 
FROM (
            SELECT DISTINCT ORD
                        ,LISTAGG (MOBILE_DETAIL,';') WITHIN GROUP (ORDER BY MOBILE DESC )OVER (PARTITION BY ORD) AS MOBILE_DETAILS
            FROM (
                        SELECT DISTINCT ORD,FI.MOBILE
                                    ,MOBILE||':'||LISTAGG (CNT_DETAIL_CLIENT||'个客户'||'用作'||MOBILE_TYPE,';') WITHIN GROUP (ORDER BY MOBILE DESC )OVER (PARTITION BY MOBILE) AS MOBILE_DETAIL
                        FROM (SELECT DISTINCT ORD, MOBILE, CNT_CLIENT, MOBILE_TYPE ,CNT_DETAIL_CLIENT FROM  PHONE_TYPE_CUT  )FI
                        )
             )
)

SELECT DISTINCT  * 
FROM (
            SELECT DISTINCT 'SA' AS UNIT,
                        CASE WHEN FI.TEXT_USERNAME_EMPLOYEE <> 'XNA' THEN FI.TEXT_USERNAME_EMPLOYEE ELSE FI.SA END as ID_ENTITY,
                        TO_CHAR(SYSDATE,'YYYY/MM/DD')AS DATE_DETECT,
                        TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD') AS WEEK_DETECT,
                        '422' AS CLASS,
                        'ACL - Phone network' AS TRIGGER_SOURCE,
                        'GROUP['||P_GROUP||']共涉及'||CNT_APPLICATION||'单ACL申请,'||CNT_CLIENT||'个客户,'||CNT_PHONE||'个电话号码。'||MOBILE_DETAILS||'==本单合同'||LL.CONTRACT_DETAILS AS TRIGGER_VALUE
                        ,'SOFT' AS TRIGGER_TYPE
                        ,FI.SKP_CREDIT_CASE
                        ,FI.TEXT_CONTRACT_NUMBER 
            FROM PHONE_TYPE_CUT TT
            JOIN DETAIL FI
            ON TT.ORD=FI.ORD
            JOIN CONTRACT_DETAILS LL
            ON LL.SKP_CREDIT_CASE =FI.SKP_CREDIT_CASE
            JOIN MOBILE_DETAILS MO
            ON FI.ORD=MO.ORD
            );
COMMIT;

/********************************************************
--=====new setting: ACL - 2BOD GPS concentration 20200108 kate
********************************************************/
EXECUTE IMMEDIATE'TRUNCATE TABLE AP_ANTIFRAUD.F_KATE_GPS_LOOP_BASE_WEEKLY ';
INSERT INTO AP_ANTIFRAUD.F_KATE_GPS_LOOP_BASE_WEEKLY
WITH ACL AS 
(
SELECT /*+MATERIALIZE ORDERED USE_HASH(CC,FF)*/   CC.DATE_DECISION,CC.SKP_CREDIT_TYPE ,CC.SKP_CREDIT_CASE ,CC.SKp_CLIENT ,CC.TEXT_CONTRACT_NUMBER ,CC.SKP_CREDIT_STATUS 
FROM OWNER_DWH.DC_CREDIT_CASE CC
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='422'
AND CC.DATE_DECISION>=EX.MAX_DETECT
WHERE CC.SKP_CREDIT_TYPE =2 AND CC.SKP_CREDIT_ACQUISITION_CHNL =6 AND CC.SKP_ALTERNATIVE_TYPE =4
AND CC.DATE_DECISION >=TRUNC(SYSDATE)-14
)

,BIGDATA AS 
(
SELECT /*+MATERIALIZE ORDERED USE_HASH(W,TT)*/  W.*, TT.TEXT_VALUE,TT.SKP_APPRSTEP_ADD_INFO, CL.CODE_ADDITIONAL_INFO
FROM ACL W
JOIN OWNER_DWH.F_APPRSTEP_ADDITIONAL_INFO_TT TT
ON W.SKP_CREDIT_CASE =TT.SKP_CREDIT_CASE AND W.DATE_DECISION = TT.DATE_DECISION AND W.SKP_CREDIT_TYPE = TT.SKP_CREDIT_TYPE
JOIN OWNER_DWH.CL_APPRSTEP_ADD_INFO CL
ON TT.SKP_APPRSTEP_ADD_INFO=CL.SKP_APPRSTEP_ADD_INFO
WHERE CL.CODE_ADDITIONAL_INFO IN ('a18_geo_lng_low','a18_geo_lat_low')-----20191012
AND TT.DATE_DECISION >=TRUNC(SYSDATE)-14
AND TT.SKP_CREDIT_TYPE =2
AND TT.TEXT_VALUE<>'XNA'
)

,DISTANCE_A18_SPOS AS 
(
SELECT /*+MATERIALIZE ORDERED USE_HASH(AA,BB)*/  DISTINCT AA.SKP_CREDIT_CASE , AA.SKP_CREDIT_TYPE , AA.DATE_DECISION ,AA.SKP_CLIENT ,AA.TEXT_CONTRACT_NUMBER  ,AA.SKP_CREDIT_STATUS 
            ,AA.TEXT_VALUE AS GPS_LAT
            ,BB.TEXT_VALUE AS GPS_LONG
FROM BIGDATA AA
JOIN BIGDATA BB
ON AA.DATE_DECISION =BB.DATE_DECISION AND AA.SKP_CREDIT_CASE =BB.SKP_CREDIT_CASE 
WHERE AA.CODE_ADDITIONAL_INFO='a18_geo_lng_low' AND BB.CODE_ADDITIONAL_INFO='a18_geo_lat_low'
)
,DETAIL AS
(
SELECT DCC.*, PP.NAME_PROVINCE_EN AS CLIENT_PROVINCE_EN
            ,PP.NAME_PROVINCE AS CLIENT_PROVINCE
            ,DCCI.NAME_CITY_EN AS CLIENT_CITY_EN
            ,DCCIS.NAME_CITY AS CLIENT_CITY
            ,EE.TEXT_USERNAME_EMPLOYEE AS SA
            ,APP.SKP_SALESROOM AS POS
            ,DCS.num_longitude
            ,DCS.num_latitude
            ,DCS.name_salesroom
FROM DISTANCE_A18_SPOS DCC
JOIN OWNER_DWH.F_APPLICATION_TT APP
ON DCC.SKP_CREDIT_CASE =APP.SKP_CREDIT_CASE AND DCC.DATE_DECISION =APP.DATE_DECISION 
JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT CUR 
ON DCC.SKP_CREDIT_CASE=CUR.SKP_CREDIT_CASE AND CUR.SKP_ADDRESS_TYPE =2 AND CUR.SKP_CREDIT_TYPE =2 AND DCC.DATE_DECISION =CUR.DATE_DECISION AND DCC.SKP_CREDIT_TYPE =CUR.SKP_CREDIT_TYPE 
JOIN OWNER_DWH.CL_PROVINCE PP ON  CUR.SKP_PROVINCE = PP.SKP_PROVINCE
JOIN OWNER_DWH.DC_CITY DCCI ON CUR.SKP_CITY=DCCI.SKP_CITY
JOIN OWNER_DWH.DC_SALESROOM DCS ON aPP.SKP_SALESROOM=DCS.SKP_SALESROOM 
JOIN OWNER_DWH.CL_PROVINCE CLPS ON DCS.skp_province=CLPS.SKP_PROVINCE
JOIN OWNER_DWH.DC_CITY DCCIS ON DCS.SKP_CITY=DCCIS.SKP_CITY 
JOIN OWNER_DWH.DC_EMPLOYEE EE
ON EE.SKP_EMPLOYEE =APP.skp_employee_consult_3rd_block
WHERE APP.SKP_CREDIT_TYPE =2 AND  APP.DATE_DECISION >=TRUNC(SYSDATE)-14 
AND CUR.SKP_CREDIT_TYPE =2 AND  CUR.DATE_DECISION >=TRUNC(SYSDATE)-14
)
---cutoff1: at least 3 applications and 2 clients are in one pos 
,POS_CUT AS 
(
SELECT DE.POS
            ,COUNT(DE.SKP_CREDIT_CASE )  AS CNT_ACTIVE
FROM DETAIL DE
WHERE DE.name_salesroom NOT LIKE '%超贷%'---offfline pos
GROUP BY DE.POS 
HAVING COUNT(DISTINCT SKP_CREDIT_CASE )  >=3
AND COUNT(DISTINCT SKp_CLIENT )>=2  
)
,POS_CUT_OUTCOME AS 
(
SELECT DE.* 
FROM POS_CUT  PC
JOIN DETAIL DE
ON PC.POS=DE.POS 
)
---cutoff2
,DISTANCE AS 
(
SELECT AA.*,AP_ANTIFRAUD.GetDistance(AA.GPS_LONG, AA.GPS_LAT ,BB.GPS_LONG, BB.GPS_LAT) AS DIS_KM
            ,AA.SKP_CREDIT_CASE AS A_CASE, BB.SKP_CREDIT_CASE AS B_CASE
FROM POS_CUT_OUTCOME AA
JOIN POS_CUT_OUTCOME BB
ON AA.CLIENT_CITY=BB.CLIENT_CITY ---SAME CITY
AND AA.SKP_CREDIT_CASE <>BB.SKP_CREDIT_CASE 
WHERE AP_ANTIFRAUD.GetDistance(AA.GPS_LONG, AA.GPS_LAT ,BB.GPS_LONG, BB.GPS_LAT)<=0.5 
)
,DISTANCE_CUT AS 
(
SELECT DISTINCT DIS.A_CASE,DIS.CNT_NODE,DB.B_CASE
FROM (
            SELECT A_CASE ,COUNT(DISTINCT B_CASE)  AS CNT_NODE
            FROM DISTANCE TA
            GROUP BY A_CASE 
            HAVING COUNT(DISTINCT B_CASE) >=4
            )DIS
JOIN DISTANCE DB
ON DIS.A_CASE=DB.A_CASE 
)

SELECT DE.*,PO.B_CASE
FROM DISTANCE_CUT PO
JOIN DETAIL DE
ON PO.A_CASE =DE.SKP_CREDIT_CASE OR PO.B_CASE=DE.SKP_CREDIT_CASE;
COMMIT;
---------Step 2： loop to find cluster
---------Step2.1: base table 
EXECUTE IMMEDIATE'TRUNCATE TABLE AP_ANTIFRAUD.F_LOOP_GPS_BASE_WEEKLY  ';
INSERT INTO AP_ANTIFRAUD.F_LOOP_GPS_BASE_WEEKLY
SELECT DISTINCT BB.SKP_CREDIT_CASE AS  A_CASE, BB.B_CASE
            ,RANK()OVER (ORDER BY SKP_CREDIT_CASE)  AS ORD
            ,0 AS TIMES
FROM AP_ANTIFRAUD.F_KATE_GPS_LOOP_BASE_WEEKLY BB;
COMMIT;
---------Step2.2: find group ID
DECLARE I NUMBER:= 1;
BEGIN
    WHILE(i<10)
    LOOP
        INSERT INTO AP_ANTIFRAUD.F_LOOP_GPS_BASE_WEEKLY
        WITH BASE AS 
        (
          SELECT A_CASE, MIN(ORD) AS ORD
          FROM 
          (
            SELECT DISTINCT BB.A_CASE, ORD
            FROM AP_ANTIFRAUD.F_LOOP_GPS_BASE_WEEKLY BB
            UNION
            SELECT DISTINCT BB.B_CASE, ORD
            FROM AP_ANTIFRAUD.F_LOOP_GPS_BASE_WEEKLY BB
          )GROUP BY A_CASE
        )
        ,AA AS 
        (
        SELECT a_case, MIN(ord) AS ORD
        FROM (
        SELECT DISTINCT BB.A_CASE,LEAST(BB.ORD,CC.ORD ) AS ord
        FROM BASE BB
        JOIN AP_ANTIFRAUD.F_LOOP_GPS_BASE_WEEKLY CC
        ON (BB.A_CASE =CC.B_CASE OR BB.A_CASE =CC.A_CASE )
        )GROUP BY A_CASE
        )
        SELECT EE.b_CASE,EE.a_CASE, AA.ORD,I AS TIMES
        FROM AA
        JOIN AP_ANTIFRAUD.F_LOOP_GPS_BASE_WEEKLY EE
        ON AA.A_CASE =EE.A_CASE;
        COMMIT;

        DELETE FROM AP_ANTIFRAUD.F_LOOP_GPS_BASE_WEEKLY 
        WHERE TIMES=I-1;
        COMMIT;
        I:=I+1;
        COMMIT;
    END LOOP;
END;
---------------step3: trigger
INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection
WITH BASE AS 
(
SELECT DISTINCT  A_CASE, MIN(ORD) AS ORD
FROM (
            SELECT DISTINCT BB.A_CASE, ORD
            FROM AP_ANTIFRAUD.F_LOOP_GPS_BASE_WEEKLY BB
          UNION
            SELECT DISTINCT BB.B_CASE, ORD
            FROM AP_ANTIFRAUD.F_LOOP_GPS_BASE_WEEKLY BB
            )
GROUP BY A_CASE
)
,CONTRACT AS 
(
SELECT GG.*
            ,AA.ORD
            ,RANK()OVER (ORDER BY AA.ORD) AS P_GROUP
FROM BASE AA
JOIN AP_ANTIFRAUD.F_KATE_GPS_LOOP_BASE_WEEKLY GG ON AA.A_CASE =GG.SKP_CREDIT_CASE 
)
,CNT_MEMBER AS 
(
SELECT P_GROUP,COUNT(DISTINCT SKP_CREDIT_CASE ) AS CNT_APPLICATION,COUNT(DISTINCT SKp_CLIENT )  AS CNT_CLIENT
            ,COUNT(DISTINCT CASE WHEN SKP_CREDIT_STATUS IN (2,3,5 ) THEN SKP_CREDIT_CASE END ) AS CNT_ACTIVE_APPLICATION 
FROM CONTRACT 
GROUP BY P_GROUP
HAVING COUNT(DISTINCT CASE WHEN SKP_CREDIT_STATUS IN (2,3,5 ) THEN SKP_CREDIT_CASE END ) >1
)
-----------========cutoff3
,POS_CONCENTRATION AS 
(
SELECT LL.P_GROUP,LL.POS,ME.CNT_APPLICATION,CNT_CLIENT
            ,COUNT(DISTINCT LL.SKP_CREDIT_CASE )  AS CNT_POS_APP
            ,COUNT(DISTINCT LL.SKp_CLIENT )  AS CNT_POS_CLIENT
FROM CONTRACT LL
JOIN CNT_MEMBER ME
ON LL.P_GROUP=ME.P_GROUP
GROUP BY LL.P_GROUP,LL.POS,CNT_APPLICATION,CNT_CLIENT
HAVING COUNT(DISTINCT LL.SKP_CREDIT_CASE ) >=4 OR (COUNT(DISTINCT LL.SKP_CREDIT_CASE ) /ME.CNT_APPLICATION>=0.6)
)
,POS_CNT AS 
(
SELECT CO.P_GROUP,CO.POS,CNT_APPLICATION,CNT_CLIENT
            ,COUNT(DISTINCT SKP_CREDIT_CASE ) AS CNT_POS_APPLICATION,COUNT(DISTINCT SKp_CLIENT )  AS CNT_POS_CLIENT
FROM CONTRACT CO
JOIN POS_CONCENTRATION PP ON CO.P_GROUP=PP.P_GROUP
GROUP BY CO.P_GROUP, CO.POS,CNT_APPLICATION,CNT_CLIENT
)

SELECT DISTINCT 'SA' AS UNIT,
          CASE WHEN FI.SA <> 'XNA' THEN FI.SA ELSE 'homer_o2o' END as ID_ENTITY,
          TO_CHAR(SYSDATE,'YYYY/MM/DD')AS DATE_DETECT,
          TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD') AS WEEK_DETECT,
          '422' AS CLASS,
          'ACL - 2BOD GPS concentration' AS TRIGGER_SOURCE,
          'GROUP[P_'||tt.P_GROUP||']共涉及'||CNT_APPLICATION||'单ACL申请,'||CNT_CLIENT||'个客户在相近的区域进行ACL线上申请。其中'||CNT_POS_CLIENT||'个客户进入'||FI.NAME_SALESROOM||'进行申请，本单客户线上申请时的GPS是('
          ||GPS_LAT||','||GPS_LONG||'),距离POS的距离是'||
          CASE WHEN GPS_LONG>0 AND GPS_LAT>0 AND num_longitude>0 AND num_latitude>0 THEN AP_ANTIFRAUD.GetDistance(GPS_LONG,GPS_LAT,num_longitude,num_latitude) END ||'km。' AS TRIGGER_VALUE
          ,'SOFT' AS TRIGGER_TYPE
          ,FI.SKP_CREDIT_CASE
          ,FI.TEXT_CONTRACT_NUMBER 
FROM POS_CNT TT
JOIN CONTRACT FI ON TT.P_GROUP=FI.P_GROUP AND TT.POS=FI.POS ;
COMMIT;

----INSERT INTO TRIGGER 20190815
INSERT INTO AP_ANTIFRAUD.F_AF_FINAL_TRIGGERS
WITH FINAL_TRIGGER_BASE AS
(
SELECT  /*+  use_hash(facc) */  DISTINCT 
 PRE.ID_ENTITY
,CASE WHEN PRE.ID_ENTITY='XNA' THEN NULL ELSE EE.SKP_EMPLOYEE END AS skp_employee_consultant--20200113
,TRIGGER_VALUE 
,CASE WHEN PRE.ID_ENTITY='XNA' THEN NULL ELSE EE.NAME_LAST END AS name_last_sales--20200113
,PRE.DATE_DETECT
,PRE.WEEK_DETECT
, CASE WHEN ((FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR FACC.text_username_employee_sales='homer_o2o')AND DSAC.CODE_SALES_AREA IS NOT NULL THEN DSAC.CODE_SALES_AREA ELSE  PRO.CODE_SALES_AREA END  AS REGION
, CASE WHEN ((FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR FACC.text_username_employee_sales='homer_o2o')AND DSA.CODE_SALES_AREA IS NOT NULL THEN DSA.CODE_SALES_AREA ELSE  CC.CODE_SALES_AREA END AS CODE_SALES_AREA
--,SA_TYPE
--,SA_ACTIVE_DAYS
,TRIGGER_SOURCE
,TRIGGER_TYPE
,substr(trigger_value,1,instr(trigger_value,']',1)-1) as ID_GROUP
,MIN(CASE WHEN FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme' AND EE.SKP_BANK_ROLE<>1962 THEN '2 POS LOAN'
                      WHEN FACC.name_channel LIKE '%无预约%' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme' THEN '3 WALK-IN'  
                      WHEN FACC.name_channel LIKE '消费贷%' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme'  THEN '1 XSELL' 
                       --WHEN FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme' THEN '4 ELOAN' ELSE '5 MINI' END 
                       WHEN FACC.name_channel='商品贷' AND EE.SKP_BANK_ROLE=1962 THEN '4 ELOAN' ELSE '5 MINI' END --REMOTE SA 20190517
                               ) OVER(PARTITION BY DATE_DETECT, substr(trigger_value,1,instr(trigger_value,']',1)-1))AS CASE_CATEGORY
FROM AP_ANTIFRAUD.f_Trcontracts_Preselection PRE
JOIN OWNER_DWH.DC_CREDIT_CASE DCC ON DCC.SKP_CREDIT_CASE=PRE.SKP_CREDIT_CASE AND PRE.DATE_DETECT=TO_CHAR(SYSDATE,'yyyy/mm/dd')
and PRE.CLASS='422' AND PRE.trigger_source IN ('ACL - Phone network' ,'ACL - 2BOD GPS concentration' )
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC ON DCC.id_source = facc.id_source AND  FACC.date_decision=DCC.DATE_DECISION AND DCC.skp_credit_type = facc.skp_credit_type ---?? SKP_CREDIT_CASE  
LEFT JOIN OWNER_DWH.DC_EMPLOYEE EE ON PRE.ID_ENTITY=EE.TEXT_USERNAME_EMPLOYEE AND EE.CODE_EMPLOYEE_STATUS<>'X'
----=====
LEFT JOIN OWNER_DWH.DC_SALES_AREA CC ON CC.NAME_SALES_AREA=FACC.name_region AND CC.code_sales_area_status='a' and  CC.skp_sales_area_type=1 
LEFT JOIN OWNER_DWH.DC_SALES_AREA PRO ON CC.SKP_SALES_AREA_SUPERIOR=PRO.SKP_SALES_AREA AND  PRO.CODE_SALES_AREA_STATUS='a' and PRO.SKP_SALES_AREA_TYPE=2 

JOIN OWNER_DWH.f_Application_Client_Tt ACT ON ACT.SKP_CREDIT_CASE=DCC.SKP_CREDIT_CASE AND ACT.SKP_CREDIT_TYPE=DCC.SKP_CREDIT_TYPE AND ACT.SKP_CLIENT_ROLE=14
LEFT JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR ON ADDR.SKP_CREDIT_CASE= DCC.SKP_CREDIT_CASE AND ACT.SKP_APPLICATION_CLIENT=ADDR.SKP_APPLICATION_CLIENT AND ADDR.SKP_ADDRESS_TYPE=2--CURRENT
LEFT JOIN OWNER_DWH.DC_CITY DC ON DC.SKP_CITY=ADDR.SKP_CITY
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSA ON DSA.NAME_SALES_AREA=DC.NAME_CITY AND DSA.code_sales_area_status='a' and  DSA.skp_sales_area_type=1
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSAC ON DSA.SKP_SALES_AREA_SUPERIOR=DSAC.SKP_SALES_AREA AND  DSAC.CODE_SALES_AREA_STATUS='a' and DSAC.SKP_SALES_AREA_TYPE=2 
)

,PROVINCE AS 
(
SELECT DISTINCT ID_GROUP
,LISTAGG(REGION,'、' )WITHIN GROUP(ORDER BY REGION) OVER(PARTITION BY ID_GROUP) AS PROVINCE
FROM (SELECT DISTINCT ID_GROUP,REGION FROM FINAL_TRIGGER_BASE)
)
,REGION AS 
(
SELECT DISTINCT AA.ID_GROUP
,BB.PROVINCE
,LISTAGG(CODE_SALES_AREA,'、')WITHIN GROUP(ORDER BY CODE_SALES_AREA) OVER(PARTITION BY AA.ID_GROUP) AS CITY
,CASE WHEN CASE_CATEGORY='1 XSELL' THEN '3 XSELL' 
              WHEN CASE_CATEGORY='2 POS LOAN' THEN '1 POS LOAN'
                WHEN CASE_CATEGORY='3 WALK-IN' THEN '2 WALK-IN'
              ELSE CASE_CATEGORY END AS CASE_CATEGORY     ----------PRIORITY XSELL
FROM  (SELECT DISTINCT ID_GROUP, CODE_SALES_AREA,CASE_CATEGORY FROM FINAL_TRIGGER_BASE) AA
JOIN PROVINCE BB ON AA.ID_GROUP=BB.ID_GROUP
)

SELECT  
AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID
,'SA' AS UNIT
, 'SA'||'_'||AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID_TRIGGER
,TO_DATE(TRI.DATE_DETECT,'YYYY-MM-DD') AS DATE_DETECT
,TO_DATE(TRI.WEEK_DETECT,'YYYY-MM-DD')AS WEEK_DETECT
,TRI.ID_ENTITY
,TRI.name_last_sales
,BB.PROVINCE
,BB.CITY
,CASE WHEN SUBSTR(ID_ENTITY,1,1) IN ('6','D') THEN 'RA' ELSE 'SA' END AS SA_TYPE
,CASE WHEN TRI.skp_employee_consultant=-1 THEN NULL ELSE SA.cnt_days_from_first_credit  END --20200113
,'422' AS CLASS
,TRI.TRIGGER_SOURCE
,'SOFT' AS TRIGGER_TYPE
,TRI.TRIGGER_VALUE 
,NULL CHECKED_BY
,NULL CASE_STATUS
,NULL CASE_DECISION
,NULL CASE_NO
,NULL INTO_SECURITY
,SYSDATE AS TIME_DETECT
,BB.CASE_CATEGORY
,NULL AS NAME_DISTRICT 
,'是' AS FLAG_SEC_ALL_CONTRACT
FROM (SELECT DISTINCT DATE_DETECT,WEEK_DETECT,ID_ENTITY,name_last_sales,skp_employee_consultant,TRIGGER_SOURCE, TRIGGER_VALUE,ID_GROUP FROM FINAL_TRIGGER_BASE) TRI
JOIN REGION BB ON TRI.ID_GROUP=BB.ID_GROUP 
---SA_ACTIVE_DAYS
LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON TRI.skp_employee_consultant=sa.skp_employee
WHERE length( BB.CITY)<300;
COMMIT;

/********************************************************
--=====setting 2: 422-ACL GPS- CAPP VS SMART,A18 VS SMART 20190823 KATE
********************************************************/
INSERT /*+ append*/ INTO AP_ANTIFRAUD.f_Trcontracts_Preselection
WITH ACL AS 
(
SELECT /*+MATERIALIZE ORDERED USE_HASH(CC,FF)*/   CC.DATE_DECISION,CC.SKP_CREDIT_TYPE ,CC.SKP_CREDIT_CASE ,CC.SKp_CLIENT ,CC.TEXT_CONTRACT_NUMBER ,CC.DTIME_DECISION,FF.SKP_EMPLOYEE_CONSULT_3RD_BLOCK
FROM OWNER_DWH.DC_CREDIT_CASE CC
JOIN OWNER_DWH.F_APPLICATION_TT FF
ON FF.DATE_DECISION =CC.DATE_DECISION AND CC.SKP_CREDIT_TYPE =FF.SKP_CREDIT_TYPE AND CC.SKP_CREDIT_CASE =FF.SKP_CREDIT_CASE 
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='422'
AND CC.DATE_DECISION>=EX.MAX_DETECT
WHERE 
CC.DATE_DECISION >=TRUNC(SYSDATE)-14
AND FF.DATE_DECISION >=TRUNC(SYSDATE)-14
AND CC.SKP_CREDIT_TYPE =2 
AND CC.SKP_CREDIT_ACQUISITION_CHNL =6 
AND CC.SKP_ALTERNATIVE_TYPE =4
AND FF.SKP_CREDIT_TYPE =2 
)

,SA5 AS 
(
SELECT SKP_EMPLOYEE_CONSULT_3RD_BLOCK,COUNT(DISTINCT SKP_CREDIT_CASE ) AS CNT_TOTAL
FROM ACL LL 
GROUP BY SKP_EMPLOYEE_CONSULT_3RD_BLOCK
HAVING COUNT(DISTINCT SKP_CREDIT_CASE )>=4
)

,SMARTPOS_GPS AS 
(
SELECT /*+MATERIALIZE ORDERED USE_HASH(DC,TT)*/  DISTINCT  DC.*
            ,SUBSTR( TEXT_INITIAL_COORDINATES, REGEXP_INSTR(TEXT_INITIAL_COORDINATES,';')+1,10) AS SMART_LONGITUDE
            ,SUBSTR(TEXT_INITIAL_COORDINATES,1,REGEXP_INSTR(TEXT_INITIAL_COORDINATES,';')-1) AS SMART_LATITUDE
FROM ACL DC
JOIN OWNER_DWH.F_APPLICATION_VCT_SMARTPOS_AT TT 
ON DC.SKP_CREDIT_CASE=TT.SKP_CREDIT_CASE AND DC.DATE_DECISION =TT.DATE_DECISION AND TT.SKP_CREDIT_TYPE=DC.SKP_CREDIT_TYPE 
WHERE TT.SKP_CREDIT_TYPE =2
AND TT.DATE_DECISION >=TRUNC(SYSDATE)-14 
AND TEXT_INITIAL_COORDINATES<>'N/A'
AND TEXT_INITIAL_COORDINATES IS NOT NULL
AND INSTR(TEXT_INITIAL_COORDINATES,'0.00')<>1
AND INSTR(TEXT_INITIAL_COORDINATES,'0.00.0')<>1 
)

,DISTANCE_CAPP_SPOS AS 
(
    SELECT AA.*,AP_ANTIFRAUD.GetDistance(CAPP_LONGITUDE, CAPP_LATITUDE ,SMART_LONGITUDE,SMART_LATITUDE) AS DISTANCE_KM
    FROM (
    SELECT /*+NO_MERGE*/
               SMART_LONGITUDE, SMART_LATITUDE
              ,SKP_CREDIT_CASE , DATE_DECISION , SKP_CREDIT_TYPE , DTIME_DECISION ,SKp_CLIENT ,TEXT_CONTRACT_NUMBER ,SKP_EMPLOYEE_CONSULT_3RD_BLOCK
              ,TO_NUMBER(SUBSTR(CAPP_LONGITUDE,1,10)) AS CAPP_LONGITUDE
              ,TO_NUMBER(SUBSTR(CAPP_LATITUDE,1,10)) AS CAPP_LATITUDE
    FROM(
                SELECT DISTINCT SKP_CREDIT_CASE , DATE_DECISION , SKP_CREDIT_TYPE , DTIME_DECISION ,SKp_CLIENT,TEXT_CONTRACT_NUMBER,SKP_EMPLOYEE_CONSULT_3RD_BLOCK, SMART_LONGITUDE, SMART_LATITUDE
                            ,DTIME_EVENT
                            ,NAME_EVENT
                            ,REGEXP_SUBSTR(GEO,'[^,]+',INSTR(GEO,'"longitude":',1,1)+12,1) AS CAPP_LONGITUDE
                            ,REGEXP_SUBSTR(GEO,'[^,]+',INSTR(GEO,'"latitude":',1,1)+11,1) AS CAPP_LATITUDE
                            ,RANK()OVER(PARTITION BY  skp_credit_case ORDER BY ABS(DIFF),DTIME_EVENT,ID_SOURCE) AS R--最近登录的
                FROM(
                             SELECT /*+FULL(DC) FULL(E) FULL(TT) USE_HASH(KA, E ,TT) PARALLEL(2) */ 
                                        DISTINCT E.DTIME_EVENT,TT.NAME_EVENT,E.ID_SOURCE,KA.*
                                        ,24*(KA.DTIME_DECISION-E.DTIME_EVENT) AS DIFF
                                        ,REGEXP_SUBSTR(TEXT_LOG,'[^}]+',INSTR(TEXT_LOG,'"geolocation":',1,1)+14,1) AS GEO 
                              FROM SMARTPOS_GPS KA
                              JOIN OWNER_DWH.F_MOBILE_APP_EVENT_LOG_TT E ON KA.SKP_CLIENT=E.SKP_CLIENT
                              AND E.SKP_MOBILE_APP_EVENT_TYPE=144
                              AND 24*(E.DTIME_EVENT-KA.DTIME_DECISION) BETWEEN -1 AND 1--办单和EVENT 相差1个小时
                              JOIN OWNER_DWH.CL_MOBILE_APP_EVENT_TYPE TT ON E.SKP_MOBILE_APP_EVENT_TYPE=TT.SKP_MOBILE_APP_EVENT_TYPE
                              WHERE E.SKP_MOBILE_APP_EVENT_TYPE=144
                              AND E.DTIME_EVENT>=TRUNC(SYSDATE)-14
                             )
                 )
    WHERE CAPP_LONGITUDE!='0'
    AND CAPP_LATITUDE!='0'
    AND R=1
    )AA
)

,SA_CONCENTRATION_CAPP AS 
(
SELECT SKP_EMPLOYEE_CONSULT_3RD_BLOCK
             ,COUNT(DISTINCT SKP_CREDIT_CASE ) AS CNT_TOTAL
             ,COUNT(DISTINCT CASE WHEN DISTANCE_KM >4 THEN SKP_CREDIT_CASE END )  AS CNT_AB_DISTANCE
FROM DISTANCE_CAPP_SPOS
GROUP BY SKP_EMPLOYEE_CONSULT_3RD_BLOCK
HAVING COUNT(DISTINCT CASE WHEN DISTANCE_KM >4 THEN SKP_CREDIT_CASE END) > = 3
)

,BIGDATA AS 
(
SELECT /*+MATERIALIZE ORDERED USE_HASH(W,TT)*/  W.*, TT.TEXT_VALUE,TT.SKP_APPRSTEP_ADD_INFO, CL.CODE_ADDITIONAL_INFO
FROM SMARTPOS_GPS W
JOIN OWNER_DWH.F_APPRSTEP_ADDITIONAL_INFO_TT TT
ON W.SKP_CREDIT_CASE =TT.SKP_CREDIT_CASE AND W.DATE_DECISION = TT.DATE_DECISION AND W.SKP_CREDIT_TYPE = TT.SKP_CREDIT_TYPE
JOIN OWNER_DWH.CL_APPRSTEP_ADD_INFO CL
ON TT.SKP_APPRSTEP_ADD_INFO=CL.SKP_APPRSTEP_ADD_INFO
WHERE 
TT.DATE_DECISION >=TRUNC(SYSDATE)-14
AND CL.CODE_ADDITIONAL_INFO IN ('a18_geo_lng_low','a18_geo_lat_low')-----20191012
AND TT.SKP_CREDIT_TYPE =2
AND TT.TEXT_VALUE<>'XNA'
)

,DISTANCE_A18_SPOS AS 
(
    SELECT CC.* ,AP_ANTIFRAUD.GetDistance(GPS_LONG, GPS_LAT ,SMART_LONGITUDE,SMART_LATITUDE) AS DISTANCE_KM
    FROM 
    (
    SELECT /*+MATERIALIZE ORDERED USE_HASH(AA,BB)*/  AA.SKP_CREDIT_CASE , AA.SKP_CREDIT_TYPE , AA.DATE_DECISION ,AA.SKP_CLIENT ,AA.TEXT_CONTRACT_NUMBER  
                ,AA.TEXT_VALUE AS GPS_LAT
                ,BB.TEXT_VALUE AS GPS_LONG
                ,AA.SKP_EMPLOYEE_CONSULT_3RD_BLOCK
                ,AA.SMART_LONGITUDE,AA.SMART_LATITUDE
    FROM BIGDATA AA
    JOIN BIGDATA BB ON AA.DATE_DECISION =BB.DATE_DECISION AND AA.SKP_CREDIT_CASE =BB.SKP_CREDIT_CASE 
    WHERE AA.CODE_ADDITIONAL_INFO='a18_geo_lng_low' AND BB.CODE_ADDITIONAL_INFO='a18_geo_lat_low'
    )CC-----20191012
)

,SA_CONCENTRATION_A18 AS 
(
SELECT PP.SKP_EMPLOYEE_CONSULT_3RD_BLOCK
             ,CNT_TOTAL
             ,COUNT(DISTINCT CASE WHEN DISTANCE_KM >4 THEN SKP_CREDIT_CASE END )  AS CNT_AB_DISTANCE
             ,COUNT(DISTINCT CASE WHEN DISTANCE_KM >4 THEN SKP_CREDIT_CASE END ) /CNT_TOTAL AS SHARE_AB
FROM DISTANCE_A18_SPOS PP
JOIN SA5 SA ON PP.SKP_EMPLOYEE_CONSULT_3RD_BLOCK=SA.SKP_EMPLOYEE_CONSULT_3RD_BLOCK
GROUP BY PP.SKP_EMPLOYEE_CONSULT_3RD_BLOCK,CNT_TOTAL
HAVING COUNT(DISTINCT CASE WHEN DISTANCE_KM >4 THEN SKP_CREDIT_CASE END )/CNT_TOTAL >=0.3
)

SELECT DISTINCT 'SA' AS UNIT,
            EE.TEXT_USERNAME_EMPLOYEE as ID_ENTITY,
            TO_CHAR(SYSDATE,'YYYY/MM/DD')AS DATE_DETECT,
            TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD') AS WEEK_DETECT,
            '422' AS CLASS,
             'ACL - Remote distance (>4 km) between mobile phone GPS and Smart POS GPS' AS TRIGGER_SOURCE,
            'SA'||EE.TEXT_USERNAME_EMPLOYEE||'在'||TO_CHAR(TRUNC(SYSDATE,'IW')-3,'YYYY/MM/DD')||'-'||TO_CHAR(TRUNC(SYSDATE)-1,'YYYY/MM/DD') ||'办理ACL共'||AA.CNT_TOTAL||'单,其中'||AA.CNT_AB_DISTANCE||'单距离异常。' 
            ||'本单ACL合同客户手机GPS与Smart POS GPS的距离异常远,是'||DIS.DISTANCE_KM||'km, 且具有SA集中性。'AS TRIGGER_VALUE     
            ,'SOFT' AS TRIGGER_TYPE
            ,DIS.SKP_CREDIT_CASE
            ,DIS.TEXT_CONTRACT_NUMBER
FROM SA_CONCENTRATION_A18  AA
JOIN OWNER_DWH.DC_EMPLOYEE EE ON AA.SKP_EMPLOYEE_CONSULT_3RD_BLOCK=EE.SKP_EMPLOYEE
JOIN DISTANCE_A18_SPOS DIS ON DIS.SKP_EMPLOYEE_CONSULT_3RD_BLOCK =AA.SKP_EMPLOYEE_CONSULT_3RD_BLOCK
WHERE DIS.DISTANCE_KM>4
UNION
SELECT DISTINCT 'SA' AS UNIT,
            EE.TEXT_USERNAME_EMPLOYEE as ID_ENTITY,
            TO_CHAR(SYSDATE,'YYYY/MM/DD')AS DATE_DETECT,
            TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD') AS WEEK_DETECT,
            '422' AS CLASS,
            'ACL - Remote distance (>4 km) between DWC pop-up in CAPP GPS and Smart POS GPS' AS TRIGGER_SOURCE,
            'SA'||EE.TEXT_USERNAME_EMPLOYEE||'在'||TO_CHAR(TRUNC(SYSDATE,'IW')-3,'YYYY/MM/DD')||'-'||TO_CHAR(TRUNC(SYSDATE)-1,'YYYY/MM/DD')||'期间办理ACL共'||AA.CNT_TOTAL||'单,其中'||AA.CNT_AB_DISTANCE||'单距离异常。'||
            '本单ACL合同客户手机CAPP跳转贷款信息卡界面时的GPS与Smart POS GPS的距离异常远,是'||DIS.DISTANCE_KM||'km, 且具有SA集中性。' AS TRIGGER_VALUE        
            ,'SOFT' AS TRIGGER_TYPE
            ,DIS.SKP_CREDIT_CASE
            ,DIS.TEXT_CONTRACT_NUMBER
FROM SA_CONCENTRATION_CAPP  AA
JOIN OWNER_DWH.DC_EMPLOYEE EE ON AA.SKP_EMPLOYEE_CONSULT_3RD_BLOCK=EE.SKP_EMPLOYEE
JOIN DISTANCE_CAPP_SPOS DIS ON DIS.SKP_EMPLOYEE_CONSULT_3RD_BLOCK =AA.SKP_EMPLOYEE_CONSULT_3RD_BLOCK 
WHERE DIS.DISTANCE_KM>4; 
COMMIT;

/**************************************************************************
--=====setting 3: 422-ACL Client mian phone register city differs from POS city 20191010 KATE
**************************************************************************/
--edit 20191016
INSERT /*+ append*/ INTO AP_ANTIFRAUD.f_Trcontracts_Preselection
WITH SKP AS  --20191220 kate
(
SELECT /*+MATERIALIZE*/  CC.DATE_DECISION,CC.SKP_CREDIT_TYPE ,CC.SKP_CREDIT_CASE ,CC.SKP_CREDIT_STATUS , CC.SKp_CLIENT ,CC.TEXT_CONTRACT_NUMBER,CC.SKP_ALTERNATIVE_TYPE -- , AA.OLD_SKP
             ,EX.MAX_DETECT
FROM OWNER_DWH.DC_CREDIT_CASE CC
/*JOIN AP_ANTIFRAUD.F_ACL_APPLICATION AA
ON CC.SKP_CREDIT_CASE =AA.NEW_SKP*/
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='422'
AND CC.DATE_DECISION>=EX.MAX_DETECT
WHERE CC.SKP_CREDIT_TYPE =2 
AND CC.SKP_CREDIT_ACQUISITION_CHNL =6
--AND CC.SKP_ALTERNATIVE_TYPE =4
AND CC.DATE_DECISION >=TRUNC(SYSDATE)-14
---AND AA.O2O_STATUS='Online2offline'
)
,ACL AS 
(
SELECT AA.*, BB.SKP_CREDIT_CASE AS OLD_SKP
FROM SKP AA
JOIN SKP BB
ON AA.SKp_CLIENT=BB.SKp_CLIENT 
WHERE AA.SKP_ALTERNATIVE_TYPE =4 AND BB.SKP_ALTERNATIVE_TYPE =1
UNION
SELECT AA.*, AA.SKP_CREDIT_CASE AS OLD_SKP
FROM SKP AA
WHERE AA.SKP_ALTERNATIVE_TYPE IN (2,3) 
)
,A15 AS 
(
SELECT AA.*, TT.TEXT_VALUE
FROM ACL AA
JOIN OWNER_DWH.F_APPRSTEP_ADDITIONAL_INFO_TT TT ON AA.OLD_SKP  = TT.SKP_CREDIT_CASE ---------CALL 1 NOT 4
WHERE TT.SKP_CREDIT_TYPE =2 
AND TT.DATE_DECISION >=TRUNC(SYSDATE)-30
AND TT.SKP_APPRSTEP_ADD_INFO =6413
AND TT.TEXT_VALUE<>'XNA'
)

,RW AS 
(
    SELECT RR.*
                ,CASE WHEN SUBSTR(PHONE_CITY,1,2)=SUBSTR(POS_CITY ,1,2) THEN 'Y' ELSE 'N' END AS FLAG_SAME
    FROM 
    (
        SELECT PO.*, PP.SKP_EMPLOYEE_CONSULT_3RD_BLOCK
        ,CASE WHEN INSTR(TEXT_VALUE,'省')>0 THEN REPLACE(SUBSTR(TEXT_VALUE,INSTR(TEXT_VALUE,'省')+1) ,'市')
        WHEN INSTR(TEXT_VALUE,'自治区')>0 THEN REPLACE(SUBSTR(TEXT_VALUE,INSTR(TEXT_VALUE,'自治区')+3),'市')
        WHEN INSTR(TEXT_VALUE,'省')=0 AND INSTR(TEXT_VALUE,'市')>0 THEN SUBSTR(TEXT_VALUE,1,INSTR(TEXT_VALUE,'市')-1) 
        END AS PHONE_CITY
        ,REPLACE(PPP.NAME_REGION,'市') AS POS_CITY, PP.SKP_SALESROOM ,PR.NAME_PROVINCE AS POS_PROVINCE
        FROM A15 PO
        JOIN OWNER_DWH.F_APPLICATION_TT PP---POS ,SA
        ON PO.DATE_DECISION =PP.DATE_DECISION AND PO.SKP_CREDIT_TYPE =PP.SKP_CREDIT_TYPE AND PO.SKP_CREDIT_CASE =PP.SKP_CREDIT_CASE 
        JOIN OWNER_DWH.DC_SALESROOM POS ON PP.SKP_SALESROOM=POS.SKP_SALESROOM
        JOIN OWNER_DWH.CL_SALES_REGION PPP ON POS.SKP_SALESROOM_REGION = PPP.SKP_SALES_REGION
        JOIN OWNER_DWH.Cl_Province Pr ON  Pr.SKP_PROVINCE= PPp.SKP_province
        WHERE 1=1 
        AND PP.DATE_DECISION >=TRUNC(SYSDATE)-20
        AND PP.SKP_CREDIT_TYPE =2
        AND PP.SKP_CREDIT_TYPE =2
        AND PP.SKP_SALESROOM<>-1
        AND PP.SKP_EMPLOYEE_CONSULT_3RD_BLOCK<>-1
        AND PPP.NAME_REGION<>'XNA'
    ) RR
)
,SA_CONCENTRATION AS 
(
  SELECT * FROM 
  (
  SELECT SKP_EMPLOYEE_CONSULT_3RD_BLOCK
             ,CASE WHEN CNT_DIF_SA>0 THEN ROUND(CNT_DIF_SA /CNT_SA ,2) ELSE 0 END AS SHARE_DIF_SA,POS_CITY
             ,CNT_DIF_SA
             ,CNT_SA
             ,ROW_NUMBER()OVER (PARTITION BY POS_CITY ORDER BY  CNT_SA-CNT_DIF_SA DESC)  AS RNK
  FROM (
              SELECT SKP_EMPLOYEE_CONSULT_3RD_BLOCK,POS_CITY
                          ,COUNT(DISTINCT SKP_CREDIT_CASE ) AS CNT_SA 
                          ,COUNT(DISTINCT CASE WHEN FLAG_SAME='N' THEN SKP_CREDIT_CASE END) AS CNT_DIF_SA 
              FROM RW
              GROUP BY SKP_EMPLOYEE_CONSULT_3RD_BLOCK,POS_CITY
              HAVING COUNT(DISTINCT SKP_CREDIT_CASE ) >=5
              AND COUNT(DISTINCT CASE WHEN FLAG_SAME='N' THEN SKP_CREDIT_CASE END) >=2 
              AND COUNT(DISTINCT CASE WHEN SKP_CREDIT_STATUS IN (2,3,5)  THEN SKP_CREDIT_CASE END) >=1 
              )
  )
)
------==CITY
,CITY_AVG AS 
(
SELECT POS_CITY , CASE WHEN CNT_DIF_CITY >0 THEN ROUND(CNT_DIF_CITY  /CNT_CITY,2) ELSE 1 END AS SHARE_DIF_CITY 
FROM (
            SELECT  POS_CITY
                        ,COUNT(DISTINCT SKP_CREDIT_CASE ) AS CNT_CITY 
                        ,COUNT(DISTINCT CASE WHEN FLAG_SAME='N' THEN SKP_CREDIT_CASE END) AS CNT_DIF_CITY 
            FROM RW
            GROUP BY POS_CITY
            HAVING COUNT(DISTINCT SKP_CREDIT_CASE ) >=5
            )
)
,C_CUTOFF AS 
(
SELECT AA.*, CASE WHEN SHARE_DIF_SA>0 THEN ROUND(SHARE_DIF_SA/SHARE_DIF_CITY,2) ELSE 0 END AS TIMES
FROM (
            SELECT SA.*,SHARE_DIF_CITY
            FROM SA_CONCENTRATION SA
            JOIN CITY_AVG CC
            ON SA.POS_CITY=CC.POS_CITY  )AA
WHERE CASE WHEN SHARE_DIF_SA>0 THEN SHARE_DIF_SA/SHARE_DIF_CITY ELSE 0 END >=2 OR (RNK<=4 AND CNT_DIF_SA>=2)
)

SELECT DISTINCT 'SA' AS UNIT,
            EE.TEXT_USERNAME_EMPLOYEE as ID_ENTITY,
            TO_CHAR(SYSDATE,'YYYY/MM/DD')AS DATE_DETECT,
            TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD') AS WEEK_DETECT,
            '422' AS CLASS,
            'ACL - Client mian phone register city differs from POS city' AS TRIGGER_SOURCE,
            CASE WHEN TIMES>=2 THEN '倍数' ELSE 'TOP' END ||'逻辑：SA'||EE.TEXT_USERNAME_EMPLOYEE||'在'||TO_CHAR(AA.MAX_DETECT,'YYYY/MM/DD')||'-'||TO_CHAR(SYSDATE-1 ,'YYYY/MM/DD')||'期间办理ACL共'||CU.CNT_SA||'单,其中'||CU.CNT_DIF_SA
            ||'名客户手机号码归属地城市与POS城市不同，是'||AA.POS_CITY||'平均水平的'||TIMES||'倍。'||'本单ACL合同客户手机号码归属地-'||AA.TEXT_VALUE||'与POS所在地-'||AA.POS_PROVINCE||AA.POS_CITY||'不同,且具有SA集中性。本单合同CAPP(贷款信息卡)GPS和SMARTPOS GPS距离是'||
            CASE WHEN AP_ANTIFRAUD.GetDistance(GP.CAPP_LATITUDE, GP.CAPP_LONGITUDE,GP.Smart_Latitude,GP.Smart_Longitude) IS NOT NULL OR  AP_ANTIFRAUD.GetDistance(GP.CAPP_LATITUDE, GP.CAPP_LONGITUDE,GP.Smart_Latitude,GP.Smart_Longitude) <10000 THEN TO_CHAR(AP_ANTIFRAUD.GetDistance(GP.CAPP_LATITUDE, GP.CAPP_LONGITUDE,GP.Smart_Latitude,GP.Smart_Longitude)) ELSE 'N/A' END
              ||' km。CAPP(贷款信息卡)GPS和POS GPS距离是'||
              CASE WHEN AP_ANTIFRAUD.GetDistance(GP.CAPP_LATITUDE, GP.CAPP_LONGITUDE,GP.POS_Latitude,GP.POS_Longitude) IS NOT NULL AND AP_ANTIFRAUD.GetDistance(GP.CAPP_LATITUDE, GP.CAPP_LONGITUDE,GP.POS_Latitude,GP.POS_Longitude) <10000 THEN TO_CHAR(AP_ANTIFRAUD.GetDistance(GP.CAPP_LATITUDE, GP.CAPP_LONGITUDE,GP.POS_Latitude,GP.POS_Longitude)） ELSE 'N/A' END||' km。'AS TRIGGER_VALUE        
            ,'SOFT' AS TRIGGER_TYPE
            ,AA.SKP_CREDIT_CASE
            ,AA.TEXT_CONTRACT_NUMBER
FROM C_CUTOFF CU
JOIN RW AA
ON CU.SKP_EMPLOYEE_CONSULT_3RD_BLOCK=AA.SKP_EMPLOYEE_CONSULT_3RD_BLOCK
JOIN OWNER_DWH.DC_EMPLOYEE EE
ON AA.SKP_EMPLOYEE_CONSULT_3RD_BLOCK=EE.SKP_EMPLOYEE 
-----------add CAPP (WC POP UP) GPS VS POS GPS 20191012
-----------change CAPP (WC POP UP) GPS VS smart POS GPS 20191012
LEFT JOIN AP_ANTIFRAUD.F_APPLICATION_GPS GP
ON AA.SKP_CREDIT_CASE =GP.SKP_CREDIT_CASE AND GP.CAPP_NAME_EVENT='Display of DWC pop-up'
AND GP.CAPP_LATITUDE IS NOT NULL AND GP.CAPP_LONGITUDE IS NOT NULL AND GP.POS_LATITUDE IS NOT NULL AND GP.POS_LONGITUDE IS NOT NULL
WHERE AA.FLAG_SAME='N';
COMMIT;

--20191024
INSERT INTO AP_ANTIFRAUD.F_AF_FINAL_TRIGGERS
SELECT  --DISTINCT
AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID
,UNIT
,CASE WHEN UNIT='SA' THEN 'SA'||'_'||AF_FINAL_TRIGGERS_SEQ.NEXTVAL WHEN UNIT='POS'THEN 'POS'||'_'||AF_FINAL_TRIGGERS_SEQ.NEXTVAL END AS ID_TRIGGER
,DATE_DETECT
,WEEK_DETECT
,ID_ENTITY
,NAME_ENTITY
,REGION
,CODE_SALES_AREA AS CITY
,CASE WHEN UNIT='SA' AND SUBSTR(ID_ENTITY,1,1) IN ('6','D') THEN 'RA' WHEN UNIT= 'SA' AND SUBSTR(ID_ENTITY,1,1) NOT IN ('6','D')THEN 'SA'
             WHEN UNIT='POS' AND SUBSTR(ID_ENTITY,1,1) IN ('6','D') THEN 'ALDI'  ELSE 'NON-ALDI' END AS TYPE
, ACTIVE_DAYS
,CLASS
,TRIGGER_SOURCE
,TRIGGER_TYPE
,TRIGGER_VALUE
--,CASE WHEN CLASS=15 THEN 'Trigger concentrated district:'||NAME_DISTRICT ELSE TRIGGER_VALUE END AS TRIGGER_VALUE--20180320
,NULL CHECKED_BY
,NULL CASE_STATUS
,NULL CASE_DECISION
,NULL CASE_NO
,NULL INTO_SECURITY
,SYSDATE AS TIME_DETECT
,CASE_CATEGORY
,NAME_DISTRICT--20180319
, '是' AS FLAG_SEC_ALL_CONTRACT --20190517
FROM 
(
      SELECT DISTINCT UNIT,TO_DATE(DATE_DETECT,'YYYY-MM-DD')AS DATE_DETECT,CLASS--,PRE.SKP_CREDIT_CASE
      ,TO_DATE(WEEK_DETECT,'YYYY-MM-DD')AS WEEK_DETECT
      ,ID_ENTITY
      ,TRIGGER_SOURCE
      ,TRIGGER_TYPE
      ,CASE WHEN PRE.TRIGGER_SOURCE='ACL - Remote distance (>4 km) between mobile phone GPS and Smart POS GPS' THEN SUBSTR(PRE.TRIGGER_VALUE,0,INSTR(PRE.TRIGGER_VALUE,',',1,1)-1) --20190823
                 ELSE PRE.TRIGGER_VALUE END AS TRIGGER_VALUE
      ,CASE WHEN  UNIT='SA' AND ID_ENTITY='XNA' THEN NULL 
                   WHEN  UNIT='SA' AND ID_ENTITY<>'XNA' THEN  EE.NAME_LAST ELSE FACC.name_salesroom END AS NAME_ENTITY --20180504
      ,CASE WHEN  UNIT='SA' AND ID_ENTITY='XNA' THEN NULL 
                  WHEN UNIT='SA' AND ID_ENTITY<>'XNA' THEN SA.cnt_days_from_first_credit ELSE FS.cnt_days_from_first_credit END as ACTIVE_DAYS
      , CASE WHEN ((FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR PRE.ID_ENTITY IN ('homer_o2o','rpos') OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%' OR FACC.name_product LIKE '%MINI%') AND DSAC.CODE_SALES_AREA IS NOT NULL THEN DSAC.CODE_SALES_AREA ELSE  PRO.CODE_SALES_AREA END  AS REGION--FACC改为PRE 20190514
      , CASE WHEN ((FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR PRE.ID_ENTITY IN ('homer_o2o','rpos') OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%' OR FACC.name_product LIKE '%MINI%') AND DSA.CODE_SALES_AREA IS NOT NULL THEN DSA.CODE_SALES_AREA ELSE  CC.CODE_SALES_AREA END AS CODE_SALES_AREA --add rpos 20190827

      ,MIN(CASE WHEN FACC.name_channel='商品贷' AND FACC.text_username_employee_sales!='extreme' AND RSA.SKP_BANK_ROLE<>1962 THEN '1 POS LOAN'
                            WHEN FACC.name_channel LIKE '%无预约%' AND FACC.text_username_employee_sales!='extreme' THEN '2 WALK-IN'
                            WHEN (FACC.name_channel LIKE '消费贷%' AND FACC.text_username_employee_sales!='extreme')OR CLASS='533' THEN '3 XSELL'
                            -- WHEN FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme' THEN '4 ELOAN' ELSE '5 MINI' END 
                            WHEN FACC.name_channel='商品贷' AND RSA.SKP_BANK_ROLE=1962 THEN '0 ELOAN' ELSE '5 MINI' END --REMOTE SA 20190517
               ) OVER (PARTITION BY ID_ENTITY, DATE_DETECT,TRIGGER_SOURCE, 
                             CASE WHEN PRE.TRIGGER_SOURCE='ACL - Remote distance (>4 km) between mobile phone GPS and Smart POS GPS' THEN SUBSTR(PRE.TRIGGER_VALUE,0,INSTR(PRE.TRIGGER_VALUE,',',1,1)-1) ELSE PRE.TRIGGER_VALUE END
                             ,CASE WHEN ((FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR PRE.ID_ENTITY IN ('homer_o2o','rpos') OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%' OR FACC.name_product LIKE '%MINI%') AND DSA.CODE_SALES_AREA IS NOT NULL THEN DSA.CODE_SALES_AREA ELSE  CC.CODE_SALES_AREA END --city
                              )AS CASE_CATEGORY
      ,NULL AS NAME_DISTRICT--20180423
      ,CASE WHEN PRE.CLASS=15 THEN ROW_NUMBER()OVER
                (PARTITION BY PRE.DATE_DETECT,PRE.CLASS,
                FACC.text_username_superior,--DSM 20180423
                CASE WHEN ((FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR FACC.text_username_employee_sales IN ('homer_o2o','rpos') OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%') AND DSA.CODE_SALES_AREA IS NOT NULL THEN DSA.CODE_SALES_AREA ELSE  CC.CODE_SALES_AREA END,--city --20190911 rpos
                PRE.TRIGGER_SOURCE ORDER BY PRE.ID_ENTITY
                ) ELSE 1 END AS SEQ
      FROM AP_ANTIFRAUD.f_Trcontracts_Preselection PRE
      JOIN owner_dwh.DC_credit_case dcc ON pre.skp_credit_case = dcc.skp_credit_case AND pre.date_detect = to_char(SYSDATE, 'YYYY/MM/DD') 
      AND PRE.CLASS=422 AND PRE.trigger_source NOT IN  ('ACL - Phone network' ,'ACL - 2BOD GPS concentration' )
      JOIN dm_antifraud.f_af_credit_case_ad facc ON dcc.skp_credit_case = facc.skp_credit_case AND dcc.date_decision = facc.date_decision AND dcc.skp_credit_type = facc.skp_credit_type AND FACC.date_decision>=DATE'2015-01-01'
      ---20180504 NAME ENTITY
      LEFT JOIN OWNER_DWH.DC_EMPLOYEE EE ON PRE.ID_ENTITY=EE.TEXT_USERNAME_EMPLOYEE AND EE.CODE_EMPLOYEE_STATUS<>'X'
      LEFT JOIN OWNER_DWH.DC_SALES_AREA CC ON CC.NAME_SALES_AREA=FACC.name_region AND CC.code_sales_area_status='a' and  CC.skp_sales_area_type=1
      LEFT JOIN OWNER_DWH.DC_SALES_AREA PRO ON CC.SKP_SALES_AREA_SUPERIOR=PRO.SKP_SALES_AREA AND  PRO.CODE_SALES_AREA_STATUS='a' and PRO.SKP_SALES_AREA_TYPE=2
      ---SA_ACTIVE_DAYS
      LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON EE.SKP_EMPLOYEE=sa.skp_employee AND PRE.UNIT='SA'--20180606
      ---POS_ACTIVE_DAYS
      LEFT JOIN DM_ANTIFRAUD.F_SALESROOM_AD FS ON FACC.skp_salesroom=FS.skp_salesroom AND PRE.UNIT='POS'
      JOIN OWNER_DWH.f_Application_Client_Tt ACT ON ACT.SKP_CREDIT_CASE=DCC.SKP_CREDIT_CASE AND ACT.date_decision=DCC.DATE_DECISION AND ACT.SKP_CREDIT_TYPE=DCC.SKP_CREDIT_TYPE AND ACT.SKP_CLIENT_ROLE=14
      LEFT JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR ON ADDR.SKP_CREDIT_CASE= DCC.SKP_CREDIT_CASE AND ACT.SKP_APPLICATION_CLIENT=ADDR.SKP_APPLICATION_CLIENT AND ADDR.SKP_ADDRESS_TYPE=2--CURRENT
      LEFT JOIN OWNER_DWH.DC_CITY DC ON DC.SKP_CITY=ADDR.SKP_CITY
      LEFT JOIN OWNER_DWH.DC_SALES_AREA DSA ON DSA.NAME_SALES_AREA=DC.NAME_CITY AND DSA.code_sales_area_status='a' and  DSA.skp_sales_area_type=1
      LEFT JOIN OWNER_DWH.DC_SALES_AREA DSAC ON DSA.SKP_SALES_AREA_SUPERIOR=DSAC.SKP_SALES_AREA AND  DSAC.CODE_SALES_AREA_STATUS='a' and DSAC.SKP_SALES_AREA_TYPE=2
      --for remote sa 20190527
      LEFT JOIN OWNER_DWH.DC_EMPLOYEE RSA ON FACC.text_username_employee_sales=RSA.TEXT_USERNAME_EMPLOYEE AND RSA.CODE_EMPLOYEE_STATUS<>'X'
)CC
WHERE CC.SEQ=1;
COMMIT;
END;

PROCEDURE TRIGGER_442_SUSPICIOUS_STUDENT IS
  BEGIN
--========================================================================
--========================================================================
--   
--        442 SUSPICIOUS STUDENT
--
--========================================================================  
--======================================================================== 
  
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '442 SUSPICIOUS STUDENT MULTI PLATFORM',SYSDATE FROM DUAL;

--change 20180419--20181214 --1m'
INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH BASE AS
(
    SELECT/*+materialize*/ /*+  use_hash(facc) */ A.SKP_CREDIT_CASE, a.DATE_DECISION,CC.SKP_CREDIT_STATUS,CC.SKP_CLIENT
    ,SCL.CODE_ADDITIONAL_INFO,SCL.NAME_ADDITIONAL_INFO,A.TEXT_VALUE ,CC.text_contract_number
    FROM OWNER_DWH.DC_CREDIT_CASE CC
    JOIN OWNER_DWH.f_Apprstep_Additional_Info_Tt A ON CC.SKP_CREDIT_CASE=A.SKP_CREDIT_CASE
    AND CC.SKP_CREDIT_TYPE=A.SKP_CREDIT_TYPE
    AND CC.SKP_CLIENT=A.SKP_CLIENT
    AND CC.SKP_CREDIT_TYPE=A.SKP_CREDIT_TYPE
    AND CC.SKP_APPLICATION=A.SKP_APPLICATION
    ---AND CC.SKP_CREDIT_ACQUISITION_CHNL!=4--EXTREME
   ---- AND CC.SKP_PRODUCT_CHANNEL=3---POSL
    AND A.SKP_APPRSTEP_ADD_INFO IN ( 14932,14934,14935 )
    AND CC.DATE_DECISION >=SYSDATE-7--between date'2018-03-01' and date'2018-03-31'
    AND A.DATE_DECISION >=SYSDATE-7
    AND CC.SKP_CREDIT_STATUS IN (2,3,5)
    JOIN OWNER_DWH.CL_APPRSTEP_ADD_INFO SCL ON SCL.SKP_APPRSTEP_ADD_INFO=A.SKP_APPRSTEP_ADD_INFO 
    WHERE 
    CC.SKP_PRODUCT_CHANNEL IN (1,3,201) 
    AND CC.SKP_CREDIT_ACQUISITION_CHNL !=4--EXTREME
    -----AND CC.SKP_PRODUCT_CHANNEL=3---POSL
    AND A.SKP_APPRSTEP_ADD_INFO IN  ( 14932,14934,14935 )
    AND CC.DATE_DECISION >=SYSDATE-7
    AND A.DATE_DECISION  >=SYSDATE-7
)
,FM_CONTRACTS AS 
(
    SELECT * FROM base 
    PIVOT (MAX(text_value)FOR CODE_ADDITIONAL_INFO IN ('a8_PlatformDetail' AS PlatformDetail,'a8_ItemName' AS ItemName,'a8_PlatformCount' AS PlatformCount))aa
)

,CONTRACTS_XX AS
(
    SELECT /*+materialize*/AA.SKP_CREDIT_CASE,AA.DATE_DECISION,AA.SKP_CREDIT_STATUS,AA.SKP_CLIENT,AA.TEXT_CONTRACT_NUMBER,AA.PLATFORMDETAIL,BB.ITEMNAME,CC.PLATFORMCOUNT
    FROM FM_CONTRACTS AA
    JOIN FM_CONTRACTS BB
    ON AA.SKP_CREDIT_CASE=BB.SKP_CREDIT_CASE
    JOIN FM_CONTRACTS CC
    ON BB.SKP_CREDIT_CASE=CC.SKP_CREDIT_CASE
)
, CONTRACTS_1M AS
(
    SELECT  * 
    FROM CONTRACTS_XX 
    WHERE PLATFORMDETAIL IS NOT NULL AND ITEMNAME IS NOT NULL AND PLATFORMCOUNT IS NOT NULL 
)
, CONTRACTS_2M AS  
(
    SELECT /*+materialize*/aa.*
    ,CASE WHEN cnt_=0 THEN SUBSTR(platformcount,1,1) 
     ELSE SUBSTR (platformcount, REGEXP_INSTR(platformcount,'#',1,cnt_,1,'i'),DECODE(REGEXP_INSTR(platformcount,'#',1,cnt_+1,1,'i'),0,LENGTH(platformcount)+1,REGEXP_INSTR(platformcount,'#',1,cnt_+1,0,'i'))-REGEXP_INSTR(platformcount,'#',1,cnt_,1,'i')) END AS CNT_PF
    ,CASE WHEN cnt_=0 THEN SUBSTR(platformdetail,1,REGEXP_INSTR(platformdetail,']')) 
     ELSE SUBSTR(platformdetail,REGEXP_INSTR(platformdetail,'#',1,cnt_,1,'i'),REGEXP_INSTR(platformdetail,']',REGEXP_INSTR(platformdetail,'#',1,cnt_,1,'i'))-REGEXP_INSTR(platformdetail,'#',1,cnt_))END AS PF
    FROM 
    (
        SELECT/*+materialize*/ aa.*
        ,REGEXP_COUNT(ItemName,'#')-REGEXP_COUNT(ItemName,'#',INSTR(ItemName, N'1个月内申请人在多个平台申请借款'),'i') AS cnt_
        FROM CONTRACTS_1M aa  
        WHERE aa.ItemName LIKE N'%1个月内申请人在多个平台申请借款%' 
    ) AA
) 
,PF_FINAL AS 
(
    SELECT /*+materialize*/AA.*,BB.num_age,BB.TEXT_USERNAME_EMPLOYEE_SALES AS SALES_ID,CODE_SALESROOM,BB.TEXT_USERNAME_EMPLOYEE_SALES
    FROM CONTRACTS_2M AA
    JOIN DM_ANTIFRAUD.f_Af_Credit_Case_Ad BB
    ON AA.SKP_CREDIT_CASE=BB.SKP_CREDIT_CASE AND AA.DATE_DECISION=BB.DATE_DECISION
    WHERE bb.date_decision>=SYSDATE-7
    AND BB.TEXT_USERNAME_EMPLOYEE_SALES<>'extreme'
    AND BB.NAME_SALESROOM NOT LIKE 'DEO%'
    AND BB.CODE_CREDIT_STATUS IN ('a','k','n')
    AND SKP_CREDIT_TYPE=1
    AND  CNT_PF>5 AND num_age<=21
UNION ALL
    SELECT /*+materialize*/AA.*,BB.num_age,BB.TEXT_USERNAME_EMPLOYEE_SALES AS SALES_ID,CODE_SALESROOM,BB.TEXT_USERNAME_EMPLOYEE_SALES
    FROM CONTRACTS_2M AA
    JOIN DM_ANTIFRAUD.f_Af_Credit_Case_Ad BB
    ON AA.SKP_CREDIT_CASE=BB.SKP_CREDIT_CASE AND AA.DATE_DECISION=BB.DATE_DECISION
    WHERE bb.date_decision>=SYSDATE-7
    AND BB.TEXT_USERNAME_EMPLOYEE_SALES<>'extreme'
    AND BB.CODE_CREDIT_STATUS IN ('a','k','n')
    AND SKP_CREDIT_TYPE=2 
    AND  CNT_PF>6 AND num_age<=21  
)
SELECT 
'SA'AS UNIT,
SALES_ID,
TO_CHAR(SYSDATE,'YYYY/MM/DD')AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD')AS WEEK_DETECT,
'442'AS CLASS,
'LOW AGE'||'MULTI PLATFORM>5'AS TRIGGER_SOURCE,    
'合同'||':'|| AD.TEXT_CONTRACT_NUMBER||':'||'跨平台'||':'||CNT_PF||','||AD.name_education_type_en  AS TRIGGER_VALUE,
'SOFT' AS TRIGGER_TYPE,
 AD.SKP_CREDIT_CASE,
 AD.TEXT_CONTRACT_NUMBER  
FROM PF_FINAL PF
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD ON AD.skp_credit_case=pf.skp_credit_case;
COMMIT;

INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '442 SUSPICIOUS STUDENT PAYMENT CONCENTRATION',SYSDATE FROM DUAL;

-------------part 2:payment concentration>3 and low age
INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH ACC AS
(
SELECT PP.*,CN.DATE_BIRTH
FROM AP_ANTIFRAUD.F_PAYMENT_ALL PP
JOIN DM_ANTIFRAUD.F_AF_Credit_Case_AD CN ON PP.SKP_CREDIT_CASE=CN.SKP_CREDIT_CASE AND PP.SKP_CLIENT=CN.SKP_CLIENT
WHERE CN.DATE_DECISION BETWEEN TRUNC(SYSDATE)-63 AND TRUNC(SYSDATE)-31 
--AND PP.DTIME_PAYMENT_INCOMING BETWEEN TRUNC(SYSDATE)-15 AND TRUNC(SYSDATE)-1
AND CN.DATE_BIRTH>=DATE'1996-01-01'
AND CN.TEXT_USERNAME_EMPLOYEE_SALES<>'extreme'
AND CN.name_salesroom NOT LIKE 'DEO%'
AND PP.NAME_SENDER like '%渤海财产保险股份%'
)
, ACC_SA AS 
(
---lakala phone 是拉卡拉账号
SELECT DISTINCT SKP_CREDIT_CASE,NAME_PAYMENT_CHANNEL_GROUP,TEXT_SENDER_ACC_NUMBER,NAME_SENDER,AA.LAKALA_PHONE,
TEXT_CONTRACT_NUMBER,SKP_CLIENT,CLIENT_NAME,SALES_ID,SA_NAME,SA_PHONE,CODE_EMPLOYEE_STATUS,DATE_BIRTH,CNT_APP,'SAME_LAKALA_ACC'AS PAYMENT_SOURCE
FROM 
(
SELECT DISTINCT LAKALA_PHONE,COUNT(DISTINCT SKP_CREDIT_CASE) AS CNT_APP
FROM ACC
WHERE LAKALA_PHONE NOT IN ('XNA','CCB_DD')
AND NAME_PAYMENT_CHANNEL_GROUP LIKE '%LAKALA%'
GROUP BY ACC.LAKALA_PHONE
HAVING COUNT(DISTINCT SKP_CREDIT_CASE)>3
) AA
JOIN ACC BB ON AA.LAKALA_PHONE=BB.LAKALA_PHONE

UNION ALL
--拉卡拉phone=sa phone  没有
SELECT DISTINCT SKP_CREDIT_CASE,NAME_PAYMENT_CHANNEL_GROUP,TEXT_SENDER_ACC_NUMBER,NAME_SENDER,AA.LAKALA_PHONE,
TEXT_CONTRACT_NUMBER,SKP_CLIENT,CLIENT_NAME,SALES_ID,SA_NAME,SA_PHONE,CODE_EMPLOYEE_STATUS,DATE_BIRTH,CNT_APP,'SAME_LAKALA_SA_PHONE'AS PAYMENT_SOURCE
FROM 
(
    SELECT DISTINCT LAKALA_PHONE,COUNT(DISTINCT SKP_CREDIT_CASE) AS CNT_APP
    FROM ACC
    WHERE LAKALA_PHONE NOT IN ('XNA','CCB_DD') AND LAKALA_PHONE=SA_PHONE AND NAME_PAYMENT_CHANNEL_GROUP LIKE '%LAKALA%'
    GROUP BY ACC.LAKALA_PHONE
    HAVING COUNT(DISTINCT SKP_CREDIT_CASE)>3
) AA
JOIN ACC BB ON AA.LAKALA_PHONE=BB.LAKALA_PHONE

UNION ALL
---  SAME BANK ACC
SELECT DISTINCT SKP_CREDIT_CASE,NAME_PAYMENT_CHANNEL_GROUP,AA.TEXT_SENDER_ACC_NUMBER,NAME_SENDER,LAKALA_PHONE,
TEXT_CONTRACT_NUMBER,SKP_CLIENT,CLIENT_NAME,SALES_ID,SA_NAME,SA_PHONE,CODE_EMPLOYEE_STATUS,DATE_BIRTH,CNT_APP,'SAME_BANK_ACC'AS PAYMENT_SOURCE
FROM 
(
    SELECT DISTINCT ACC.TEXT_SENDER_ACC_NUMBER,COUNT(DISTINCT SKP_CREDIT_CASE) AS CNT_APP
    FROM ACC
    WHERE TEXT_SENDER_ACC_NUMBER NOT IN ('XNA','0','030101040013997') AND LENGTH (text_sender_acc_number)>10 and NAME_PAYMENT_CHANNEL_GROUP NOT LIKE '%LAKALA%'
    GROUP BY ACC.TEXT_SENDER_ACC_NUMBER
    HAVING COUNT(DISTINCT SKP_CREDIT_CASE)>3
)AA
JOIN ACC BB ON AA.TEXT_SENDER_ACC_NUMBER=BB.TEXT_SENDER_ACC_NUMBER
)

,ACC_FINAL AS 
(
    SELECT * FROM ACC_SA AA
    WHERE NOT EXISTS(SELECT 1 FROM AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION T 
    WHERE CLASS in('20','40','442') AND TRIGGER_SOURCE IN('CMB_same_bank_acc','LAKALA_phone_concentration','PSBC_concentration',
    'LOW AGE:PAYMENT CONCENTRATION') 
    AND T.ID_ENTITY=AA.SALES_ID )
)

SELECT DISTINCT 
'SA' AS UNIT 
,BB.SALES_ID
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'442' AS CLASS
,'LOW AGE'||':'||'PAYMENT CONCENTRATION' AS TRIGGER_SOURCE
,CASE WHEN BB.NAME_PAYMENT_CHANNEL_GROUP='LAKALA' THEN 
BB.LAKALA_PHONE||','||CNT_APP||':'||N'账号'||bb.TEXT_SENDER_ACC_NUMBER ||','||AD.name_education_type_en
ELSE N'账号'||BB.TEXT_SENDER_ACC_NUMBER||N'还款人姓名'||':'|| NAME_SENDER||','||N'单量'||':'||CNT_APP ||','||AD.name_education_type_en END AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,BB.SKP_CREDIT_CASE
,BB.TEXT_CONTRACT_NUMBER
FROM ACC_FINAL BB
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD ON AD.skp_credit_case=BB.skp_credit_case
ORDER BY TRIGGER_VALUE;
COMMIT;
END;
 

PROCEDURE TRIGGER_443_UW_AND_FM IS
  BEGIN
--========================================================================
--========================================================================
--   
--        443 UW AND FRAUD MATRIX
--
--========================================================================  
--======================================================================== 
  
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '443 UW AND FRAUD MATRIX SCORE',SYSDATE FROM DUAL;

INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH BASE AS 
(
  SELECT /*+ MATERIALIZE */
  AA.TEXT_USERNAME_EMPLOYEE_SALES, AA.SKP_CREDIT_CASE, AA.TEXT_CONTRACT_NUMBER, AA.DATE_DECISION, AA.CODE_CREDIT_STATUS, AA.AMT_CREDIT, AA.NUM_AGE, AA.SKP_CREDIT_TYPE
  FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AA
  JOIN  AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=443
  AND TRUNC(SYSDATE)-TRUNC(AA.date_decision) BETWEEN 1 AND EX.DAYS
  WHERE AA.DATE_DECISION >= SYSDATE - 10
  AND AA.NAME_CHANNEL = N'商品贷'
  AND AA.TEXT_USERNAME_EMPLOYEE_SALES != 'EXTREME'
  AND AA.AMT_CREDIT > 4000
  AND ((AA.NUM_AGE BETWEEN 18 AND 20) OR (AA.NUM_AGE BETWEEN 53 AND 55))
)

, FM_STU AS 
(
  SELECT /*+USE_HASH(CC,A)*/
  A.SKP_CREDIT_CASE,A.DATE_DECISION, TEXT_CONTRACT_NUMBER, CC.AMT_CREDIT, CC.NUM_AGE, SCL.CODE_ADDITIONAL_INFO, SCL.NAME_ADDITIONAL_INFO, A.NUM_VALUE
  FROM BASE CC
  JOIN OWNER_DWH.F_APPRSTEP_ADDITIONAL_INFO_TT A
  ON CC.SKP_CREDIT_CASE = A.SKP_CREDIT_CASE
  AND CC.SKP_CREDIT_TYPE = A.SKP_CREDIT_TYPE
  AND A.SKP_APPRSTEP_ADD_INFO = 14937--5521 --change 20180827 ellen
  JOIN OWNER_DWH.CL_APPRSTEP_ADD_INFO SCL
  ON SCL.SKP_APPRSTEP_ADD_INFO = A.SKP_APPRSTEP_ADD_INFO
  AND CC.DATE_DECISION >= SYSDATE - 10
  AND A.DATE_DECISION >= SYSDATE - 10
  WHERE A.SKP_APPRSTEP_ADD_INFO = 14937--5521 --change 20180827 ellen
  AND CC.DATE_DECISION >= SYSDATE - 10
  AND A.DATE_DECISION >= SYSDATE - 10
) 
, FINALSCORE AS 
(
  SELECT /*+USE_HASH(J,S)*/DISTINCT  J.*
  ,CASE WHEN S.NUM_VALUE< 10 THEN '[0-10)'
  WHEN S.NUM_VALUE < 20 THEN '[20-20)'
  WHEN S.NUM_VALUE <30 THEN '[20-30)'
  WHEN S.NUM_VALUE < 40 THEN '[30-40)'
  WHEN S.NUM_VALUE < 50 THEN '[40-50)'
  WHEN S.NUM_VALUE<60 THEN   '[50-60)'
  WHEN S.NUM_VALUE<70 THEN   '[60-70)'
  WHEN S.NUM_VALUE<80 THEN   '[70-80)'
  WHEN S.NUM_VALUE<90 THEN   '[80-90)'
  WHEN S.NUM_VALUE<=100 THEN   '[90-100]'
  ELSE TO_CHAR( S.NUM_VALUE)
  END AS FINALSCORE
  FROM BASE J
  JOIN FM_STU S
  ON J.SKP_CREDIT_CASE =S.SKP_CREDIT_CASE AND J.DATE_DECISION =S.DATE_DECISION
)
--------
, FINAL_CONTRACT AS
(
  SELECT 
  AA.SKP_CREDIT_CASE,AA.TEXT_CONTRACT_NUMBER,AA.AMT_CREDIT,AA.NUM_AGE,AA.DATE_DECISION,AA.TEXT_USERNAME_EMPLOYEE_SALES,AA.NAME_LAST_SALES,AA.CODE_CREDIT_STATUS
  FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD  AA 
  JOIN FINALSCORE PP ON AA.SKP_CREDIT_CASE=PP.SKP_CREDIT_CASE
  JOIN OWNER_DWH.F_APPLICATION_TT_SCORE S
  ON AA.SKP_CREDIT_CASE =S.SKP_CREDIT_CASE AND AA.DATE_DECISION =S.DATE_DECISION AND AA.SKP_CREDIT_TYPE=S.SKP_CREDIT_TYPE
  WHERE AA.DATE_DECISION>=SYSDATE-10
  AND S.DATE_DECISION>=SYSDATE-10
  AND PP.FINALSCORE IN ('[80-90)','[90-100]')
  AND UPPER(AA.CODE_CREDIT_STATUS) IN ('A','K','N')
  AND NUM_SCORE_CUTOFF_PRE>=0.12
)
----
SELECT 'SA'AS UNIT,
TEXT_USERNAME_EMPLOYEE_SALES,
TO_CHAR(SYSDATE,'YYYY/MM/DD')AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD')AS WEEK_DETECT,
'443'AS CLASS,
'EXTREME AGE  CREDIT AMOUNT>4000  LOW UW SCORE  LOW FRAUD MATRIX SCORE'AS TRIGGER_SOURCE,
N'合同'||':'||TEXT_CONTRACT_NUMBER||':'||N'贷款金额'||':'||AMT_CREDIT||N'年龄'||':'||NUM_AGE AS TRIGGER_VALUE,
'SOFT' AS TRIGGER_TYPE,
SKP_CREDIT_CASE,
TEXT_CONTRACT_NUMBER  
FROM FINAL_CONTRACT;
COMMIT;
END;

-----------------------------------------------------------
PROCEDURE TRIGGER_482_FR_CONCENTRATION IS
  BEGIN
  
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '482 FR CONCENTRATION',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
with base as(
SELECT 
    dm.date_review_last_day_week,
    dm.text_username_employee_sales, 
    count(DISTINCT F0.skp_credit_case),
    count(DISTINCT case when DM.code_credit_status IN ('a','k','n') then F0.skp_credit_case else null end)
FROM owner_dwh.f_application_vct_info_at F0
JOIN OWNER_DWH.dc_credit_case AA
  ON AA.SKP_CREDIT_CASE = F0.SKP_CREDIT_CASE
  AND AA.SKP_CREDIT_TYPE=F0.skp_credit_type
  AND AA.DATE_DECISION=F0.date_decision
  AND AA.SKP_CREDIT_ACQUISITION_CHNL IN ('7','3')--('200508', '183061')
JOIN DM_ANTIFRAUD.F_af_credit_case_ad DM
  ON DM.skp_credit_case=F0.skp_credit_case
  AND DM.skp_credit_type=F0.skp_credit_type
  AND DM.date_decision=F0.date_decision
where DM.date_decision between  sysdate-8 and sysdate-1
  and AA.date_decision between   sysdate-8 and sysdate-1
  and F0.date_decision between  sysdate-8 and sysdate-1
  AND F0.code_face_recognition_result!='XNA'
  and f0.num_face_recognition_score between 1 and 44
group by 
  dm.date_review_last_day_week,
  dm.text_username_employee_sales    
having count(DISTINCT F0.skp_credit_case)>=5)

SELECT 
      'SA' AS UNIT
      ,A.text_username_employee_sales  
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT 
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'482'AS CLASS  ------!!!
      ,'FACE RECOGNITION CONCENTRATION' AS TRIGGER_SOURCE
      ,'LOW FACE RECOGNITION SCORE' ||': '||F0.num_face_recognition_score ||'; '|| 'CONTRACT_STATUS' ||': '|| GG.code_credit_status AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,GG.SKP_CREDIT_CASE AS FIRST_SKP_CREDIT_CASE
      ,GG.text_contract_number AS FIRST_CONTRACT
FROM BASE A 
JOIN  DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD GG 
  ON GG.text_username_employee_sales=A.text_username_employee_sales
  AND GG.date_review_last_day_week=A.date_review_last_day_week
JOIN owner_dwh.f_application_vct_info_at F0 
  ON F0.skp_credit_case=GG.skp_credit_case
  AND F0.date_decision=GG.date_decision
  AND F0.skp_credit_type=GG.skp_credit_type
where GG.date_decision between sysdate-8 and sysdate-1
  AND F0.num_face_recognition_score BETWEEN 1 AND 44;
COMMIT;
END;

PROCEDURE TRIGGER_504_VIRTUAL_PHONE IS
  BEGIN
  
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '504 VIRTUAL PHONE NUMBER',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH CONTRACTS17 AS
(
    SELECT AD.SKP_CREDIT_CASE,AD.SKP_CLIENT,AD.DATE_DECISION,AD.CODE_CREDIT_STATUS,AD.TEXT_CONTRACT_NUMBER,AD.TEXT_USERNAME_EMPLOYEE_SALES,AD.SKP_SALESROOM,AD.CODE_SALESROOM,
    AD.NUM_MIN_INST_DEF10_DD AS DEF10,AD.NUM_OBSERV_DEF10_MAXINST AS QGR10,AD.NUM_MIN_INST_DEF30_DD AS DEF30,AD.NUM_OBSERV_DEF30_MAXINST AS AGR30,AD.AMT_CREDIT,
    AD.FLAG_WC_CALLED,AD.FLAG_WC_UNREACHED,AD.FLAG_WC_BAD,
    AD.TEXT_MOBILE_CLIENT,
    CASE WHEN AD.TEXT_MOBILE_CLIENT LIKE '170%' THEN '170' ELSE '171' END AS PHONE_TYPE
    FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD  AD
    JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS = 504 AND TRUNC(SYSDATE) - AD.DATE_DECISION BETWEEN 1 AND EX.DAYS
    WHERE AD.DATE_DECISION>=SYSDATE-15
    AND (AD.TEXT_MOBILE_CLIENT LIKE '170%' OR AD.TEXT_MOBILE_CLIENT LIKE '171%' )
    AND UPPER(AD.TEXT_USERNAME_EMPLOYEE_SALES) <>'EXTREME'
    AND AD.NAME_CHANNEL=N'商品贷'
)
, FACE AS 
(------FR RESULT
    SELECT CC.SKP_CREDIT_CASE,CC.SKP_CLIENT,CC.DATE_DECISION,CC.SKP_SALESROOM,CC.AMT_CREDIT,CC.DEF30,CC.AGR30,CC.CODE_CREDIT_STATUS,CC.FLAG_WC_CALLED,CC.FLAG_WC_UNREACHED,CC.FLAG_WC_BAD,FR.NUM_FACE_RECOGNITION_SCORE
    FROM CONTRACTS17 CC
    JOIN OWNER_DWH.F_APPLICATION_VCT_INFO_AT FR ON CC.SKP_CREDIT_CASE=FR.SKP_CREDIT_CASE AND CC.DATE_DECISION=FR.DATE_DECISION
    JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS = 504 AND TRUNC(SYSDATE) - FR.DATE_DECISION BETWEEN 1 AND EX.DAYS
    WHERE FR.DATE_DECISION>=SYSDATE-15
)
, WC AS 
(----WC RESULT
    SELECT CC.SKP_CREDIT_CASE,CC.SKP_CLIENT,CC.DATE_DECISION,CC.SKP_SALESROOM,CC.AMT_CREDIT,CC.DEF30,CC.AGR30,CC.CODE_CREDIT_STATUS,CC.FLAG_WC_CALLED,CC.FLAG_WC_UNREACHED,CC.FLAG_WC_BAD
    FROM CONTRACTS17 CC
)
, EBU AS
(---EBU
    SELECT CC.*,TT.TEXT_VALUE
    FROM  CONTRACTS17 CC 
    JOIN OWNER_DWH.F_APPRSTEP_ADDITIONAL_INFO_TT TT ON CC.SKP_CREDIT_CASE=TT.SKP_CREDIT_CASE
     JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS = 504 AND TRUNC(SYSDATE) - TT.DATE_DECISION BETWEEN 1 AND EX.DAYS
    WHERE TT.DATE_DECISION>=SYSDATE-15
    AND TT.SKP_APPRSTEP_ADD_INFO=6153
)

,UMS AS
(----UMS
    SELECT CC.*,TT.TEXT_VALUE
    FROM  CONTRACTS17 CC 
    JOIN OWNER_DWH.F_APPRSTEP_ADDITIONAL_INFO_TT TT ON CC.SKP_CREDIT_CASE=TT.SKP_CREDIT_CASE
     JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS = 504 AND TRUNC(SYSDATE) - TT.DATE_DECISION BETWEEN 1 AND EX.DAYS
    WHERE TT.DATE_DECISION>=SYSDATE-15
    AND TT.SKP_APPRSTEP_ADD_INFO=5422
)

, BASE_PF AS
(--PF
    SELECT/*+MATERIALIZE*/ /*+  USE_HASH(FACC) */ CC.*,
    SCL.CODE_ADDITIONAL_INFO,SCL.NAME_ADDITIONAL_INFO,A.TEXT_VALUE 
    FROM CONTRACTS17 CC
    JOIN OWNER_DWH.F_APPRSTEP_ADDITIONAL_INFO_TT A ON CC.SKP_CREDIT_CASE=A.SKP_CREDIT_CASE
         AND CC.SKP_CLIENT=A.SKP_CLIENT
         AND A.SKP_APPRSTEP_ADD_INFO IN ( 5516,5518,5519 )
    JOIN OWNER_DWH.CL_APPRSTEP_ADD_INFO SCL ON A.SKP_APPRSTEP_ADD_INFO=SCL.SKP_APPRSTEP_ADD_INFO
     JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS = 504 AND TRUNC(SYSDATE) - A.DATE_DECISION BETWEEN 1 AND EX.DAYS
    WHERE A.SKP_APPRSTEP_ADD_INFO IN  ( 5516,5518,5519 ) 
          AND A.DATE_DECISION>=SYSDATE-15
)
  ,FM_CONTRACTS AS 
(
    SELECT * FROM BASE_PF 
    PIVOT (MAX(TEXT_VALUE)FOR CODE_ADDITIONAL_INFO IN ('a8_PlatformDetail'AS PLATFORMDETAIL,'a8_ItemName'AS ITEMNAME,'a8_PlatformCount'AS PLATFORMCOUNT))AA
)

,CONTRACTS_XX AS
(
    SELECT /*+MATERIALIZE*/AA.SKP_CREDIT_CASE,AA.DATE_DECISION,AA.SKP_CLIENT,AA.CODE_CREDIT_STATUS,AA.TEXT_USERNAME_EMPLOYEE_SALES,AA.SKP_SALESROOM,
    AA.CODE_SALESROOM,AA.DEF30,AA.AGR30, AA.PLATFORMDETAIL,BB.ITEMNAME,CC.PLATFORMCOUNT
    FROM FM_CONTRACTS AA
    JOIN FM_CONTRACTS BB
    ON AA.SKP_CREDIT_CASE=BB.SKP_CREDIT_CASE
    JOIN FM_CONTRACTS CC
    ON BB.SKP_CREDIT_CASE=CC.SKP_CREDIT_CASE
)
, CONTRACTS_1M AS
(
    SELECT * FROM CONTRACTS_XX WHERE PLATFORMDETAIL IS NOT NULL AND ITEMNAME IS NOT NULL AND 
    PLATFORMCOUNT IS NOT NULL 
)
, CONTRACTS_2M AS
(
    SELECT /*+MATERIALIZE*/AA.*
    ,CASE WHEN CNT_=0 THEN SUBSTR(PLATFORMCOUNT,1,1) 
          ELSE SUBSTR(PLATFORMCOUNT, REGEXP_INSTR(PLATFORMCOUNT,'#',1,CNT_,1,'i'),DECODE(REGEXP_INSTR(PLATFORMCOUNT,'#',1,CNT_+1,1,'i'),0,LENGTH(PLATFORMCOUNT)+1,REGEXP_INSTR(PLATFORMCOUNT,'#',1,CNT_+1,0,'i'))-REGEXP_INSTR(PLATFORMCOUNT,'#',1,CNT_,1,'i'))END AS CNT_PF
    ,CASE WHEN CNT_=0 THEN SUBSTR(PLATFORMDETAIL,1,REGEXP_INSTR(PLATFORMDETAIL,']')) 
          ELSE SUBSTR(PLATFORMDETAIL,REGEXP_INSTR(PLATFORMDETAIL,'#',1,CNT_,1,'i'),REGEXP_INSTR(PLATFORMDETAIL,']',REGEXP_INSTR(PLATFORMDETAIL,'#',1,CNT_,1,'i'))-REGEXP_INSTR(PLATFORMDETAIL,'#',1,CNT_))END AS PF
    FROM 
    (
      SELECT/*+MATERIALIZE*/ AA.*
      ,REGEXP_COUNT(ITEMNAME,'#')-REGEXP_COUNT(ITEMNAME,'#',INSTR(ITEMNAME, N'1个月内申请人在多个平台申请借款'),'i')AS CNT_
      FROM CONTRACTS_1M AA  
      WHERE AA.ITEMNAME LIKE N'%1个月内申请人在多个平台申请借款%' 
    ) AA
)
,PF AS
(
    SELECT /*+MATERIALIZE*/AA.*
    FROM CONTRACTS_2M AA
)

, ZM AS
(----ZM
    SELECT CC.*,TT.TEXT_VALUE
    FROM  CONTRACTS17 CC 
    JOIN OWNER_DWH.F_APPRSTEP_ADDITIONAL_INFO_TT TT ON CC.SKP_CREDIT_CASE=TT.SKP_CREDIT_CASE
     JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS = 504 AND TRUNC(SYSDATE) - TT.DATE_DECISION BETWEEN 1 AND EX.DAYS
    WHERE TT.DATE_DECISION>=SYSDATE-15
    AND TT.SKP_APPRSTEP_ADD_INFO=13040
)

,FINAL_CONTRACTS AS
(
    SELECT DISTINCT CC.SKP_CREDIT_CASE,CC.DATE_DECISION,CC.CODE_CREDIT_STATUS,CC.TEXT_CONTRACT_NUMBER,CC.TEXT_USERNAME_EMPLOYEE_SALES,CC.CODE_SALESROOM,
    CC.FLAG_WC_CALLED,CC.FLAG_WC_UNREACHED,CC.FLAG_WC_BAD,CC.TEXT_MOBILE_CLIENT,FC.NUM_FACE_RECOGNITION_SCORE AS FC_SCORE,EBU.TEXT_VALUE AS EBU_RESULT,PF.CNT_PF,UMS.TEXT_VALUE AS UMS_RESULT,
    ZM.TEXT_VALUE AS ZM_SCORE
    FROM CONTRACTS17 CC
    LEFT JOIN FACE FC ON CC.SKP_CREDIT_CASE=FC.SKP_CREDIT_CASE AND CC.DATE_DECISION=FC.DATE_DECISION
    LEFT JOIN EBU ON CC.SKP_CREDIT_CASE=EBU.SKP_CREDIT_CASE AND CC.DATE_DECISION=EBU.DATE_DECISION
    LEFT JOIN PF ON CC.SKP_CREDIT_CASE=PF.SKP_CREDIT_CASE AND CC.DATE_DECISION=PF.DATE_DECISION
    LEFT JOIN UMS ON CC.SKP_CREDIT_CASE=UMS.SKP_CREDIT_CASE AND CC.DATE_DECISION=UMS.DATE_DECISION
    LEFT JOIN ZM ON CC.SKP_CREDIT_CASE=ZM.SKP_CREDIT_CASE AND CC.DATE_DECISION=ZM.DATE_DECISION
    WHERE (
    (CC.FLAG_WC_CALLED='Y' AND (CC.FLAG_WC_UNREACHED='Y' OR CC.FLAG_WC_BAD='Y') AND ((FC.NUM_FACE_RECOGNITION_SCORE BETWEEN 35 AND 65) OR  PF.CNT_PF>=3))           
    OR (UPPER(EBU.TEXT_VALUE) NOT LIKE N'%SUCCESS%'  AND PF.CNT_PF>=3)
    OR (CC.FLAG_WC_CALLED='Y' AND (CC.FLAG_WC_UNREACHED='Y' OR CC.FLAG_WC_BAD='Y')  AND UPPER(EBU.TEXT_VALUE) NOT LIKE N'%SUCCESS%'  AND UPPER(UMS.TEXT_VALUE)<>N'交易成功')
    OR (FC.NUM_FACE_RECOGNITION_SCORE BETWEEN 35 AND 65  AND PF.CNT_PF>=3)
    OR ZM.TEXT_VALUE<'550')
)

SELECT DISTINCT
'SA' AS UNIT 
,TEXT_USERNAME_EMPLOYEE_SALES AS SALES_ID
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'504' AS CLASS
,'VIRTUAL CLIENT PHONE NO WITH BAD PERFORMANCE' AS TRIGGER_SOURCE 
,TEXT_MOBILE_CLIENT||':'||N'WC_UNREACH?'||','||FLAG_WC_UNREACHED||','||N'WC_BAD?'||','||FLAG_WC_BAD||',' ||'FC_SCORE'||','||FC_SCORE||','||
 CASE WHEN EBU_RESULT IS NOT NULL THEN 'EBU_BAD' ELSE 'EBU_OK' END||','||CASE WHEN CNT_PF IS NOT NULL THEN 'Multi-Platform' ELSE 'No_multi_platform' END||','|| 
 CASE WHEN UMS_RESULT IS NOT NULL THEN 'UMS_BAD' ELSE 'UMS_OK' END||','||'ZM_SCORE'|| ','||ZM_SCORE AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM FINAL_CONTRACTS
WHERE UPPER(CODE_CREDIT_STATUS) IN ('A','K','N')
ORDER BY TRIGGER_VALUE;
COMMIT;
END;


PROCEDURE TRIGGER_505_CHANGE_BANK_ACC IS
  BEGIN
  
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '505 TSO CHANGE BANK ACCOUNT NUMBER',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH CONTRACT AS 
(
    SELECT /*+materialize use_hash(VE,DCC)*/ 
    DISTINCT DCC.SKP_CREDIT_TYPE ,DCC.SKP_CREDIT_CASE ,DCC.DATE_DECISION ,VE.SKP_CLIENT,DCC.text_contract_number,DCC.DTIME_DECISION
    FROM  OWNER_DWH.DC_CREDIT_CASE DCC
    JOIN OWNER_DWH.F_SCORING_VECTOR_TT VE
    ON VE.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE 
      AND VE.SKP_CREDIT_TYPE =DCC.SKP_CREDIT_TYPE 
      AND VE.DATE_DECISION =DCC.DATE_DECISION 
    JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS = 505 AND TRUNC(SYSDATE) - DCC.DATE_DECISION BETWEEN 30 AND EX.DAYS+30
    WHERE VE.SKP_SCORING_VECTOR_ATTRIBUTE=1797--change
    AND VE.DATE_DECISION >= SYSDATE-45
    AND DCC.DATE_DECISION >= SYSDATE-45
    AND VE.SKP_CREDIT_TYPE =2
    AND DCC.SKP_CREDIT_TYPE =2
    AND VE.NUM_VALUE=0
    AND DCC.SKP_CREDIT_STATUS=2
    AND DCC.SKP_CREDIT_ACQUISITION_CHNL =2--183060 
)
--------change bank account
,CHANGE_BANK AS 
(
    SELECT  /*+materialize use_hash(BB,BAN)*/ 
    BB.SKP_CLIENT,COUNT(DISTINCT BANK.TEXT_BANK_ACCOUNT_NUMBER) AS CNT
    FROM CONTRACT BB 
    JOIN OWNER_DWH.F_BANK_ACCOUNT_2_CREDCASE_TT BAN ON BAN.SKP_CLIENT=BB.SKP_CLIENT
      AND BAN.DATE_DECISION =BB.DATE_DECISION 
      AND BAN.SKP_CREDIT_TYPE =BB.SKP_CREDIT_TYPE 
      AND BAN.SKP_CREDIT_CASE =BB.SKP_CREDIT_CASE 
    JOIN OWNER_DWH.DH_BANK_ACCOUNT BANK ON BAN.SKP_BANK_ACCOUNT=BANK.SKP_BANK_ACCOUNT
    JOIN OWNER_DWH.DC_EMPLOYEE EE ON EE.SKP_EMPLOYEE=BAN.SKP_EMPLOYEE_MODIFIED
    JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS = 505 AND TRUNC(SYSDATE) - BAN.DATE_DECISION BETWEEN 30 AND EX.DAYS+30
    WHERE  BAN.DTIME_VALID_FROM>=BB.DATE_DECISION 
    AND  BAN.DTIME_VALID_FROM<=BB.DATE_DECISION+30  -------------x
    AND BAN.DATE_DECISION  >= SYSDATE-45
    AND BAN.SKP_CREDIT_TYPE =2
    GROUP BY BB.SKP_CLIENT
    HAVING COUNT(DISTINCT   BANK.TEXT_BANK_ACCOUNT_NUMBER)>=2
)
,CHANGE_DD_BANK AS 
(
    SELECT  /*+materialize use_hash(BB,BAN)*/ 
    BB.SKP_CLIENT,COUNT(DISTINCT BANK.TEXT_BANK_ACCOUNT_NUMBER) AS CNT
    FROM CONTRACT BB 
    JOIN OWNER_DWH.F_BANK_ACCOUNT_2_CREDCASE_TT BAN ON BAN.SKP_CLIENT=BB.SKP_CLIENT
      AND BAN.DATE_DECISION =BB.DATE_DECISION 
      AND BAN.SKP_CREDIT_TYPE =BB.SKP_CREDIT_TYPE 
      AND BAN.SKP_CREDIT_CASE =BB.SKP_CREDIT_CASE 
    JOIN OWNER_DWH.DC_EMPLOYEE EE ON EE.SKP_EMPLOYEE=BAN.SKP_EMPLOYEE_MODIFIED
    JOIN OWNER_DWH.DH_BANK_ACCOUNT BANK ON BANK.SKP_BANK_ACCOUNT=BAN.SKP_BANK_ACCOUNT
    JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS = 505 AND TRUNC(SYSDATE) - BAN.DATE_DECISION BETWEEN 30 AND EX.DAYS+30
    WHERE  BAN.DTIME_VALID_FROM>=BB.DATE_DECISION 
      AND  BAN.DTIME_VALID_FROM<=BB.DATE_DECISION+30  -------------x
      AND BAN.DATE_DECISION  >= SYSDATE-45
      AND BAN.SKP_CREDIT_TYPE =2
      AND BAN.SKP_EMPLOYEE_MODIFIED=332526----name_last=在线更改
    GROUP BY BB.SKP_CLIENT
    HAVING COUNT(DISTINCT   BANK.TEXT_BANK_ACCOUNT_NUMBER)>=1
)
,INITIAL_BANK_TIME AS 
(
    SELECT BB.SKP_CLIENT,BAN.SKP_BANK_ACCOUNT,MIN(BAN.DTIME_VALID_FROM) AS DTIME_VALID_FROM,BANK.TEXT_BANK_ACCOUNT_NUMBER
    FROM CHANGE_DD_BANK BB
    JOIN CHANGE_BANK B4 ON BB.SKP_CLIENT=B4.SKP_CLIENT
    JOIN OWNER_DWH.F_BANK_ACCOUNT_2_CREDCASE_TT BAN ON BB.SKP_CLIENT=BAN.SKP_CLIENT
    JOIN OWNER_DWH.DH_BANK_ACCOUNT BANK ON BAN.SKP_BANK_ACCOUNT=BANK.SKP_BANK_ACCOUNT
    GROUP BY BB.SKP_CLIENT,BAN.SKP_BANK_ACCOUNT,BANK.TEXT_BANK_ACCOUNT_NUMBER 
)

,CHANGE_TO_OLD_BANK AS 
(
    SELECT  /*+materialize use_hash(BB,BAN)*/ 
    BB.SKP_CLIENT,COUNT(DISTINCT BAN.SKP_BANK_ACCOUNT) AS CNT
    FROM CONTRACT BB 
    JOIN OWNER_DWH.F_BANK_ACCOUNT_2_CREDCASE_TT BAN ON BAN.SKP_CLIENT=BB.SKP_CLIENT
      AND BAN.DATE_DECISION =BB.DATE_DECISION 
      AND BAN.SKP_CREDIT_TYPE =BB.SKP_CREDIT_TYPE 
      AND BAN.SKP_CREDIT_CASE =BB.SKP_CREDIT_CASE 
    JOIN OWNER_DWH.DC_EMPLOYEE EE ON EE.SKP_EMPLOYEE=BAN.SKP_EMPLOYEE_MODIFIED
    JOIN INITIAL_BANK_TIME B1 ON B1.SKP_CLIENT=BAN.SKP_CLIENT
      AND B1.DTIME_VALID_FROM<BAN.DTIME_VALID_FROM--------不是第一次使用某卡
      AND B1.SKP_BANK_ACCOUNT =BAN.SKP_BANK_ACCOUNT
    JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS = 505 AND TRUNC(SYSDATE) - BAN.DATE_DECISION BETWEEN 30 AND EX.DAYS+30
    WHERE BAN.DTIME_VALID_FROM>=BB.DATE_DECISION 
      AND  BAN.DTIME_VALID_FROM<=BB.DATE_DECISION+30----------x
      AND BAN.DATE_DECISION  >= SYSDATE-45
      AND BAN.SKP_CREDIT_TYPE =2
      AND BAN.SKP_EMPLOYEE_MODIFIED=332526 ---name_last=在线更改
    GROUP BY BB.SKP_CLIENT ,ban.SKP_EMPLOYEE_MODIFIED
    HAVING COUNT(DISTINCT   BAN.SKP_BANK_ACCOUNT)>=1
)

,TRIGGER_VALUE AS 
(
    SELECT SKP_CLIENT,SKP_CREDIT_CASE ,SKP_CREDIT_TYPE ,DATE_DECISION ,
    listagg(to_char(DTIME_VALID_FROM,'yyyy-mm-dd hh24:mI:ss') ||'更改为'||TEXT_BANK_ACCOUNT_NUMBER,' ,')within group (order by DTIME_VALID_FROM) AS TRIGGER_VALUE
    FROM 
    (
        SELECT  /*+materialize use_hash(BB,BAN)*/ 
        DISTINCT 
        BB.SKP_CLIENT, BB.SKP_CREDIT_CASE,BB.DATE_DECISION ,BB.SKP_CREDIT_TYPE  ,BAN.DTIME_VALID_FROM,BANK.TEXT_BANK_ACCOUNT_NUMBER
        FROM CONTRACT BB 
        JOIN OWNER_DWH.F_BANK_ACCOUNT_2_CREDCASE_TT BAN ON BAN.SKP_CLIENT=BB.SKP_CLIENT
          AND BAN.DATE_DECISION =BB.DATE_DECISION 
          AND BAN.SKP_CREDIT_TYPE =BB.SKP_CREDIT_TYPE 
          AND BAN.SKP_CREDIT_CASE =BB.SKP_CREDIT_CASE 
          AND   BAN.DTIME_VALID_FROM >=BB.DTIME_DECISION 
          AND  BAN.DTIME_VALID_FROM<=BB.DATE_DECISION+30----------x
        JOIN OWNER_DWH.DC_EMPLOYEE EE ON EE.SKP_EMPLOYEE=BAN.SKP_EMPLOYEE_MODIFIED
        JOIN OWNER_DWH.DH_BANK_ACCOUNT BANK ON BAN.SKP_BANK_ACCOUNT=BANK.SKP_BANK_ACCOUNT
        JOIN CHANGE_TO_OLD_BANK B2 ON B2.SKP_CLIENT=BB.SKP_CLIENT-------TRIGGER
        JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS = 505 AND TRUNC(SYSDATE) - BAN.DATE_DECISION BETWEEN 30 AND EX.DAYS+30
        WHERE BAN.DATE_DECISION  >= SYSDATE-45
        AND BAN.SKP_CREDIT_TYPE =2
        AND BAN.SKP_EMPLOYEE_MODIFIED=332526 ---name_last=在线更改
    ) GROUP BY SKP_CLIENT,SKP_CREDIT_CASE ,SKP_CREDIT_TYPE ,DATE_DECISION
)

SELECT 
'SA' AS UNIT,
FACC.TEXT_USERNAME_EMPLOYEE_SALES AS ID_ENTITY,
TO_CHAR(TRUNC(SYSDATE) ,'YYYY/MM/DD') AS DATE_ETETECT,
TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD') AS WEEK_DETECT ,
'505' AS CLASS,
'TSO change bank account number ' AS TRIGGER_SOURCE,
TT.TRIGGER_VALUE,
'SOFT' AS TRIGGER_TYPE,
FACC.SKP_CREDIT_CASE ,
FACC.TEXT_CONTRACT_NUMBER
FROM  CONTRACT BB
JOIN TRIGGER_VALUE TT ON BB.SKP_CREDIT_CASE =TT.SKP_CREDIT_CASE 
   AND BB.SKP_CREDIT_TYPE =TT.SKP_CREDIT_TYPE 
   AND BB.DATE_DECISION =TT.DATE_DECISION 
JOIN CHANGE_TO_OLD_BANK B ON BB.SKP_CLIENT=B.SKP_CLIENT
JOIN DM_ANTIFRAUD.Ft_Af_Credit_Case_Ad FACC ON FACC.SKP_CREDIT_CASE =BB.SKP_CREDIT_CASE 
    AND FACC.SKP_CREDIT_TYPE =BB.SKP_CREDIT_TYPE 
    AND FACC.DATE_DECISION =BB.DATE_DECISION
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS = 505 AND TRUNC(SYSDATE) - BB.DATE_DECISION BETWEEN 30 AND EX.DAYS+30
WHERE BB.DATE_DECISION >= SYSDATE-45
    AND FACC.DATE_DECISION  >= SYSDATE-45
    AND FACC.SKP_CREDIT_TYPE =2;
COMMIT;
END;

/*
PROCEDURE TRIGGER_507_DIFF_CLIENT IS
  BEGIN
  
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '507 DIFF CLIENT USE SAME BANK CARD PART1',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
--INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH CONTRACT_BASE AS 
(
    SELECT AA.SKP_CREDIT_CASE,AA.SKP_CLIENT,AA.NAME_LAST_CLIENT,AA.text_bank_account,AA.TEXT_IDENTITY_CARD_NUMBER,AA.DATE_DECISION,AA.code_credit_status,
    AA.TEXT_USERNAME_EMPLOYEE_SALES,AA.code_salesroom,AA.name_region,AA.TEXT_CONTRACT_NUMBER
    FROM DM_antifraud.f_Af_Credit_Case_Ad AA 
    WHERE DATE_DECISION BETWEEN SYSDATE-30 AND SYSDATE
    AND NAME_SALESROOM NOT LIKE 'DEO%' AND TEXT_USERNAME_EMPLOYEE_SALES <>'extreme'
    AND AA.skp_credit_type=1
)
,PRE_LIST AS 
(
    SELECT AA.SKP_CREDIT_CASE AS CONTRACT_1,AA.NAME_LAST_CLIENT AS NAME_CLIENT_1,AA.text_bank_account AS BANK_1,AA.TEXT_IDENTITY_CARD_NUMBER AS ID_1,
    AA.DATE_DECISION AS DATE_1,AA.code_credit_status AS STATUS_1,AA.TEXT_USERNAME_EMPLOYEE_SALES AS SALES_1,AA.code_salesroom AS POS_1,AA.name_region AS REGION_1,
    AA.TEXT_CONTRACT_NUMBER AS CONTRACT_NUMBER_1,
    BB.SKP_CREDIT_CASE AS CONTRACT_2,BB.NAME_LAST_CLIENT AS NAME_CLIENT_2,BB.text_bank_account AS BANK_2,BB.TEXT_IDENTITY_CARD_NUMBER AS ID_2,
    BB.DATE_DECISION AS DATE_2,BB.code_credit_status AS STATUS_2,BB.TEXT_USERNAME_EMPLOYEE_SALES AS SALES_2,BB.code_salesroom AS POS_2,BB.name_region AS REGION_2,
    BB.TEXT_CONTRACT_NUMBER AS CONTRACT_NUMBER_2,
    BB.DATE_DECISION-AA.date_decision AS DIFF_DATE
    FROM CONTRACT_BASE AA
    JOIN CONTRACT_BASE BB
    ON AA.text_bank_account=BB.text_bank_account
    AND AA.SKP_CLIENT<>BB.SKP_CLIENT
    WHERE UPPER(AA.code_credit_status) ='D'
    AND AA.DATE_DECISION<=BB.DATE_DECISION AND BB.DATE_DECISION>=SYSDATE-7
    AND UTL_MATCH.edit_distance_similarity(AA.NAME_LAST_CLIENT,BB.NAME_LAST_CLIENT)<50
    ORDER BY AA.text_bank_account
)
,BASE_PRE AS 
(
    SELECT *
    FROM PRE_LIST CC
    WHERE POS_1<>POS_2 and SALES_1<>SALES_2 AND  DIFF_DATE<=15
)
, BASE AS 
(
    SELECT DISTINCT AA.CONTRACT_1 AS SKP_CREDIT_CASE,CONTRACT_NUMBER_1  AS CONTRACT_NO,AA.SALES_1 AS SALES_ID,AA.NAME_CLIENT_1 AS CLIENT_NAME,AA.BANK_1 AS BANK_CARD,AA.STATUS_1 AS STATUS
    FROM BASE_PRE AA
    --WHERE AA.BANK_1='6213306400000590154'
    UNION
    SELECT DISTINCT BB.CONTRACT_2 AS SKP_CREDIT_CASE,CONTRACT_NUMBER_2 AS CONTRACT_NO,BB.SALES_2 AS SALES_ID,BB.NAME_CLIENT_2 AS CLIENT_NAME,BB.BANK_2 AS BANK_CARD,BB.STATUS_2 AS STATUS
    FROM BASE_PRE BB 
)
,BASE2 AS 
(
    SELECT DISTINCT S.*
    ,DENSE_RANK()OVER(ORDER BY BANK_CARD) AS ID_GROUP
    ,ROW_NUMBER()OVER(PARTITION BY BANK_CARD ORDER BY SKP_CREDIT_CASE) AS ORD
    FROM BASE S
)
,BASE3 AS 
(
    SELECT BG.ID_GROUP
    ,COUNT(BG.SKP_CREDIT_CASE) AS CNT_APP
    ,SUM(CASE WHEN BG.STATUS='d' THEN 1 ELSE 0 END) AS CNT_REJ
    ,SUM(CASE WHEN BG.STATUS in('a','k','n') THEN 1 ELSE 0 END) AS CNT_APPROVED
    ,COUNT(DISTINCT BG.CLIENT_NAME) AS CNT_PERSON
    FROM BASE2 BG
    GROUP BY BG.ID_GROUP
)
SELECT  DISTINCT
'SA' AS UNIT
,SALES_ID
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'507' AS CLASS
,'Different clients use the same bank card' AS TRIGGER_SOURCE
,AA.ID_GROUP||']APP:'||CNT_APP||',REJ:'||CNT_REJ||',ACT:'||CNT_APPROVED||' '||'Bank_Card_NO'||':'||BANK_CARD  AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,SKP_CREDIT_CASE
,CONTRACT_NO
FROM BASE2 AA
JOIN  BASE3 BB ON AA.ID_GROUP=BB.ID_GROUP;
COMMIT;

--20180518 add second part/20180522 change
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '507 DIFF CLIENT USE SAME BANK CARD PART2',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH LIST AS  (
         SELECT AA.SKP_CREDIT_CASE,
         AA.SKP_CLIENT,
         AA.NAME_LAST_CLIENT,
         AA.TEXT_BANK_ACCOUNT,
         AA.AMT_CREDIT, AA.DATE_DECISION,
         AA.TEXT_USERNAME_EMPLOYEE_SALES AS SALES_ID,      
         AA.TEXT_CONTRACT_NUMBER,
         PRO.CODE_SALES_AREA AS REGION,
         CC.CODE_SALES_AREA       
         FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AA 
         LEFT JOIN OWNER_DWH.DC_SALES_AREA CC ON CC.NAME_SALES_AREA=AA.NAME_REGION AND CC.CODE_SALES_AREA_STATUS='A' AND  CC.SKP_SALES_AREA_TYPE=1 
         LEFT JOIN OWNER_DWH.DC_SALES_AREA PRO ON CC.SKP_SALES_AREA_SUPERIOR=PRO.SKP_SALES_AREA AND  PRO.CODE_SALES_AREA_STATUS='A' AND PRO.SKP_SALES_AREA_TYPE=2 
         WHERE DATE_DECISION >=DATE'2017-12-21'
          AND NAME_SALESROOM NOT LIKE N'DEO%' 
          AND TEXT_USERNAME_EMPLOYEE_SALES <>'extreme'
          AND AA.skp_credit_type=1
          AND CODE_CREDIT_STATUS='a'
             )
,LIST2 AS 
(
    SELECT DISTINCT SS.*
     FROM (SELECT L.*,
                   LISTAGG(TEXT_CONTRACT_NUMBER, ',') WITHIN GROUP(ORDER BY SKP_CLIENT) OVER(PARTITION BY TEXT_BANK_ACCOUNT) AS CONTRACT
     FROM LIST L)SS
)
,BANK AS
(   
       SELECT DISTINCT LL.TEXT_BANK_ACCOUNT,
       COUNT(DISTINCT SKP_CLIENT) AS CNT_CLIENT
       FROM LIST2 LL
       GROUP BY TEXT_BANK_ACCOUNT
       HAVING COUNT(DISTINCT SKP_CLIENT) >= 3
)
,TOTAL AS
(
    SELECT * FROM 
    (
    SELECT AA.*,
     BB.CNT_CLIENT,
     DENSE_RANK()OVER(ORDER BY BB.TEXT_BANK_ACCOUNT) AS ID_GROUP
     FROM BANK BB
     JOIN LIST2 AA 
     ON BB.TEXT_BANK_ACCOUNT=AA.TEXT_BANK_ACCOUNT 
     WHERE AA.DATE_DECISION>=SYSDATE-7
     ORDER BY DENSE_RANK()OVER(ORDER BY BB.TEXT_BANK_ACCOUNT) ASC,AMT_CREDIT DESC
     )
     WHERE ROWNUM<=200
 )
 ,TOTAL_FINAL AS 
(
    SELECT DISTINCT TT.*,TO_CHAR(DATE_DETECT,'YYYY/MM/DD') AS DATE_DETECT,
    CASE WHEN GG.TEXT_BANK_ACCOUNT IS NOT NULL THEN 'Y' ELSE 'N' END AS FLAG_HIT_507
    FROM TOTAL TT
    LEFT JOIN  (SELECT DISTINCT DATE_DETECT,CLASS,LL.TEXT_BANK_ACCOUNT,
                           ROW_NUMBER()OVER(PARTITION BY LL.TEXT_BANK_ACCOUNT ORDER BY DATE_DETECT DESC)AS ORD
                           FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS GG
                           JOIN LIST LL  ON GG.SKP_CREDIT_CASE=LL.SKP_CREDIT_CASE AND GG.CLASS='507'
                          ) GG ON TT.TEXT_BANK_ACCOUNT=GG.TEXT_BANK_ACCOUNT AND ORD=1
)
SELECT 
'SA' AS UNIT
,SALES_ID
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'507' AS CLASS
,'>= 3 Different clients use the same bank card' AS TRIGGER_SOURCE
 ,CASE WHEN FLAG_HIT_507='Y' THEN  ID_GROUP||']CNT_CLIENT:'||CNT_CLIENT||','||'Bank_Card_NO'||':'||TEXT_BANK_ACCOUNT||','||'TRIGGER BY 507'||' at '||DATE_DETECT||','||'CONTRACT'||':'||CONTRACT
 ELSE ID_GROUP||']CNT_CLIENT:'||CNT_CLIENT||','||'Bank_Card_NO'||':'||TEXT_BANK_ACCOUNT||','||'CONTRACT'||':'||CONTRACT  END AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM TOTAL_FINAL TT
WHERE  NOT EXISTS (SELECT 1 FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS BB WHERE BB.SKP_CREDIT_CASE=TT.SKP_CREDIT_CASE AND BB.CLASS IN ('507','31'));
COMMIT;

--new update 20180330
INSERT INTO AP_ANTIFRAUD.F_AF_FINAL_TRIGGERS
WITH FINAL_TRIGGER_BASE AS
(
SELECT  \*+  use_hash(facc) *\  DISTINCT 
 PRE.ID_ENTITY
,facc.skp_employee_consultant
,TRIGGER_VALUE 
,FACC.name_last_sales
,PRE.DATE_DETECT
,PRE.WEEK_DETECT
, CASE WHEN ((FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR FACC.text_username_employee_sales='homer_o2o')AND DSAC.CODE_SALES_AREA IS NOT NULL THEN DSAC.CODE_SALES_AREA ELSE  PRO.CODE_SALES_AREA END  AS REGION
, CASE WHEN ((FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR FACC.text_username_employee_sales='homer_o2o')AND DSA.CODE_SALES_AREA IS NOT NULL THEN DSA.CODE_SALES_AREA ELSE  CC.CODE_SALES_AREA END AS CODE_SALES_AREA
--,SA_TYPE
--,SA_ACTIVE_DAYS
,TRIGGER_SOURCE
,TRIGGER_TYPE
,substr(trigger_value,1,instr(trigger_value,']',1)-1) as ID_GROUP
,MIN(CASE WHEN FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme' THEN '2 POS LOAN'
                         WHEN FACC.name_channel LIKE '%无预约%' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme' THEN '3 WALK-IN'  
                           WHEN FACC.name_channel LIKE '消费贷%' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme'  THEN '1 XSELL' 
                             WHEN FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme' THEN '4 ELOAN' ELSE '5 MINI' END ) OVER(PARTITION BY DATE_DETECT, substr(trigger_value,1,instr(trigger_value,']',1)-1))AS CASE_CATEGORY

FROM AP_ANTIFRAUD.f_Trcontracts_Preselection PRE
JOIN OWNER_DWH.DC_CREDIT_CASE DCC ON DCC.SKP_CREDIT_CASE=PRE.SKP_CREDIT_CASE 
AND PRE.DATE_DETECT=TO_CHAR(SYSDATE,'yyyy/mm/dd')and PRE.CLASS='507' 
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC ON DCC.id_source = facc.id_source AND  FACC.date_decision=DCC.DATE_DECISION AND DCC.skp_credit_type = facc.skp_credit_type --AND PRE.UNIT='SA'-- AND AA.CLASS=20
LEFT JOIN OWNER_DWH.DC_SALES_AREA CC ON CC.NAME_SALES_AREA=FACC.name_region AND CC.code_sales_area_status='a' and  CC.skp_sales_area_type=1 
LEFT JOIN OWNER_DWH.DC_SALES_AREA PRO ON CC.SKP_SALES_AREA_SUPERIOR=PRO.SKP_SALES_AREA AND  PRO.CODE_SALES_AREA_STATUS='a' and PRO.SKP_SALES_AREA_TYPE=2 
---SA_ACTIVE_DAYS
--LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON FACC.skp_employee_consultant=sa.skp_employee AND PRE.UNIT='SA'

 JOIN OWNER_DWH.f_Application_Client_Tt ACT ON ACT.SKP_CREDIT_CASE=DCC.SKP_CREDIT_CASE AND ACT.SKP_CREDIT_TYPE=DCC.SKP_CREDIT_TYPE AND ACT.SKP_CLIENT_ROLE=14
LEFT JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR ON ADDR.SKP_CREDIT_CASE= DCC.SKP_CREDIT_CASE AND ACT.SKP_APPLICATION_CLIENT=ADDR.SKP_APPLICATION_CLIENT AND ADDR.SKP_ADDRESS_TYPE=2--CURRENT
LEFT JOIN OWNER_DWH.DC_CITY DC ON DC.SKP_CITY=ADDR.SKP_CITY
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSA ON DSA.NAME_SALES_AREA=DC.NAME_CITY AND DSA.code_sales_area_status='a' and  DSA.skp_sales_area_type=1
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSAC ON DSA.SKP_SALES_AREA_SUPERIOR=DSAC.SKP_SALES_AREA AND  DSAC.CODE_SALES_AREA_STATUS='a' and DSAC.SKP_SALES_AREA_TYPE=2 
)
,PROVINCE AS 
(
SELECT DISTINCT ID_GROUP
,LISTAGG(REGION,'、' )WITHIN GROUP(ORDER BY REGION) OVER(PARTITION BY ID_GROUP) AS PROVINCE
FROM (SELECT DISTINCT ID_GROUP,REGION FROM FINAL_TRIGGER_BASE)
)
,REGION AS 
(
SELECT DISTINCT AA.ID_GROUP
,BB.PROVINCE
,LISTAGG(CODE_SALES_AREA,'、')WITHIN GROUP(ORDER BY CODE_SALES_AREA) OVER(PARTITION BY AA.ID_GROUP) AS CITY
,CASE WHEN CASE_CATEGORY='1 XSELL' THEN '3 XSELL' 
              WHEN CASE_CATEGORY='2 POS LOAN' THEN '1 POS LOAN'
                WHEN CASE_CATEGORY='3 WALK-IN' THEN '2 WALK-IN'
              ELSE CASE_CATEGORY END AS CASE_CATEGORY     ----------PRIORITY XSELL
FROM  (SELECT DISTINCT ID_GROUP, CODE_SALES_AREA,CASE_CATEGORY FROM FINAL_TRIGGER_BASE) AA
JOIN PROVINCE BB ON AA.ID_GROUP=BB.ID_GROUP
)

SELECT  
AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID
,'SA' AS UNIT
,'SA'||'_'||AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID_TRIGGER
,TO_DATE(TRI.DATE_DETECT,'YYYY-MM-DD') AS DATE_DETECT
,TO_DATE(TRI.WEEK_DETECT,'YYYY-MM-DD')AS WEEK_DETECT
,TRI.ID_ENTITY
,TRI.name_last_sales
,BB.PROVINCE
,BB.CITY
,CASE WHEN SUBSTR(ID_ENTITY,1,1) IN ('6','D') THEN 'RA' ELSE 'SA' END AS SA_TYPE
,SA.cnt_days_from_first_credit
,'507' AS CLASS
,TRI.TRIGGER_SOURCE
,'SOFT' AS TRIGGER_TYPE
,TRI.TRIGGER_VALUE 
,NULL CHECKED_BY
,NULL CASE_STATUS
,NULL CASE_DECISION
,NULL CASE_NO
,NULL INTO_SECURITY
,SYSDATE AS TIME_DETECT
,BB.CASE_CATEGORY
,NULL AS NAME_DISTRICT--20180319
FROM (SELECT DISTINCT DATE_DETECT,WEEK_DETECT,ID_ENTITY,name_last_sales,skp_employee_consultant,TRIGGER_SOURCE, TRIGGER_VALUE,ID_GROUP FROM FINAL_TRIGGER_BASE) TRI
JOIN REGION BB ON TRI.ID_GROUP=BB.ID_GROUP 
---SA_ACTIVE_DAYS
LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON TRI.skp_employee_consultant=sa.skp_employee
WHERE lengthB( BB.CITY)<100;
COMMIT; 
END;
*/

PROCEDURE TRIGGER_507_DIFF_CLIENT IS
  BEGIN
  
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '507 DIFF CLIENT USE SAME BANK CARD',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
--INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH CONTRACT_BASE AS
(
    SELECT AA.SKP_CREDIT_CASE,AA.SKP_CLIENT,AA.NAME_LAST_CLIENT,AA.text_bank_account,AA.TEXT_IDENTITY_CARD_NUMBER,AA.DATE_DECISION,AA.code_credit_status,
    AA.TEXT_USERNAME_EMPLOYEE_SALES,AA.code_salesroom,AA.name_region,AA.TEXT_CONTRACT_NUMBER
    FROM DM_antifraud.f_Af_Credit_Case_Ad AA 
    WHERE DATE_DECISION BETWEEN SYSDATE-30 AND SYSDATE
    AND NAME_SALESROOM NOT LIKE 'DEO%' AND TEXT_USERNAME_EMPLOYEE_SALES <>'extreme'
    AND AA.skp_credit_type=1
)
,PRE_LIST AS
(
    SELECT AA.SKP_CREDIT_CASE AS CONTRACT_1,AA.NAME_LAST_CLIENT AS NAME_CLIENT_1,AA.text_bank_account AS BANK_1,AA.TEXT_IDENTITY_CARD_NUMBER AS ID_1,
    AA.DATE_DECISION AS DATE_1,AA.code_credit_status AS STATUS_1,AA.TEXT_USERNAME_EMPLOYEE_SALES AS SALES_1,AA.code_salesroom AS POS_1,AA.name_region AS REGION_1,
    AA.TEXT_CONTRACT_NUMBER AS CONTRACT_NUMBER_1,
    BB.SKP_CREDIT_CASE AS CONTRACT_2,BB.NAME_LAST_CLIENT AS NAME_CLIENT_2,BB.text_bank_account AS BANK_2,BB.TEXT_IDENTITY_CARD_NUMBER AS ID_2,
    BB.DATE_DECISION AS DATE_2,BB.code_credit_status AS STATUS_2,BB.TEXT_USERNAME_EMPLOYEE_SALES AS SALES_2,BB.code_salesroom AS POS_2,BB.name_region AS REGION_2,
    BB.TEXT_CONTRACT_NUMBER AS CONTRACT_NUMBER_2,
    BB.DATE_DECISION-AA.date_decision AS DIFF_DATE
    FROM CONTRACT_BASE AA
    JOIN CONTRACT_BASE BB
    ON AA.text_bank_account=BB.text_bank_account
    AND AA.SKP_CLIENT<>BB.SKP_CLIENT
    WHERE UPPER(AA.code_credit_status) ='D'
    AND AA.DATE_DECISION<=BB.DATE_DECISION AND BB.DATE_DECISION>=SYSDATE-7
    AND UTL_MATCH.edit_distance_similarity(AA.NAME_LAST_CLIENT,BB.NAME_LAST_CLIENT)<50
    ORDER BY AA.text_bank_account
)
,BASE_PRE AS 
(
    SELECT *
    FROM PRE_LIST CC
    WHERE POS_1<>POS_2 and SALES_1<>SALES_2 AND  DIFF_DATE<=15
)
, BASE AS 
(
    SELECT DISTINCT AA.CONTRACT_1 AS SKP_CREDIT_CASE,CONTRACT_NUMBER_1  AS CONTRACT_NO,AA.SALES_1 AS SALES_ID,AA.NAME_CLIENT_1 AS CLIENT_NAME,AA.BANK_1 AS BANK_CARD,AA.STATUS_1 AS STATUS
    FROM BASE_PRE AA
    UNION
    SELECT DISTINCT BB.CONTRACT_2 AS SKP_CREDIT_CASE,CONTRACT_NUMBER_2 AS CONTRACT_NO,BB.SALES_2 AS SALES_ID,BB.NAME_CLIENT_2 AS CLIENT_NAME,BB.BANK_2 AS BANK_CARD,BB.STATUS_2 AS STATUS
    FROM BASE_PRE BB 
)
,BASE2 AS 
(
    SELECT DISTINCT S.*
    ,DENSE_RANK()OVER(ORDER BY BANK_CARD) AS ID_GROUP
    ,ROW_NUMBER()OVER(PARTITION BY BANK_CARD ORDER BY SKP_CREDIT_CASE) AS ORD
    FROM BASE S
)
,BASE3 AS 
(
    SELECT BG.ID_GROUP
    ,COUNT(BG.SKP_CREDIT_CASE) AS CNT_APP
    ,SUM(CASE WHEN BG.STATUS='d' THEN 1 ELSE 0 END) AS CNT_REJ
    ,SUM(CASE WHEN BG.STATUS in('a','k','n') THEN 1 ELSE 0 END) AS CNT_APPROVED
    ,COUNT(DISTINCT BG.CLIENT_NAME) AS CNT_PERSON
    FROM BASE2 BG
    GROUP BY BG.ID_GROUP
)
SELECT  DISTINCT
'SA' AS UNIT
,SALES_ID
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'507' AS CLASS
,'Different clients use the same bank card' AS TRIGGER_SOURCE
,AA.ID_GROUP||']APP:'||CNT_APP||',REJ:'||CNT_REJ||',ACT:'||CNT_APPROVED||' '||'Bank_Card_NO'||':'||BANK_CARD  AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,SKP_CREDIT_CASE
,CONTRACT_NO
FROM BASE2 AA
JOIN  BASE3 BB ON AA.ID_GROUP=BB.ID_GROUP
WHERE NOT EXISTS (SELECT 1 FROM OWNER_DWH.F_MS_SALESROOM_AD MS WHERE MS.TEXT_CONTRACT_NUMBER=AA.CONTRACT_NO);--20180626
COMMIT;

--new update 20180330
INSERT INTO AP_ANTIFRAUD.F_AF_FINAL_TRIGGERS
WITH FINAL_TRIGGER_BASE AS
(
SELECT  /*+  use_hash(facc) */  DISTINCT 
 PRE.ID_ENTITY
,facc.skp_employee_consultant
,TRIGGER_VALUE 
,FACC.name_last_sales
,PRE.DATE_DETECT
,PRE.WEEK_DETECT
, CASE WHEN ((FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR FACC.text_username_employee_sales='homer_o2o' OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%')AND DSAC.CODE_SALES_AREA IS NOT NULL THEN DSAC.CODE_SALES_AREA ELSE  PRO.CODE_SALES_AREA END  AS REGION
, CASE WHEN ((FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR FACC.text_username_employee_sales='homer_o2o' OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%')AND DSA.CODE_SALES_AREA IS NOT NULL THEN DSA.CODE_SALES_AREA ELSE  CC.CODE_SALES_AREA END AS CODE_SALES_AREA
--,SA_TYPE
--,SA_ACTIVE_DAYS
,TRIGGER_SOURCE
,TRIGGER_TYPE
,substr(trigger_value,1,instr(trigger_value,']',1)-1) as ID_GROUP
,MIN(CASE WHEN FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme' AND EE.SKP_BANK_ROLE<>1962 THEN '2 POS LOAN'
                         WHEN FACC.name_channel LIKE '%无预约%' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme' THEN '3 WALK-IN'  
                           WHEN FACC.name_channel LIKE '消费贷%' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme'  THEN '1 XSELL' 
                          --   WHEN FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme' THEN '4 ELOAN' ELSE '5 MINI' END
                           WHEN FACC.name_channel='商品贷' AND EE.SKP_BANK_ROLE=1962 THEN '0 ELOAN' ELSE '5 MINI' END --REMOTE SA 20190517 --20190807
                                ) OVER(PARTITION BY DATE_DETECT, substr(trigger_value,1,instr(trigger_value,']',1)-1))AS CASE_CATEGORY

FROM AP_ANTIFRAUD.f_Trcontracts_Preselection PRE
JOIN OWNER_DWH.DC_CREDIT_CASE DCC ON DCC.SKP_CREDIT_CASE=PRE.SKP_CREDIT_CASE 
AND PRE.DATE_DETECT=TO_CHAR(SYSDATE,'yyyy/mm/dd')and PRE.CLASS='507' 
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC ON DCC.id_source = facc.id_source AND  FACC.date_decision=DCC.DATE_DECISION AND DCC.skp_credit_type = facc.skp_credit_type --AND PRE.UNIT='SA'-- AND AA.CLASS=20
LEFT JOIN OWNER_DWH.DC_EMPLOYEE EE ON PRE.ID_ENTITY=EE.TEXT_USERNAME_EMPLOYEE
LEFT JOIN OWNER_DWH.DC_SALES_AREA CC ON CC.NAME_SALES_AREA=FACC.name_region AND CC.code_sales_area_status='a' and  CC.skp_sales_area_type=1 
LEFT JOIN OWNER_DWH.DC_SALES_AREA PRO ON CC.SKP_SALES_AREA_SUPERIOR=PRO.SKP_SALES_AREA AND  PRO.CODE_SALES_AREA_STATUS='a' and PRO.SKP_SALES_AREA_TYPE=2 
---SA_ACTIVE_DAYS
--LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON FACC.skp_employee_consultant=sa.skp_employee AND PRE.UNIT='SA'

JOIN OWNER_DWH.f_Application_Client_Tt ACT ON ACT.SKP_CREDIT_CASE=DCC.SKP_CREDIT_CASE AND ACT.SKP_CREDIT_TYPE=DCC.SKP_CREDIT_TYPE AND ACT.SKP_CLIENT_ROLE=14
LEFT JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR ON ADDR.SKP_CREDIT_CASE= DCC.SKP_CREDIT_CASE AND ACT.SKP_APPLICATION_CLIENT=ADDR.SKP_APPLICATION_CLIENT AND ADDR.SKP_ADDRESS_TYPE=2--CURRENT
LEFT JOIN OWNER_DWH.DC_CITY DC ON DC.SKP_CITY=ADDR.SKP_CITY
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSA ON DSA.NAME_SALES_AREA=DC.NAME_CITY AND DSA.code_sales_area_status='a' and  DSA.skp_sales_area_type=1
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSAC ON DSA.SKP_SALES_AREA_SUPERIOR=DSAC.SKP_SALES_AREA AND  DSAC.CODE_SALES_AREA_STATUS='a' and DSAC.SKP_SALES_AREA_TYPE=2 
)
,PROVINCE AS 
(
SELECT DISTINCT ID_GROUP
,LISTAGG(REGION,'、' )WITHIN GROUP(ORDER BY REGION) OVER(PARTITION BY ID_GROUP) AS PROVINCE
FROM (SELECT DISTINCT ID_GROUP,REGION FROM FINAL_TRIGGER_BASE)
)
,REGION AS 
(
SELECT DISTINCT AA.ID_GROUP
,BB.PROVINCE
,LISTAGG(CODE_SALES_AREA,'、')WITHIN GROUP(ORDER BY CODE_SALES_AREA) OVER(PARTITION BY AA.ID_GROUP) AS CITY
,CASE WHEN CASE_CATEGORY='1 XSELL' THEN '3 XSELL' 
              WHEN CASE_CATEGORY='2 POS LOAN' THEN '1 POS LOAN'
                WHEN CASE_CATEGORY='3 WALK-IN' THEN '2 WALK-IN'
                  WHEN CASE_CATEGORY='0 ELOAN' THEN '4 ELOAN' --20190807
              ELSE CASE_CATEGORY END AS CASE_CATEGORY     ----------PRIORITY XSELL
FROM  (SELECT DISTINCT ID_GROUP, CODE_SALES_AREA,CASE_CATEGORY FROM FINAL_TRIGGER_BASE) AA
JOIN PROVINCE BB ON AA.ID_GROUP=BB.ID_GROUP
)

SELECT  
AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID
,'SA' AS UNIT
,'SA'||'_'||AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID_TRIGGER
,TO_DATE(TRI.DATE_DETECT,'YYYY-MM-DD') AS DATE_DETECT
,TO_DATE(TRI.WEEK_DETECT,'YYYY-MM-DD')AS WEEK_DETECT
,TRI.ID_ENTITY
,TRI.name_last_sales
,BB.PROVINCE
,BB.CITY
,CASE WHEN SUBSTR(ID_ENTITY,1,1) IN ('6','D') THEN 'RA' ELSE 'SA' END AS SA_TYPE
,SA.cnt_days_from_first_credit
,'507' AS CLASS
,TRI.TRIGGER_SOURCE
,'SOFT' AS TRIGGER_TYPE
,TRI.TRIGGER_VALUE 
,NULL CHECKED_BY
,NULL CASE_STATUS
,NULL CASE_DECISION
,NULL CASE_NO
,NULL INTO_SECURITY
,SYSDATE AS TIME_DETECT
,BB.CASE_CATEGORY
,NULL AS NAME_DISTRICT--20180319
,'是' AS FLAG_SEC_ALL_CONTRACT
FROM (SELECT DISTINCT DATE_DETECT,WEEK_DETECT,ID_ENTITY,name_last_sales,skp_employee_consultant,TRIGGER_SOURCE, TRIGGER_VALUE,ID_GROUP FROM FINAL_TRIGGER_BASE) TRI
JOIN REGION BB ON TRI.ID_GROUP=BB.ID_GROUP 
---SA_ACTIVE_DAYS
LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON TRI.skp_employee_consultant=sa.skp_employee
WHERE lengthB( BB.CITY)<100;
COMMIT; 
END;
-------------------518-------------------------------
--20180518 add second part/20180522 change/20180605 change
PROCEDURE TRIGGER_518_DIFF_CLIENT IS
  BEGIN

INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '518 MORE THAN 3 CLIENTS USE THE SAME BANK CARD',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH LIST AS  
(
         SELECT AA.SKP_CREDIT_CASE,
         AA.SKP_CLIENT,
         AA.NAME_LAST_CLIENT,
         AA.TEXT_BANK_ACCOUNT,
         AA.AMT_CREDIT, AA.DATE_DECISION,
         AA.TEXT_USERNAME_EMPLOYEE_SALES AS SALES_ID,      
         AA.TEXT_CONTRACT_NUMBER,
         PRO.CODE_SALES_AREA AS REGION,
         CC.CODE_SALES_AREA       
         FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AA 
         LEFT JOIN OWNER_DWH.DC_SALES_AREA CC ON CC.NAME_SALES_AREA=AA.NAME_REGION AND CC.CODE_SALES_AREA_STATUS='A' AND  CC.SKP_SALES_AREA_TYPE=1 
         LEFT JOIN OWNER_DWH.DC_SALES_AREA PRO ON CC.SKP_SALES_AREA_SUPERIOR=PRO.SKP_SALES_AREA AND  PRO.CODE_SALES_AREA_STATUS='A' AND PRO.SKP_SALES_AREA_TYPE=2 
         WHERE DATE_DECISION >=DATE'2017-12-21'
          AND NAME_SALESROOM NOT LIKE 'DEO%' 
          AND TEXT_USERNAME_EMPLOYEE_SALES <>'extreme'
          AND AA.skp_credit_type=1
          AND CODE_CREDIT_STATUS='a'
)
,LIST2 AS 
(
    SELECT DISTINCT SS.*
     FROM (SELECT L.*,
                   LISTAGG(TEXT_CONTRACT_NUMBER, ',') WITHIN GROUP(ORDER BY SKP_CLIENT) OVER(PARTITION BY TEXT_BANK_ACCOUNT) AS CONTRACT
     FROM LIST L)SS
)
,BANK AS
(   
       SELECT DISTINCT LL.TEXT_BANK_ACCOUNT,
       COUNT(DISTINCT SKP_CLIENT) AS CNT_CLIENT
       FROM LIST2 LL
       GROUP BY TEXT_BANK_ACCOUNT
       HAVING COUNT(DISTINCT SKP_CLIENT) >= 3
)
,TOTAL AS
(
    SELECT * FROM 
    (
    SELECT AA.*,
     BB.CNT_CLIENT
     FROM BANK BB
     JOIN LIST2 AA 
     ON BB.TEXT_BANK_ACCOUNT=AA.TEXT_BANK_ACCOUNT 
     WHERE AA.DATE_DECISION>=SYSDATE-7
     ORDER BY DENSE_RANK()OVER(ORDER BY BB.TEXT_BANK_ACCOUNT) ASC,AMT_CREDIT DESC
     )
     WHERE ROWNUM<=200
)
,TOTAL_FINAL AS 
(
    SELECT DISTINCT TT.*,TO_CHAR(DATE_DETECT,'YYYY/MM/DD') AS DATE_DETECT,
    CASE WHEN GG.TEXT_BANK_ACCOUNT IS NOT NULL THEN 'Y' ELSE 'N' END AS FLAG_HIT_507
    FROM TOTAL TT
    LEFT JOIN  (SELECT DISTINCT DATE_DETECT,CLASS,LL.TEXT_BANK_ACCOUNT,
                           ROW_NUMBER()OVER(PARTITION BY LL.TEXT_BANK_ACCOUNT ORDER BY DATE_DETECT DESC)AS ORD
                           FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS GG
                           JOIN LIST LL  ON GG.SKP_CREDIT_CASE=LL.SKP_CREDIT_CASE AND GG.CLASS='507'
                          ) GG ON TT.TEXT_BANK_ACCOUNT=GG.TEXT_BANK_ACCOUNT AND ORD=1
)
,FINAL_LIST AS
(
    SELECT TF.*,
    DENSE_RANK()OVER(ORDER BY TF.TEXT_BANK_ACCOUNT) AS ID_GROUP
    FROM TOTAL_FINAL TF
    WHERE  NOT EXISTS (SELECT 1 FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS BB WHERE BB.SKP_CREDIT_CASE=TF.SKP_CREDIT_CASE AND BB.CLASS IN ('507','31'))
    ORDER BY DENSE_RANK()OVER(ORDER BY TF.TEXT_BANK_ACCOUNT) 
)
SELECT 
'SA' AS UNIT
,SALES_ID
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'518' AS CLASS
,'>= 3 Different clients use the same bank card' AS TRIGGER_SOURCE
,CASE WHEN FLAG_HIT_507='Y' THEN  ID_GROUP||']CNT_CLIENT:'||CNT_CLIENT||','||'Bank_Card_NO'||':'||TEXT_BANK_ACCOUNT||','||'TRIGGER BY 507'||' at '||DATE_DETECT||','||'CONTRACT'||':'||CONTRACT
ELSE ID_GROUP||']CNT_CLIENT:'||CNT_CLIENT||','||'Bank_Card_NO'||':'||TEXT_BANK_ACCOUNT||','||'CONTRACT'||':'||CONTRACT  END AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM FINAL_LIST TT;
COMMIT;

----
INSERT INTO AP_ANTIFRAUD.F_AF_FINAL_TRIGGERS
WITH FINAL_TRIGGER_BASE AS
(
SELECT  /*+  use_hash(facc) */  DISTINCT 
 PRE.ID_ENTITY
,facc.skp_employee_consultant
,TRIGGER_VALUE 
,FACC.name_last_sales
,PRE.DATE_DETECT
,PRE.WEEK_DETECT
, CASE WHEN ((FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR FACC.text_username_employee_sales='homer_o2o' OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%')AND DSAC.CODE_SALES_AREA IS NOT NULL THEN DSAC.CODE_SALES_AREA ELSE  PRO.CODE_SALES_AREA END  AS REGION
, CASE WHEN ((FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR FACC.text_username_employee_sales='homer_o2o' OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%')AND DSA.CODE_SALES_AREA IS NOT NULL THEN DSA.CODE_SALES_AREA ELSE  CC.CODE_SALES_AREA END AS CODE_SALES_AREA
--,SA_TYPE
--,SA_ACTIVE_DAYS
,TRIGGER_SOURCE
,TRIGGER_TYPE
,substr(trigger_value,1,instr(trigger_value,']',1)-1) as ID_GROUP
,MIN(CASE WHEN FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme'  AND EE.SKP_BANK_ROLE<>1962 THEN '2 POS LOAN'
                      WHEN FACC.name_channel LIKE '%无预约%' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme' THEN '3 WALK-IN'  
                      WHEN FACC.name_channel LIKE '消费贷%' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme'  THEN '1 XSELL' 
                            --- WHEN FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme' THEN '4 ELOAN' ELSE '5 MINI' END 
                       WHEN FACC.name_channel='商品贷' AND EE.SKP_BANK_ROLE=1962 THEN '0 ELOAN' ELSE '5 MINI' END --REMOTE SA 20190517
                      ) OVER(PARTITION BY DATE_DETECT, substr(trigger_value,1,instr(trigger_value,']',1)-1))AS CASE_CATEGORY

FROM AP_ANTIFRAUD.f_Trcontracts_Preselection PRE
JOIN OWNER_DWH.DC_CREDIT_CASE DCC ON DCC.SKP_CREDIT_CASE=PRE.SKP_CREDIT_CASE 
AND PRE.DATE_DETECT=TO_CHAR(SYSDATE,'yyyy/mm/dd')and PRE.CLASS='518'
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC ON DCC.id_source = facc.id_source AND  FACC.date_decision=DCC.DATE_DECISION AND DCC.skp_credit_type = facc.skp_credit_type --AND PRE.UNIT='SA'-- AND AA.CLASS=20
LEFT JOIN OWNER_DWH.DC_EMPLOYEE EE ON PRE.ID_ENTITY=EE.TEXT_USERNAME_EMPLOYEE
LEFT JOIN OWNER_DWH.DC_SALES_AREA CC ON CC.NAME_SALES_AREA=FACC.name_region AND CC.code_sales_area_status='a' and  CC.skp_sales_area_type=1 
LEFT JOIN OWNER_DWH.DC_SALES_AREA PRO ON CC.SKP_SALES_AREA_SUPERIOR=PRO.SKP_SALES_AREA AND  PRO.CODE_SALES_AREA_STATUS='a' and PRO.SKP_SALES_AREA_TYPE=2 
---SA_ACTIVE_DAYS
--LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON FACC.skp_employee_consultant=sa.skp_employee AND PRE.UNIT='SA'

JOIN OWNER_DWH.f_Application_Client_Tt ACT ON ACT.SKP_CREDIT_CASE=DCC.SKP_CREDIT_CASE AND ACT.SKP_CREDIT_TYPE=DCC.SKP_CREDIT_TYPE AND ACT.SKP_CLIENT_ROLE=14
LEFT JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR ON ADDR.SKP_CREDIT_CASE= DCC.SKP_CREDIT_CASE AND ACT.SKP_APPLICATION_CLIENT=ADDR.SKP_APPLICATION_CLIENT AND ADDR.SKP_ADDRESS_TYPE=2--CURRENT
LEFT JOIN OWNER_DWH.DC_CITY DC ON DC.SKP_CITY=ADDR.SKP_CITY
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSA ON DSA.NAME_SALES_AREA=DC.NAME_CITY AND DSA.code_sales_area_status='a' and  DSA.skp_sales_area_type=1
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSAC ON DSA.SKP_SALES_AREA_SUPERIOR=DSAC.SKP_SALES_AREA AND  DSAC.CODE_SALES_AREA_STATUS='a' and DSAC.SKP_SALES_AREA_TYPE=2 
)
,PROVINCE AS 
(
SELECT DISTINCT ID_GROUP
,LISTAGG(REGION,'、' )WITHIN GROUP(ORDER BY REGION) OVER(PARTITION BY ID_GROUP) AS PROVINCE
FROM (SELECT DISTINCT ID_GROUP,REGION FROM FINAL_TRIGGER_BASE)
)
,REGION AS 
(
SELECT DISTINCT AA.ID_GROUP
,BB.PROVINCE
,LISTAGG(CODE_SALES_AREA,'、')WITHIN GROUP(ORDER BY CODE_SALES_AREA) OVER(PARTITION BY AA.ID_GROUP) AS CITY
,CASE WHEN CASE_CATEGORY='1 XSELL' THEN '3 XSELL' 
              WHEN CASE_CATEGORY='2 POS LOAN' THEN '1 POS LOAN'
                WHEN CASE_CATEGORY='3 WALK-IN' THEN '2 WALK-IN'
                  WHEN CASE_CATEGORY='0 ELOAN' THEN '4 ELOAN' --20190807
              ELSE CASE_CATEGORY END AS CASE_CATEGORY     ----------PRIORITY XSELL
FROM  (SELECT DISTINCT ID_GROUP, CODE_SALES_AREA,CASE_CATEGORY FROM FINAL_TRIGGER_BASE) AA
JOIN PROVINCE BB ON AA.ID_GROUP=BB.ID_GROUP
)

SELECT  
AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID
,'SA' AS UNIT
,'SA'||'_'||AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID_TRIGGER
,TO_DATE(TRI.DATE_DETECT,'YYYY-MM-DD') AS DATE_DETECT
,TO_DATE(TRI.WEEK_DETECT,'YYYY-MM-DD')AS WEEK_DETECT
,TRI.ID_ENTITY
,TRI.name_last_sales
,BB.PROVINCE
,BB.CITY
,CASE WHEN SUBSTR(ID_ENTITY,1,1) IN ('6','D') THEN 'RA' ELSE 'SA' END AS SA_TYPE
,SA.cnt_days_from_first_credit
,'518' AS CLASS
,TRI.TRIGGER_SOURCE
,'SOFT' AS TRIGGER_TYPE
,TRI.TRIGGER_VALUE 
,NULL CHECKED_BY
,NULL CASE_STATUS
,NULL CASE_DECISION
,NULL CASE_NO
,NULL INTO_SECURITY
,SYSDATE AS TIME_DETECT
,BB.CASE_CATEGORY
,NULL AS NAME_DISTRICT
,'是' AS FLAG_SEC_ALL_CONTRACT
FROM (SELECT DISTINCT DATE_DETECT,WEEK_DETECT,ID_ENTITY,name_last_sales,skp_employee_consultant,TRIGGER_SOURCE, TRIGGER_VALUE,ID_GROUP FROM FINAL_TRIGGER_BASE) TRI
JOIN REGION BB ON TRI.ID_GROUP=BB.ID_GROUP 
LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON TRI.skp_employee_consultant=sa.skp_employee
WHERE lengthB( BB.CITY)<100;
COMMIT; 
END;

PROCEDURE TRIGGER_519_FAKE_WECHAT_BIND IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name: length       
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_519_FAKE';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP:519_FAKE_WECHAT_BIND';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL); 

INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '519 Fake Wechat Bind',SYSDATE FROM DUAL;
COMMIT;

INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH BASE AS 
(
    SELECT DWC.SKP_WECHAT_ACCOUNT,COUNT(DISTINCT SKP_CLIENT) AS WECHAT_DEGREE 
    FROM OWNER_DWH.DC_WECHAT_CLIENT DWC
    WHERE DWC.DTIME_INSERTED BETWEEN TRUNC(SYSDATE-7) AND TRUNC(SYSDATE-1)
    AND SKP_CLIENT>0
    AND DWC.FLAG_SUBSCRIBE='Y'
    GROUP BY DWC.SKP_WECHAT_ACCOUNT
    HAVING COUNT(DISTINCT SKP_CLIENT)>=3
)
,WECHAT_ACCOUNT AS 
(
    SELECT B.SKP_WECHAT_ACCOUNT,DWC.SKP_CLIENT,DWC.DTIME_INSERTED AS DTIME_BIND_WECHAT,CWC.NAME_CHANNEL
    FROM BASE B
    JOIN OWNER_DWH.DC_WECHAT_CLIENT DWC ON B.SKP_WECHAT_ACCOUNT=DWC.SKP_WECHAT_ACCOUNT
    JOIN OWNER_DWH.CL_WECHAT_CHANNEL CWC ON DWC.SKP_WECHAT_CHANNEL=CWC.SKP_WECHAT_CHANNEL
)
,TOTAL AS 
(
    SELECT WA.*,DCRA.SKP_CREDIT_CASE,DCRA.TEXT_CONTRACT_NUMBER,DCRA.DATE_DECISION , DCRA.DTIME_DECISION,AD.text_username_employee_sales,AD.name_last_sales
    ,AD.text_mobile_client
    FROM OWNER_DWH.DC_CREDIT_CASE DCRA
    JOIN WECHAT_ACCOUNT WA
      ON DCRA.SKP_CLIENT=WA.SKP_CLIENT
     AND DCRA.DATE_DECISION=TRUNC(WA.DTIME_BIND_WECHAT)--Follow the wechat on the decision date
     AND DCRA.DATE_DECISION BETWEEN TRUNC(SYSDATE-7) AND TRUNC(SYSDATE-1)
    JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD
      ON DCRA.SKP_CREDIT_CASE =AD.SKP_CREDIT_CASE 
     AND DCRA.SKP_CREDIT_TYPE =AD.SKP_CREDIT_TYPE 
     AND DCRA.DATE_DECISION =AD .DATE_DECISION 
     AND AD.TEXT_USERNAME_EMPLOYEE_SALES NOT IN('homer_o2o','capp','XNA','ralph')
)
,ACCOUNTS AS 
(--Eash SA and account bind >=6 clients each week  
    SELECT 
    TEXT_USERNAME_EMPLOYEE_SALES,NAME_LAST_SALES,SKP_WECHAT_ACCOUNT
    ,COUNT(DISTINCT SKP_CLIENT) AS CNT_CLIENT
    FROM TOTAL
    GROUP BY 
    TEXT_USERNAME_EMPLOYEE_SALES,NAME_LAST_SALES,SKP_WECHAT_ACCOUNT
    HAVING COUNT(DISTINCT SKP_CLIENT)>=3
)
,WECHAT_ACCOUNT_GROUP AS 
(
    SELECT SKP_WECHAT_ACCOUNT,ROWNUM AS WECHAT_ACCOUNT_GROUP 
    FROM 
        (
        SELECT  DISTINCT SKP_WECHAT_ACCOUNT
        FROM ACCOUNTS
        )
)
,FINAL_ AS 
(
    SELECT A.TEXT_USERNAME_EMPLOYEE_SALES,A.NAME_LAST_SALES,A.SKP_WECHAT_ACCOUNT,WAG.WECHAT_ACCOUNT_GROUP,A.CNT_CLIENT
    ,T.SKP_CREDIT_CASE ,T.TEXT_CONTRACT_NUMBER , T.DATE_DECISION ,T.SKP_CLIENT,T.TEXT_MOBILE_CLIENT,T.DTIME_BIND_WECHAT,T.NAME_CHANNEL
    FROM TOTAL T
    JOIN ACCOUNTS A
      ON T.TEXT_USERNAME_EMPLOYEE_SALES=A.TEXT_USERNAME_EMPLOYEE_SALES
     AND T.SKP_WECHAT_ACCOUNT=A.SKP_WECHAT_ACCOUNT
    JOIN WECHAT_ACCOUNT_GROUP WAG
      ON A.SKP_WECHAT_ACCOUNT=WAG.SKP_WECHAT_ACCOUNT
)
SELECT 'SA' AS UNIT
,TEXT_USERNAME_EMPLOYEE_SALES AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD')AS WEEK_DETECT
,'519' AS CLASS
,'Fake wechat binding' AS TRIGGER_SOURCE
,'WECHAT_ACCOUNT_GROUP:'||WECHAT_ACCOUNT_GROUP||
',SKP_WECHAT_ACCOUNT:'||SKP_WECHAT_ACCOUNT||
',Number of clients binding with this wechat:'||CNT_CLIENT||
',DTIME_BIND_WECHAT:'||TO_CHAR(DTIME_BIND_WECHAT,'YYYY/MM/DD HH24:MI:SS')||
',BIND_CHANNEL:'||NAME_CHANNEL
AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM FINAL_;
COMMIT; 
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;

--new trigger 20181025 lina
PROCEDURE TRIGGER_525_SA_DO_ORBP IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name: length       
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_525_SA';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP:525_SA_DO_ORBP';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL); 
  
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT 'ORBP OTHER SA',SYSDATE FROM DUAL;
COMMIT;

-------DAILY SETTING 2: SAs do ORBP with other SA's phone number
INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH BASE AS --DAILY 20181112
(
    SELECT AA.DTIME_SCORING,AA.SKP_CLIENT,DC.NAME_LAST AS CLIENT_NAME,DC.TEXT_IDENTIFICATION AS CLIENT_IDENT
    ,AA.TEXT_PHONE_NUMBER AS ORBP_PHONE
    ,DE.TEXT_USERNAME_EMPLOYEE AS SA_ID_ORBP,DE.NAME_LAST AS SA_NAME_ORBP,DE.TEXT_CELLPHONE AS PHONE_ORBP_SA,DE.TEXT_IDENT_NUMBER AS SA_IDENT_ORBP
    ,EE.TEXT_USERNAME_EMPLOYEE AS SA_ID_PHONE_BELONG,EE.NAME_LAST AS SA_NAME_PHONE_BELONG,EE.TEXT_IDENT_NUMBER AS SA_IDENT_PHONE_BELONG
    FROM OWNER_DWH.F_CAMP_ACC_SOFFER_DETAIL_TT AA
    JOIN OWNER_DWH.DC_CLIENT DC
      ON AA.SKP_CLIENT=DC.SKP_CLIENT
    JOIN OWNER_DWH.dc_employee DE--orbp sa
      ON AA.SKP_EMPLOYEE_MODIFIED=DE.SKP_EMPLOYEE
    JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX  ON EX.CLASS=525
    LEFT JOIN OWNER_DWH.Dc_Employee EE --phone sa
      ON AA.TEXT_PHONE_NUMBER=EE.TEXT_CELLPHONE
     AND AA.SKP_EMPLOYEE_MODIFIED<>EE.SKP_EMPLOYEE--ORBP SA <> PHONE SA---------
     AND SUBSTR(DE.TEXT_IDENT_NUMBER,4)<>SUBSTR(EE.TEXT_IDENT_NUMBER,4) --ORBP SA IDCARD<>PHONE SA IDCARD---------------
    LEFT JOIN OWNER_DWH.DC_HR_EMPLOYEE DHE 
      ON EE.TEXT_IDENT_NUMBER=DHE.TEXT_IDENT_NUMBER
    WHERE DTIME_SCORING>=SYSDATE-30--10
    AND DTIME_SCORING>= EX.MAX_DETECT
    AND NOT EXISTS
    (SELECT * FROM OWNER_DWH.Dc_Employee DCE WHERE SUBSTR(DCE.TEXT_IDENT_NUMBER,4)=SUBSTR(DC.TEXT_IDENTIFICATION,4))--20181031
    AND DE.TEXT_USERNAME_EMPLOYEE<>'homer'
)
,DAILY_CNT_CLIENT AS 
(
  SELECT B.*,NN.CNT_CLIENT FROM BASE B
  JOIN (
        SELECT SA_ID_ORBP,ORBP_PHONE,COUNT(DISTINCT SKP_CLIENT) AS CNT_CLIENT 
        FROM BASE
        WHERE SA_ID_PHONE_BELONG IS NOT NULL
        GROUP BY SA_ID_ORBP,ORBP_PHONE
        )NN
    ON B.SA_ID_ORBP=NN.SA_ID_ORBP
   AND B.ORBP_PHONE=NN.ORBP_PHONE
   AND B.SA_ID_PHONE_BELONG IS NOT NULL
)
,NEW_CON AS 
(
    SELECT * FROM 
    (
        SELECT NN.* 
        ,CASE WHEN SKP_CREDIT_CASE IS NOT NULL AND RANK=1 THEN 1
              WHEN SKP_CREDIT_CASE IS NULL THEN 1 
                END AS RANK_2
        FROM 
        (
            SELECT DISTINCT G.*,DCRA.SKP_CREDIT_CASE ,DCRA.TEXT_CONTRACT_NUMBER
            ,AD.text_username_employee_sales AS SA_ID,AD.name_last_sales AS SA_NAME
            ,ROW_NUMBER()OVER(PARTITION BY DCRA.SKP_CLIENT ORDER BY DCRA.DTIME_DECISION) AS RANK
            FROM DAILY_CNT_CLIENT G
            JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX  ON EX.CLASS=525
            LEFT JOIN OWNER_DWH.DC_CREDIT_CASE DCRA 
              ON DCRA.SKP_CLIENT=G.SKP_CLIENT
             AND DCRA.DTIME_DECISION >G.DTIME_SCORING
             AND DCRA.DATE_DECISION>=SYSDATE-30--10
             AND DCRA.DATE_DECISION>= EX.MAX_DETECT
             AND DCRA.SKP_PRODUCT_CHANNEL IN (1,201)--XCL
            LEFT JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD 
              ON DCRA.SKP_CREDIT_CASE =AD.SKP_CREDIT_CASE 
             AND DCRA.SKP_CREDIT_TYPE =AD.SKP_CREDIT_TYPE 
             AND DCRA.DATE_DECISION =AD.DATE_DECISION 
             AND AD.DATE_DECISION>=SYSDATE-30--10
        )NN 
    )WHERE RANK_2=1
)
,LAST_LOAN AS 
(
    SELECT aa.* FROM 
    (
        SELECT DISTINCT SA_ID_ORBP,SA_NAME_ORBP, ORBP_PHONE,SA_ID_PHONE_BELONG,SA_NAME_PHONE_BELONG
        ,CNT_CLIENT,DTIME_SCORING,O.SKP_CLIENT
        ,CASE WHEN O.SKP_CREDIT_CASE IS NOT NULL THEN '是' ELSE '否' END AS FLAG_APPLY_AFTER_ORBP
        ,CASE WHEN O.SKP_CREDIT_CASE IS NOT NULL AND SA_ID_ORBP=SA_ID THEN '相同'
              WHEN O.SKP_CREDIT_CASE IS NOT NULL AND SA_ID_ORBP<>SA_ID THEN '不同' END AS IF_SAMESA_APPLY_ORBP
        ,O.SKP_CREDIT_CASE ,O.TEXT_CONTRACT_NUMBER,O.SA_ID,O.SA_NAME
        ,DCRA.SKP_CREDIT_CASE AS SKP_CREDIT_CASE_LAST,DCRA.TEXT_CONTRACT_NUMBER AS TEXT_CONTRACT_NUMBER_LAST
        ,ROW_NUMBER()OVER(PARTITION BY DCRA.SKP_CLIENT ORDER BY DCRA.DTIME_DECISION DESC) AS RNK 
        FROM NEW_CON O
        JOIN OWNER_DWH.DC_CREDIT_CASE DCRA 
          ON O.SKP_CLIENT=DCRA.SKP_CLIENT      
         AND DCRA.DTIME_DECISION<O.DTIME_SCORING
        WHERE DCRA.DATE_DECISION>=DATE'2015-01-01'    
      )aa JOIN DM_ANTIFRAUD.f_Af_Credit_Case_Ad facc 
            ON facc.skp_credit_case=nvl(aa.SKP_CREDIT_CASE,SKP_CREDIT_CASE_LAST) 
            AND facc.text_mobile_client!=ORBP_PHONE  ---20190812 client phone!=orbp phone to exclude client use the phne number
       WHERE RNK=1
)
SELECT 'SA' AS UNIT
/*,CASE WHEN SKP_CREDIT_CASE IS NOT NULL THEN SA_ID
      WHEN SKP_CREDIT_CASE IS NULL THEN SA_ID_LAST
        END AS ID_ENTITY--CON SA*/
,SA_ID_ORBP AS ID_ENTITY--ORBP SA
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'525' AS CLASS
,'SAs do ORBP with other SAs’ phone number' AS TRIGGER_SOURCE
,'类型: '|| 'SA使用其他SA的手机号码为客户做现金贷在线测评; '-----------------------
         ||'SA_ID: '||SA_ID_ORBP ||SA_NAME_ORBP||'使用'
         ||'SA_ID: '||SA_ID_PHONE_BELONG||SA_NAME_PHONE_BELONG||'的手机号码: '
         ||ORBP_PHONE||'为'||CNT_CLIENT||'个客户做现金贷在线测评; '
         ||'为该客户做在线测评时间: '||TO_CHAR(DTIME_SCORING,'YYYY-MM-DD HH24:MI:SS')||'; '
         ||'测评之后客户是否有申请现金贷: '||FLAG_APPLY_AFTER_ORBP||'; '
         ||'测评之后帮助客户申请现金贷的SA与做在线测评的SA是否为同一人: '||IF_SAMESA_APPLY_ORBP||'; '
         AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,CASE WHEN SKP_CREDIT_CASE IS NOT NULL THEN SKP_CREDIT_CASE ELSE SKP_CREDIT_CASE_LAST END AS SKP_CREDIT_CASE 
,CASE WHEN TEXT_CONTRACT_NUMBER IS NOT NULL THEN TEXT_CONTRACT_NUMBER ELSE TEXT_CONTRACT_NUMBER_LAST END AS TEXT_CONTRACT_NUMBER 
FROM LAST_LOAN;
COMMIT;

-------stop for sa_table 20190308

INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT 'ORBP SA PHONE',SYSDATE FROM DUAL;
COMMIT;

--create new table 20190313
EXECUTE IMMEDIATE 'TRUNCATE TABLE AP_ANTIFRAUD.TRIGGER_525_SA_RELATIVE';

INSERT  /*+ append*/ INTO AP_ANTIFRAUD.TRIGGER_525_SA_RELATIVE 
SELECT DISTINCT IDENT AS IDCARD,PHONE
,CASE WHEN PHONE_TYPE LIKE 'EMERGENCY%' THEN 'EMERGENCY'
      WHEN PHONE_TYPE LIKE 'FATHER%' THEN 'FATHER'
      WHEN PHONE_TYPE LIKE 'HUSBAND%' THEN 'HUSBAND'
      WHEN PHONE_TYPE LIKE 'MOTHER%' THEN 'MOTHER'
      WHEN PHONE_TYPE LIKE 'OTHER%' THEN 'OTHER'
      WHEN PHONE_TYPE LIKE 'OWNER%' THEN 'OWNER'
      WHEN PHONE_TYPE LIKE 'POSOWNER%' THEN 'POSOWNER'
      WHEN PHONE_TYPE LIKE 'WIFE%' THEN 'WIFE'
        END AS PHONE_TYPE
FROM AP_ANTIFRAUD.F_SA_PHONE
WHERE FLAG_HIT=1 AND PHONE_TYPE NOT LIKE '%EX_EMPLOYER%';--exclude exemp 20191127;
COMMIT;

     -----SETTING 1: SAs do ORBP with their own OR relatives phone number
    INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
    WITH BASE AS 
    (
      SELECT DTIME_SCORING,SKP_CLIENT,CLIENT_NAME,CLIENT_IDENT,ORBP_PHONE,SA_ID_ORBP,SA_NAME_ORBP,PHONE_ORBP_SA 
        ,CASE WHEN ORBP_PHONE=PHONE_ORBP_SA THEN 'SA_OWN_PHONE' 
              WHEN ORBP_PHONE<>PHONE_ORBP_SA AND (RELATIVE_PHONE_TYPE='OWNER' OR RELATIVE_PHONE_TYPE IS NULL) THEN 'SA_OWN_PHONE' 
              WHEN ORBP_PHONE<>PHONE_ORBP_SA AND RELATIVE_PHONE IS NOT NULL THEN 'SA_RELATIVE_PHONE'
                END AS ORBP_TYPE
      FROM 
      (
            SELECT AA.DTIME_SCORING,AA.SKP_CLIENT,DC.NAME_LAST AS CLIENT_NAME,DC.TEXT_IDENTIFICATION AS CLIENT_IDENT
            ,AA.TEXT_PHONE_NUMBER AS ORBP_PHONE
            ,DE.TEXT_USERNAME_EMPLOYEE AS SA_ID_ORBP,DE.NAME_LAST AS SA_NAME_ORBP,DE.TEXT_CELLPHONE AS PHONE_ORBP_SA
            ,SR.PHONE AS RELATIVE_PHONE,SR.PHONE_TYPE AS RELATIVE_PHONE_TYPE
            FROM OWNER_DWH.F_CAMP_ACC_SOFFER_DETAIL_TT AA
            JOIN OWNER_DWH.DC_CLIENT DC ON AA.SKP_CLIENT=DC.SKP_CLIENT
            JOIN OWNER_DWH.dc_employee DE--orbp sa
              ON AA.SKP_EMPLOYEE_MODIFIED=DE.SKP_EMPLOYEE 
              AND SUBSTR(DC.TEXT_IDENT_CARD_NUMBER,4)<>SUBSTR(DE.TEXT_IDENT_NUMBER,4) -------20181127 Exclude SAs do ORBP for themselves
            LEFT JOIN AP_ANTIFRAUD.TRIGGER_525_SA_RELATIVE SR ON DE.TEXT_IDENT_NUMBER=SR.IDCARD
             AND AA.TEXT_PHONE_NUMBER=SR.PHONE
/*            JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX  ON EX.CLASS=525
             AND DTIME_SCORING>= EX.MAX_DETECT*/
            WHERE DTIME_SCORING>=TRUNC(SYSDATE-7)
            AND DE.TEXT_USERNAME_EMPLOYEE<>'homer'
        )WW
      WHERE (ORBP_PHONE=PHONE_ORBP_SA OR RELATIVE_PHONE IS NOT NULL)
      --20181213
      AND SKP_CLIENT NOT IN (SELECT SKP_CLIENT FROM OWNER_DWH.DC_CREDIT_CASE DCRA WHERE TRUNC(WW.DTIME_SCORING)=DCRA.DATE_DECISION AND WW.SKP_CLIENT=DCRA.SKP_CLIENT )
      --EXCLUDE CLIENTS WHO APPLIED LOANS ON ORBP DATE
    )
    ,CNT_CLIENT AS 
    (
      SELECT B.*,CC.CNT_CLIENT FROM BASE B
      JOIN ( 
            SELECT SA_ID_ORBP,ORBP_PHONE,COUNT(DISTINCT SKP_CLIENT) AS CNT_CLIENT 
            FROM BASE
            GROUP BY SA_ID_ORBP,ORBP_PHONE
            )CC
         ON B.SA_ID_ORBP=CC.SA_ID_ORBP
        AND B.ORBP_PHONE=CC.ORBP_PHONE
    )
    ,NEW_CON AS 
    (
        SELECT * FROM 
        (
            SELECT NN.* 
            ,CASE WHEN SKP_CREDIT_CASE IS NOT NULL AND RANK=1 THEN 1
                  WHEN SKP_CREDIT_CASE IS NULL THEN 1 
                    END AS RANK_2
            FROM 
            (
                SELECT DISTINCT G.*,DCRA.SKP_CREDIT_CASE ,DCRA.TEXT_CONTRACT_NUMBER
                ,AD.text_username_employee_sales AS SA_ID,AD.name_last_sales AS SA_NAME
                ,ROW_NUMBER()OVER(PARTITION BY DCRA.SKP_CLIENT ORDER BY DCRA.DTIME_DECISION) AS RANK
                FROM CNT_CLIENT G
                --JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX  ON EX.CLASS=525
                LEFT JOIN OWNER_DWH.DC_CREDIT_CASE DCRA 
                  ON DCRA.SKP_CLIENT=G.SKP_CLIENT
                 AND DCRA.DTIME_DECISION >G.DTIME_SCORING
                 AND DCRA.DATE_DECISION>=TRUNC(SYSDATE-7)
               --  AND DCRA.DATE_DECISION>= EX.MAX_DETECT
                 AND DCRA.SKP_PRODUCT_CHANNEL IN (1,201)--XCL
                LEFT JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD 
                  ON DCRA.SKP_CREDIT_CASE =AD.SKP_CREDIT_CASE 
                 AND DCRA.SKP_CREDIT_TYPE =AD.SKP_CREDIT_TYPE 
                 AND DCRA.DATE_DECISION =AD.DATE_DECISION 
                 AND AD.DATE_DECISION>=TRUNC(SYSDATE-7)
            )NN 
        )WHERE RANK_2=1
    )
    ,LAST_LOAN AS 
    (
            SELECT LL.* FROM 
            (
                  SELECT * FROM 
                  (
                      SELECT DISTINCT SA_ID_ORBP,SA_NAME_ORBP, ORBP_PHONE,CNT_CLIENT,DTIME_SCORING,O.SKP_CLIENT,ORBP_TYPE
                      ,CASE WHEN O.SKP_CREDIT_CASE IS NOT NULL THEN '是' ELSE '否' END AS FLAG_APPLY_AFTER_ORBP
                      ,CASE WHEN O.SKP_CREDIT_CASE IS NOT NULL AND SA_ID_ORBP=SA_ID THEN '相同'
                        WHEN O.SKP_CREDIT_CASE IS NOT NULL AND SA_ID_ORBP<>SA_ID THEN '不同' END AS IF_SAMESA_APPLY_ORBP
                      ,O.SKP_CREDIT_CASE ,O.TEXT_CONTRACT_NUMBER,O.SA_ID,O.SA_NAME
                      ,DCRA.SKP_CREDIT_CASE AS SKP_CREDIT_CASE_LAST,DCRA.TEXT_CONTRACT_NUMBER AS TEXT_CONTRACT_NUMBER_LAST,DCRA.DATE_DECISION AS DATE_DECISION_LAST
                      ,ROW_NUMBER()OVER(PARTITION BY DCRA.SKP_CLIENT ORDER BY DCRA.DTIME_DECISION DESC) AS RNK 
                      FROM NEW_CON O
                      JOIN OWNER_DWH.DC_CREDIT_CASE DCRA 
                      ON O.SKP_CLIENT=DCRA.SKP_CLIENT      
                      AND DCRA.DTIME_DECISION<O.DTIME_SCORING    
                      WHERE DCRA.DATE_DECISION>=DATE'2015-01-01'    
                  ) 
                  WHERE RNK=1 
            )LL
            JOIN DM_ANTIFRAUD.FT_AF_CREDIT_CASE_AD AD--exclude relative is our client on 20181205
            ON LL.SKP_CREDIT_CASE_LAST =AD.SKP_CREDIT_CASE 
            AND LL.DATE_DECISION_LAST =AD.DATE_DECISION 
            AND AD.DATE_DECISION  >=DATE'2015-01-01' 
            AND AD.text_mobile_client<>ORBP_PHONE 
    )
    SELECT 'SA' AS UNIT
    /*,CASE WHEN SKP_CREDIT_CASE IS NOT NULL THEN SA_ID
          WHEN SKP_CREDIT_CASE IS NULL THEN SA_ID_LAST
            END AS ID_ENTITY--CON SA*/
    ,SA_ID_ORBP AS ID_ENTITY--ORBP SA
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'525' AS CLASS
    ,'SAs do ORBP with their own OR relatives phone number' AS TRIGGER_SOURCE
    ,'类型: '|| 'SA使用自己的或亲戚的手机号码为客户做现金贷在线测评; '
             ||'SA_ID: '||SA_ID_ORBP ||SA_NAME_ORBP||'使用'
             ||CASE WHEN ORBP_TYPE='SA_OWN_PHONE' THEN '自己的手机号码: '
                    WHEN ORBP_TYPE='SA_RELATIVE_PHONE' THEN '亲戚的手机号码: '
                     END
             ||ORBP_PHONE||'为'||CNT_CLIENT||'个客户做现金贷在线测评; '
             ||'为该客户做在线测评时间: '||TO_CHAR(DTIME_SCORING,'YYYY-MM-DD HH24:MI:SS')||'; '
             ||'测评之后客户是否有申请现金贷: '||FLAG_APPLY_AFTER_ORBP||'; '
             ||'测评之后帮助客户申请现金贷的SA与做在线测评的SA是否为同一人: '||IF_SAMESA_APPLY_ORBP||'; '
             AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,CASE WHEN SKP_CREDIT_CASE IS NOT NULL THEN SKP_CREDIT_CASE ELSE SKP_CREDIT_CASE_LAST END AS SKP_CREDIT_CASE 
    ,CASE WHEN TEXT_CONTRACT_NUMBER IS NOT NULL THEN TEXT_CONTRACT_NUMBER ELSE TEXT_CONTRACT_NUMBER_LAST END AS TEXT_CONTRACT_NUMBER 
    FROM LAST_LOAN;
    COMMIT;


    -----------------SETTING 3: SAs do ORBP with unknown phone number (ADD ORBP SA PHONE 20181112)    
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT 'ORBP SA UNKNOWN PHONE',SYSDATE FROM DUAL;
COMMIT;

    INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
   WITH BASE AS --WEEKLY
    (
        SELECT AA.DTIME_SCORING,AA.SKP_CLIENT,DC.NAME_LAST AS CLIENT_NAME,DC.TEXT_IDENTIFICATION AS CLIENT_IDENT
        ,AA.TEXT_PHONE_NUMBER AS ORBP_PHONE
        ,DE.TEXT_USERNAME_EMPLOYEE AS SA_ID_ORBP,DE.NAME_LAST AS SA_NAME_ORBP,DE.TEXT_CELLPHONE AS PHONE_ORBP_SA,DE.TEXT_IDENT_NUMBER AS SA_IDENT_ORBP
        ,EE.TEXT_USERNAME_EMPLOYEE AS SA_ID_PHONE_BELONG,EE.NAME_LAST AS SA_NAME_PHONE_BELONG,DHE.TEXT_IDENT_NUMBER AS SA_IDENT_PHONE_BELONG
        FROM OWNER_DWH.F_CAMP_ACC_SOFFER_DETAIL_TT AA
        JOIN OWNER_DWH.DC_CLIENT DC
          ON AA.SKP_CLIENT=DC.SKP_CLIENT
        JOIN OWNER_DWH.dc_employee DE--orbp sa
          ON AA.SKP_EMPLOYEE_MODIFIED=DE.SKP_EMPLOYEE
        LEFT JOIN OWNER_DWH.Dc_Employee EE --phone sa
          ON AA.TEXT_PHONE_NUMBER=EE.TEXT_CELLPHONE
        LEFT JOIN OWNER_DWH.DC_HR_EMPLOYEE DHE 
          ON EE.TEXT_IDENT_NUMBER=DHE.TEXT_IDENT_NUMBER
        --JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX  ON EX.CLASS=525
          --AND DTIME_SCORING>= EX.MAX_DETECT
        WHERE DTIME_SCORING>=TRUNC(SYSDATE-30)----20200330 ellen
        AND NOT EXISTS
        (SELECT * FROM OWNER_DWH.Dc_Employee DCE WHERE SUBSTR(DCE.TEXT_IDENT_NUMBER,4)=SUBSTR(DC.TEXT_IDENTIFICATION,4))--20181031
        AND NOT EXISTS 
        (SELECT 1 FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS TRI WHERE TRI.TEXT_USERNAME_EMPLOYEE_SALES=DE.TEXT_USERNAME_EMPLOYEE AND TRI.SKP_CLIENT=AA.SKP_CLIENT AND TRI.CLASS='525'AND TRI.DATE_DETECT>=SYSDATE-90 )
        AND DE.TEXT_USERNAME_EMPLOYEE<>'homer'
        AND DC.NAME_FULL NOT LIKE '%捷信%'
    )
    ,HIT_RELATIVE AS 
    (
       SELECT B.*,SR.PHONE,SR.PHONE_TYPE 
       FROM BASE B
       LEFT JOIN AP_ANTIFRAUD.TRIGGER_525_SA_RELATIVE SR
         ON B.SA_IDENT_ORBP=SR.IDCARD
        AND B.ORBP_PHONE=SR.PHONE
    )
    ,WEEKLY_GROUP AS 
    (
        SELECT 'UNKNOWN_PHONE' AS SA_GROUP,HR.*
        FROM HIT_RELATIVE HR
        WHERE ORBP_PHONE<>PHONE_ORBP_SA 
        AND SA_ID_PHONE_BELONG IS NULL
        AND PHONE IS NULL
      --  AND DTIME_SCORING>=TRUNC(SYSDATE-7)
    )
    ,WEEKLY_UNKNOWN AS 
    (
        SELECT SA_ID_ORBP,ORBP_PHONE,COUNT(DISTINCT SKP_CLIENT) AS CNT_CLIENT 
        FROM WEEKLY_GROUP
        GROUP BY SA_ID_ORBP,ORBP_PHONE
        HAVING COUNT(DISTINCT SKP_CLIENT)>2
    )
    ,UNKNOWN AS 
    (
        SELECT WG.*,WU.CNT_CLIENT 
        FROM WEEKLY_GROUP WG
        JOIN WEEKLY_UNKNOWN WU
          ON WU.SA_ID_ORBP=WG.SA_ID_ORBP
         AND WU.ORBP_PHONE=WG.ORBP_PHONE
    )
    ,NEW_CON AS 
    (
        SELECT * FROM 
        (
            SELECT NN.* 
            ,CASE WHEN SKP_CREDIT_CASE IS NOT NULL AND RANK=1 THEN 1
                  WHEN SKP_CREDIT_CASE IS NULL THEN 1 
                    END AS RANK_2
            FROM 
            (
                SELECT DISTINCT G.*,DCRA.SKP_CREDIT_CASE ,DCRA.TEXT_CONTRACT_NUMBER
                ,AD.text_username_employee_sales AS SA_ID,AD.name_last_sales AS SA_NAME
                ,ROW_NUMBER()OVER(PARTITION BY DCRA.SKP_CLIENT ORDER BY DCRA.DTIME_DECISION) AS RANK
                FROM UNKNOWN G
                --JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX  ON EX.CLASS=525
                LEFT JOIN OWNER_DWH.DC_CREDIT_CASE DCRA 
                  ON DCRA.SKP_CLIENT=G.SKP_CLIENT
                 AND DCRA.DTIME_DECISION >G.DTIME_SCORING
                 AND DCRA.DATE_DECISION>=TRUNC(SYSDATE-30)
                    --AND DCRA.DATE_DECISION>= EX.MAX_DETECT
                 AND DCRA.SKP_PRODUCT_CHANNEL IN (1,201)--XCL
                LEFT JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD 
                  ON DCRA.SKP_CREDIT_CASE =AD.SKP_CREDIT_CASE 
                 AND DCRA.SKP_CREDIT_TYPE =AD.SKP_CREDIT_TYPE 
                 AND DCRA.DATE_DECISION =AD.DATE_DECISION 
                 AND AD.date_decision>=TRUNC(SYSDATE-30)
            )NN 
        )WHERE RANK_2=1
    )
 ,LOANS AS 
    (
        SELECT * FROM 
        (
            SELECT DISTINCT SA_GROUP,SA_ID_ORBP,SA_NAME_ORBP, ORBP_PHONE,PHONE_ORBP_SA,SA_ID_PHONE_BELONG,SA_NAME_PHONE_BELONG--------
            ,CNT_CLIENT,DTIME_SCORING,O.SKP_CLIENT
            ,CASE WHEN O.SKP_CREDIT_CASE IS NOT NULL THEN '是' ELSE '否' END AS FLAG_APPLY_AFTER_ORBP
            ,CASE WHEN O.SKP_CREDIT_CASE IS NOT NULL AND SA_ID_ORBP=SA_ID THEN '相同'
                  WHEN O.SKP_CREDIT_CASE IS NOT NULL AND SA_ID_ORBP<>SA_ID THEN '不同' END AS IF_SAMESA_APPLY_ORBP
            ,O.SKP_CREDIT_CASE ,O.TEXT_CONTRACT_NUMBER,O.SA_ID,O.SA_NAME
            ,DCRA.SKP_CREDIT_CASE AS SKP_CREDIT_CASE_LAST,DCRA.TEXT_CONTRACT_NUMBER AS TEXT_CONTRACT_NUMBER_LAST,DCRA.dtime_decision AS DTIME_DECISION_LAST
          --  ,AD.text_username_employee_sales AS SA_ID_LAST,AD.name_last_sales AS SA_NAME_LAST
            ,DC.NAME_FULL
            ,ROW_NUMBER()OVER(PARTITION BY DCRA.SKP_CLIENT ORDER BY DCRA.DTIME_DECISION DESC) AS RNK 
            FROM NEW_CON O
            JOIN OWNER_DWH.DC_CREDIT_CASE DCRA 
              ON O.SKP_CLIENT=DCRA.SKP_CLIENT AND DCRA.skp_credit_type!=4--20200421 exclude last HCP contract        
             AND DCRA.DTIME_DECISION<O.DTIME_SCORING
            JOIN OWNER_DWH.DC_CLIENT DC
              ON DCRA.SKP_CLIENT=DC.SKP_CLIENT
         --  WHERE DCRA.DATE_DECISION>=DATE'2015-01-01'           
          ) WHERE RNK=1
    )
/*    ,LAST_LOAN AS --20190326
    (
        SELECT  LL.*,ROW_NUMBER()OVER(PARTITION BY LL.SA_ID_ORBP ORDER BY LL.DTIME_DECISION_LAST) AS PL_RANK
        FROM LOANS LL
    )
    ,SA_TYPE_APPLY AS
    (
        SELECT SA_ID_ORBP,SA_NAME_ORBP,ORBP_PHONE,CNT_CLIENT,SKP_CLIENT,NAME_FULL,DTIME_SCORING,SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER,IF_SAMESA_APPLY_ORBP 
        ,'APPLY' AS SA_TYPE 
        FROM LAST_LOAN LL
        WHERE SA_ID_ORBP IN ( SELECT SA_ID_ORBP FROM LAST_LOAN LL WHERE SKP_CREDIT_CASE IS NOT NULL )
    )
    ,SA_APPLY AS (
        SELECT LISTA.SA_ID_ORBP,LISTA.SA_NAME_ORBP,LISTA.ORBP_PHONE,LISTA.CNT_CLIENT 
        ,Listagg( VALUE_DETAIL,'| ') WITHIN GROUP(ORDER BY LISTA.dtime_scoring) AS DETAIL
        ,STA.SKP_CREDIT_CASE ,STA.TEXT_CONTRACT_NUMBER ,'APPLY' AS SA_TYPE
        FROM 
           (
                SELECT DISTINCT SA_ID_ORBP,SA_NAME_ORBP,ORBP_PHONE,CNT_CLIENT,SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER,DTIME_SCORING,
                NAME_FULL
                ||CASE WHEN SKP_CREDIT_CASE IS NOT NULL THEN ' ,合同号: '||TEXT_CONTRACT_NUMBER END
                ||' ,线测评时间: '||TO_CHAR(DTIME_SCORING,'YYYY-MM-DD HH24')||'; '
                ||CASE WHEN SKP_CREDIT_CASE IS NOT NULL AND IF_SAMESA_APPLY_ORBP='相同' THEN '测评与申请为同一SA; '
                       WHEN SKP_CREDIT_CASE IS NOT NULL AND IF_SAMESA_APPLY_ORBP='不同' THEN '测评与申请为不同SA; ' END
                AS VALUE_DETAIL
                FROM SA_TYPE_APPLY STA
            )LISTA
        JOIN SA_TYPE_APPLY STA
          ON LISTA.SA_ID_ORBP=STA.SA_ID_ORBP
         AND STA.SKP_CREDIT_CASE IS NOT NULL
        GROUP BY LISTA.SA_ID_ORBP,LISTA.SA_NAME_ORBP,LISTA.ORBP_PHONE,LISTA.CNT_CLIENT,STA.SKP_CREDIT_CASE ,STA.TEXT_CONTRACT_NUMBER
    )
    ,SA_TYPE_NOTAPPLY AS (
        SELECT SA_ID_ORBP,SA_NAME_ORBP,ORBP_PHONE,CNT_CLIENT,SKP_CLIENT,NAME_FULL,DTIME_SCORING,SKP_CREDIT_CASE_LAST,TEXT_CONTRACT_NUMBER_LAST,PL_RANK 
        FROM LAST_LOAN LL
        WHERE SA_ID_ORBP NOT IN (SELECT SA_ID_ORBP FROM SA_TYPE_APPLY)
        AND PL_RANK<=5
    )
    ,SA_NOT_APPLY AS (
        SELECT STN.SA_ID_ORBP,STN.SA_NAME_ORBP,STN.ORBP_PHONE,STN.CNT_CLIENT,STN.SKP_CLIENT,STN.NAME_FULL,STN.DTIME_SCORING
        ,STN.NAME_FULL
        ||' ,测评时间: '||TO_CHAR(STN.DTIME_SCORING,'YYYY-MM-DD HH24')||'; ' AS VALUE_DETAIL
        ,STN1.SKP_CREDIT_CASE_LAST AS SKP_CREDIT_CASE_PL,STN1.TEXT_CONTRACT_NUMBER_LAST AS TEXT_CONTRACT_NUMBER_PL,'NOT APPLY' AS SA_TYPE
        FROM SA_TYPE_NOTAPPLY STN
        JOIN SA_TYPE_NOTAPPLY STN1
          ON STN.SA_ID_ORBP=STN1.SA_ID_ORBP
         AND STN1.PL_RANK=1
    )
    ,SA_NOAPPLY AS (
        SELECT SA_ID_ORBP,SA_NAME_ORBP,ORBP_PHONE,CNT_CLIENT,Listagg( VALUE_DETAIL,'| ') WITHIN GROUP(ORDER BY dtime_scoring) AS DETAIL
        ,SKP_CREDIT_CASE_PL AS SKP_CREDIT_CASE ,TEXT_CONTRACT_NUMBER_PL AS TEXT_CONTRACT_NUMBER ,SA_TYPE
        FROM SA_NOT_APPLY
        GROUP BY SA_ID_ORBP,SA_NAME_ORBP,ORBP_PHONE,CNT_CLIENT,SKP_CREDIT_CASE_PL,TEXT_CONTRACT_NUMBER_PL,SA_TYPE
    )
    ,ALL_CON AS 
    (
        SELECT * FROM SA_APPLY SA
        UNION
        SELECT * FROM SA_NOAPPLY SNA
    )*/

----change to one client one row 20200330 ellen----
,total as (    
    SELECT SA_ID_ORBP
     ,SA_NAME_ORBP
     ,ORBP_PHONE
     ,CNT_CLIENT
     ,NAME_FULL
                ||CASE WHEN SKP_CREDIT_CASE IS NOT NULL THEN ' ,合同号: '||TEXT_CONTRACT_NUMBER END
                ||' ,在线测评时间: '||TO_CHAR(DTIME_SCORING,'YYYY-MM-DD HH24')||'; '
                ||CASE WHEN SKP_CREDIT_CASE IS NOT NULL AND IF_SAMESA_APPLY_ORBP='相同' THEN '测评与申请为同一SA; '
                       WHEN SKP_CREDIT_CASE IS NOT NULL AND IF_SAMESA_APPLY_ORBP='不同' THEN '测评与申请为不同SA; ' END
                AS DETAIL
     ,NVL(SKP_CREDIT_CASE,SKP_CREDIT_CASE_LAST) AS SKP_CREDIT_CASE
     ,NVL(TEXT_CONTRACT_NUMBER,TEXT_CONTRACT_NUMBER_LAST) AS TEXT_CONTRACT_NUMBER 
     FROM LOANS
)     
    SELECT distinct 'SA' AS UNIT
    ,SA_ID_ORBP AS ID_ENTITY--ORBP SA
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'525' AS CLASS
    ,'SAs do ORBP with unknown phone number' AS TRIGGER_SOURCE
    ,'类型: SA使用未知手机号码为客户做现金贷在线测评; SA_ID: '||SA_ID_ORBP ||SA_NAME_ORBP||'使用未知手机号码: '--20200413 update
    ||ORBP_PHONE||'为'||CNT_CLIENT||'个客户做现金贷在线测评; '||DETAIL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,SKP_CREDIT_CASE 
    ,TEXT_CONTRACT_NUMBER 
    FROM total;
    COMMIT;

----------INSERT TO TRIGGER----20181119 ellen--------------
INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_AF_FINAL_TRIGGERS
WITH FINAL_TRIGGER_BASE AS
(
SELECT  /*+  use_hash(facc) */  DISTINCT 
 PRE.ID_ENTITY
,CASE WHEN PRE.ID_ENTITY='XNA' THEN NULL ELSE EE.SKP_EMPLOYEE END AS skp_employee_consultant--20180626
,SUBSTR(PRE.TRIGGER_VALUE,0,INSTR(PRE.TRIGGER_VALUE,';',1,2)) AS TRIGGER_VALUE 
,CASE WHEN PRE.ID_ENTITY='XNA' THEN NULL ELSE EE.NAME_LAST END AS name_last_sales--20180626
,PRE.DATE_DETECT
,PRE.WEEK_DETECT
, CASE WHEN ((FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR PRE.ID_ENTITY IN ('homer_o2o','rpos') OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%' OR FACC.name_product LIKE '%MINI%') AND DSAC.CODE_SALES_AREA IS NOT NULL THEN DSAC.CODE_SALES_AREA ELSE  PRO.CODE_SALES_AREA END  AS REGION--FACC改为PRE 20190514
, CASE WHEN ((FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR PRE.ID_ENTITY IN ('homer_o2o','rpos') OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%' OR FACC.name_product LIKE '%MINI%') AND DSA.CODE_SALES_AREA IS NOT NULL THEN DSA.CODE_SALES_AREA ELSE  CC.CODE_SALES_AREA END AS CODE_SALES_AREA --add rpos 20190827
--,SA_TYPE
--,SA_ACTIVE_DAYS
,TRIGGER_SOURCE
,TRIGGER_TYPE
,SUBSTR(PRE.TRIGGER_VALUE,0,INSTR(PRE.TRIGGER_VALUE,';',1,2)) as ID_GROUP
,MIN(CASE WHEN SUBSTR(ID_ENTITY,1,1) NOT IN ('5','6','D') THEN  '3 XSELL'ELSE '1 POS LOAN'END)
         OVER(PARTITION BY DATE_DETECT,ID_ENTITY, SUBSTR(PRE.TRIGGER_VALUE,0,INSTR(PRE.TRIGGER_VALUE,';',1,2)))AS CASE_CATEGORY

FROM AP_ANTIFRAUD.f_Trcontracts_Preselection PRE
JOIN OWNER_DWH.DC_CREDIT_CASE DCC ON DCC.SKP_CREDIT_CASE=PRE.SKP_CREDIT_CASE AND PRE.DATE_DETECT=TO_CHAR(SYSDATE,'yyyy/mm/dd')and PRE.CLASS='525' 
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC ON dcc.skp_credit_case = facc.skp_credit_case AND FACC.date_decision=DCC.DATE_DECISION AND DCC.skp_credit_type = facc.skp_credit_type 
LEFT JOIN OWNER_DWH.DC_EMPLOYEE EE ON PRE.ID_ENTITY=EE.TEXT_USERNAME_EMPLOYEE AND EE.CODE_EMPLOYEE_STATUS<>'X'
LEFT JOIN OWNER_DWH.DC_SALES_AREA CC ON CC.NAME_SALES_AREA=FACC.name_region AND CC.code_sales_area_status='a' and  CC.skp_sales_area_type=1 
LEFT JOIN OWNER_DWH.DC_SALES_AREA PRO ON CC.SKP_SALES_AREA_SUPERIOR=PRO.SKP_SALES_AREA AND  PRO.CODE_SALES_AREA_STATUS='a' and PRO.SKP_SALES_AREA_TYPE=2 
---SA_ACTIVE_DAYS
--LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON FACC.skp_employee_consultant=sa.skp_employee AND PRE.UNIT='SA'
JOIN OWNER_DWH.f_Application_Client_Tt ACT ON ACT.SKP_CREDIT_CASE=DCC.SKP_CREDIT_CASE AND ACT.SKP_CREDIT_TYPE=DCC.SKP_CREDIT_TYPE AND ACT.SKP_CLIENT_ROLE=14
LEFT JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR ON ADDR.SKP_CREDIT_CASE= DCC.SKP_CREDIT_CASE AND ACT.SKP_APPLICATION_CLIENT=ADDR.SKP_APPLICATION_CLIENT AND ADDR.SKP_ADDRESS_TYPE=2--CURRENT
LEFT JOIN OWNER_DWH.DC_CITY DC ON DC.SKP_CITY=ADDR.SKP_CITY
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSA ON DSA.NAME_SALES_AREA=DC.NAME_CITY AND DSA.code_sales_area_status='a' and  DSA.skp_sales_area_type=1
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSAC ON DSA.SKP_SALES_AREA_SUPERIOR=DSAC.SKP_SALES_AREA AND  DSAC.CODE_SALES_AREA_STATUS='a' and DSAC.SKP_SALES_AREA_TYPE=2 

)
,PROVINCE AS 
(
SELECT DISTINCT ID_GROUP
,LISTAGG(REGION,'、' )WITHIN GROUP(ORDER BY REGION) OVER(PARTITION BY ID_GROUP) AS PROVINCE
FROM (SELECT DISTINCT ID_GROUP,REGION FROM FINAL_TRIGGER_BASE)
)
,REGION AS 
(
SELECT DISTINCT AA.ID_GROUP
,BB.PROVINCE
,LISTAGG(CODE_SALES_AREA,'、')WITHIN GROUP(ORDER BY CODE_SALES_AREA) OVER(PARTITION BY AA.ID_GROUP) AS CITY
FROM  (SELECT DISTINCT ID_GROUP, CODE_SALES_AREA,CASE_CATEGORY FROM FINAL_TRIGGER_BASE) AA
JOIN PROVINCE BB ON AA.ID_GROUP=BB.ID_GROUP
)

SELECT  
 AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID
,'SA' AS UNIT
,'SA'||'_'||AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID_TRIGGER
,TO_DATE(TRI.DATE_DETECT,'YYYY-MM-DD') AS DATE_DETECT
,TO_DATE(TRI.WEEK_DETECT,'YYYY-MM-DD')AS WEEK_DETECT
,TRI.ID_ENTITY
,TRI.name_last_sales
,BB.PROVINCE
,BB.CITY
,CASE WHEN SUBSTR(ID_ENTITY,1,1) IN ('6','D') THEN 'RA' ELSE 'SA' END AS SA_TYPE
,CASE WHEN TRI.skp_employee_consultant=-1 THEN NULL ELSE SA.cnt_days_from_first_credit END 
,'525' AS CLASS
,TRI.TRIGGER_SOURCE
,'SOFT' AS TRIGGER_TYPE
,TRI.TRIGGER_VALUE 
,NULL CHECKED_BY
,NULL CASE_STATUS
,NULL CASE_DECISION
,NULL CASE_NO
,NULL INTO_SECURITY
,SYSDATE AS TIME_DETECT
,TRI.CASE_CATEGORY
,NULL AS NAME_DISTRICT 
,'是' AS FLAG_SEC_ALL_CONTRACT
FROM (SELECT DISTINCT DATE_DETECT,WEEK_DETECT,ID_ENTITY,name_last_sales,skp_employee_consultant,TRIGGER_SOURCE, TRIGGER_VALUE,CASE_CATEGORY,ID_GROUP FROM FINAL_TRIGGER_BASE) TRI
JOIN REGION BB ON TRI.ID_GROUP=BB.ID_GROUP 
---SA_ACTIVE_DAYS
LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON TRI.skp_employee_consultant=sa.skp_employee;
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;

-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;


--HCC Staff Hit POS Owner 20181024
PROCEDURE TRIGGER_526_HIT_POS_OWNER IS
 v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_526_HIT_POS_OWNER';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1 HCC STAFF HIT POS OWNER';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  


INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '526 HCC Staff Hit POS Owner',SYSDATE FROM DUAL;
COMMIT;
 
 INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
 WITH LEGAL_REPRESENTATIVE AS 
(
SELECT /*+FULL(E) FULL(S) FULL(SAL) FULL(CL) FULL(CLS) USE_HASH(E S SAL CL CLS)*/ 
E.SKP_EMPLOYEE
,E.SKP_EMPLOYEE_SUPERIOR
,E.TEXT_USERNAME_EMPLOYEE
,E.NAME_LAST
,E.TEXT_IDENT_NUMBER 
,E.DATE_EMPLOYED_FROM
,E.TEXT_CELLPHONE
,S.DATE_SELLER_ACT_START AS DATE_OPEN
,S.DATE_SELLER_ACT_END AS DATE_CLOSE
,S.TEXT_MAIN_CONTACT_CELLPHONE
,S.NAME_MAIN_SELLER_CONTACT
,S.TEXT_BUSINESS_PERSON_CELLPHONE
,S.NAME_LEGAL_REPRESENTATIVE
,S.ID_LEGAL_REPRESENTATIVE
,S.NAME_BUSINESS_RESP_PERSON
,S.ID_BUSINESS_RESP_PERSON
,CLS.CODE_SELLER_STATUS AS STATUS
,'LEGAL_REPRESENTATIVE' AS POS_STAFF_POSITION
,'RETAILER OPEN TIME' AS OPEN_INFO
,'RETAILER CLOSE TIME' AS CLOSE_INFO
,SAL.SKP_SALESROOM
,SAL.CODE_SALESROOM
,CL.NAME_BANK_ROLE_ABBR_EN
,S.SKP_SELLER
,S.CODE_SELLER
,S.NAME_SELLER
,'RETAILER' AS UNIT
FROM OWNER_DWH.DC_EMPLOYEE E 
JOIN OWNER_DWH.DC_SELLER S ON E.TEXT_IDENT_NUMBER=S.ID_LEGAL_REPRESENTATIVE and E.NAME_LAST=S.NAME_LEGAL_REPRESENTATIVE
JOIN OWNER_DWH.DC_SALESROOM SAL ON S.SKP_SELLER=SAL.SKP_SELLER
JOIN OWNER_DWH.CL_BANK_ROLE CL ON E.SKP_BANK_ROLE=CL.SKP_BANK_ROLE
JOIN OWNER_DWH.CL_SELLER_STATUS CLS ON CLS.SKP_SELLER_STATUS=S.SKP_SELLER_STATUS
WHERE CL.NAME_BANK_ROLE_ABBR_EN IN ('SDSM','DSM','DSMT','SA')
AND E.TEXT_IDENT_NUMBER<>'XNA'
AND E.CODE_EMPLOYEE_STATUS='a'
AND S.DATE_SELLER_ACT_END>SYSDATE
),
BUSINESS_RESP_PERSON AS
(
SELECT /*+FULL(E) FULL(S) FULL(SAL) FULL(CL) FULL(CLS) USE_HASH(E S SAL CL CLS)*/
E.SKP_EMPLOYEE
,E.SKP_EMPLOYEE_SUPERIOR
,E.TEXT_USERNAME_EMPLOYEE
,E.NAME_LAST
,E.TEXT_IDENT_NUMBER
,E.DATE_EMPLOYED_FROM
,E.TEXT_CELLPHONE
,S.DATE_SELLER_ACT_START AS DATE_OPEN
,S.DATE_SELLER_ACT_END AS DATE_CLOSE
,S.TEXT_MAIN_CONTACT_CELLPHONE
,S.NAME_MAIN_SELLER_CONTACT
,S.TEXT_BUSINESS_PERSON_CELLPHONE
,S.NAME_LEGAL_REPRESENTATIVE
,S.ID_LEGAL_REPRESENTATIVE
,S.NAME_BUSINESS_RESP_PERSON
,S.ID_BUSINESS_RESP_PERSON
,CLS.CODE_SELLER_STATUS AS STATUS
,'BUSINESS_RESP_PERSON' AS POS_STAFF_POSITION
,'RETAILER OPEN TIME' AS OPEN_INFO
,'RETAILER CLOSE TIME' AS CLOSE_INFO
,SAL.SKP_SALESROOM
,SAL.CODE_SALESROOM
,CL.NAME_BANK_ROLE_ABBR_EN
,S.SKP_SELLER
,S.CODE_SELLER
,S.NAME_SELLER
,'RETAILER' AS UNIT
FROM OWNER_DWH.DC_EMPLOYEE E
JOIN OWNER_DWH.DC_SELLER S ON E.TEXT_IDENT_NUMBER=S.ID_BUSINESS_RESP_PERSON AND E.NAME_LAST=S.NAME_BUSINESS_RESP_PERSON
JOIN OWNER_DWH.DC_SALESROOM SAL ON S.SKP_SELLER=SAL.SKP_SELLER
JOIN OWNER_DWH.CL_BANK_ROLE CL ON E.SKP_BANK_ROLE=CL.SKP_BANK_ROLE
JOIN OWNER_DWH.CL_SELLER_STATUS CLS ON CLS.SKP_SELLER_STATUS=S.SKP_SELLER_STATUS
WHERE CL.NAME_BANK_ROLE_ABBR_EN IN ('SDSM','DSM','DSMT','SA')
AND E.TEXT_IDENT_NUMBER<>'XNA'
AND E.CODE_EMPLOYEE_STATUS='a'
AND S.DATE_SELLER_ACT_END>SYSDATE
),
POS_MAIN_CONTACT AS
(
SELECT /*+FULL(E) FULL(SAL) FULL(CL) USE_HASH(E SAL CL)*/
E.SKP_EMPLOYEE
,E.SKP_EMPLOYEE_SUPERIOR
,E.TEXT_USERNAME_EMPLOYEE
,E.NAME_LAST
,E.TEXT_IDENT_NUMBER
,E.DATE_EMPLOYED_FROM
,E.TEXT_CELLPHONE
,SAL.DATE_SALESROOM_ACT_START AS DATE_OPEN
,SAL.date_salesroom_act_end AS DATE_CLOSE
,SAL.TEXT_MAIN_CONTACT_CELLPHONE
,SAL.text_main_contact_name AS NAME_MAIN_SELLER_CONTACT
,'' AS TEXT_BUSINESS_PERSON_CELLPHONE
,'' AS NAME_LEGAL_REPRESENTATIVE
,'' AS ID_LEGAL_REPRESENTATIVE
,'' AS NAME_BUSINESS_RESP_PERSON
,'' AS ID_BUSINESS_RESP_PERSON
,SAL.code_salesroom_status AS STATUS
,'POS_MAIN_CONTACT' AS POS_STAFF_POSITION
,'POS OPEN TIME' AS OPEN_INFO
,'RETAILER CLOSE TIME' AS CLOSE_INFO
,SAL.SKP_SALESROOM
,SAL.CODE_SALESROOM
,CL.NAME_BANK_ROLE_ABBR_EN
,SAL.SKP_SELLER
,SAL.CODE_SALESROOM AS CODE_SELLER
,SAL.name_salesroom AS NAME_SELLER
,'POS' AS UNIT
FROM OWNER_DWH.DC_EMPLOYEE E 
JOIN OWNER_DWH.DC_SALESROOM SAL ON E.TEXT_IDENT_NUMBER=SAL.TEXT_MAIN_CONTACT_IDENT AND E.NAME_LAST=SAL.TEXT_MAIN_CONTACT_NAME
JOIN OWNER_DWH.CL_BANK_ROLE CL ON E.SKP_BANK_ROLE=CL.SKP_BANK_ROLE
WHERE CL.NAME_BANK_ROLE_ABBR_EN IN ('SDSM','DSM','DSMT','SA')
AND E.TEXT_IDENT_NUMBER<>'XNA'
AND E.CODE_EMPLOYEE_STATUS='a'
AND SAL.DATE_SALESROOM_ACT_END>SYSDATE
AND SAL.CODE_SALESROOM<>'XNA'
AND SAL.DATE_SALESROOM_ACT_START<>DATE'1000-01-01'
AND INSTR(SAL.name_salesroom,'店外推客专用门店') =0--add 20201228 exclude virtual pos
)
, RETAILER_EMP_BANK_ACCOUNT AS 
(
SELECT /*+FULL(SE) FULL(AT) FULL(DHB)FULL(B) FULL(E) FULL(CLB) USE_HASH(SE AT DHB B E CLB)*/ 
DISTINCT 
E.SKP_EMPLOYEE
,E.SKP_EMPLOYEE_SUPERIOR
,E.TEXT_USERNAME_EMPLOYEE
,E.NAME_LAST
,E.TEXT_IDENT_NUMBER
,E.DATE_EMPLOYED_FROM
,E.TEXT_CELLPHONE
,SE.DATE_SELLER_ACT_START  AS DATE_OPEN
,SE.DATE_SELLER_ACT_END AS DATE_CLOSE
,SE.TEXT_MAIN_CONTACT_CELLPHONE
,SE.NAME_MAIN_SELLER_CONTACT
,SE.TEXT_BUSINESS_PERSON_CELLPHONE
,SE.NAME_BUSINESS_RESP_PERSON
,CASE WHEN DHB.TEXT_BANK_ACCOUNT_NUMBER=TEXT_BANK_ACC_NUMBER THEN 'BANK_ACC' ELSE 'COMMISSION BANK_ACC' END AS POS_STAFF_POSITION
,'RETAILER OPEN TIME' AS OPEN_INFO
,'RETAILER CLOSE TIME' AS CLOSE_INFO
,S.SKP_SALESROOM
,S.code_salesroom
,CLB.NAME_BANK_ROLE_ABBR_EN
,DHB.TEXT_BANK_ACCOUNT_NAME
,DHB.TEXT_BANK_ACCOUNT_NUMBER
,ST.NAME_RECEIVER_BANK_ACCOUNT
,ST.TEXT_RECEIVER_BANK_ACCOUNT
,SE.SKP_SELLER
,SE.CODE_SELLER
,SE.NAME_SELLER
,'RETAILER' AS UNIT
,ROW_NUMBER()OVER(PARTITION BY ST.TEXT_RECEIVER_BANK_ACCOUNT ORDER BY ST.DATE_MONTH DESC) AS RNK_BA
FROM OWNER_DWH.DC_SELLER SE
--JOIN OWNER_DWH.F_BANK_ACC_2_SELLER_AT AT ON SE.SKP_SELLER=AT.SKP_SELLER
JOIN OWNER_DWH.DH_BANK_ACCOUNT DHB ON SE.SKP_BANK_ACCOUNT=DHB.SKP_BANK_ACCOUNT
JOIN OWNER_DWH.F_COMMISSION_SELLER_TT ST ON SE.SKP_SELLER=ST.SKP_SELLER AND ST.NAME_RECEIVER_BANK_ACCOUNT=DHB.TEXT_BANK_ACCOUNT_NAME AND ST.TEXT_RECEIVER_BANK_ACCOUNT=DHB.TEXT_BANK_ACCOUNT_NUMBER
JOIN AP_ANTIFRAUD.F_EMPLOYEE_SALARY_BANK_ACCOUNT B ON ST.NAME_RECEIVER_BANK_ACCOUNT=B.NAME_LAST AND ST.TEXT_RECEIVER_BANK_ACCOUNT=B.TEXT_BANK_ACC_NUMBER
JOIN OWNER_DWH.DC_EMPLOYEE E ON B.TEXT_IDENTITY_CARD_NUMBER=E.TEXT_IDENT_NUMBER AND E.NAME_LAST=B.NAME_LAST
JOIN OWNER_DWH.CL_BANK_ROLE CLB ON E.SKP_BANK_ROLE=CLB.SKP_BANK_ROLE
JOIN OWNER_DWH.DC_SALESROOM S ON SE.SKP_SELLER=S.skp_seller
WHERE 
 SE.CODE_SELLER!='XNA'
AND (SE.DTIME_CLOSED=DATE'1000-01-01' 
OR SE.DTIME_CLOSED=DATE'3000-01-01' )--not closed 
--AND AT.DTIME_VALID_TO>SYSDATE--bank still valid
AND SE.DATE_SELLER_ACT_START<>DATE'1000-01-01'
AND E.CODE_EMPLOYEE_STATUS='a'
AND E.DATE_EMPLOYED_FROM>DATE'1000-01-01' 
AND CLB.NAME_BANK_ROLE_ABBR_EN <>'RA'
AND S.code_salesroom_status='a'
),
 POS_EMP_BANK_ACC AS
(
SELECT /*+FULL(S) FULL(B) FULL(E) FULL(CLB) USE_HASH(S B E CLB)*/ 
DISTINCT 
E.SKP_EMPLOYEE
,E.SKP_EMPLOYEE_SUPERIOR
,E.TEXT_USERNAME_EMPLOYEE
,E.NAME_LAST
,E.TEXT_IDENT_NUMBER
,E.DATE_EMPLOYED_FROM
,E.TEXT_CELLPHONE
,S.DATE_SALESROOM_ACT_START AS DATE_OPEN
,S.date_salesroom_act_end AS DATE_CLOSE
,S.TEXT_MAIN_CONTACT_CELLPHONE
,S.TEXT_MAIN_CONTACT_NAME AS NAME_MAIN_SELLER_CONTACT
,'' AS TEXT_BUSINESS_PERSON_CELLPHONE
,'' AS NAME_BUSINESS_RESP_PERSON
,'BANK_ACC' AS POS_STAFF_POSITION
,'POS OPEN TIME' AS OPEN_INFO
,'POS CLOSE TIME' AS CLOSE_INFO
,S.SKP_SALESROOM
,S.code_salesroom
,CLB.NAME_BANK_ROLE_ABBR_EN
,S.text_bank_account_name
,S.text_bank_account_number
,'' AS NAME_RECEIVER_BANK_ACCOUNT
,'' AS TEXT_RECEIVER_BANK_ACCOUNT
,S.skp_seller
,S.code_salesroom AS CODE_SELLER
,S.NAME_SALESROOM AS NAME_SELLER
,'POS' AS UNIT
,1 AS RNK_BA
FROM AP_ANTIFRAUD.F_EMPLOYEE_SALARY_BANK_ACCOUNT B
JOIN  OWNER_DWH.DC_SALESROOM S ON S.text_bank_account_number=B.TEXT_BANK_ACC_NUMBER AND S.text_bank_account_name=B.NAME_LAST
JOIN OWNER_DWH.DC_EMPLOYEE E ON B.TEXT_IDENTITY_CARD_NUMBER=E.TEXT_IDENT_NUMBER AND B.NAME_LAST=E.NAME_LAST
JOIN OWNER_DWH.CL_BANK_ROLE CLB ON E.SKP_BANK_ROLE=CLB.SKP_BANK_ROLE
WHERE 
S.skp_salesroom>-1 
AND S.CODE_SALESROOM_STATUS!='XNA'
AND S.CODE_SALESROOM_STATUS='a'
AND  CLB.NAME_BANK_ROLE_ABBR_EN <>'RA'
AND E.CODE_EMPLOYEE_STATUS='a'
AND S.code_salesroom_status='a'
AND S.date_salesroom_act_start<>DATE'1000-01-01'
AND NOT EXISTS (SELECT R.SKP_SELLER FROM RETAILER_EMP_BANK_ACCOUNT R WHERE R.SKP_SELLER=S.skp_seller)
)
,DM_TABLE AS
(
SELECT /*FULL(AD) FULL(FC)USE_HASH(AD FC)*/
AD.skp_credit_case
,AD.date_decision
,AD.text_contract_number
,AD.skp_employee_consultant
,AD.text_username_superior
,ROWNUM AS ROW_NUM
FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD 
LEFT JOIN AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC ON AD.skp_credit_case=FC.SKP_CREDIT_CASE AND AD.date_decision=FC.DATE_DECISION
WHERE 
AD.skp_credit_type=2 AND AD.code_product LIKE '%MINI%'
AND AD.date_decision BETWEEN DATE'2015-09-25' AND DATE'2017-10-31' 
AND FC.SKP_CREDIT_CASE IS NULL
),
SA_OWNER_INFO AS
(
SELECT LR.*,
ROW_NUMBER()OVER(PARTITION BY LR.SKP_SELLER ORDER BY LR.SKP_SALESROOM ) AS RNK_PS
 FROM  LEGAL_REPRESENTATIVE LR
UNION
SELECT BRP.*,
ROW_NUMBER()OVER(PARTITION BY BRP.SKP_SELLER ORDER BY BRP.SKP_SALESROOM ) AS RNK_PS
 FROM  BUSINESS_RESP_PERSON BRP
UNION 
SELECT PMC.*,
ROW_NUMBER()OVER(PARTITION BY PMC.SKP_SELLER ORDER BY PMC.SKP_SALESROOM ) AS RNK_PS
 FROM  POS_MAIN_CONTACT PMC
),
PRE_OWNER_SELECT AS
(
SELECT SAI.*
 FROM SA_OWNER_INFO SAI
 WHERE RNK_PS=1
),
PRE_OWNER_SELECT1 AS
(
SELECT DISTINCT
PS.*
,PS.NAME_BANK_ROLE_ABBR_EN||CASE WHEN PS.POS_STAFF_POSITION IN ('LEGAL_REPRESENTATIVE','BUSINESS_RESP_PERSON','POS_MAIN_CONTACT') THEN ' ID' ELSE' NAME' END ||
' HIT '||POS_STAFF_POSITION||CASE WHEN PS.POS_STAFF_POSITION IN ('LEGAL_REPRESENTATIVE','BUSINESS_RESP_PERSON','POS_MAIN_CONTACT') THEN ' ID' ELSE' NAME' END AS TRIGGER_SOURCE

, PS.NAME_BANK_ROLE_ABBR_EN||PS.NAME_LAST||' IDENT:'||PS.TEXT_IDENT_NUMBER||'; HOMER ID: '||PS.TEXT_USERNAME_EMPLOYEE
||' HIT '||PS.POS_STAFF_POSITION ||' ; '||PS.NAME_BANK_ROLE_ABBR_EN||' PHONE: '||PS.TEXT_CELLPHONE
||' ; '||PS.UNIT||' CODE: '||LISTAGG(PS.CODE_SELLER,',') WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.TEXT_USERNAME_EMPLOYEE)
||' ; '||PS.OPEN_INFO||' : '||LISTAGG(TO_CHAR(PS.DATE_OPEN,'YYYY/MM/DD'),',')WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.TEXT_USERNAME_EMPLOYEE)
||' ; '||PS.UNIT||' NAME: '||PS.NAME_SELLER||' ; '||PS.UNIT||' '||'PHONE : '|| CASE WHEN PS.POS_STAFF_POSITION IN ('LEGAL_REPRESENTATIVE','BUSINESS_RESP_PERSON') 
THEN LISTAGG(PS.TEXT_BUSINESS_PERSON_CELLPHONE,',')WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.TEXT_USERNAME_EMPLOYEE) 
  ELSE LISTAGG(PS.TEXT_MAIN_CONTACT_CELLPHONE,',')WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.TEXT_USERNAME_EMPLOYEE) END
||' - '||CASE WHEN PS.POS_STAFF_POSITION IN ('LEGAL_REPRESENTATIVE','BUSINESS_RESP_PERSON') THEN ' BRP ' ELSE ' MC ' END 
|| CASE WHEN  PS.POS_STAFF_POSITION IN ('LEGAL_REPRESENTATIVE','BUSINESS_RESP_PERSON') THEN LISTAGG(PS.NAME_BUSINESS_RESP_PERSON,',')WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.TEXT_USERNAME_EMPLOYEE) 
ELSE  LISTAGG(PS.NAME_MAIN_SELLER_CONTACT,',')WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.TEXT_USERNAME_EMPLOYEE) END
||' ; '||PS.NAME_BANK_ROLE_ABBR_EN||' ONBOARD DAY: '||TO_CHAR(PS.DATE_EMPLOYED_FROM,'YYYY/MM/DD')||' ;DO NOT CONTACT CLIENT, ONLY CHECK '||PS.UNIT AS TRIGGER_VALUE

,RANK()OVER(PARTITION BY PS.TEXT_USERNAME_EMPLOYEE ORDER BY PS.SKP_SALESROOM) AS RNK_PS1
,ROWNUM AS RNK
FROM PRE_OWNER_SELECT PS
WHERE PS.RNK_PS=1
),
SA_BANK_INFO AS
(
SELECT /*+FULL(PBA)  USE_HASH(PBA)*/ 
 PBA.*,
ROW_NUMBER()OVER(PARTITION BY PBA.SKP_SELLER ORDER BY PBA.SKP_SALESROOM ) AS RNK_PS
FROM POS_EMP_BANK_ACC PBA
WHERE PBA.RNK_BA=1

UNION
SELECT /*+FULL(RBA)  USE_HASH(RBA)*/ 
 RBA.*,
ROW_NUMBER()OVER(PARTITION BY RBA.SKP_SELLER ORDER BY RBA.SKP_SALESROOM ) AS RNK_PS
FROM RETAILER_EMP_BANK_ACCOUNT RBA
WHERE RBA.RNK_BA=1
)
,
PRE_BANK_SELECT AS
(
SELECT SAI.*
 FROM SA_BANK_INFO SAI
 WHERE RNK_PS=1
),
PRE_BANK_SELECT1 AS
(
SELECT DISTINCT
PS.*
,PS.NAME_BANK_ROLE_ABBR_EN|| ' BANK_ACC HIT '||UNIT||' '|| PS.POS_STAFF_POSITION AS TRIGGER_SOURCE

, PS.NAME_BANK_ROLE_ABBR_EN||PS.NAME_LAST||' IDENT:'||PS.TEXT_IDENT_NUMBER||'; HOMER ID: '||PS.TEXT_USERNAME_EMPLOYEE||'; BANK NAME: '||PS.TEXT_BANK_ACCOUNT_NAME||'; BANK_ACC: '||
CASE WHEN PS.SKP_EMPLOYEE IS NOT NULL THEN B.TEXT_BANK_ACC_NUMBER ELSE 'NULL' END ||' HIT '||PS.UNIT||' '||PS.POS_STAFF_POSITION||' ; '||NAME_BANK_ROLE_ABBR_EN||' PHONE: '|| PS.TEXT_CELLPHONE||'; '
  ||PS.UNIT||' NAME: '||PS.NAME_SELLER||' ; '||PS.UNIT||' PHONE: '|| LISTAGG(PS.TEXT_BUSINESS_PERSON_CELLPHONE,',')WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.TEXT_USERNAME_EMPLOYEE) 
 ||' - BRP '||PS.NAME_BUSINESS_RESP_PERSON||' ; '||PS.UNIT||' CODE: '||LISTAGG(PS.CODE_SELLER,',') WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.TEXT_USERNAME_EMPLOYEE)
||' ; '||PS.OPEN_INFO ||' : '||LISTAGG(TO_CHAR(PS.DATE_OPEN,'YYYY/MM/DD'),',')WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.TEXT_USERNAME_EMPLOYEE)||'; '
||PS.NAME_BANK_ROLE_ABBR_EN||' ONBOARD DAY: '||TO_CHAR(PS.DATE_EMPLOYED_FROM,'YYYY/MM/DD')||' ;DO NOT CONTACT CLIENT, ONLY CHECK '||PS.UNIT AS TRIGGER_VALUE
,RANK()OVER(PARTITION BY PS.TEXT_USERNAME_EMPLOYEE ORDER BY PS.SKP_SALESROOM) AS RNK_PS1
,ROWNUM AS RNK
FROM PRE_BANK_SELECT PS
LEFT JOIN AP_ANTIFRAUD.F_EMPLOYEE_SALARY_BANK_ACCOUNT B ON PS.TEXT_IDENT_NUMBER=B.TEXT_IDENTITY_CARD_NUMBER
WHERE PS.RNK_PS=1
)
SELECT 
'SA' AS UNIT
,PS1.TEXT_USERNAME_EMPLOYEE AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'526' AS CLASS
,PS1.TRIGGER_SOURCE
,PS1.TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,DD.SKP_CREDIT_CASE
,DD.TEXT_CONTRACT_NUMBER
FROM PRE_OWNER_SELECT1 PS1
JOIN DM_TABLE DD ON PS1.RNK=DD.ROW_NUM
WHERE PS1.RNK_PS1=1
AND NOT EXISTS(SELECT * FROM PRE_BANK_SELECT1 PB WHERE PS1.TEXT_USERNAME_EMPLOYEE=PB.TEXT_USERNAME_EMPLOYEE)
AND NOT EXISTS (SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS CC WHERE CC.CLASS=526 AND CC.TEXT_USERNAME_EMPLOYEE_SALES=PS1.TEXT_USERNAME_EMPLOYEE AND CC.TRIGGER_SOURCE NOT LIKE '%LEGAL_REPRESENTATIVE%')
AND NOT EXISTS (SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS CC WHERE CC.CLASS=526 AND CC.TEXT_USERNAME_EMPLOYEE_SALES=PS1.TEXT_USERNAME_EMPLOYEE AND CC.TRIGGER_SOURCE LIKE '%LEGAL_REPRESENTATIVE%' AND SYSDATE-CC.DATE_DETECT<45)

UNION
SELECT 
'SA' AS UNIT
,PS1.TEXT_USERNAME_EMPLOYEE AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'526' AS CLASS
,CASE WHEN PO.TEXT_USERNAME_EMPLOYEE IS NULL THEN PS1. TRIGGER_SOURCE ELSE PO.TRIGGER_SOURCE||' ; '||PS1.TRIGGER_SOURCE END AS TRIGGER_SOURCE
,CASE WHEN PO.TEXT_USERNAME_EMPLOYEE IS NULL THEN PS1.TRIGGER_VALUE ELSE PO.TRIGGER_VALUE||' / BANK NAME: '||PS.TEXT_BANK_ACCOUNT_NAME||'; BANK_ACC: '||
CASE WHEN PS.SKP_EMPLOYEE IS NOT NULL THEN B.TEXT_BANK_ACC_NUMBER ELSE 'NULL' END||' HIT '||PS.UNIT||' '||PS.POS_STAFF_POSITION END AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,DD. SKP_CREDIT_CASE
,DD. TEXT_CONTRACT_NUMBER
 FROM PRE_BANK_SELECT1 PS1
 JOIN PRE_BANK_SELECT PS ON PS1.SKP_EMPLOYEE=PS.SKP_EMPLOYEE
 LEFT JOIN  AP_ANTIFRAUD.F_EMPLOYEE_SALARY_BANK_ACCOUNT B ON PS.TEXT_IDENT_NUMBER=B.TEXT_IDENTITY_CARD_NUMBER
 JOIN DM_TABLE DD ON PS1.RNK=DD.ROW_NUM
 LEFT JOIN PRE_OWNER_SELECT1 PO ON PS1.TEXT_USERNAME_EMPLOYEE=PO.TEXT_USERNAME_EMPLOYEE
WHERE PS1.RNK_PS1=1
AND NOT EXISTS(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS CC WHERE CC.CLASS=526 AND CC.TEXT_USERNAME_EMPLOYEE_SALES=PS1.TEXT_USERNAME_EMPLOYEE );
COMMIT;

INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '526 HCC Staff Hit POS Bank Account',SYSDATE FROM DUAL;
COMMIT;

INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
---RETRIGGERED RETAILER BANK_ACC HIT
WITH FINAL_CONTRACTS AS 
(
SELECT FC.TRIGGER_SOURCE,REPLACE(FC.TRIGGER_VALUE,'#TEST# ','') AS TRIGGER_VALUE,FC.DATE_DETECT,FC.CLASS,E.SKP_EMPLOYEE,E.TEXT_USERNAME_EMPLOYEE,
SUBSTR(FC.TRIGGER_VALUE,INSTR(FC.TRIGGER_VALUE,'HOMER ID: ',1)+10,(INSTR(FC.TRIGGER_VALUE,'; BANK NAME',1)-9)-(INSTR(FC.TRIGGER_VALUE,'HOMER ID: ',1)+1)) AS HOMER_ID,
E.TEXT_IDENT_NUMBER,BA.TEXT_BANK_ACC_NUMBER
 FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC
 JOIN OWNER_DWH.DC_EMPLOYEE E ON E.TEXT_USERNAME_EMPLOYEE=SUBSTR(FC.TRIGGER_VALUE,INSTR(FC.TRIGGER_VALUE,'HOMER ID: ',1)+10,(INSTR(FC.TRIGGER_VALUE,'; BANK NAME',1)-9)-(INSTR(FC.TRIGGER_VALUE,'HOMER ID: ',1)+1))
JOIN OWNER_DWH.F_DMT_PROCESS_HEADER_TT DMT ON DMT.SKP_EMPLOYEE=E.SKP_EMPLOYEE
JOIN AP_ANTIFRAUD.F_EMPLOYEE_SALARY_BANK_ACCOUNT BA ON BA.TEXT_IDENTITY_CARD_NUMBER=E.TEXT_IDENT_NUMBER
WHERE FC.CLASS=526 AND UPPER(FC.TRIGGER_SOURCE) LIKE '%BANK%' AND UPPER(FC.TRIGGER_SOURCE) NOT LIKE '%NAME%'
AND FC.DATE_DETECT>DATE'2018-11-01' 
AND DMT.ID_CASE_NO='-1'
AND DMT.NAME_SUBMISSION_ENTITY='AF IV team'
AND TRUNC(SYSDATE)-FC.DATE_DETECT>=45--20191104 nancy
)
,TRIGGERED_CONTRACTS AS
(
----POS HIT
SELECT DISTINCT FC.TRIGGER_SOURCE,FC.TRIGGER_VALUE,
SUBSTR(FC.TRIGGER_VALUE,1,INSTR(FC.TRIGGER_VALUE,' IDENT',1)) AS TRIGGERED_EMP,
SUBSTR(FC.TRIGGER_VALUE,INSTR(FC.TRIGGER_VALUE,'HOMER ID: ',1)+10,(INSTR(FC.TRIGGER_VALUE,'; BANK NAME',1)-9)-(INSTR(FC.TRIGGER_VALUE,'HOMER ID: ',1)+1)) AS HOMER_ID,
REGEXP_SUBSTR (
SUBSTR(FC.TRIGGER_VALUE,INSTR(FC.TRIGGER_VALUE,'POS CODE: ',1)+10, (INSTR(FC.TRIGGER_VALUE,' ; POS OPEN TIME',1)-11)-INSTR(FC.TRIGGER_VALUE,'POS CODE: ',1)+1)
, '[^,]+', 1,LEVEL,'i') AS CODE_SELLER
,FC.TEXT_IDENT_NUMBER
,FC.TEXT_BANK_ACC_NUMBER
,'POS' AS UNIT
FROM FINAL_CONTRACTS FC 
WHERE FC.CLASS=526 AND  UPPER(FC.TRIGGER_SOURCE) LIKE '%BANK%' AND UPPER(FC.TRIGGER_SOURCE) NOT LIKE '%NAME%' AND FC.DATE_DETECT>DATE'2018-11-01'
CONNECT BY LEVEL<=LENGTH(SUBSTR(FC.TRIGGER_VALUE,INSTR(FC.TRIGGER_VALUE,'POS CODE: ',1)+10, (INSTR(FC.TRIGGER_VALUE,' ; RETAILER OPEN TIME',1)-11)-INSTR(FC.TRIGGER_VALUE,'POS CODE: ',1)+1))
-LENGTH(regexp_replace(SUBSTR(FC.TRIGGER_VALUE,INSTR(FC.TRIGGER_VALUE,'POS CODE: ',1)+10, (INSTR(FC.TRIGGER_VALUE,' ; RETAILER OPEN TIME',1)-11)-INSTR(FC.TRIGGER_VALUE,'POS CODE: ',1)+1)
,',', ''))+1

-----RETAILER HIT
UNION
SELECT DISTINCT FC.TRIGGER_SOURCE,FC.TRIGGER_VALUE,
SUBSTR(FC.TRIGGER_VALUE,1,INSTR(FC.TRIGGER_VALUE,' IDENT',1)) AS TRIGGERED_EMP,
SUBSTR(FC.TRIGGER_VALUE,INSTR(FC.TRIGGER_VALUE,'HOMER ID: ',1)+10,(INSTR(FC.TRIGGER_VALUE,'; BANK NAME',1)-9)-(INSTR(FC.TRIGGER_VALUE,'HOMER ID: ',1)+1)) AS HOMER_ID,
REGEXP_SUBSTR (
SUBSTR(FC.TRIGGER_VALUE,INSTR(FC.TRIGGER_VALUE,'RETAILER CODE: ',1)+15, (INSTR(FC.TRIGGER_VALUE,' ; RETAILER OPEN TIME',1)-16)-INSTR(FC.TRIGGER_VALUE,'RETAILER CODE: ',1)+1)
, '[^,]+', 1,LEVEL,'i') AS CODE_SELLER
,FC.TEXT_IDENT_NUMBER
,FC.TEXT_BANK_ACC_NUMBER
,'RETAILER' AS UNIT
FROM FINAL_CONTRACTS FC 
WHERE FC.CLASS=526 AND  UPPER(FC.TRIGGER_SOURCE) LIKE '%BANK%' AND UPPER(FC.TRIGGER_SOURCE) NOT LIKE '%NAME%' AND FC.DATE_DETECT>DATE'2018-11-01'
CONNECT BY LEVEL<=LENGTH(SUBSTR(FC.TRIGGER_VALUE,INSTR(FC.TRIGGER_VALUE,'RETAILER CODE: ',1)+15, (INSTR(FC.TRIGGER_VALUE,' ; RETAILER OPEN TIME',1)-16)-INSTR(FC.TRIGGER_VALUE,'RETAILER CODE: ',1)+1))
-LENGTH(regexp_replace(SUBSTR(FC.TRIGGER_VALUE,INSTR(FC.TRIGGER_VALUE,'RETAILER CODE: ',1)+15, (INSTR(FC.TRIGGER_VALUE,' ; RETAILER OPEN TIME',1)-16)-INSTR(FC.TRIGGER_VALUE,'RETAILER CODE: ',1)+1)
,',', ''))+1
) 
,DM_TABLE AS
(
SELECT /*FULL(AD) FULL(FC)USE_HASH(AD FC)*/
AD.skp_credit_case
,AD.date_decision
,AD.text_contract_number
,AD.skp_employee_consultant
,AD.text_username_superior
--,RANK()OVER(PARTITION BY AD.skp_employee_consultant ORDER BY ad.dtime_review ) AS RNK_DM
,ROWNUM AS ROW_NUM
FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD 
LEFT JOIN AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC ON AD.skp_credit_case=FC.SKP_CREDIT_CASE AND AD.date_decision=FC.DATE_DECISION
WHERE 
AD.skp_credit_type=2 AND AD.code_product LIKE '%MINI%'
AND AD.date_decision BETWEEN DATE'2015-09-25' AND DATE'2017-10-31' 
AND FC.SKP_CREDIT_CASE IS NULL
)
,PRE_SELECT AS
(
SELECT DISTINCT
'RETRIGGER- '||TC.TRIGGER_SOURCE AS TRIGGER_SOURCE,TC.TRIGGER_VALUE,TC.CODE_SELLER,E.TEXT_USERNAME_EMPLOYEE,E.NAME_LAST,E.TEXT_CELLPHONE,E.SKP_EMPLOYEE,TC.HOMER_ID,TC.TRIGGERED_EMP,
TC.TEXT_IDENT_NUMBER
,TC.TEXT_BANK_ACC_NUMBER
,TC.UNIT
,ROW_NUMBER()OVER(PARTITION BY TC.CODE_SELLER ORDER BY E.SKP_EMPLOYEE) AS RNK
 FROM TRIGGERED_CONTRACTS TC
JOIN OWNER_DWH.f_Salesroom_History_Tt H on H.CODE_SALESROOM=TC.CODE_SELLER
JOIN OWNER_DWH.dc_employee E ON H.SKP_EMPLOYEE_BUSSMAN=E.SKP_EMPLOYEE
JOIN OWNER_DWH.CL_BANK_ROLE CB ON E.SKP_BANK_ROLE=CB.SKP_BANK_ROLE
WHERE 
H.DTIME_VALID_TO>SYSDATE -- DSM STILL BIND THE POS
AND CB.NAME_BANK_ROLE_ABBR_EN='DSM'
AND TC.UNIT='POS'

UNION
SELECT DISTINCT
'RETRIGGER- '||TC.TRIGGER_SOURCE AS TRIGGER_SOURCE,TC.TRIGGER_VALUE,TC.CODE_SELLER,E.TEXT_USERNAME_EMPLOYEE,E.NAME_LAST,E.TEXT_CELLPHONE,E.SKP_EMPLOYEE,TC.HOMER_ID,TC.TRIGGERED_EMP,
TC.TEXT_IDENT_NUMBER
,TC.TEXT_BANK_ACC_NUMBER
,TC.UNIT
,ROW_NUMBER()OVER(PARTITION BY TC.CODE_SELLER ORDER BY E.SKP_EMPLOYEE) AS RNK
 FROM TRIGGERED_CONTRACTS TC
JOIN OWNER_DWH.f_Salesroom_History_Tt H on H.CODE_SELLER=TC.CODE_SELLER
JOIN OWNER_DWH.dc_employee E ON H.SKP_EMPLOYEE_BUSSMAN=E.SKP_EMPLOYEE
JOIN OWNER_DWH.CL_BANK_ROLE CB ON E.SKP_BANK_ROLE=CB.SKP_BANK_ROLE
WHERE 
H.DTIME_VALID_TO>SYSDATE -- DSM STILL BIND THE POS
AND CB.NAME_BANK_ROLE_ABBR_EN='DSM'
AND TC.UNIT='RETAILER'
),
PRE_SELECT1 AS
(
SELECT 
DISTINCT 
'SA' AS UNIT
,PS.HOMER_ID AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'526' AS CLASS
,PS.TRIGGER_SOURCE
,'TRIGGERED '||PS.TRIGGERED_EMP||' IDENT:'||PS.TEXT_IDENT_NUMBER||'; HOMER ID: '||PS.HOMER_ID||'; BANK_ACC: '||PS.TEXT_BANK_ACC_NUMBER
||CASE WHEN PS.UNIT='POS' THEN ' HIT POS BANK_ACC; POS CODE: ' ELSE ' HIT RETAILER BANK_ACC; RETAILER CODE: ' END
||LISTAGG(PS.CODE_SELLER,',') WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.HOMER_ID)||'; CURRENT DSM:  '
||LISTAGG(PS.NAME_LAST,',') WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.HOMER_ID)||'; CURRENT DSM HOMER_ID: '
||LISTAGG(PS.TEXT_USERNAME_EMPLOYEE,',') WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.HOMER_ID) ||'; CURRENT DSM PHONE: '
||LISTAGG(PS.TEXT_CELLPHONE,',') WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.HOMER_ID) AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,ROWNUM AS ROW_NUM
FROM PRE_SELECT PS
WHERE RNK=1
),
--20190305
TRIGGERED_C AS
(SELECT 
SUBSTR(FC.TRIGGER_VALUE,INSTR(FC.TRIGGER_VALUE,'HOMER ID: ',1)+10,(INSTR(FC.TRIGGER_VALUE,'; BANK_ACC',1)-9)-(INSTR(FC.TRIGGER_VALUE,'HOMER ID: ',1)+1)) AS HOMER_ID
FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC
WHERE FC.CLASS=526 AND FC.DATE_DETECT>=DATE'2018-11-01' AND FC.TRIGGER_SOURCE LIKE 'RE%'
)
SELECT 
PS1.UNIT
,PS1.ID_ENTITY
,PS1.DATE_DETECT
,PS1.WEEK_DETECT
,PS1.CLASS
,PS1.TRIGGER_SOURCE
,PS1.TRIGGER_VALUE
,PS1.TRIGGER_TYPE
,DD. SKP_CREDIT_CASE
,DD. TEXT_CONTRACT_NUMBER
 FROM PRE_SELECT1 PS1
JOIN DM_TABLE DD ON PS1.ROW_NUM=DD.ROW_NUM
LEFT JOIN TRIGGERED_C DC ON PS1.ID_ENTITY=DC.HOMER_ID
WHERE DC.HOMER_ID IS NULL;
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;

-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;

--stop 20200109 kate
/*
PROCEDURE TRIGGER_527_INBOUND_CASH_LOAN IS
  BEGIN

INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '527  Inbound Cancel Package Cashloan',SYSDATE FROM DUAL;
COMMIT;

INSERT \*+ append*\ INTO AP_ANTIFRAUD.F_AF_FINAL_TRIGGERS
WITH FINAL_TRIGGER_BASE AS
(
SELECT  \*+  use_hash(facc) *\  DISTINCT 
 PRE.ID_ENTITY
,EE.SKP_EMPLOYEE AS skp_employee_consultant--20180626
,SUBSTR(TRIGGER_VALUE,0,INSTR(TRIGGER_VALUE,'相关网页链接')-2) AS TRIGGER_VALUE
,EE.NAME_LAST AS name_last_sales--20180626
,PRE.DATE_DETECT
,PRE.WEEK_DETECT
, CASE WHEN ((FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR FACC.text_username_employee_sales='homer_o2o')AND DSAC.CODE_SALES_AREA IS NOT NULL THEN DSAC.CODE_SALES_AREA ELSE  PRO.CODE_SALES_AREA END  AS REGION
, CASE WHEN ((FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR FACC.text_username_employee_sales='homer_o2o')AND DSA.CODE_SALES_AREA IS NOT NULL THEN DSA.CODE_SALES_AREA ELSE  CC.CODE_SALES_AREA END AS CODE_SALES_AREA
--,SA_TYPE
--,SA_ACTIVE_DAYS
,TRIGGER_SOURCE
,TRIGGER_TYPE
,substr(trigger_value,1,instr(trigger_value,']',1)-1) as ID_GROUP
,MIN(CASE WHEN FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme' AND EE.SKP_BANK_ROLE<>1962 THEN '2 POS LOAN'
                      WHEN FACC.name_channel LIKE '%无预约%' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme' THEN '3 WALK-IN'  
                      WHEN FACC.name_channel LIKE '消费贷%' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme'  THEN '1 XSELL' 
                            -- WHEN FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme' THEN '4 ELOAN' ELSE '5 MINI' END 
                       WHEN FACC.name_channel='商品贷' AND EE.SKP_BANK_ROLE=1962 THEN '0 ELOAN' ELSE '5 MINI' END --REMOTE SA 20190517
                      ) OVER(PARTITION BY DATE_DETECT, substr(trigger_value,1,instr(trigger_value,']',1)-1))AS CASE_CATEGORY

FROM AP_ANTIFRAUD.f_Trcontracts_Preselection PRE
JOIN OWNER_DWH.DC_CREDIT_CASE DCC ON DCC.SKP_CREDIT_CASE=PRE.SKP_CREDIT_CASE AND PRE.DATE_DETECT=TO_CHAR(SYSDATE,'yyyy/mm/dd')
AND PRE.CLASS=527
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC ON DCC.id_source = facc.id_source AND  FACC.date_decision=DCC.DATE_DECISION AND DCC.skp_credit_type = facc.skp_credit_type --AND PRE.UNIT='SA'-- AND AA.CLASS=20
LEFT JOIN OWNER_DWH.DC_EMPLOYEE EE ON PRE.ID_ENTITY=EE.TEXT_USERNAME_EMPLOYEE AND EE.CODE_EMPLOYEE_STATUS<>'X'
LEFT JOIN OWNER_DWH.DC_SALES_AREA CC ON CC.NAME_SALES_AREA=FACC.name_region AND CC.code_sales_area_status='a' and  CC.skp_sales_area_type=1 
LEFT JOIN OWNER_DWH.DC_SALES_AREA PRO ON CC.SKP_SALES_AREA_SUPERIOR=PRO.SKP_SALES_AREA AND  PRO.CODE_SALES_AREA_STATUS='a' and PRO.SKP_SALES_AREA_TYPE=2 
---SA_ACTIVE_DAYS
--LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON FACC.skp_employee_consultant=sa.skp_employee AND PRE.UNIT='SA'

JOIN OWNER_DWH.f_Application_Client_Tt ACT ON ACT.SKP_CREDIT_CASE=DCC.SKP_CREDIT_CASE AND ACT.SKP_CREDIT_TYPE=DCC.SKP_CREDIT_TYPE AND ACT.SKP_CLIENT_ROLE=14
LEFT JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR ON ADDR.SKP_CREDIT_CASE= DCC.SKP_CREDIT_CASE AND ACT.SKP_APPLICATION_CLIENT=ADDR.SKP_APPLICATION_CLIENT AND ADDR.SKP_ADDRESS_TYPE=2--CURRENT
LEFT JOIN OWNER_DWH.DC_CITY DC ON DC.SKP_CITY=ADDR.SKP_CITY
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSA ON DSA.NAME_SALES_AREA=DC.NAME_CITY AND DSA.code_sales_area_status='a' and  DSA.skp_sales_area_type=1
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSAC ON DSA.SKP_SALES_AREA_SUPERIOR=DSAC.SKP_SALES_AREA AND  DSAC.CODE_SALES_AREA_STATUS='a' and DSAC.SKP_SALES_AREA_TYPE=2 
)
,PROVINCE AS 
(
SELECT DISTINCT ID_GROUP
,LISTAGG(REGION,'、' )WITHIN GROUP(ORDER BY REGION) OVER(PARTITION BY ID_GROUP) AS PROVINCE
FROM (SELECT DISTINCT ID_GROUP,REGION FROM FINAL_TRIGGER_BASE)
)
,REGION AS 
(
SELECT DISTINCT AA.ID_GROUP
,BB.PROVINCE
,LISTAGG(CODE_SALES_AREA,'、')WITHIN GROUP(ORDER BY CODE_SALES_AREA) OVER(PARTITION BY AA.ID_GROUP) AS CITY
,CASE WHEN CASE_CATEGORY='1 XSELL' THEN '3 XSELL' 
              WHEN CASE_CATEGORY='2 POS LOAN' THEN '1 POS LOAN'
                WHEN CASE_CATEGORY='3 WALK-IN' THEN '2 WALK-IN'
                  WHEN CASE_CATEGORY='0 ELOAN' THEN '4 ELOAN' --20190807
              ELSE CASE_CATEGORY END AS CASE_CATEGORY     ----------PRIORITY XSELL
FROM  (SELECT DISTINCT ID_GROUP, CODE_SALES_AREA,CASE_CATEGORY FROM FINAL_TRIGGER_BASE) AA
JOIN PROVINCE BB ON AA.ID_GROUP=BB.ID_GROUP
)

SELECT  
 AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID
,'SA' AS UNIT
,'SA'||'_'||AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID_TRIGGER
,TO_DATE(TRI.DATE_DETECT,'YYYY-MM-DD') AS DATE_DETECT
,TO_DATE(TRI.WEEK_DETECT,'YYYY-MM-DD')AS WEEK_DETECT
,TRI.ID_ENTITY
,TRI.name_last_sales
,BB.PROVINCE
,BB.CITY
,CASE WHEN SUBSTR(ID_ENTITY,1,1) IN ('6','D') THEN 'RA' ELSE 'SA' END AS SA_TYPE
,SA.cnt_days_from_first_credit
,'527' AS CLASS
,TRI.TRIGGER_SOURCE
,'SOFT' AS TRIGGER_TYPE
, TRI.TRIGGER_VALUE
,NULL CHECKED_BY
,NULL CASE_STATUS
,NULL CASE_DECISION
,NULL CASE_NO
,NULL INTO_SECURITY
,SYSDATE AS TIME_DETECT
,BB.CASE_CATEGORY
,NULL AS NAME_DISTRICT 
,'是' AS FLAG_SEC_ALL_CONTRACT
FROM (SELECT DISTINCT DATE_DETECT,WEEK_DETECT,ID_ENTITY,name_last_sales,skp_employee_consultant,TRIGGER_SOURCE, TRIGGER_VALUE,ID_GROUP FROM FINAL_TRIGGER_BASE ) TRI
JOIN REGION BB ON TRI.ID_GROUP=BB.ID_GROUP 
---SA_ACTIVE_DAYS
LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON TRI.skp_employee_consultant=sa.skp_employee
WHERE length( BB.CITY)<300;
COMMIT;
END;
*/

PROCEDURE TRIGGER_528_INBOUND_CHANGE IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name: length       
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_528_IB';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP:528_INBOUND_CHANGE';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL); 


INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '528 Inbounding call change information',SYSDATE FROM DUAL;
COMMIT;

INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_AF_FINAL_TRIGGERS
--1 TRIGGER
WITH FINAL_TRIGGER_BASE AS
(
SELECT  DISTINCT 
 PRE.ID_ENTITY
,CASE WHEN PRE.ID_ENTITY='XNA' THEN NULL ELSE EE.SKP_EMPLOYEE END AS skp_employee_consultant--20180626
,SUBSTR(TRIGGER_VALUE,0,INSTR(TRIGGER_VALUE,'相关网页链接')-2) AS TRIGGER_VALUE
,CASE WHEN PRE.ID_ENTITY='XNA' THEN NULL ELSE EE.NAME_LAST END AS name_last_sales--20180626
,PRE.DATE_DETECT
,PRE.WEEK_DETECT
, CASE WHEN((FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR facc.code_salesroom='160212' OR PRE.ID_ENTITY='homer_o2o' 
       OR (/*PRE.ID_ENTITY='rpos' AND */ DCC.skp_product_channel=804 AND DCC.code_rpos_type<>'2') OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%' OR FACC.name_product LIKE '%MINI%') AND DSAC.CODE_SALES_AREA IS NOT NULL THEN DSAC.CODE_SALES_AREA 
       ELSE  PRO.CODE_SALES_AREA END  AS REGION--FACC改为PRE 20190514
, CASE WHEN((FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR facc.code_salesroom='160212' OR PRE.ID_ENTITY='homer_o2o'
       OR (/*PRE.ID_ENTITY='rpos' AND*/ DCC.skp_product_channel=804 AND DCC.code_rpos_type<>'2') OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%' OR FACC.name_product LIKE '%MINI%') AND DSA.CODE_SALES_AREA IS NOT NULL THEN DSA.CODE_SALES_AREA 
       ELSE  CC.CODE_SALES_AREA END AS CODE_SALES_AREA --add rpos 20190827--,SA_TYPE
--,SA_ACTIVE_DAYS
,TRIGGER_SOURCE
,TRIGGER_TYPE
,substr(trigger_value,1,instr(trigger_value,']',1)-1) as ID_GROUP
,MIN(CASE WHEN FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme' AND EE.SKP_BANK_ROLE<>1962 THEN '0 POS LOAN'
                      WHEN FACC.name_channel LIKE '%无预约%' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme' THEN '3 WALK-IN'  
                      WHEN FACC.name_channel LIKE '消费贷%' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES!='extreme'  THEN '2 XSELL' 
                            -- WHEN FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme' THEN '4 ELOAN' ELSE '5 MINI' END 
                       WHEN FACC.name_channel='商品贷' AND EE.SKP_BANK_ROLE=1962 THEN '1 ELOAN' ELSE '5 MINI' END --REMOTE SA 20190517
                    ) OVER(PARTITION BY DATE_DETECT, substr(trigger_value,1,instr(trigger_value,']',1)-1))AS CASE_CATEGORY

FROM AP_ANTIFRAUD.f_Trcontracts_Preselection PRE
JOIN OWNER_DWH.DC_CREDIT_CASE DCC ON DCC.SKP_CREDIT_CASE=PRE.SKP_CREDIT_CASE AND PRE.DATE_DETECT=TO_CHAR(SYSDATE,'yyyy/mm/dd')
AND PRE.CLASS=528
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC ON DCC.id_source = facc.id_source AND  FACC.date_decision=DCC.DATE_DECISION AND DCC.skp_credit_type = facc.skp_credit_type --AND PRE.UNIT='SA'-- AND AA.CLASS=20
LEFT JOIN OWNER_DWH.DC_EMPLOYEE EE ON PRE.ID_ENTITY=EE.TEXT_USERNAME_EMPLOYEE AND EE.CODE_EMPLOYEE_STATUS<>'X'
LEFT JOIN OWNER_DWH.DC_SALES_AREA CC ON CC.NAME_SALES_AREA=FACC.name_region AND CC.code_sales_area_status='a' and  CC.skp_sales_area_type=1 
LEFT JOIN OWNER_DWH.DC_SALES_AREA PRO ON CC.SKP_SALES_AREA_SUPERIOR=PRO.SKP_SALES_AREA AND  PRO.CODE_SALES_AREA_STATUS='a' and PRO.SKP_SALES_AREA_TYPE=2 
---SA_ACTIVE_DAYS
--LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON FACC.skp_employee_consultant=sa.skp_employee AND PRE.UNIT='SA'

JOIN OWNER_DWH.f_Application_Client_Tt ACT ON ACT.SKP_CREDIT_CASE=DCC.SKP_CREDIT_CASE AND ACT.SKP_CREDIT_TYPE=DCC.SKP_CREDIT_TYPE AND ACT.SKP_CLIENT_ROLE=14
LEFT JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR ON ADDR.SKP_CREDIT_CASE= DCC.SKP_CREDIT_CASE AND ACT.SKP_APPLICATION_CLIENT=ADDR.SKP_APPLICATION_CLIENT AND ADDR.SKP_ADDRESS_TYPE=2--CURRENT
LEFT JOIN OWNER_DWH.DC_CITY DC ON DC.SKP_CITY=ADDR.SKP_CITY
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSA ON DSA.NAME_SALES_AREA=DC.NAME_CITY AND DSA.code_sales_area_status='a' and  DSA.skp_sales_area_type=1
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSAC ON DSA.SKP_SALES_AREA_SUPERIOR=DSAC.SKP_SALES_AREA AND  DSAC.CODE_SALES_AREA_STATUS='a' and DSAC.SKP_SALES_AREA_TYPE=2 
)
,PROVINCE AS 
(
SELECT DISTINCT ID_GROUP
,LISTAGG(REGION,'、' )WITHIN GROUP(ORDER BY REGION) OVER(PARTITION BY ID_GROUP) AS PROVINCE
FROM (SELECT DISTINCT ID_GROUP,REGION FROM FINAL_TRIGGER_BASE)
)
,REGION AS 
(
SELECT DISTINCT AA.ID_GROUP
,BB.PROVINCE
,LISTAGG(CODE_SALES_AREA,'、')WITHIN GROUP(ORDER BY CODE_SALES_AREA) OVER(PARTITION BY AA.ID_GROUP) AS CITY
,CASE WHEN CASE_CATEGORY='2 XSELL' THEN '3 XSELL' 
              WHEN CASE_CATEGORY='0 POS LOAN' THEN '1 POS LOAN'
                WHEN CASE_CATEGORY='3 WALK-IN' THEN '2 WALK-IN'
                  WHEN CASE_CATEGORY='1 ELOAN' THEN '4 ELOAN' --20190807
              ELSE CASE_CATEGORY END AS CASE_CATEGORY     ----------PRIORITY XSELL
FROM  (SELECT DISTINCT ID_GROUP, CODE_SALES_AREA,CASE_CATEGORY FROM FINAL_TRIGGER_BASE) AA
JOIN PROVINCE BB ON AA.ID_GROUP=BB.ID_GROUP
)

SELECT  
 AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID
,'SA' AS UNIT
,'SA'||'_'||AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID_TRIGGER
,TO_DATE(TRI.DATE_DETECT,'YYYY-MM-DD') AS DATE_DETECT
,TO_DATE(TRI.WEEK_DETECT,'YYYY-MM-DD')AS WEEK_DETECT
,TRI.ID_ENTITY
,TRI.name_last_sales
,BB.PROVINCE
,BB.CITY
,CASE WHEN SUBSTR(ID_ENTITY,1,1) IN ('6','D') THEN 'RA' ELSE 'SA' END AS SA_TYPE
,SA.cnt_days_from_first_credit
,'528' AS CLASS
,TRI.TRIGGER_SOURCE
,'SOFT' AS TRIGGER_TYPE
, TRI.TRIGGER_VALUE
,NULL CHECKED_BY
,NULL CASE_STATUS
,NULL CASE_DECISION
,NULL CASE_NO
,NULL INTO_SECURITY
,SYSDATE AS TIME_DETECT
,BB.CASE_CATEGORY
,NULL AS NAME_DISTRICT 
,'是' AS FLAG_SEC_ALL_CONTRACT
FROM (SELECT DISTINCT DATE_DETECT,WEEK_DETECT,ID_ENTITY,name_last_sales,skp_employee_consultant,TRIGGER_SOURCE, TRIGGER_VALUE,ID_GROUP FROM FINAL_TRIGGER_BASE) TRI
JOIN REGION BB ON TRI.ID_GROUP=BB.ID_GROUP 
---SA_ACTIVE_DAYS
LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON TRI.skp_employee_consultant=sa.skp_employee
WHERE length( BB.CITY)<300;
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;


PROCEDURE TRIGGER_531_TSO_SIGN_CONTRACT IS
  BEGIN

INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '531 TSO help sign contract',SYSDATE FROM DUAL;
COMMIT;

--20190419
INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH CAPP AS 
(
SELECT DCRA.SKP_CLIENT,AD.name_last_client AS CLIENT_NAME,AD.text_mobile_client,DCRA.SKP_CREDIT_CASE,DCRA.TEXT_CONTRACT_NUMBER,DCRA.DTIME_DECISION,DCRA.DATE_DECISION,DCRA.SKP_CREDIT_STATUS 
,AD.text_username_employee_sales AS TSO_ID,DE.NAME_LAST AS TSO_NAME,DES.text_username_employee AS TL_ID,DES.NAME_LAST AS TL_NAME
FROM OWNER_DWH.DC_CREDIT_CASE DCRA
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD ON DCRA.SKP_CREDIT_CASE =AD.SKP_CREDIT_CASE 
 AND DCRA.SKP_CREDIT_TYPE =AD.SKP_CREDIT_TYPE 
 AND DCRA.DATE_DECISION =AD.DATE_DECISION 
 AND DCRA.SKP_CREDIT_ACQUISITION_CHNL=2
 AND DCRA.SKP_CREDIT_STATUS IN (2,3)
JOIN OWNER_DWH.DC_EMPLOYEE DE--TSO
 ON AD.skp_employee_consultant=DE.skp_employee
JOIN OWNER_DWH.DC_EMPLOYEE DES--TL
  ON DE.skp_employee_superior=DES.skp_employee
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='531'
  AND DCRA.DATE_DECISION>= EX.MAX_DETECT
)
,logs AS 
(
    SELECT  * FROM 
    (
        SELECT SKP_CLIENT,CLIENT_NAME,TEXT_MOBILE_CLIENT,SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER,DATE_DECISION,SKP_CREDIT_STATUS,DTIME_EVENT, CODE_DEVICE,NAME_DEVICE,TSO_ID,TSO_NAME,TL_ID,TL_NAME
        ,REGEXP_SUBSTR(GEO1,'[^,]+',INSTR(GEO1,'"latitude":',1,1)+11,1) AS LATITUDE
        ,REGEXP_SUBSTR(GEO1,'[^,]+',INSTR(GEO1,'"longitude":',1,1)+12,1) AS LONGITUDE
        ,TEXT_LOG,IP
        ,NETWORK
        FROM 
        (
            SELECT C.*,E.DTIME_EVENT,D.CODE_DEVICE,D.NAME_DEVICE,e.text_log
            ,REGEXP_SUBSTR(TEXT_LOG,'[^}]+',INSTR(TEXT_LOG,'"geolocation":',1,1)+14,1) AS GEO1
            ,REGEXP_SUBSTR(TEXT_LOG,'[^"]+',INSTR(TEXT_LOG,'"ipAddressIsp":"',1,1)+16,1) AS IP
            ,REGEXP_SUBSTR(TEXT_LOG,'[^"]+',INSTR(TEXT_LOG,'"network":"',1,1)+11,1) AS NETWORK
            ,ROW_NUMBER()OVER(PARTITION BY C.SKP_CLIENT ORDER BY E.DTIME_EVENT DESC) AS RNK
            FROM OWNER_DWH.F_MOBILE_APP_EVENT_LOG_TT E
            JOIN CAPP C
              ON E.SKP_CLIENT=C.SKP_CLIENT
            AND DTIME_INSERTED >=C.DTIME_DECISION
            AND E.DTIME_EVENT>=C.DTIME_DECISION
            AND TRUNC(E.DTIME_EVENT)=TRUNC(E.DTIME_INSERTED)
            AND E.SKP_MOBILE_APP_EVENT_TYPE= 261--Liveness detection result confirmed
            JOIN OWNER_DWH.DC_MOBILE_APP_DEVICE D
              ON E.SKP_MOBILE_APP_DEVICE=D.SKP_MOBILE_APP_DEVICE
        )AA WHERE RNK=1 
    )
    WHERE LATITUDE>1
)
,GPS AS 
(
    SELECT TL_ID,TL_NAME,TSO_ID,TSO_NAME,SKP_CLIENT,CLIENT_NAME,TEXT_MOBILE_CLIENT,DTIME_EVENT,CODE_DEVICE,NAME_DEVICE,LATITUDE AS SIGN_LATITUDE,LONGITUDE AS SIGN_LONGITUDE,NETWORK
    ,IP AS SIGN_IP
    ,REGEXP_SUBSTR(GPS,'[^,]+',1,1) AS CC_LATITUDE
    ,REGEXP_SUBSTR(GPS,'[^,]+',1,2) AS CC_LONGITUDE
    ,CALL_CENTER
    ,SKP_CREDIT_CASE ,TEXT_CONTRACT_NUMBER ,DATE_DECISION ,SKP_CREDIT_STATUS
    FROM 
    (
    SELECT GS.*
    ,'28.219706,112.8984' AS CS
    ,'30.46259,114.429248' AS WH
    ,'39.028419,117.714298' AS TJ_MSD
    ,'39.153383,117.180174' AS TJ_WLT
   -- ,'39.137054,117.215445' AS TJ_JG
   -- ,'22.542791,114.062308' AS SZ
    FROM logs gs
    )
    UNPIVOT(GPS FOR CALL_CENTER IN (CS,WH,TJ_MSD,TJ_WLT))
)
,TS_SIGNING_GPS AS
(
    SELECT * FROM 
    (
    SELECT G.*, AP_ANTIFRAUD.GETDISTANCE(SIGN_LATITUDE,SIGN_LONGITUDE,CC_LATITUDE,CC_LONGITUDE) AS DIS_KM
    FROM GPS G
    )
    WHERE DIS_KM<1
)
SELECT 'SA' AS UNIT
,TSO_ID AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD')AS WEEK_DETECT
,'531' AS CLASS
,'TSO help sign contract on CAPP' AS TRIGGER_SOURCE
,'TSO ID: '||TSO_ID||
', TSO NAME: '||TSO_NAME||' under '||
', TL ID: '||TL_ID||
', TL NAME: '||TL_NAME||
', DEVICE_CODE: '||CODE_DEVICE||
', DEVICE_NAME: '||NAME_DEVICE||
', sign latitude: '||SIGN_LATITUDE||
', sign longitude: '||SIGN_LONGITUDE||
', sign IP: '||SIGN_IP||
', DTIME_SIGN: '||TO_CHAR(DTIME_EVENT,'YYYY-MM-DD HH24:MI:SS')||
', DISTANCE TO '||CALL_CENTER||' CALL CENTER: '||DIS_KM*1000||'m'
AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM TS_SIGNING_GPS
WHERE SKP_CREDIT_CASE NOT IN (SELECT SKP_CREDIT_CASE  FROM AP_ANTIFRAUD.f_Af_Final_Contracts fc WHERE trigger_source='TSO help sign contract on CAPP');
COMMIT;
END;

PROCEDURE TRIGGER_532_EXTRA_FEE_FC IS
  BEGIN

INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '532 Extra Fee Fast Close',SYSDATE FROM DUAL;
COMMIT;

--20190530
INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION

WITH COMPLAIN_OVERALL AS 
(SELECT /*+ materialize USE_HASH(TT,aa,RR)*/ distinct aa.SKP_COMPLAINT,aa.SKP_CONTRACT,aa. DTIME_CREATED
FROM owner_dwh.f_complaint_ad aa
JOIN OWNER_DWH.CL_COMPLAINT_TYPE TT ON AA.SKP_COMPLAINT_TYPE=TT.SKP_COMPLAINT_TYPE
JOIN OWNER_DWH.CL_COMPLAINT_RESOLUTION RR ON RR.SKP_COMPLAINT_RESOLUTION=AA.SKP_COMPLAINT_RESOLUTION
WHERE aa.CODE_COMPLAINT_CASE_TYPE='FRAUD_INVESTIGATION'
AND  aa.text_sub_type='RECEIVE_CLIENT_MONEY'
AND  aa.TEXT_NOCOMPLAINT='XNA'
AND aa.DTIME_CREATED>=TRUNC(SYSDATE)-90
AND RR.SKP_COMPLAINT_RESOLUTION NOT IN (13,14,15,16)--TEST CASES
UNION
SELECT /*+ materialize USE_HASH(fct,tt)*/distinct fct.SKP_COMPLAINT,fct.SKP_CONTRACT,tt. DTIME_CREATED
fROM owner_dwh.f_complaint_task_risk_tt tt
JOIN  OWNER_DWH.F_COMPLAINT_TASK_TT FCT 
ON tt.SKF_COMPLAINT_TASK=fct.SKF_COMPLAINT_TASK
WHERE(text_fraud_type='CHARGE_FOR_HANDLING_FEE' OR Text_violation_type LIKE'CHARGE_FOR_HANDLING_FEE%')
AND trunc(tt.DTIME_CREATED)>=trunc(sysdate)-90
),

EXCLUD_CON AS
(SELECT/*+ materialize USE_HASH(FCT,DCU,UTT,DCT,TR)*/ FCT.SKP_CONTRACT,FCT.SKP_COMPLAINT
FROM OWNER_DWH.F_COMPLAINT_TASK_TT FCT
JOIN OWNER_DWH.DC_COMPLAINT_USER DCU ON FCT.SKP_USER_TASK_OWNER = DCU.SKP_COMPLAINT_USER
JOIN OWNER_DWH.F_COMPLAINT_USER_2_TEAM_TT UTT ON FCT.SKP_USER_TASK_OWNER = UTT.SKP_COMPLAINT_USER
JOIN OWNER_DWH.DC_COMPLAINT_TEAM DCT ON DCT.SKP_COMPLAINT_TEAM = UTT.SKP_COMPLAINT_TEAM
JOIN owner_dwh.f_complaint_task_risk_tt TR ON TR.SKF_COMPLAINT_TASK =fct.SKF_COMPLAINT_TASK
WHERE tr. TEXT_SUB_JUDGEMENT_TYPE ='CANCEL_CASE'
OR TR.TEXT_SUB_JUDGEMENT_TYPE='NOT_JUSTIFIED_CANCEL_COMPLAINT'
OR TR.TEXT_SUB_JUDGEMENT_TYPE='NOT_JUSTIFIED_LOST_CONTACT'
OR tr. TEXT_SUB_JUDGEMENT_TYPE='Not Justified-Do Not Cooperate'
OR TR. TEXT_SUB_JUDGEMENT_TYPE='Not Justified-No Time Cooperation'
OR TR. TEXT_SUB_JUDGEMENT_TYPE='Not Justified-Admit Hostility Complaint'),

DCM_DETAIL AS
(select/*+ materialize USE_HASH(AD,CHN,CON,FCT,DCU,DCT,EX)*/ distinct AD.*
FROM COMPLAIN_OVERALL AD
JOIN OWNER_DWH.F_COMPLAINT_TASK_TT FCT ON FCT.SKP_CONTRACT=AD.SKP_CONTRACT
JOIN OWNER_DWH.DC_COMPLAINT_USER DCU ON FCT.SKP_USER_TASK_OWNER = DCU.SKP_COMPLAINT_USER
JOIN OWNER_DWH.F_COMPLAINT_USER_2_TEAM_TT UTT ON FCT.SKP_USER_TASK_OWNER = UTT.SKP_COMPLAINT_USER
JOIN OWNER_DWH.DC_COMPLAINT_TEAM DCT ON DCT.SKP_COMPLAINT_TEAM = UTT.SKP_COMPLAINT_TEAM
LEFT JOIN EXCLUD_CON ex
ON ex.skp_contract=AD. skp_contract AND AD.SKP_COMPLAINT=EX.SKP_COMPLAINT
WHERE ex.skp_contract is null
AND DCT.name_complaint_team ='Risk Team'
AND AD.SKP_CONTRACT<>-1),

DCM_DETAIL_SA AS 
(SELECT AD.*,CASE WHEN CHN.skp_credit_acquisition_chnl=6 THEN CON.skp_employee_consult_3rd_block
WHEN CHN.skp_credit_acquisition_chnl<>6 THEN CON.SKP_EMPLOYEE_CONSULTANT END as SKP_EMPLOYEE,CHN.text_contract_number,CHN.SKP_CREDIT_CASE 
FROM DCM_DETAIL AD
JOIN OWNER_DWH.DC_CREDIT_CASE CHN
ON AD.SKP_CONTRACT=CHN.skp_contract
JOIN OWNER_DWH.F_APPLICATION_TT CON
ON CON.SKP_CREDIT_CASE=CHN.SKP_CREDIT_CASE
),
FINAL_COMPLAINT AS 
(SELECT /*+ materialize USE_HASH(A,EM,CON)*/ EM.TEXT_USERNAME_EMPLOYEE AS SA_ID, A.skp_credit_case,TO_CHAR(A.DTIME_CREATED,'yyyy-MM-dd HH24:mi:ss') AS FRAUD_DATE,A. text_contract_number
,'COMPLAINT' AS FLAG_SOURCE
FROM DCM_DETAIL_SA A
JOIN OWNER_DWH.DC_EMPLOYEE EM
ON A.SKP_EMPLOYEE=EM.SKP_EMPLOYEE 
WHERE EM.TEXT_USERNAME_EMPLOYEE<>'capp'
AND EM.TEXT_USERNAME_EMPLOYEE<>'homer_o2o'
AND EM.TEXT_USERNAME_EMPLOYEE<>'extreme'
AND EM. CODE_EMPLOYEE_STATUS='a'
AND EM.TEXT_IDENT_NUMBER<>'XNA'
AND EM.SKP_BANK_ROLE NOT IN(972,971,970,969,968,967,966,965,964,963,962)
),

FINAL_TRIGGER AS 
(SELECT /*+ materialize USE_HASH(ff,B,EM)*/distinct ff.code_id_violator AS SA_ID,ff.skp_credit_case,TO_CHAR(ff.dtime_af_confirm_result,'yyyy-MM-dd HH24:mi:ss') AS FRAUD_DATE,ff.text_contract_number,'TRIGGER'AS FLAG_SOURCE
FROM OWNER_DWH.DC_CREDIT_CASE B
JOIN ap_antifraud.f_af_final_fraud_contracts ff
ON ff.skp_credit_case=b.skp_credit_case 
JOIN OWNER_DWH.DC_EMPLOYEE EM
ON EM. TEXT_USERNAME_EMPLOYEE=ff.code_id_violator 
WHERE ff.text_violate_type like '%收取客户手续费%'
AND ff.code_violator_type!='POS' 
AND ff. dtime_af_confirm_result>=TRUNC(SYSDATE)-90
AND EM.CODE_EMPLOYEE_STATUS='a'
AND EM.SKP_BANK_ROLE NOT IN (972,971,970,969,968,967,966,965,964,963,962)
),

ALL_SA_1 AS
(SELECT DISTINCT * FROM FINAL_COMPLAINT UNION SELECT DISTINCT * FROM FINAL_TRIGGER),

ALL_SA AS
(SELECT DISTINCT AA.* FROM ALL_SA_1 AA
LEFT JOIN (SELECT TEXT_CONTRACT_NUMBER FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS WHERE CLASS=532 AND (IV_COMMENT LIKE'%DMID%'OR  IV_COMMENT LIKE '否%'))BB
ON AA. TEXT_CONTRACT_NUMBER =BB. TEXT_CONTRACT_NUMBER  
WHERE AA.TEXT_CONTRACT_NUMBER NOT IN ('4068749419001','3770738440005','4050282096001','4062237795001','4052370301001')
AND BB.TEXT_CONTRACT_NUMBER IS NULL
),

CON_SELECTED AS
(SELECT COUNT (DISTINCT AA.SKP_CREDIT_CASE) AS CNT_CON,AA.SA_ID FROM ALL_SA AA GROUP BY AA.SA_ID HAVING(COUNT (DISTINCT AA.SKP_CREDIT_CASE)>=3)
),

LISTAG_CM AS 
(
SELECT DISTINCT  A.SA_ID, A.  FLAG_SOURCE,A.TEXT_CONTRACT_NUMBER,A.SKP_CREDIT_CASE,LISTAGG(A.FRAUD_DATE,'/')WITHIN GROUP(ORDER BY A.SKP_CREDIT_CASE) AS DATE_FOUND_A
FROM FINAL_COMPLAINT A
GROUP BY A.SA_ID, A. FLAG_SOURCE,A.TEXT_CONTRACT_NUMBER,A.SKP_CREDIT_CASE
),

FINAL_SELECT_CON AS 
(
SELECT /*+ materialize USE_HASH(AA,BB,DMM,DT)*/DISTINCT AA.SA_ID,AA.SKP_cREDIT_CASE,AA.TEXT_CONTRACT_NUMBER,AA.FLAG_SOURCE,
CASE WHEN CM.SKP_CREDIT_cASE IS NOT NULL THEN CM.DATE_FOUND_A ELSE AA.FRAUD_DATE END AS FRAUD_DATE FROM ALL_SA AA
JOIN CON_SELECTED BB ON AA.SA_ID=BB.SA_ID
LEFT JOIN LISTAG_CM CM ON CM.SKP_CREDIT_CASE=AA.SKP_CREDIT_CASE
LEFT JOIN  OWNER_DWH.F_DMT_PROC_CONTRACT_DETAIL_TT DMM ON DMM.TEXT_CONTRACT_NUMBER=AA.text_contract_number
LEFT JOIN owner_dwh.f_dmt_process_violation_tt DT ON DMM.skf_dmt_process_header =DT.skf_dmt_process_header AND DT.text_main_violation='收取客户手续费Charge_for_handling_fee'
WHERE DT.DATE_EFFECTIVE IS NULL
 )

SELECT/*+ materialize USE_HASH(CON,SA)*/
'SA' AS UNIT,
CON.SA_ID AS ENTITY,
TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
'532' AS CLASS,
'Extra fee Fast Close' AS TRIGGER_SOURCE,
LISTAGG('此SA共'|| SA.CNT_CON ||'单合同有extra fee 情况,'||'本单为'||(CASE WHEN CON.FLAG_SOURCE='COMPLAINT' THEN '投诉合同'||'且投诉时间为:'||CON.FRAUD_DATE 
WHEN CON.FLAG_SOURCE='TRIGGER' THEN 'trigger确认合同'||'且确认时间为:'||CON.FRAUD_DATE else NULL END),'; ') WITHIN GROUP (order by con.SA_ID)AS TRIGGER_VALUE,--20190606
'SOFT' AS TRIGGER_TYPE,
CON.SKP_CREDIT_CASE,
CON.TEXT_CONTRACT_NUMBER
FROM FINAL_SELECT_CON CON 
LEFT JOIN CON_SELECTED SA ON CON.SA_ID=SA.SA_ID
JOIN LISTAG_CM CM ON CM.SKP_CREDIT_CASE=CON. SKP_CREDIT_CASE
GROUP BY 
'SA',---------------------SA.TEXT_USERNAME_EMPLOYEE_SALES,
CON.SA_ID,
TO_CHAR(SYSDATE, 'YYYY/MM/DD'),
TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD'),
'532',---TO BE DECIDED 
'Extra fee Fast Close',---TO BE DECIDED   
'SOFT',
CON.SKP_CREDIT_CASE,
CON.TEXT_CONTRACT_NUMBER;
COMMIT;
END;


PROCEDURE TRIGGER_538_ONLINE_3PARTY IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name: length       
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_538_ONLINE';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start---------------------------------------------------------------------------------
v_step_message := 'STEP:538_ONLINE';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL); 


INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '538 Online 3Party Payment-Part1',SYSDATE FROM DUAL;
COMMIT;

--20190923
INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH PARTY3_CON AS 
(
SELECT -- /*+ CARDINALITY (FACC 1) */
dcc.SKP_CREDIT_CASE ,dcc.DATE_DECISION ,dcc.SKP_CREDIT_TYPE ,DCC.text_contract_number,FACC.TEXT_USERNAME_EMPLOYEE_SALES,
DCC.skp_client,
facc.text_identity_card_number as ID_CARD,
s.text_login_mobile as LOGIN_MOBILE_NUM
, s.DTIME_INSERTED as  cdate
,t.NAME_DIRECT_DEBIT_CHANNEL as provider_name
,S.AMT_REPAYMENT_TOTAL as total_repay_amount
,'SA/RA/DSM'  AS EMP_TYPE,
----20210113 ZX
CASE WHEN EE.TEXT_USERNAME_EMPLOYEE IS NOT NULL THEN EE.TEXT_USERNAME_EMPLOYEE 
     WHEN E2.TEXT_USERNAME_EMPLOYEE IS NOT NULL THEN E2.TEXT_USERNAME_EMPLOYEE 
     WHEN CSR.TEXT_USERNAME_EMPLOYEE IS NOT NULL THEN LTRIM(CSR.TEXT_USERNAME_EMPLOYEE,'0')
     END AS EMPID
---20210129 ZX
,CSR.NAME_PERSON||'('||CSR.TEXT_IDENT_NUMBER||')' AS CASHIER_INFO
,CSR.DISABLE_DATE AS DISABLE_CASHIER_DATE         
,CASE WHEN EE.TEXT_USERNAME_EMPLOYEE IS NOT NULL THEN EE.SKP_BANK_ROLE 
      WHEN E2.TEXT_USERNAME_EMPLOYEE IS NOT NULL THEN E2.SKP_BANK_ROLE 
      WHEN CSR.POSITION IS NOT NULL THEN 99999 
      END AS SKP_BANK_ROLE
,CASE WHEN EE.TEXT_USERNAME_EMPLOYEE IS NOT NULL THEN 'DWH' 
      WHEN E2.TEXT_USERNAME_EMPLOYEE IS NOT NULL AND VENDOR='SA ONLINE' THEN 'SA online' 
      ELSE 'DWH' 
      END AS PHONE_FROM
FROM OWNER_DWH.F_H5_PAYMENT_ORDER_HEAD_TT s
JOIN OWNER_DWH.F_H5_PAYMENT_ORDER_DETAIL_TT d ON d.SKF_H5_PAYMENT_ORDER_HEAD=s.SKF_H5_PAYMENT_ORDER_HEAD
JOIN OWNER_DWH.Cl_Direct_Debit_Channel T ON t.SKP_DIRECT_DEBIT_CHANNEL=s.SKP_DIRECT_DEBIT_CHANNEL
JOIN OWNER_DWH.Dc_Credit_Case dcc ON d.SKP_CREDIT_CASE =dcc.SKP_CREDIT_CASE 
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC
ON FACC.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE 
AND FACC.SKP_CREDIT_TYPE =DCC.SKP_CREDIT_TYPE 
AND FACC.DATE_DECISION =DCC.DATE_DECISION 
LEFT JOIN OWNER_DWH.Dc_Employee ee ON s.text_login_mobile=ee.TEXT_CELLPHONE AND ee.TEXT_IDENT_NUMBER!=facc.text_identity_card_number AND ee.NAME_LAST!=facc.name_last_client 
AND EE.CODE_EMPLOYEE_STATUS='a'  AND ee.SKP_BANK_ROLE  in(20,33,45,501,2062,2063)----sa/ra/dsm/dsmt --20200507
LEFT JOIN AP_ANTIFRAUD.f_Sa_Phone ph ON s.text_login_mobile=ph.phone AND ph.flag_hit=1 AND ph.ident!=facc.text_identity_card_number AND ph.phone_type LIKE '%OWNER%'
LEFT JOIN OWNER_DWH.Dc_Employee e2 ON ph.text_username_employee=e2.TEXT_USERNAME_EMPLOYEE AND E2.CODE_EMPLOYEE_STATUS='a'
AND e2.SKP_BANK_ROLE  IN (20,33,45,501,2062,2063)
---20210129 ZX
LEFT JOIN 
(SELECT DISTINCT 
SPC.TEXT_MOBILE_PHONE_NUMBER, 
SPC.NAME_PERSON, 
SPC.TEXT_IDENT_NUMBER,
'Cashier' AS POSITION,
ROW_NUMBER() OVER(PARTITION BY SPC.TEXT_MOBILE_PHONE_NUMBER ORDER BY SPC.DTIME_CREATED DESC) AS RNK,
LTRIM(EE.TEXT_USERNAME_EMPLOYEE,'0') AS TEXT_USERNAME_EMPLOYEE,
DD.ACTION_DATE AS DISABLE_DATE
FROM OWNER_DWH.DC_SALES_PERSON_CONTACT SPC
JOIN OWNER_DWH.DC_EMPLOYEE EE
ON SPC.TEXT_IDENT_NUMBER = EE.TEXT_IDENT_NUMBER
AND SPC.NAME_PERSON = EE.NAME_LAST
LEFT JOIN HCCN_ZHANGY.CASHIER_EVIDENCE DD --- ADD DISABLE DATE
ON SPC.TEXT_IDENT_NUMBER = DD.TEXT_IDENT_CARD_NUMBER
AND SPC.TEXT_MOBILE_PHONE_NUMBER = DD.PHONE_NUMBER
AND DD.ACTION='DISABLE'
WHERE SPC.TEXT_MOBILE_PHONE_NUMBER <> 'XNA' AND SPC.CODE_PERSON_ROLE = 'SR_CP_CASHIER'
AND SPC.TEXT_MOBILE_PHONE_NUMBER LIKE '1%' AND LENGTH(LTRIM(SPC.TEXT_MOBILE_PHONE_NUMBER,'0'))=11
AND REGEXP_LIKE(SPC.TEXT_IDENT_NUMBER,'^[[:digit:]]+')
)CSR
ON CSR.RNK = 1
AND S.TEXT_LOGIN_MOBILE = CSR.TEXT_MOBILE_PHONE_NUMBER
AND CSR.TEXT_IDENT_NUMBER <> FACC.TEXT_IDENTITY_CARD_NUMBER
AND CSR.NAME_PERSON <> FACC.NAME_LAST_CLIENT
WHERE s.DTIME_INSERTED  >=SYSDATE-30 
AND D.DTIME_INSERTED  >=SYSDATE-30 
AND DCC.DATE_DECISION >= DATE'2018-10-01' 
AND FACC.DATE_DECISION >=DATE'2018-10-01' 
AND d.NUM_WAPP_PAY_ORDER_STATUS=0
AND s.TEXT_LOGIN_MOBILE<>'XNA'
AND s.TEXT_LOGIN_MOBILE<>s.TEXT_MOBILE 
AND DCC.SKP_CREDIT_STATUS IN (2,3,5)
AND ((FACC.text_brand_exp NOT LIKE '%比亚乔%' AND upper(FACC.TEXT_MODEL_EXP) NOT LIKE '%APR150%'AND upper(FACC.TEXT_MODEL_EXP) NOT LIKE '%APR250%')
 OR FACC.text_brand_exp='XNA' OR FACC.text_brand_exp IS NULL)--REMOVE 3 BRAND MOTOR 20191223
 AND FACC.NAME_SALESROOM <>'TestPOSALDI2.0_NONPILOT' ----20210129 ZX
)

,SA1 AS 
(
SELECT /*+materialize*/ EMPID
,COUNT(DISTINCT SKP_CLIENT) as cnt_client1  
FROM PARTY3_CON C
LEFT JOIN AP_ANTIFRAUD.f_Trcontracts_Preselection pre
ON pre.skp_credit_case=c.SKP_CREDIT_CASE 
AND pre.id_entity=c.EMPID
AND pre.class=538 
JOIN AP_ANTIFRAUD.Cl_Trigger_Excute_Time ET ON ET.CLASS=538
WHERE 
 C.EMP_TYPE ='SA/RA/DSM'
AND C.cdate>=ET.MAX_DETECT --lina
--AND C.cdate >=SYSDATE-10  --(SELECT /*+materialize*/ TI.MAX_DETECT FROM AP_ANTIFRAUD.Cl_Trigger_Excute_Time TI WHERE TI.CLASS=538 )    laobai bangmang
AND pre.SKP_CREDIT_CASE is null
GROUP BY EMPID
HAVING COUNT(DISTINCT SKP_CLIENT)>=1
)
,SA2 AS
(
SELECT  C.EMPID,COUNT(DISTINCT SKP_CLIENT) as cnt_client4 ,MIN(cdate) AS MIN_DATE,MAX(cdate) as max_date
FROM PARTY3_CON C
LEFT JOIN AP_ANTIFRAUD.f_Trcontracts_Preselection pre ON pre.skp_credit_case=c.SKP_CREDIT_CASE 
AND pre.id_entity=c.EMPID
AND pre.class=538 
JOIN sa1 s ON c.EMPID=s.EMPID
WHERE 
 C.EMP_TYPE ='SA/RA/DSM' AND C.cdate >=SYSDATE-30 
AND pre.SKP_CREDIT_CASE is null
GROUP BY C.EMPID 
HAVING COUNT(DISTINCT SKP_CLIENT)>=2--changed from 3 to 2 20191016
)
,CON_DE AS 
(
SELECT /*+materialize*/ C.SKP_CREDIT_CASE ,C.TEXT_CONTRACT_NUMBER,c.EMPID,C.SA_TYPE
,listagg(C.LOGIN_MOBILE_NUM||'('||C.PHONE_FROM||')','/') within group(order by LOGIN_MOBILE_NUM) as LOGIN_MOBILE_NUM
,listagg(C.provider_name,'/') within group(order by LOGIN_MOBILE_NUM) as provider_name
FROM 
     (
    SELECT DISTINCT 
    c.EMPID,
    C.SKP_CREDIT_CASE 
    ,C.TEXT_CONTRACT_NUMBER
    ,C.LOGIN_MOBILE_NUM
    ,c.provider_name
    ----20210113 ZX
    ,CASE WHEN SKP_BANK_ROLE=33 THEN 'RA' 
          WHEN SKP_BANK_ROLE='45' THEN 'SA' 
          WHEN SKP_BANK_ROLE IN (20,501,2062,2063) THEN 'DSM' 
          WHEN SKP_BANK_ROLE=99999 THEN 'CASHIER-'||C.CASHIER_INFO END AS SA_TYPE
    ,C.PHONE_FROM
    FROM PARTY3_CON C
    LEFT join AP_ANTIFRAUD.f_Trcontracts_Preselection pre ON pre.skp_credit_case=c.SKP_CREDIT_CASE 
    AND pre.id_entity=c.EMPID
    AND pre.class=538 
    LEFT JOIN  AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION PRE2 ON pre2.skp_credit_case=c.SKP_CREDIT_CASE 
    AND  pre2.id_entity=c.EMPID
    AND  pre2.CLASS=99 AND pre2.DATE_DETECT='2019/08/27' AND  pre2.trigger_value like 'SA/RA/DSM HOMER ID%'
    JOIN SA2 A
    ON C.EMPID=A.EMPID 
    WHERE --c.empid='5041290'
    pre.SKP_CREDIT_CASE IS  NULL
    AND pre2.SKP_CREDIT_CASE IS NULL 
    )c
GROUP BY  C.SKP_CREDIT_CASE ,C.TEXT_CONTRACT_NUMBER,c.EMPID,C.SA_TYPE
)
, con_amt AS
(
SELECT  
c.EMPID,
C.SKP_CREDIT_CASE 
,C.TEXT_CONTRACT_NUMBER,
SUM(C.total_repay_amount) as total_repay_amount
,MAX(C.cdate) AS CON_MAX_PAY_DATE
FROM PARTY3_CON C
JOIN SA2 A ON C.EMPID=A.EMPID
JOIN con_de d on d.SKP_CREDIT_CASE =c.SKP_CREDIT_CASE 
GROUP BY c.EMPID,C.SKP_CREDIT_CASE ,C.TEXT_CONTRACT_NUMBER
)
---20210129 ZX
, CASHIER_DISABLE AS(
SELECT A.EMPID, A.SKP_CREDIT_CASE, A.TEXT_CONTRACT_NUMBER, A.CON_MAX_PAY_DATE,
CASE WHEN A.CON_MAX_PAY_DATE >= B.DISABLE_CASHIER_DATE THEN 'VIOLATE AFTER DISABLE'
     WHEN A.CON_MAX_PAY_DATE < B.DISABLE_CASHIER_DATE THEN 'DISABLE AFTER_VIOLATE'
     WHEN B.DISABLE_CASHIER_DATE IS NULL THEN 'NOT DISABLE'
     END AS DISABLE_COMPARE
FROM CON_AMT A
JOIN PARTY3_CON B
ON A.EMPID = B.EMPID
AND A.SKP_CREDIT_CASE = B.SKP_CREDIT_CASE
AND B.DISABLE_CASHIER_DATE IS NOT NULL
AND B.SKP_BANK_ROLE=99999
)
,CON_RANK AS 
(
SELECT /*+materialize*/ A.*, ROW_NUMBER()OVER(PARTITION BY A.EMPID ORDER BY A.SKP_CREDIT_CASE ) AS CON_RAN
FROM CON_AMT A
JOIN SA2 B
ON A.EMPID=B.EMPID
AND B.cnt_client4<=15
)
,TRIGGER_VA AS 
(
SELECT A.EMPID
,LISTAGG(A.TEXT_CONTRACT_NUMBER||'--通过'||B.provider_name||'渠道带客户还款'||A.total_repay_amount||'元' , '。') WITHIN GROUP(ORDER BY  A.SKP_CREDIT_CASE ) AS TRIGGER_V
FROM CON_RANK A  JOIN CON_DE B ON A.SKP_CREDIT_CASE =B.SKP_CREDIT_CASE AND A.EMPID=B.EMPID GROUP BY A.EMPID
)
SELECT /*+materialize*/ 
DISTINCT 
'SA' AS UNIT,
C.EMPID AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'538' AS CLASS
,'Online Third Party Payment' AS TRIGGER_SOURCE
,'Repayment date: '||to_char(b.con_max_pay_date,'YYYY/MM/DD')||', #Auto-punishment# 属于集中性案件，共涉及'||a.cnt_client4||'单。 Homer系统匹配到：'||to_char(MIN_DATE,'YYYY')||'年'||TO_CHAR(MIN_DATE,'MM')||'月'||TO_CHAR(MIN_DATE,'DD')||'日到'||
to_char(MAX_DATE,'YYYY')||'年'||TO_CHAR(MAX_DATE,'MM')||'月'||TO_CHAR(MAX_DATE,'DD')||'日，'||C.SA_TYPE|| '通过'||c.provider_name||'渠道代客户还款'||b.total_repay_amount||
'元。经核实还款期间输入的手机号'||c.LOGIN_MOBILE_NUM||'与销售预留在我司的手机号相同。'||'('||DD.DISABLE_COMPARE||')' as TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,C.SKP_CREDIT_CASE 
,C.TEXT_CONTRACT_NUMBER
FROM CON_DE C
JOIN con_amt b ON c.SKP_CREDIT_CASE =b.SKP_CREDIT_CASE 
AND c.EMPID=b.EMPID
JOIN SA2 A ON C.EMPID=A.EMPID
---20210129 ZZX
LEFT JOIN CASHIER_DISABLE DD
ON B.EMPID = DD.EMPID
AND B.CON_MAX_PAY_DATE = DD.CON_MAX_PAY_DATE
;
--WHERE a.cnt_client4>15;
--20201117
/*UNION
SELECT \*+materialize*\ 
DISTINCT 
'SA' AS UNIT,
C.EMPID AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'538' AS CLASS
,'Online Third Party Payment' AS TRIGGER_SOURCE
,'Repayment date: '||TO_CHAR(b.CON_MAX_PAY_DATE,'YYYY/MM/DD')||', #Auto-punishment# 属于集中性案件，共涉及'||a.cnt_client4||'单。 Homer系统匹配到：'||to_char(MIN_DATE,'YYYY')||'年'||TO_CHAR(MIN_DATE,'MM')||'月'||TO_CHAR(MIN_DATE,'DD')||'日到'||
to_char(MAX_DATE,'YYYY')||'年'||TO_CHAR(MAX_DATE,'MM')||'月'||TO_CHAR(MAX_DATE,'DD')||'日，'||C.SA_TYPE || '通过'||c.provider_name||'渠道代客户还款'||b.total_repay_amount||
'元。经核实还款期间输入的手机号'||c.LOGIN_MOBILE_NUM||'与销售预留在我司的手机号相同。'||e.TRIGGER_V as TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,C.SKP_CREDIT_CASE 
,C.TEXT_CONTRACT_NUMBER
FROM CON_DE C
JOIN con_amt b ON c.SKP_CREDIT_CASE =b.SKP_CREDIT_CASE 
AND c.EMPID=b.EMPID
JOIN SA2 A ON C.EMPID=A.EMPID
JOIN CON_RANK d ON d.SKP_CREDIT_CASE =c.SKP_CREDIT_CASE 
AND d.EMPID=c.EMPID
JOIN TRIGGER_VA e ON c.EMPID=e.EMPID
WHERE a.cnt_client4<=15
AND d.CON_RAN<=5
UNION ALL

SELECT \*+materialize*\ 
DISTINCT 
'SA' AS UNIT,
C.EMPID AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'538' AS CLASS
,'Online Third Party Payment' AS TRIGGER_SOURCE
,'参考合同' as TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,C.SKP_CREDIT_CASE 
,C.TEXT_CONTRACT_NUMBER
FROM CON_DE C
JOIN con_amt b ON c.SKP_CREDIT_CASE =b.SKP_CREDIT_CASE 
AND c.EMPID=b.EMPID
JOIN SA2 A ON C.EMPID=A.EMPID
JOIN CON_RANK d ON d.SKP_CREDIT_CASE =c.SKP_CREDIT_CASE 
AND d.EMPID=c.EMPID
JOIN TRIGGER_VA e ON c.EMPID=e.EMPID
WHERE a.cnt_client4<=15
AND d.CON_RAN>5;*/
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;
PROCEDURE TRIGGER_539_CLIENT_DIFF_PRO IS
  BEGIN

INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '539 POS Client Not Same Province',SYSDATE FROM DUAL;
COMMIT;

--20190827
INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH CL_CITY AS 
(
SELECT DISTINCT CODE_SALES_AREA_PROVINCE,NAME_SALES_AREA_PROVINCE,
NAME_REGION_EN,NAME_REGION 
FROM OWNER_DWH.DDC_SALESROOM
)
,ONE_WEEK_DATA AS
(
SELECT DISTINCT AD.SKP_CREDIT_CASE,AD.DATE_DECISION,AD.CODE_SALESROOM,AD.SKP_SALESROOM,AD.TEXT_CONTRACT_NUMBER,
DC.CODE_SALES_AREA_CITY AS POS_CITY_EN,DC.NAME_REGION AS POS_CITY,
DC.CODE_SALES_AREA_PROVINCE AS POS_PROVINCE,DC.NAME_SALES_AREA_PROVINCE AS POS_PROVINCE_CN,
AA.SKP_CLIENT,AA.NAME_CITY_PERM AS CLIENT_CITY,DIC.NAME_CITY_EN AS CLIENT_CITY_EN,
CITY.CODE_SALES_AREA_PROVINCE AS CLIENT_PROVINCE,CITY.NAME_SALES_AREA_PROVINCE AS CLIENT_PROVINCE_CN
FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD
JOIN OWNER_DWH.DC_CREDIT_CASE SE -----!!!!!!! JOIN 这个表去排除RPOS的单 20190919
ON SE.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE AND SE.SKP_CREDIT_TYPE=1 AND SE.SKP_PRODUCT_CHANNEL<>804 AND SE.DATE_DECISION=AD.DATE_DECISION
JOIN OWNER_DWH.DDC_SALESROOM DC ON DC.SKP_SALESROOM=AD.SKP_SALESROOM AND DC.NAME_SALESROOM NOT LIKE '%RPOSonline%'
JOIN OWNER_DWH.DC_CLIENT_ADDRESS AA 
ON AA.SKP_CLIENT=AD.SKP_CLIENT AND AA.DATE_EFFECTIVE>=TRUNC(NEXT_DAY(SYSDATE-8,1)-6) AND AD.DATE_DECISION<=TRUNC(NEXT_DAY(SYSDATE-8,1)) 
JOIN OWNER_DWH.DC_CITY DIC ON DIC.NAME_CITY=AA.NAME_CITY_PERM
JOIN CL_CITY CITY ON CITY.NAME_REGION_EN=DIC.NAME_CITY_EN AND CITY.NAME_REGION=AA.NAME_CITY_PERM
WHERE AD.CODE_CREDIT_STATUS ='a'
AND AD.SKP_CREDIT_TYPE=1
AND AD.DATE_DECISION>=TRUNC(NEXT_DAY(SYSDATE-8,1)-6)
AND AD.DATE_DECISION<=TRUNC(NEXT_DAY(SYSDATE-8,1))
AND DC.NAME_SALESROOM NOT LIKE '%RPOSonline%'
AND SE.SKP_PRODUCT_CHANNEL<>804
AND SE.SKP_CREDIT_ACQUISITION_CHNL<>21 --20200529
AND SE.SKP_CREDIT_TYPE=1 
AND SE.DATE_DECISION>=TRUNC(NEXT_DAY(SYSDATE-8,1)-6)
AND SE.DATE_DECISION<=TRUNC(NEXT_DAY(SYSDATE-8,1))
)
,CONCEN AS 
(
SELECT TA.CODE_SALESROOM,TA.SKP_SALESROOM,TA.POS_PROVINCE,TA.CLIENT_PROVINCE,
COUNT(DISTINCT TA.SKP_CREDIT_CASE) AS APPLICATION_AMT
FROM ONE_WEEK_DATA TA 
WHERE TA.POS_PROVINCE!=TA.CLIENT_PROVINCE
GROUP BY TA.CODE_SALESROOM,TA.CLIENT_PROVINCE,TA.POS_PROVINCE,TA.SKP_SALESROOM
)
,ALL_POS AS 
(
SELECT COUNT(DISTINCT TA.SKP_CREDIT_CASE) AS ALL_APP,TA.SKP_SALESROOM
FROM ONE_WEEK_DATA TA 
GROUP BY TA.SKP_SALESROOM
)
,TARGET_POS AS 
(
SELECT DISTINCT SKP_SALESROOM,CODE_SALESROOM,POS_PROVINCE,CLIENT_PROVINCE,APPLICATION_AMT
FROM CONCEN EN 
WHERE (EN.APPLICATION_AMT>=10 AND EN.POS_PROVINCE IN ('JS','ZJ','SH','BJ','FJ','GDE','GDW','TJ'))
OR (EN.APPLICATION_AMT>=5 AND EN.POS_PROVINCE NOT IN ('JS','ZJ','SH','BJ','FJ','GDE','GDW','TJ'))
)
,CROSS_TRIGGER AS 
(
SELECT TA.*,OS.APPLICATION_AMT
FROM TARGET_POS OS 
JOIN ONE_WEEK_DATA TA ON TA.CODE_SALESROOM=OS.CODE_SALESROOM AND TA.SKP_SALESROOM=OS.SKP_SALESROOM
AND TA.CLIENT_PROVINCE=OS.CLIENT_PROVINCE AND TA.POS_PROVINCE=OS.POS_PROVINCE
)
,BIGDATA AS 
(
SELECT ER.SKP_CREDIT_CASE,ER.DATE_DECISION,TT.TEXT_VALUE,CL.CODE_ADDITIONAL_INFO
FROM CROSS_TRIGGER ER 
JOIN OWNER_DWH.F_APPRSTEP_ADDITIONAL_INFO_TT TT
ON ER.SKP_CREDIT_CASE = TT.SKP_CREDIT_CASE
AND ER.DATE_DECISION = TT.DATE_DECISION AND TT.SKP_CREDIT_TYPE=1
JOIN OWNER_DWH.CL_APPRSTEP_ADD_INFO CL
ON TT.SKP_APPRSTEP_ADD_INFO = CL.SKP_APPRSTEP_ADD_INFO
WHERE LOWER(CL.CODE_ADDITIONAL_INFO)IN ('a15_areainfocheck','a15_timelength')
AND TT.SKP_CREDIT_TYPE=1
)
,TRIGGER_VALUE AS 
(
SELECT A.*
FROM (
SELECT SKP_CREDIT_CASE,TEXT_VALUE,CODE_ADDITIONAL_INFO FROM HCCN_LVA.BIGDATA )
PIVOT (MAX (TEXT_VALUE) FOR CODE_ADDITIONAL_INFO IN ('a15_timeLength','a15_areaInfoCheck')) A
)

SELECT 
'POS' AS UNIT
,BB.CODE_SALESROOM
,TO_CHAR(SYSDATE,'YYYY/MM/DD')AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'539' AS CLASS
,'POS_Client not same province' AS TRIGGER_SOURCE
,CASE WHEN "'a15_timeLength'" IS NOT NULL OR "'a15_areaInfoCheck'" IS NOT NULL
THEN 'POS省份'||':'||BB.POS_PROVINCE_CN||',CLIENT省份:'||BB.CLIENT_PROVINCE_CN||',单量'||BB.APPLICATION_AMT||'单'
||'#,CLIENT城市:'||BB.CLIENT_PROVINCE_CN||BB.CLIENT_CITY
||',手机号使用时长:'||"'a15_timeLength'"||',手机号归属地:'||"'a15_areaInfoCheck'"||',门店本周总销售量:'||AA.ALL_APP
||', 办单日期:'||TO_CHAR(BB.DATE_DECISION,'YYYY-MM-DD') 
ELSE 'POS省份'||':'||BB.POS_PROVINCE_CN||',CLIENT省份:'||BB.CLIENT_PROVINCE_CN||',单量'||BB.APPLICATION_AMT||'单'
||'#,CLIENT城市:'||BB.CLIENT_PROVINCE_CN||BB.CLIENT_CITY||',门店本周总销售量:'||AA.ALL_APP
||', 办单日期:'||TO_CHAR(BB.DATE_DECISION,'YYYY-MM-DD') END AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,BB.SKP_CREDIT_CASE
,BB.TEXT_CONTRACT_NUMBER
FROM CROSS_TRIGGER BB
LEFT JOIN TRIGGER_VALUE VE ON VE.SKP_CREDIT_CASE=BB.SKP_CREDIT_CASE
LEFT JOIN ALL_POS AA ON AA.SKP_SALESROOM=BB.SKP_SALESROOM;
COMMIT;
END;

PROCEDURE TRIGGER_541_AVS_TRIGGER IS
  BEGIN

---setting 1: AVS video unsuccess
--stop 20200506
/*INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '541 AVS TRIGGER',SYSDATE FROM DUAL;
COMMIT;

--20191107--20191210--20200417
INSERT \*+ append*\ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
with base1 as 
(
select distinct client_id,max(time_sms_sent) as latest_video_time from ap_crm_datamining.kennan_avs_case 
where time_sms_sent >= date'2019-10-01' and pos_id<>'test'  group by client_id
)
,base2 as 
(
select distinct b1.client_id,b1.latest_video_time,ap.case_id,ap.pos_id,max(acm.case_status) as case_status,
max(acm.case_result) as case_result,max(acm.case_result2) as case_result2
from base1 b1 
join ap_crm_datamining.kennan_avs_case ap on ap.client_id=b1.client_id and ap.time_sms_sent=b1.latest_video_time 
join  AP_CRM_DATAMINING.kennan_avs_casemark acm on ap.case_id=acm.case_id
where acm.case_status='未成功'
and acm.case_result <> '系统问题'
and acm.case_result <>'视频质量不好无有效沟通'
and acm.case_result2 <>'客户未携带身份证银行卡'
and acm.case_result2 <> '客户个人原因需要离开'
group by b1.client_id,b1.latest_video_time,ap.case_id,ap.pos_id
),
base3 as 
(
select distinct ad.text_identity_card_number,ad.code_credit_type,min(ad.dtime_review) as application_time
from DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ad
join base2 b2 on b2.client_id=ad.text_identity_card_number
left join OWNER_DWH.DC_EMPLOYEE EE ON EE.SKP_EMPLOYEE=AD.SKP_EMPLOYEE_CONSULTANT
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='541' AND TRUNC(SYSDATE)-TRUNC(ad.date_Decision) BETWEEN 1 AND EX.DAYS
where ad.date_decision > b2.latest_video_time
and ad.date_Decision - b2.latest_video_time <= 7
and b2.pos_id <> ad.code_salesroom
and ee.skp_bank_role <> 1962
and ad.date_decision>=date'2019-10-01'
group by ad.text_identity_card_number,ad.code_credit_type
)
,base4 as 
(
select 
distinct b2.client_id,b2.pos_id as avs_pos_id,
to_char(b2.latest_video_time,'yyyy-mm-dd,hh:mi:ss') as latest_video_time,b2.case_id,
b2.case_status,b2.case_result,b2.case_result2,b3.text_identity_card_number,b3.application_time,
ad.skp_credit_case,ad.text_contract_number,ad.date_decision,
ad.code_credit_status,ad.code_credit_type,ad.code_salesroom,ad.name_business_province_en,
ti.skp_tipper as second_tipper,dct.NAME_TIPPER as tipper_name,dct.text_phone_number as tipper_phone,
ad.date_decision-b2.latest_video_time as date_gap
from base2 b2
join base3 b3 on b2.client_id=b3.text_identity_card_number
join DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ad on b3.text_identity_card_number=ad.text_identity_card_number and b3.application_time=ad.dtime_review
left join OWNER_DWH.DC_EMPLOYEE EE ON EE.SKP_EMPLOYEE=AD.SKP_EMPLOYEE_CONSULTANT
left JOIN OWNER_DWH.DC_CREDIT_CASE DCC ON DCC.skp_credit_case=ad.SKP_CREDIT_CASE and dcc.skp_contract <> -1
left JOIN owNER_DWH.f_Tipper_Commission_Tt tc ON DCC.skp_contract=TC.SKP_CONTRACT and tc.skp_contract<> -1
left JOIN  OWNER_DWH.F_TIPPER_CLIENT_TT TI ON TI.SKF_TIPPER_CLIENT=TC.SKF_TIPPER_CLIENT
left join owNER_DWH.dc_tipper dct on dct.skp_tipper=ti.SKP_TIPPER
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='541' AND TRUNC(SYSDATE)-TRUNC(ad.date_Decision) BETWEEN 1 AND EX.DAYS
where ad.date_decision>b2.latest_video_time
and ad.date_Decision - b2.latest_video_time <= 7
and ad.date_decision>=date'2019-10-01' 
)
SELECT 
DISTINCT 'POS' AS UNIT
,b4.code_salesroom AS ID_ENTITY
,TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE, 'IW')+6,'YYYY/MM/DD') AS WEEK_DETECT
,'541' AS CLASS
,'applications within 7 days after AVS video unsuccess' as TRIGGER_SOURCE
,CASE WHEN b4.CODE_SALESROOM IS NOT NULL THEN '该门店(' ||b4.avs_pos_id|| ') 因AVS视频办单未成功后客户与7日内办理其他申请被trigger,'||
',AVS 视频办单时间:'||b4.latest_video_time||
';客户 ID:'||b4.client_id||',视频状态:'||b4.case_status||',视频结果:'||b4.case_result||',视频结果2:'||b4.case_result2
||',视频失败后的非AVS合同申请由 TIPPER:'||b4.second_tipper||'办理 ,TIPPER NAME:'||b4.tipper_name||',TIPPER PHONE:'||b4.tipper_phone
END AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,b4.SKP_CREDIT_CASE
,b4.text_contract_number
FROM base4 b4
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ad  ON b4.SKP_CREDIT_CASE=ad.SKP_CREDIT_CASE
join OWNER_DWH.DC_EMPLOYEE EE1 ON EE1.SKP_EMPLOYEE=AD.SKP_EMPLOYEE_CONSULTANT   
WHERE ad.date_decision>=date'2019-10-01' AND ee1.SKP_BANK_ROLE=1962;
COMMIT;*/

---setting 2: hard check
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '541 HARD CHECK',SYSDATE FROM DUAL;
COMMIT;

--20191119--20191231
INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
with hard_check_cnt as 
(
select ad.code_salesroom, count(distinct ad.skp_credit_case) as app_cnt,
count(distinct case when ad.code_credit_status in ('a','k','n') then ad.skp_credit_case end ) as approve_cnt,
count(distinct case when ad.code_ko_list is not null and ad.code_ko_list <> 'XNA' then ad.skp_credit_case end) as ko_cnt,
count(distinct case when ad.code_ko_list like '%INTCODE%' then ad.skp_credit_case end) as intcode_cnt,
count(distinct case when ad.code_ko_list is not null and ad.code_ko_list <> 'XNA' then ad.skp_credit_case end)/count(distinct ad.skp_credit_case) as ko_rate,
count(distinct case when ad.code_ko_list like '%INTCODE%' then ad.skp_credit_case end)/count(distinct ad.skp_credit_case) as intcode_rate
from dm_antifraud.f_af_credit_case_ad ad 
join owner_dwh.dc_employee ee on ee.skp_employee=ad.skp_employee_consultant
join ap_antifraud.cl_trigger_excute_time ex on ex.class='541' and ad.date_decision <= trunc(sysdate)- 1 and ad.date_decision >= trunc(sysdate) - ex.days
where ee.skp_bank_role=1962
and ad.date_decision>=trunc(sysdate)-10
and ad.skp_credit_type=1
group by ad.code_salesroom
)
,hard_check_contract as 
(
select ad.skp_credit_case,ad.text_contract_number,ad.amt_credit,b1.code_salesroom,b1.app_cnt,b1.approve_cnt,b1.ko_cnt,b1.ko_rate
from hard_check_cnt b1 
join dm_antifraud.f_af_credit_case_ad ad on ad.code_salesroom=b1.code_salesroom
join owner_dwh.dc_employee ee on ee.skp_employee=ad.skp_employee_consultant
join ap_antifraud.cl_trigger_excute_time ex on ex.class='541' and ad.date_decision <= trunc(sysdate)- 1 and ad.date_decision >= trunc(sysdate) - ex.days
where ad.date_decision>=trunc(sysdate)-10
and ee.skp_bank_role=1962
and ad.skp_credit_type=1
and ad.code_credit_status in ('a','k','n')
and b1.ko_cnt>=3 and b1.ko_rate>= 0.5
order by ad.amt_credit DESC
)
,risk as 
(
select 
distinct 
ad.code_salesroom,
count(distinct case when ad.num_observ_def10_maxinst >= 1 then ad.skp_credit_case end) as fpd10_observe,
count(distinct case when ad.num_min_inst_def10_dd = 1 then ad.skp_credit_case end) as fpd10_def,
case when count(distinct case when ad.num_observ_def10_maxinst >= 1 then ad.skp_credit_case end) <> 0 
  then count(distinct case when ad.num_min_inst_def10_dd = 1 then ad.skp_credit_case end)/count(distinct case when ad.num_observ_def10_maxinst >= 1 then ad.skp_credit_Case end)
end as rate_fpd10,
count(distinct case when ad.num_observ_def30_maxinst >= 1 then ad.skp_credit_case end) as fpd30_observe,
count(distinct case when ad.num_min_inst_def30_dd = 1 then ad.skp_credit_case end) as fpd30_def,
case when count(distinct case when ad.num_observ_def30_maxinst >= 1 then ad.skp_credit_case end) <> 0 
  then count(distinct case when ad.num_min_inst_def30_dd = 1 then ad.skp_credit_case end)/count(distinct case when ad.num_observ_def30_maxinst >= 1 then ad.skp_credit_case end)
end as rate_fpd30
from dm_antifraud.f_af_credit_case_ad ad
join dm_antifraud.f_contract_ad fad on fad.skp_credit_case=ad.skp_credit_case
join owner_dwh.dc_employee ee on ee.skp_employee=ad.skp_employee_consultant
join ap_antifraud.cl_trigger_excute_time ex on ex.class='541' and trunc(sysdate-10)-trunc(fad.date_first_due) between 1 and ex.days
where 
ad.date_decision>=trunc(sysdate)-60
and ee.skp_bank_role=1962
and fad.date_first_due >=date'2019-10-14'
and ad.date_decision >= date'2019-09-01'
and ad.skp_credit_type=1
and ad.num_observ_def10_maxinst >= 1
group by ad.code_salesroom
)
,risk_benchmark as 
(
select 
case when count(distinct case when ad.num_observ_def10_maxinst >= 1 then ad.skp_credit_case end) <> 0 
  then count(distinct case when ad.num_min_inst_def10_dd = 1 then ad.skp_credit_case end)/count(distinct case when ad.num_observ_def10_maxinst >= 1 then ad.skp_credit_Case end)
end as r_FPD10,
case when count(distinct case when ad.num_observ_def30_maxinst >= 1 then ad.skp_credit_case end) <> 0 
  then count(distinct case when ad.num_min_inst_def30_dd = 1 then ad.skp_credit_case end)/count(distinct case when ad.num_observ_def30_maxinst >= 1 then ad.skp_credit_case end)
end as r_FPD30
from dm_antifraud.f_af_credit_case_ad ad
join risk b3 on b3.code_salesroom=ad.code_salesroom
join dm_antifraud.f_contract_ad fad on fad.skp_credit_case=ad.skp_credit_case
join ap_antifraud.cl_trigger_excute_time ex on ex.class='541' and trunc(sysdate-10)-trunc(fad.date_first_due) between 1 and ex.days
where ad.date_decision>=trunc(sysdate)-60
and fad.date_first_due >=date'2019-10-14'
and ad.skp_credit_type=1
)
,p_value1 as 
(
select b3.code_salesroom,b3.fpd10_observe,b3.fpd10_def,b3.rate_fpd10,
ap_antifraud.p_value(b3.fpd10_def,b3.fpd10_observe,b4.r_FPD10) as fpd10_pvalue
from risk b3 ,risk_benchmark b4
order by fpd10_pvalue ASC
)
,p_value_contract as 
(
select ad.skp_credit_case,ad.text_contract_number,b5.code_salesroom,b5.fpd10_pvalue
from p_value1 b5 
join dm_antifraud.f_af_credit_case_ad ad on ad.code_Salesroom=b5.code_Salesroom
join owner_dwh.dc_employee ee on ee.skp_employee=ad.skp_employee_consultant
join ap_antifraud.cl_trigger_excute_time ex on ex.class='541' and ad.date_decision <= trunc(sysdate)- 1 and ad.date_decision >= trunc(sysdate) - ex.days
where ad.date_decision>=trunc(sysdate)-10
and ee.skp_bank_role=1962
and ad.skp_credit_type=1
and b5.fpd10_observe > 1
and b5.fpd10_pvalue < 0.01 
)
,week_ratio as 
(
select ad.code_salesroom,count(distinct ad.skp_credit_case) as last_week_app,
b1.app_cnt, b1.app_cnt/count(distinct ad.skp_credit_case) as week_ratio
from dm_antifraud.f_af_credit_case_ad ad 
join hard_check_cnt b1 on b1.code_Salesroom=ad.code_salesroom
join owner_dwh.dc_employee ee on ee.skp_employee=ad.skp_employee_consultant
join ap_antifraud.cl_trigger_excute_time ex on ex.class='541' and ad.date_decision <= trunc(sysdate-7)- 1 and ad.date_decision >= trunc(sysdate-7) - ex.days
where ad.date_decision>=trunc(sysdate)-15
and ee.skp_bank_role=1962
and ad.skp_credit_type=1
group by ad.code_salesroom,b1.app_cnt
)
,week_ratio_contract as 
(
select ad.skp_credit_case,ad.text_contract_number,ad.amt_Credit,b7.code_salesroom,b7.app_cnt,b7.last_week_app,b7.week_ratio
from week_ratio b7 
join dm_antifraud.f_af_credit_case_ad ad on ad.code_Salesroom=b7.code_salesroom
join owner_dwh.dc_employee ee on ee.skp_employee=ad.skp_employee_consultant
join ap_antifraud.cl_trigger_excute_time ex on ex.class='541' and ad.date_decision <= trunc(sysdate)- 1 and ad.date_decision >= trunc(sysdate) - ex.days
where ad.date_decision>=trunc(sysdate)-10
and ee.skp_bank_role=1962
and ad.skp_credit_type=1
and ad.code_credit_status in ('a','k','n')
and b7.week_ratio> 5
order by ad.amt_credit desc 
)
,total as 
(
select
distinct 'POS' as unit
,b2.code_salesroom as id_entity
,to_char(sysdate, 'yyyy/mm/dd') AS date_detect
,to_char(trunc(sysdate, 'iw')+6,'yyyy/mm/dd') AS week_detect
,'541' as class
,'Hardcheck_rate_pos' as trigger_source
,case when b2.code_salesroom is not null and b2.ko_cnt is not null and b2.ko_rate is not null then 
'该门店(' ||b2.code_salesroom|| ') 因本周高风险拒单数量大于等于3且高风险拒单率高于0.5被trigger,'|| 
'该门店本周单量为:'||b2.app_cnt||'高风险拒单量为:'||b2.ko_cnt||'通过单量为:'||b2.approve_cnt||
';高风险拒单率:'||trunc(b2.ko_rate,2)||
';本合同的为该可疑门店的通过合同。'
 end as trigger_value
,'SOFT' as trigger_type
,b2.skp_credit_case
,b2.text_contract_number
from hard_check_contract b2
where rownum<=120
union
select 
distinct 'POS' as unit
,b6.code_salesroom as id_entity
,to_char(sysdate, 'yyyy/mm/dd') as date_detect
,to_char(trunc(sysdate,'iw')+6,'yyyy/mm/dd') as week_detect
,'541' as class
,'FPD10_pvalue_pos' as trigger_source
,case when b6.code_salesroom is not null and b6.fpd10_pvalue is not null then 
     '该门店(' ||b6.code_salesroom|| ') 因本周风控FPD10表现较差被trigger,'|| 
     'FPD10 RELATED P-VALUE:'||b6.fpd10_pvalue
 end as trigger_value
,'SOFT' as trigger_type
,b6.skp_credit_case
,b6.text_contract_number
from p_value_contract b6
union 
select 
distinct 'POS' as unit
,b8.code_salesroom as id_entity
,to_char(sysdate, 'yyyy/mm/dd') as date_detect
,to_char(trunc(sysdate, 'iw')+6,'yyyy/mm/dd') as week_detect
,'541' as class
,'App_increase_pos' as trigger_source
,case when b8.code_salesroom is not null and b8.week_ratio is not null then 
        '该门店(' ||b8.code_salesroom|| ') 因本周单量超过上周的五倍以上被trigger,'||
       '门店本周单量与上周单量的倍数为:'||b8.week_ratio||';本周单量为:'||b8.app_cnt||';上周单量为:'||b8.last_week_app
 end as trigger_value
,'SOFT' as trigger_type
,b8.skp_credit_case
,b8.text_contract_number
from week_ratio_contract b8
where rownum<=30
)
select unit,id_entity,date_detect,week_detect,class,trigger_source,trigger_value,trigger_type,skp_credit_case,text_contract_number  
from (select t.*,row_number() over(partition by t.skp_credit_case order by t.trigger_source asc) flag     
from total t) tt where tt.flag = 1;
COMMIT;
END;


PROCEDURE TRIGGER_545_REMOTE_APPLICATION IS
  v_stepnum      INTEGER DEFAULT 0;
  v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
  v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
  v_err_txt      VARCHAR2(70);
  v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
  -- default procedure name: length       
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_545_REMOTE';
  -- check whether the process need to run
  IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy,
                                          p_name  => v_dealprc,
                                          p_date  => trunc(SYSDATE)) IN
     ('Not Started', 'Failed') THEN
    -- procedure start
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'start');
  
    --! report robots log start---------------------------------------------------------------------------------
    v_step_message := 'STEP:545_REMOTE';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    --20200622 new setting --update 20200706
    INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
      SELECT '545 ALDI 2.0 Remote Application', SYSDATE FROM DUAL;
    COMMIT;
  
    EXECUTE IMMEDIATE 'DELETE FROM AP_ANTIFRAUD.TRIGGER_545_ALDI2_BASE WHERE WEEK_DETECT_FOR_SELECT<SYSDATE';
    COMMIT;
 
    --===================================================================
    -------12.high limit usage pos concentration--COLA 20201019
    --===================================================================
    INSERT INTO TRIGGER_545_ALDI2_BASE
      with base1 as
       (select distinct ad.skp_credit_case,
                        ad.skp_client,
                        ad.text_contract_number,
                        ad.date_decision,
                        dcc.skp_credit_status,
                        ad.num_age,
                        ad.amt_credit,
                        ad.skp_credit_type,
                        ad.skp_salesroom,
                        tc.skp_tipper,
                        dct.name_tipper,
                        al.AMT_CREDIT_LIMIT,
                        ad.amt_credit / al.AMT_CREDIT_LIMIT as r_limit,
                        case
                          when substr(ad.text_contract_number, 13, 1) = 1 then
                           'new client'
                          else
                           'old client'
                        end as client_type
          from dm_antifraud.f_af_credit_case_ad ad
          join owner_dwh.dc_credit_case dcc
            on ad.skp_Credit_case = dcc.skp_credit_case
              ----AND DCC.skp_credit_acquisition_chnl = 21
           AND (DCC.skp_credit_acquisition_chnl = 21 OR
               (DCC.skp_credit_acquisition_chnl = 8 AND
               DCC.skp_product_channel <> 804)) ----20210312 YW
          JOIN OWNER_DWH.f_Aldi_Order_2_Contract_Ad al
            ON al.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE
          LEFT JOIN owNER_dwh.f_Tipper_Commission_Tt tc
            ON ad.skp_contract = TC.SKP_CONTRACT
           and tc.skp_Contract <> -1
          LEFT JOIN owNER_dwh.dc_tipper dct
            on dct.skp_tipper = tc.skp_tipper
          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
            ON EX.CLASS = 545
         where ad.date_decision >= date '2020-10-12'
           and dcc.date_decision >= date
         '2020-10-12'
           AND dcc.DATE_DECISION >= TRUNC(EX.MAX_DETECT, 'IW')
           AND dcc.DATE_DECISION < TRUNC(SYSDATE, 'IW')
           AND ad.DATE_DECISION >= TRUNC(EX.MAX_DETECT, 'IW')
           AND ad.DATE_DECISION < TRUNC(SYSDATE, 'IW')
           and ad.amt_credit > 0
           and al.AMT_CREDIT_LIMIT > 0),
      pos AS
       (select distinct skp_salesroom,
                        count(distinct skp_credit_case) as cnt_app,
                        count(distinct skp_client) as cnt_client, ---新加
                        count(distinct case
                                when skp_credit_status in (2, 3, 5) then
                                 skp_credit_case
                              end) as cnt_appr,
                        count(distinct case
                                when r_limit >= 0.8 then
                                 skp_Credit_Case
                              end) as high_percent_app,
                        count(distinct case
                                when num_age <= 23 and client_type = 'new client' then
                                 skp_Credit_case
                              end) as cnt_young_new_client,
                        count(distinct case
                                when r_limit >= 0.8 then
                                 skp_Credit_Case
                              end) / count(distinct skp_credit_case) as app_share
          from base1
         group by skp_salesroom),
      base3 AS
       (select distinct p.skp_salesroom,
                        p.cnt_app,
                        p.cnt_appr,
                        p.high_percent_app,
                        cnt_young_new_client,
                        p.app_share,
                        b.skp_credit_case,
                        b.text_contract_number,
                        b.date_decision,
                        trunc(b.date_decision, 'iw') + 6 as week_Decision,
                        b.skp_credit_type,
                        b.amt_credit,
                        b.amt_credit_limit,
                        b.r_limit,
                        b.num_age,
                        b.client_type,
                        b.skp_Credit_status,
                        b.skp_tipper,
                        b.name_tipper
          from pos p
          join base1 b
            on p.skp_salesroom = b.skp_salesroom
         where p.app_share = 1
           and b.num_age <= 23
           and b.client_type = 'new client'
           and p.cnt_client >= 3 ---更改 
         order by p.cnt_app DESC)
      SELECT DISTINCT b.WEEK_DECISION AS WEEK_DETECT,
                      '12.high limit usage pos concentration' AS TRIGGER_SOURCE,
                      b.SKP_CREDIT_CASE,
                      b.text_contract_number,
                      b.SKP_CREDIT_STATUS,
                      b.DATE_DECISION,
                      b.SKP_CREDIT_TYPE,
                      b.SKP_SALESROOM,
                      b.SKP_TIPPER,
                      '',
                      '该门店一周内申请量为:' || b.cnt_app || ',其中通过单量为:' ||
                      b.cnt_appr || ';其中使用超过80%额度的单量为:' ||
                      b.high_percent_app || ';相应比例为:' || b.app_share ||
                      ';该门店满足年轻新客户条件的单量为:' || b.cnt_young_new_client || ';' as pos_level_value,
                      '该合同申请人年龄为' || b.num_age || ';客户种类为:' ||
                      b.client_type || '为年轻新客户(风险较高); 该合同申请金额为:' ||
                      b.amt_credit || ';客户所有额度为:' || b.amt_credit_limit ||
                      ';申请金额占额度比例为:' ||
                      trunc(b.amt_credit / b.amt_credit_limit) || CASE
                        when b.skp_tipper is not null then
                         '此单由推客-' || b.name_tipper || '(' || b.skp_tipper ||
                         ')介绍;'
                      end as APP_LEVEL_VALUE,
                      TRUNC(SYSDATE, 'IW') + 6
        FROM base3 b;
    COMMIT;
  
  
    --======================================================
    --16.  share phone --20210813
    --======================================================
  
    INSERT INTO AP_ANTIFRAUD.TRIGGER_545_ALDI2_BASE
      WITH ALDI AS
       (SELECT CC.*,
               AO.SKP_TIPPER,
               CO.SKP_ALDI_ORDER,
               AO.SKP_SALESROOM AS SCAN_POS,
               TRUNC(CC.DATE_DECISION, 'IW') + 6 AS WEEK_DECISION
          FROM (SELECT CC.*, FF.SKP_SALESROOM, FF.AMT_CREDIT
                  FROM (SELECT CC.DATE_DECISION,
                               CC.SKP_CREDIT_TYPE,
                               CC.SKP_CREDIT_CASE,
                               CC.SKP_CREDIT_STATUS,
                               SKp_CLIENT,
                               TEXT_CONTRACT_NUMBER
                          FROM OWNER_DWH.DC_CREDIT_CASE CC
                          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
                            ON EX.CLASS = 545
                         WHERE CC.SKP_CREDIT_TYPE = 1
                           AND SKP_CREDIT_ACQUISITION_CHNL = 21
                           AND CC.DATE_DECISION >= TRUNC(EX.MAX_DETECT, 'IW') --始于当周周一
                           AND CC.DATE_DECISION < TRUNC(SYSDATE, 'IW') --小于这周周一
                        ) CC
                  JOIN OWNER_DWH.F_APPLICATION_TT FF
                    ON FF.DATE_DECISION = CC.DATE_DECISION
                   AND FF.SKP_CREDIT_CASE = CC.SKP_CREDIT_CASE
                   AND FF.SKP_CREDIT_TYPE = CC.SKP_CREDIT_TYPE
                  JOIN OWNER_DWH.DC_SALESROOM PP
                    ON FF.SKP_SALESROOM = PP.SKP_SALESROOM
                 WHERE FF.SKP_CREDIT_TYPE = 1
                   AND PP.NAME_SALESROOM <> 'TestPOSALDI2.0_NONPILOT' ---Exclude 5 pilot POS 20210121 by Kate Ke
                ) CC
          JOIN OWNER_DWH.F_Aldi_Order_2_Contract_Ad CO --NOT LEFT 
            ON CC.SKP_CREDIT_CASE = CO.SKP_CREDIT_CASE
          JOIN OWNER_DWH.DC_ALDI_ORDER AO
            ON CO.SKP_ALDI_ORDER = AO.SKP_ALDI_ORDER
         WHERE AO.SKP_SALESROOM NOT IN
               (51254394, 51254384, 51254391, 51254871, 51254396) ----Exclude 5 pilot POS 20210104 by Kate Ke
        )
      
      ,
      PHONE AS
       (SELECT -- AA.DATE_WEEK,AA.SKP_CREDIT_CASE , AA.SKp_CLIENT ,AA.TEXT_CONTRACT_NUMBER  
         AA.*,
         REPLACE(FF.TEXT_CONTACT_AREA_CODE || FF.TEXT_CONTACT, 'XNA') AS MOBILE,
         CASE
           WHEN NAME_CONTACT_SUBTYPE_EN = 'work phone' THEN
            NAME_CONTACT_SUBTYPE_EN
           ELSE
            NAME_CLIENT_ROLE_EN
         END AS MOBILE_TYPE
          FROM ALDI AA
          JOIN OWNER_DWH.F_APPLICATION_CONTACT_TT FF
            ON AA.SKP_CREDIT_CASE = FF.SKP_CREDIT_CASE
           AND FF.DATE_DECISION = AA.DATE_DECISION
           AND FF.SKP_CREDIT_TYPE = AA.SKP_CREDIT_TYPE
          JOIN OWNER_DWH.CL_CLIENT_ROLE CLCR
            ON FF.SKP_CLIENT_ROLE = CLCR.SKP_CLIENT_ROLE
          JOIN OWNER_DWH.CL_CONTACT_TYPE CLCT
            ON FF.SKP_CONTACT_TYPE = CLCT.SKP_CONTACT_TYPE
         WHERE FF.DATE_DECISION <= TRUNC(SYSDATE) - 1
           AND FF.SKP_CREDIT_TYPE = 1
           AND INSTR(FF.TEXT_CONTACT, '000000') = 0)
      
      ,
      SHARE_PHONE_DETAILS AS
       (SELECT --BB.SKP_CREDIT_CASE,date_week ,bb.TEXT_CONTRACT_NUMBER, BB.MOBILE,CNT_CLIENT
         BB.*,
         LISTAGG(TEXT_CONTRACT_NUMBER || MOBILE_TYPE, ';') WITHIN GROUP(ORDER BY TEXT_CONTRACT_NUMBER) OVER(PARTITION BY BB.mobile) AS detail
          FROM (SELECT DISTINCT BA.*, BB.CNT_CLIENT
                --BB.MOBILE ,BA.TEXT_CONTRACT_NUMBER,BA.MOBILE_TYPE,BA.SKP_CREDIT_CASE ,CNT_CLIENT,bb.date_week
                  FROM (SELECT WEEK_DECISION,
                               MOBILE,
                               COUNT(DISTINCT SKp_CLIENT) AS CNT_CLIENT
                          FROM PHONE BB
                         GROUP BY WEEK_DECISION, MOBILE
                        HAVING COUNT(DISTINCT SKp_CLIENT) >= 5) BB
                  JOIN PHONE BA
                    ON BA.MOBILE = BB.MOBILE
                   AND ba.WEEK_DECISION = bb.week_decision) BB),
      POS_VALUE AS
       (SELECT SCAN_POS, MOBILE, COUNT(DISTINCT SKP_CREDIT_CASE) AS CNT_CON
          FROM SHARE_PHONE_DETAILS PP
         WHERE MOBILE IS NOT NULL
         GROUP BY SCAN_POS, MOBILE)
      SELECT DISTINCT TRUNC(c.DATE_DECISION, 'IW') + 6 AS WEEK_DETECT,
                      '16. share phone ' AS TRIGGER_SOURCE,
                      C.SKP_CREDIT_CASE,
                      C.text_contract_number,
                      C.SKP_CREDIT_STATUS,
                      C.DATE_DECISION,
                      C.SKP_CREDIT_TYPE,
                      c.SKP_SALESROOM,
                      c.SKP_TIPPER,
                      ' ' AS TEXT_OPENID
                      --,'该POS在一周内(' || TO_CHAR(c.WEEK_DECISION,'YYYY-MM-DD') ||')有' || TO_CHAR(R.CNT_CON) || '单合同共用电话' AS POS_LEVEL_VALUE
                      --,'该POS在本周(' || TO_CHAR(c.WEEK_DECISION,'YYYY-MM-DD') ||')有' || TO_CHAR(R.CNT_CON) || '单合同共用电话' AS POS_LEVEL_VALUE
                     ,
                      ' 该电话：' || c.mobile || C.MOBILE_TYPE || ' 在一周被' ||
                      C.CNT_CLIENT || '个客户用过.' AS POS_LEVEL_VALUE
                      --,C.CNT_CLIENT||' 该电话共用情况：'|| C.MOBILE|| detail AS APP_LEVEL_VALUE
                      --,C.CNT_CLIENT||' 个人共用电话：'|| C.MOBILE|| ' 电话是本单合同的：'||C.MOBILE_TYPE AS APP_LEVEL_VALUE
                     ,
                      ' ' AS APP_LEVEL_VALUE,
                      TRUNC(SYSDATE, 'IW') + 6 AS WEEK_DETECT_FOR_SELECT
        FROM SHARE_PHONE_DETAILS C
        JOIN POS_VALUE R
          ON C.SCAN_POS = R.SCAN_POS;
    COMMIT;
  
    --======================================================
    --17.Fake GPS(duplicated H5&&MAPP GPS) Application in POS --20210823
    --======================================================
  
    EXECUTE IMMEDIATE 'TRUNCATE TABLE AP_ANTIFRAUD.TRIGGER_545_ALDI2_setting_17_aldi_h5';
  
    INSERT /*+ append*/
    INTO AP_ANTIFRAUD.TRIGGER_545_ALDI2_setting_17_aldi_h5
      SELECT DISTINCT AD.SKP_CREDIT_CASE,
                      F.text_contract_number,
                      AD.DATE_DECISION,
                      DCC.SKP_CREDIT_TYPE,
                      TRUNC(AD.DATE_DECISION, 'IW') + 6 AS WEEK_DECISION,
                      DCC.SKP_CREDIT_STATUS,
                      F.AMT_CREDIT,
                      AD.SKP_SALESROOM_TRANSACTION AS SKP_SALESROOM,
                      ad.SKP_ALDI_ORDER,
                      T.code_event,
                      T.dtime_event,
                      T.text_event_result as TRANSACTION_ID,
                      DCA.SKP_TIPPER,
                      T.text_openId,
                      t.text_longtitude as h5_lng,
                      t.text_latitude as h5_la,
                      t.text_ip_address,
                      t.text_fingerprint,
                      dc.TEXT_IDENTIFICATION,
                      dc.TEXT_IDENT_CARD_NUMBER,
                      dc.NAME_LAST,
                      rr.code_salesroom,
                      rr.code_salesroom_status,
                      rr.name_province AS POS_PROVINCE,
                      rr.code_seller,
                      rr.name_city as pos_name_city,
                      rr.name_salesroom,
                      ROW_NUMBER() OVER(PARTITION BY t.skp_aldi_order ORDER BY T.dtime_event DESC) AS R
        FROM owner_dwh.f_ALDI_EVENT_LOG_TT t
        JOIN owner_dwh.f_aldi_order_2_contract_ad ad
          ON ad.SKP_ALDI_ORDER = t.SKP_ALDI_ORDER
        JOIN OWNER_DWH.DC_ALDI_ORDER DCA
          ON T.SKP_ALDI_ORDER = DCA.SKP_ALDI_ORDER
        JOIN OWNER_DWH.DC_CREDIT_CASE DCC
          ON AD.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE
         AND AD.DATE_DECISION = DCC.DATE_DECISION
        JOIN OWNER_DWH.F_APPLICATION_TT F
          ON DCC.SKP_CREDIT_CASE = F.SKP_CREDIT_CASE
         AND DCC.DATE_DECISION = F.DATE_DECISION
         AND DCC.SKP_CREDIT_TYPE = F.SKP_CREDIT_TYPE
        JOIN OWNER_DWH.DC_CLIENT dc
          on dc.SKP_CLIENT = dcc.skp_client
        JOIN OWNER_DWH.DDC_SALESROOM rr
          ON rr.skp_salesroom = f.skp_salesroom
        JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
          ON EX.CLASS = 545
       WHERE T.code_event IN (44)
            -- AND AD.SKP_SALESROOM_TRANSACTION != -1
         AND DCC.DATE_DECISION >= to_date(sysdate - 30)
         and f.DATE_DECISION >= to_date(sysdate - 30)
            --     AND DCC.DATE_DECISION >= TRUNC(EX.MAX_DETECT, 'IW') --始于当周周一
            --     AND DCC.DATE_DECISION < TRUNC(SYSDATE, 'IW') --小于这周周一
            --     AND F.DATE_DECISION >= TRUNC(EX.MAX_DETECT, 'IW') --始于当周周一
            --     AND F.DATE_DECISION < TRUNC(SYSDATE, 'IW') --小于这周周一
            -- AND DCC.SKP_CREDIT_TYPE = 1
            ---AND DCC.skp_credit_acquisition_chnl = 21
         AND (DCC.skp_credit_acquisition_chnl = 21 OR
             (DCC.skp_credit_acquisition_chnl = 8 AND
             DCC.skp_product_channel <> 804)) ----20210312 YW
            -- AND DCC.SKP_CREDIT_STATUS IN (2, 3, 5)
            -- AND F.AMT_CREDIT > 0
         and rr.name_salesroom NOT LIKE 'TEST_POS%'
         AND T.text_longtitude != '0'
         AND T.text_longtitude != '0.0'
         AND T.text_longtitude != 'NULL';
  
    commit;
  
    EXECUTE IMMEDIATE 'TRUNCATE TABLE AP_ANTIFRAUD.TRIGGER_545_ALDI2_setting_17_mapp';
  
    INSERT /*+ append*/
    INTO AP_ANTIFRAUD.TRIGGER_545_ALDI2_setting_17_mapp
      SELECT tt.NUM_GEO_LATITUDE MAPP_LA,
             tt.NUM_GEO_LONGITUDE MAPP_Lng,
             CASE
               WHEN TT.TEXT_LOG LIKE '%deviceId%' THEN
                regexp_substr(TT.TEXT_LOG,
                              '("deviceId":")(.*?)\".*',
                              1,
                              1,
                              NULL,
                              2)
               ELSE
                NULL
             END AS MAPP_DEVICE_ID,
             CASE
               WHEN TT.TEXT_LOG LIKE '%userIdMcd%' THEN
                regexp_substr(TT.TEXT_LOG,
                              '("userIdMcd":")(.*?)\".*',
                              1,
                              1,
                              NULL,
                              2)
               ELSE
                NULL
             END AS MAPP_USER_ID,
             CASE
               WHEN TT.TEXT_LOG LIKE '%phoneNumberMapp%' THEN
                regexp_substr(TT.TEXT_LOG,
                              '("phoneNumberMapp":")(.*?)\".*',
                              1,
                              1,
                              NULL,
                              2)
               ELSE
                NULL
             END AS mapp_phonenumber,
             tt.TEXT_MAPP_TRANSACTION_ID,
             ROW_NUMBER() OVER(PARTITION BY tt.TEXT_MAPP_TRANSACTION_ID ORDER BY tt.DTIME_INSERTED DESC) AS RNK
      
        FROM owner_dwh.f_mobile_app_event_log_tt tt
       WHERE tt.SKP_MOBILE_APP_EVENT_TYPE = 3570 -- tt.CODE_SESSION = '16321'
         AND tt.NUM_GEO_LONGITUDE IS NOT NULL;
  
    commit;
  
    EXECUTE IMMEDIATE 'TRUNCATE TABLE AP_ANTIFRAUD.TRIGGER_545_ALDI2_setting_17_base';
  
    INSERT /*+ append*/
    INTO AP_ANTIFRAUD.TRIGGER_545_ALDI2_setting_17_base
      with tmp as
       (SELECT *
          FROM AP_ANTIFRAUD.TRIGGER_545_ALDI2_setting_17_aldi_h5 h5
          join AP_ANTIFRAUD.TRIGGER_545_ALDI2_setting_17_mapp mapp
            on h5.transaction_id = mapp.text_mapp_transaction_id
         where h5.r = 1
           and mapp.rnk = 1),
      position_group as
       (SELECT h5_lng,
               h5_la,
               MAPP_Lng,
               MAPP_LA,
               COUNT(DISTINCT SKP_CREDIT_CASE) APPLICATION,
               COUNT(DISTINCT CASE
                       WHEN skp_credit_status IN (2, 3, 5, 6) THEN
                        SKP_CREDIT_CASE
                       ELSE
                        NULL
                     END) AS CONTRACT,
               COUNT(DISTINCT code_salesroom) POS,
               COUNT(DISTINCT text_identification) client,
               COUNT(DISTINCT date_decision) DATE_DECITION
          FROM tmp
         group by h5_lng, h5_la, mapp_lng, mapp_la),
      target_position as
       (SELECT *
          FROM position_group
         WHERE client >= 2
        --       AND (client > 1 OR POS > 1 OR DATE_DECITION > 1)
        )
      SELECT tmp.*,
             p.APPLICATION,
             p.client,
             p.POS,
             p.DATE_DECITION,
             CASE
               WHEN p.APPLICATION = 2 THEN
                '2'
               WHEN p.APPLICATION = 3 THEN
                '3'
               WHEN p.APPLICATION = 4 THEN
                '4'
               WHEN p.APPLICATION > 4 AND p.APPLICATION < 10 THEN
                '5-9'
               WHEN p.APPLICATION > 9 THEN
                '大于等于10'
               ELSE
                NULL
             END AS flag
        FROM tmp
        join target_position p
          ON tmp.h5_lng = p.h5_lng
         and tmp.h5_la = p.h5_la
         and tmp.MAPP_Lng = p.MAPP_Lng
         and tmp.MAPP_LA = p.MAPP_LA;
    commit;
  
    EXECUTE IMMEDIATE 'TRUNCATE TABLE AP_ANTIFRAUD.TRIGGER_545_ALDI2_setting_17_pos';
  
    insert into AP_ANTIFRAUD.TRIGGER_545_ALDI2_setting_17_pos
      with pos as
       (SELECT skp_salesroom,
               COUNT(DISTINCT h5_lng || h5_la || mapp_lng || mapp_la) distinct_gps_group
          FROM AP_ANTIFRAUD.TRIGGER_545_ALDI2_setting_17_base
         GROUP BY skp_salesroom),
      application as
       (SELECT h5.*,
               mapp.*,
               case
                 when base.h5_lng is not null then
                  1
                 else
                  0
               end as fake_gps_flag
          FROM AP_ANTIFRAUD.TRIGGER_545_ALDI2_setting_17_aldi_h5 h5
          join AP_ANTIFRAUD.TRIGGER_545_ALDI2_setting_17_mapp mapp
            on h5.transaction_id = mapp.text_mapp_transaction_id
          left join (select distinct h5_lng, h5_la, mapp_lng, mapp_la
                      from AP_ANTIFRAUD.TRIGGER_545_ALDI2_setting_17_base) base
            on base.h5_lng = h5.h5_lng
           and base.h5_la = h5.h5_la
           and base.mapp_la = mapp.mapp_la
           and base.mapp_lng = mapp.mapp_lng
         where h5.r = 1
           and mapp.rnk = 1
           and h5.skp_salesroom in (select skp_salesroom from pos)),
      pos_proportion as
       (SELECT t.skp_salesroom,
               count(*) as application,
               sum(fake_gps_flag) as fake_gps_application,
               sum(fake_gps_flag) / COUNT(*) as POS_OCC,
               count(DISTINCT case
                       when date_decision >= to_date(sysdate - 7) then
                        skp_credit_case
                       else
                        null
                     end) POS_APPLICATIONS_LAST_WEEK
          FROM application t
         group by t.skp_salesroom
        
        )
      SELECT pos_proportion.*, pos.distinct_gps_group
        FROM pos_proportion
        join pos
          on pos_proportion.skp_salesroom = pos.skp_salesroom
       where POS_APPLICATIONS_LAST_WEEK > 0;
    --and (distinct_gps_group > 1 or pos_occ >= 0.4);
  
    commit;
  
    INSERT INTO AP_ANTIFRAUD.TRIGGER_545_ALDI2_BASE
      with triggered_case as
       (SELECT * FROM AP_ANTIFRAUD.TRIGGER_545_ALDI2_setting_17_base),
      EVENT AS
       (SELECT TT.SKP_ALDI_ORDER,
               TT.TEXT_OPENID,
               TO_CHAR(ROUND(TT.TEXT_LONGTITUDE, 3)) ||
               TO_CHAR(ROUND(TT.TEXT_LATITUDE, 3)) AS TEXT_GPS,
               CASE
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%IPHONE%' THEN
                  'iphone'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%PC%' THEN
                  'OPPO'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%PAC%' THEN
                  'OPPO'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%PA%' THEN
                  'OPPO'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%PB%' THEN
                  'OPPO'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%PD%' THEN
                  'OPPO'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%OPPO%' THEN
                  'OPPO'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%V%' THEN
                  'VIVO'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%SEA%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%EML%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%PAR%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%TAS%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%STK%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%HLK%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%ELE%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%AL%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%AN%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%MI%' THEN
                  'XIAOMI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%TL00%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%SM-%' THEN
                  'SANSUMG'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%MP1718%' THEN
                  'MEITU'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%GM1910%' THEN
                  'ONEPLUS'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%GIONEE%' THEN
                  'JINLI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%CDY-TN00%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%BND-TL10%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%ONEPLUS%' THEN
                  'ONEPLUS'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%RMX1901%' THEN
                  'RMX1901'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%SKW-A0%' THEN
                  'HEISHA'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%M5 NOTE%' THEN
                  'MEIZU'
                 ELSE
                  'OTHERS'
               END AS DEIVICE_TYPE
          FROM triggered_case BB
          JOIN OWNER_DWH.F_ALDI_EVENT_LOG_TT TT
            ON BB.SKP_ALDI_ORDER = TT.SKP_ALDI_ORDER),
      OTHERS_ADD AS
       (SELECT EE.SKP_ALDI_ORDER,
               COUNT(DISTINCT TEXT_OPENID) AS CNT_WECHAT,
               COUNT(DISTINCT DEIVICE_TYPE) AS CNT_DV_BRAND,
               COUNT(DISTINCT TEXT_GPS) AS CNT_GPS
          FROM EVENT EE
         GROUP BY EE.SKP_ALDI_ORDER
        --  HAVING COUNT(DISTINCT TEXT_OPENID) > 1 OR COUNT(DISTINCT DEIVICE_TYPE) > 1 OR COUNT(DISTINCT TEXT_GPS) > 1
        ),
      POS_TRIGGER_VALUE AS
       (SELECT SKP_SALESROOM, COUNT(DISTINCT SKP_CREDIT_CASE) AS CNT
          FROM triggered_case
         GROUP BY SKP_SALESROOM),
      POS_VALUE AS
       (SELECT * FROM AP_ANTIFRAUD.TRIGGER_545_ALDI2_setting_17_pos)
      SELECT DISTINCT FF.WEEK_DECISION AS WEEK_DETECT,
                      case
                        when PV.distinct_gps_group > 1 or PV.POS_OCC >= 0.4 then
                         '17.Fake GPS(duplicated H5&&MAPP GPS) Application in POS (Close POS)'
                        else
                         '17.Fake GPS(duplicated H5&&MAPP GPS) Application in POS (IV)'
                      end AS TRIGGER_SOURCE,
                      FF.SKP_CREDIT_CASE,
                      FF.TEXT_CONTRACT_NUMBER,
                      FF.SKP_CREDIT_STATUS,
                      FF.DATE_DECISION,
                      FF.SKP_CREDIT_TYPE,
                      FF.SKP_SALESROOM,
                      FF.SKP_TIPPER,
                      ' ' AS TEXT_OPENID,
                      '该POS在最近30天(' || to_char(sysdate - 30, 'yyyy-mm-dd') || '-' ||
                      to_char(sysdate, 'yyyy-mm-dd') || '一共有' ||
                      PV.application || '单合同,' || '其中来自于可疑坐标的合同有' ||
                      PV.FAKE_GPS_application || '单,比例为' ||
                      substr(PV.POS_OCC, 1, 6) || ',共有' ||
                      PV.distinct_gps_group || '组可疑坐标,' || '该POS上周最近7天有' ||
                      PV.POS_APPLICATIONS_LAST_WEEK || '单合同' AS POS_LEVEL_VALUE,
                      '本单客户在交易时,H5坐标为' || FF.h5_la || ',' || FF.h5_lng ||
                      ' MAPP交易时坐标为' || FF.mapp_la || ',' || FF.mapp_lng ||
                      ' 该h5&&MAPP的坐标组合在一个月内有' || FF.application || '单申请' || '涉及' ||
                      ff.client || '个客户,' || ff.pos || '个POS' || ',本单合同共涉及' ||
                      DD.CNT_WECHAT || '个openid,' || DD.CNT_GPS ||
                      '个gps位置,' || DD.CNT_DV_BRAND || '个品牌的设备' AS APP_LEVEL_VALUE,
                      --||TO_CHAR(DISPLAY_DTIME,'YYYY-MM-DD HH24:Mi:SS')||', GPS: '||DISPLAY_LAT||','|| DISPLAY_LNG||',二维码被扫描'||TO_CHAR(TRX_DTIME,'YYYY-MM-DD HH24:Mi:SS')||', GPS: '||TRX_LAT||','|| TRX_LNG||               
                      TRUNC(SYSDATE, 'IW') + 6 as WEEK_DETECT_FOR_SELECT
        FROM triggered_case FF
        JOIN POS_TRIGGER_VALUE PO
          ON FF.SKP_SALESROOM = PO.SKP_SALESROOM
        JOIN POS_VALUE PV
          on FF.SKP_SALESROOM = PV.SKP_SALESROOM
        left JOIN OTHERS_ADD DD
          ON FF.SKP_ALDI_ORDER = DD.SKP_ALDI_ORDER;
  
    commit;
  
    --======================================================
    --21. IP Address Concentration(pos)
    --======================================================
  
 

    INSERT INTO AP_ANTIFRAUD.TRIGGER_545_ALDI2_BASE
      with TRIGGER_545_ALDI2_setting_18_base as
       (SELECT DISTINCT AD.SKP_CREDIT_CASE,
                        F.text_contract_number,
                        AD.DATE_DECISION,
                        DCC.SKP_CREDIT_TYPE,
                        TRUNC(AD.DATE_DECISION, 'IW') + 6 AS WEEK_DECISION,
                        DCC.SKP_CREDIT_STATUS,
                        F.AMT_CREDIT,
                        F.SKP_SALESROOM AS SKP_SALESROOM,
                        ad.SKP_ALDI_ORDER,
                        DCA.SKP_TIPPER,
                        dc.TEXT_IDENTIFICATION,
                        dc.TEXT_IDENT_CARD_NUMBER,
                        dc.NAME_LAST,
                        rr.code_salesroom,
                        rr.code_salesroom_status,
                        rr.name_province AS POS_PROVINCE,
                        rr.code_seller,
                        rr.name_city as pos_name_city,
                        rr.name_salesroom
          FROM owner_dwh.f_aldi_order_2_contract_ad ad
          JOIN OWNER_DWH.DC_ALDI_ORDER DCA
            ON AD.SKP_ALDI_ORDER = DCA.SKP_ALDI_ORDER
          JOIN OWNER_DWH.DC_CREDIT_CASE DCC
            ON AD.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE
           AND AD.DATE_DECISION = DCC.DATE_DECISION
          JOIN OWNER_DWH.F_APPLICATION_TT F
            ON DCC.SKP_CREDIT_CASE = F.SKP_CREDIT_CASE
           AND DCC.DATE_DECISION = F.DATE_DECISION
           AND DCC.SKP_CREDIT_TYPE = F.SKP_CREDIT_TYPE
          JOIN OWNER_DWH.DC_CLIENT dc
            on dc.SKP_CLIENT = dcc.skp_client
          JOIN OWNER_DWH.DDC_SALESROOM rr
            ON rr.skp_salesroom = f.skp_salesroom
          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
            ON EX.CLASS = 545
        -- WHERE DCC.DATE_DECISION >= to_date(sysdate - 30)
        -- and f.DATE_DECISION >= to_date(sysdate - 30)   
         WHERE DCC.DATE_DECISION >= TRUNC(EX.MAX_DETECT, 'IW')
           and f.DATE_DECISION >= TRUNC(EX.MAX_DETECT, 'IW')
           and DCC.DATE_DECISION < TRUNC(SYSDATE, 'IW')
           AND (DCC.skp_credit_acquisition_chnl = 21 OR
               (DCC.skp_credit_acquisition_chnl = 8 AND
               DCC.skp_product_channel <> 804))
           and rr.name_salesroom NOT LIKE 'TEST_POS%'),
      lps_base as
       (SELECT t.*,
               ROW_NUMBER() OVER(PARTITION BY t.SKP_CREDIT_CASE ORDER BY t.DTIME_EVENT DESC) AS RNK_DTIME_EVENT_LAST,
               ROW_NUMBER() OVER(PARTITION BY t.SKP_CREDIT_CASE ORDER BY t.DTIME_EVENT ASC) AS RNK_DTIME_EVENT_FIRST
          FROM (SELECT DISTINCT t.skp_credit_case,
                                event_log.text_ident_card_number,
                                event_log.text_longtitude,
                                event_log.text_latitude,
                                event_log.dtime_event,
                                event_log.text_openid,
                                event_log.text_fingerprint,
                                event_log.text_ip_address,
                                event_log.text_device_os,
                                event_log.text_device_type,
                                event_log.skp_salesroom
                  FROM TRIGGER_545_ALDI2_setting_18_base t
                  JOIN owner_dwh.f_ALDI_EVENT_LOG_TT event_log
                    ON t.skp_aldi_order = event_log.skp_aldi_order
                 WHERE event_log.name_event = 'landing_page_submit') t),
      lps as
       (SELECT t.*,
               lps_base.text_ident_card_number as text_ident_card_number_lps,
               lps_base.text_longtitude,
               lps_base.text_latitude,
               lps_base.dtime_event,
               --       lps.text_openid,
               lps_base.text_fingerprint,
               lps_base.text_ip_address,
               lps_base.text_device_os,
               --       lps.text_device_type,
               lps_base.skp_salesroom as skp_salesroom_lps
          FROM TRIGGER_545_ALDI2_setting_18_base t
          left join lps_base
            on lps_base.skp_credit_case = t.skp_credit_case),
      filter_ip_address_base as
       (SELECT t.text_ip_address,
               count(distinct t.text_openid) as distinct_text_openid,
               count(distinct t.text_ident_card_number) as distinct_text_ident_card_number
          from owner_dwh.f_ALDI_EVENT_LOG_TT t
         WHERE t.name_event = '1BOD_page_submit'
         group by t.text_ip_address),
      filter_ip_address as
       (SELECT text_ip_address
          FROM filter_ip_address_base
         WHERE distinct_text_ident_card_number >= 5
           and decode(distinct_text_ident_card_number,
                      0,
                      0,
                      distinct_text_openid / distinct_text_ident_card_number) > 0.8),
      lps_group as
       (SELECT lps.*,
               COUNT(DISTINCT case
                       when text_ip_address not like '10.67.%' and
                            text_ip_address not in
                            (select text_ip_address from filter_ip_address) then
                        text_ident_card_number
                       else
                        null
                     end) OVER(PARTITION BY text_ip_address) AS distinct_id_each_ip,
               COUNT(DISTINCT case
                       when text_ip_address not like '10.67.%' and
                            text_ip_address not in
                            (select text_ip_address from filter_ip_address) then
                        pos_name_city
                       else
                        null
                     end) OVER(PARTITION BY text_ip_address) AS distinct_pos_name_city_each_ip,
               COUNT(DISTINCT case
                       when text_ip_address not like '10.67.%' and
                            text_ip_address not in
                            (select text_ip_address from filter_ip_address) then
                        skp_salesroom_lps
                       else
                        null
                     end) OVER(PARTITION BY text_ip_address) AS distinct_pos_each_ip,
               COUNT(DISTINCT case
                       when text_device_os like 'Android' and
                            text_fingerprint not in
                            ('d7eb539624d3ae25bd04add72ad6c8b2',
                             'fe7f68a849e17c6fd07397e8577fda28',
                             '919e8430c62da04b4f5a50d9947fdbc7') then
                        text_ident_card_number
                       else
                        null
                     end) OVER(PARTITION BY text_fingerprint) AS distinct_id_each_fp
          FROM lps),
      pos_level as
       (SELECT SKP_SALESROOM,
               COUNT(DISTINCT case
                       when t.distinct_pos_each_ip >= 4 then
                        SKP_CREDIT_cASE
                       else
                        null
                     end) AS CNT_distinct_pos_each_ip
          FROM lps_group t
         GROUP BY SKP_SALESROOM)
      SELECT DISTINCT C.WEEK_DECISION AS WEEK_DETECT,
                      '21.IP Address Concentration(pos)' TRIGGER_SOURCE,
                      C.SKP_CREDIT_CASE,
                      C.TEXT_CONTRACT_NUMBER,
                      C.SKP_CREDIT_STATUS,
                      C.DATE_DECISION,
                      C.SKP_CREDIT_TYPE,
                      C.SKP_SALESROOM,
                      C.SKP_TIPPER,
                      ' ' AS TEXT_OPENID,
                      '该POS在最近7天(' || to_char(sysdate - 7, 'yyyy-mm-dd') || '-' ||
                      to_char(sysdate, 'yyyy-mm-dd') || '一共有' ||
                      pos_level.CNT_distinct_pos_each_ip ||
                      '单申请满足条件 - 使用的IP地址被4个不同的POS使用过' AS POS_LEVEL_VALUE,
                      '本单客户使用的ip(' || c.text_ip_address || ')在7天内被' ||
                      distinct_pos_each_ip || '个不同的POS使用过,' AS APP_LEVEL_VALUE,
                      TRUNC(SYSDATE, 'IW') + 6
        FROM lps_group c
        left join pos_level
          on c.skp_salesroom = pos_level.skp_salesroom
       where c.distinct_pos_each_ip >= 4;

    commit;

  
    --======================================================
    --FINAL: integrate and insert --20201012 ANNY
    --======================================================
    INSERT /*+ append*/
    INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
      WITH POS_LEVEL AS
       (SELECT DISTINCT SKP_SALESROOM, TRIGGER_SOURCE, POS_LEVEL_VALUE
          FROM TRIGGER_545_ALDI2_BASE A
          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
            ON EX.CLASS = 545
         WHERE A.WEEK_DETECT >= TRUNC(EX.MAX_DETECT, 'IW') + 6 --往前数一个月
        
        )
      
      ,
      POS_LEVEL_SOURCE AS
       (SELECT DISTINCT P.SKP_SALESROOM,
                        LISTAGG(P.TRIGGER_SOURCE, ', ') WITHIN GROUP(ORDER BY P.TRIGGER_SOURCE) OVER(PARTITION BY P.SKP_SALESROOM) AS POS_TRIGGER_SOURCE,
                        LISTAGG(P.POS_LEVEL_VALUE, '; ') WITHIN GROUP(ORDER BY P.POS_LEVEL_VALUE) OVER(PARTITION BY P.SKP_SALESROOM) AS POS_TRIGGER_VALUE,
                        DENSE_RANK() OVER(ORDER BY P.SKP_SALESROOM) AS GN
          FROM POS_LEVEL P)
      
      ,
      APP_LEVEL_SOURCE AS
       (SELECT DISTINCT P.SKP_SALESROOM,
                        P.SKP_CREDIT_CASE,
                        P.DATE_DECISION,
                        P.SKP_CREDIT_TYPE,
                        P.TEXT_CONTRACT_NUMBER,
                        P.SKP_TIPPER,
                        LISTAGG(P.APP_LEVEL_VALUE, ', ') WITHIN GROUP(ORDER BY P.APP_LEVEL_VALUE) OVER(PARTITION BY P.SKP_CREDIT_CASE) AS APP_TRIGGER_VALUE,
                        LISTAGG(P.TRIGGER_SOURCE, '; ') WITHIN GROUP(ORDER BY P.TRIGGER_SOURCE) OVER(PARTITION BY P.SKP_CREDIT_CASE) AS APP_TRIGGER_SOURCE,
                        COUNT(DISTINCT P.SKP_CREDIT_CASE) OVER(PARTITION BY P.SKP_SALESROOM) AS CNT_POS_APP,
                        COUNT(DISTINCT P.SKP_TIPPER) OVER(PARTITION BY P.SKP_SALESROOM) AS CNT_POS_TIPPER,
                        ROW_NUMBER() OVER(PARTITION BY P.SKP_CREDIT_CASE ORDER BY PO.POS_TRIGGER_SOURCE DESC) AS RNK_POS
          FROM TRIGGER_545_ALDI2_BASE P
          JOIN POS_LEVEL_SOURCE PO
            ON P.SKP_SALESROOM = PO.SKP_SALESROOM
          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
            ON EX.CLASS = 545
         WHERE P.WEEK_DETECT >= TRUNC(EX.MAX_DETECT, 'IW') + 6 --往前数一个月
        )
      
      SELECT DISTINCT 'POS' AS UNIT,
                      S.code_salesroom,
                      TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
                      TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
                      '545' AS CLASS,
                      P.POS_TRIGGER_SOURCE AS TRIGGER_SOURCE,
                      TO_CHAR(P.GN) || '//case level: ' ||
                      P.POS_TRIGGER_VALUE || ' | 共' || TO_CHAR(CNT_POS_APP) ||
                      '单合同 | 涉及' || TO_CHAR(CNT_POS_TIPPER) || '位Tipper' ||
                      ' | app level: ' || A.APP_TRIGGER_VALUE || CASE
                        WHEN A.SKP_TIPPER != -1 THEN
                         ' | 此单TIPPER为' || DCT.NAME_TIPPER || '(code:' ||
                         DCT.ID_SOURCE || ', id: ' ||
                         DCT.TEXT_IDENT_CARD_NUMBER || ', mobile: ' ||
                         DCT.TEXT_PHONE_NUMBER || ', status: ' ||
                         CLS.CODE_TIPPER_STATUS
                      END AS TRIGGER_VALUE,
                      'SOFT' AS TRIGGER_TYPE,
                      A.SKP_CREDIT_CASE,
                      A.text_contract_number
        FROM POS_LEVEL_SOURCE P
        JOIN APP_LEVEL_SOURCE A
          ON P.SKP_SALESROOM = A.SKP_SALESROOM
        JOIN OWNER_DWH.DC_SALESROOM S
          ON P.SKP_SALESROOM = S.SKP_SALESROOM
         AND S.code_salesroom_status <> 'z' ----20200715 Yawen exclude application from closed pos
        LEFT JOIN OWNER_DWH.DC_TIPPER DCT
          ON A.SKP_TIPPER = DCT.SKP_TIPPER
         AND DCT.SKP_TIPPER != -1
        LEFT JOIN OWNER_DWH.CL_TIPPER_STATUS CLS
          ON DCT.SKP_TIPPER_STATUS = CLS.SKP_TIPPER_STATUS
        LEFT JOIN AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS C_553
          ON S.code_salesroom = C_553.code_salesroom
         AND C_553.CLASS = 553
         AND C_553.DATE_DETECT > TRUNC(SYSDATE - 30) -- 30天内被553triggered
         AND (UPPER(C_553.TRIGGER_SOURCE) LIKE '%IP%' OR
             UPPER(C_553.TRIGGER_SOURCE) LIKE '%GPS%' OR
             UPPER(C_553.TRIGGER_SOURCE) LIKE '%XINJIANG/XIZANG%') --anny 20200601
       WHERE RNK_POS = 1
         AND C_553.CODE_SALESROOM IS NULL
         AND UPPER(S.name_salesroom) NOT LIKE '%TEST%'
         AND S.name_salesroom NOT LIKE '%测试%' --anny 20201012
      ;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL);
    COMMIT;
    -- procedure end
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'end');
  END IF;
EXCEPTION
  WHEN OTHERS THEN
    -- ROBOTS_LOG
    owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                               p_step            => v_step_message,
                                               p_additional_info => NULL);
    -- process_log  
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => SQLCODE,
                                  p_msg    => 'Error in step (' ||
                                              v_step_message || ') - ' ||
                                              substr(SQLERRM, 1, 150));
    RAISE;
END;



PROCEDURE TRIGGER_549_GOODSTYPE_MISMATCH IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_549_GT_MISMATCH';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP:TRIGGER_549_GT_MISMATCH';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL); 

INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '549 Goods Type Mismatch',SYSDATE FROM DUAL;
COMMIT;

--20200319--删掉trigger value中的test 20200526
INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH wifi_phone AS
(
SELECT distinct ss.code_salesroom,
                ad.skp_credit_case,
                ad.text_contract_number,
                ad.text_username_employee_sales,
                ad.date_decision,
                ad.CODE_CREDIT_STATUS,
                'WIFI NAME与所卖商品的类型不一致' as TRIGGER_SOURCE,
                'WIFI NAME:'||smt.name_wifi||',SALESROOM NAME:"'||ss.name_salesroom||'",本单合同卖的商品类型:"'
                   ||good.NAME_GOODS_CATEGORY||'"' as TRIGGER_VALUE
FROM OWNER_DWH.F_APPLICATION_VCT_SMARTPOS_AT smt
join DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD  ON ad.skp_credit_case=smt.SKP_CREDIT_CASE 
                                          and ad.date_decision >= TRUNC(SYSDATE)-7 
join owner_dwh.dc_salesroom ss  ON ad.skp_salesroom = ss.SKP_SALESROOM
LEFT join OWNER_DWH.F_PURCHASED_GOODS_TT TT  ON TT.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE AND TT.DATE_DECISION=AD.DATE_DECISION 
                                             AND TT.DATE_DECISION >= TRUNC(SYSDATE)-7 AND TT.SKP_CREDIT_TYPE = 1     
                                             and TT.FLAG_MOST_EXPENSIVE = 'Y'                      
LEFT JOIN owner_dwh.Dc_Goods_Type GOOD  ON GOOD.SKP_GOODS_TYPE=TT.SKP_GOODS_TYPE
where smt.date_decision >= TRUNC(SYSDATE)-7
and AD.date_decision >= TRUNC(SYSDATE)-7
and AD.SKP_CREDIT_TYPE = 1 
 and ss.FLAG_POS_TEST = 'N'  
 and (  ( ( name_wifi like '%华为%' or upper(name_wifi) like '%VIVO%' or upper(name_wifi) like '%OPPO%' or 
            upper(name_wifi) like '%APPLE%' or upper(name_wifi) like '%IPHONE%' or name_wifi like '%苹果%' or 
            name_wifi like '%小米%' or upper(name_wifi) like '%XIAOMI%' or name_wifi like '%三星%' or 
            upper(name_wifi) like '%SAMSUNG%' or name_wifi like '%手机%' or name_wifi like '%通讯%' or 
            name_wifi like '%通信%' or name_wifi like '%电讯%' or name_wifi like '%数码%')
          and ( name_wifi like '%专卖%' or name_wifi like '%旗舰%' or name_wifi like '%店%' or name_wifi like '%体验%' or
                name_wifi like '%授权%' or name_wifi like '%专柜%'or name_wifi like '%超市%' or name_wifi like '%连锁%' or
                name_wifi like '%卖场%' or name_wifi like '%专营%' or name_wifi like '%商城%' or name_wifi like '%售卖%') )       
        or ( ( name_wifi like '%手机%' or name_wifi like '%移动%' or name_wifi like '%联通%' or name_wifi like '%电信%' or 
               name_wifi like '%通讯%' or name_wifi like '%通信%' or name_wifi like '%电讯%' or name_wifi like '%数码%') 
             and (name_wifi like '%维修%' or name_wifi like '%经营部%' or name_wifi like '%商行%' or
                  name_wifi like '%经销部%' or name_wifi like '%门市%' or name_wifi like '%营业厅%' or 
                  name_wifi like '%服务部%' or name_wifi like '%专营店%' or name_wifi like '%商城%') )
        or ( name_wifi like '%手机%' and (name_wifi like '%通讯%' or name_wifi like '%电讯%' or name_wifi like '%城%' or
                                          name_wifi like '%数码%' or name_wifi like '%通信%') )
     )
and upper(name_wifi) not like '%的 IPHONE%' and name_wifi not like '%家电%' and name_wifi not like '%车%'
and name_wifi not like '%电摩%' and name_wifi not like '%电器%' 
 and ( ( ad.amt_credit>5000 and good.NAME_GOODS_CATEGORY in ('摩托车') ) ---卖的MOT credit大于五千
       or good.NAME_GOODS_CATEGORY not in ('手机','个人电脑和办公通讯工具','话费套餐','时尚消费品','其他',
                                           '第三方（增值）服务','白色家电','黑色家电','电动车电池','摩托车','智能家居') )
),
POS_phone AS
(
SELECT distinct ss.code_salesroom,
                ad.skp_credit_case,
                ad.text_contract_number,
                ad.text_username_employee_sales,
                ad.date_decision,
                ad.CODE_CREDIT_STATUS,
                'SALESROOM NAME与所卖商品的类型不一致' as TRIGGER_SOURCE,
                'SALESROOM NAME:"'||ss.name_salesroom||'",WIFI NAME:'||smt.name_wifi||',本单合同卖的商品类型:"'
                   ||good.NAME_GOODS_CATEGORY||'"' as TRIGGER_VALUE
FROM OWNER_DWH.F_APPLICATION_VCT_SMARTPOS_AT smt
join DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD  ON ad.skp_credit_case=smt.SKP_CREDIT_CASE 
                                          and ad.date_decision >= TRUNC(SYSDATE)-7
join owner_dwh.dc_salesroom ss  ON ad.skp_salesroom = ss.SKP_SALESROOM
LEFT join OWNER_DWH.F_PURCHASED_GOODS_TT TT  ON TT.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE AND TT.DATE_DECISION=AD.DATE_DECISION 
                                             AND TT.DATE_DECISION >= TRUNC(SYSDATE)-7 AND TT.SKP_CREDIT_TYPE = 1     
                                             and TT.FLAG_MOST_EXPENSIVE = 'Y'                      
LEFT JOIN owner_dwh.Dc_Goods_Type GOOD  ON GOOD.SKP_GOODS_TYPE=TT.SKP_GOODS_TYPE
LEFT JOIN wifi_phone on wifi_phone.skp_credit_case=smt.SKP_CREDIT_CASE and wifi_phone.date_decision=smt.DATE_DECISION
where smt.date_decision >= TRUNC(SYSDATE)-7
and AD.date_decision >= TRUNC(SYSDATE)-7
and AD.SKP_CREDIT_TYPE = 1 
 and ss.FLAG_POS_TEST = 'N'         
 and (  ( ( ss.name_salesroom like '%华为%' or upper(ss.name_salesroom) like '%VIVO%' or upper(ss.name_salesroom) like '%OPPO%' or 
            upper(ss.name_salesroom) like '%APPLE%' or upper(ss.name_salesroom) like '%IPHONE%' or ss.name_salesroom like '%苹果%' or 
            ss.name_salesroom like '%小米%' or upper(ss.name_salesroom) like '%XIAOMI%' or ss.name_salesroom like '%三星%' or
            upper(ss.name_salesroom) like '%SAMSUNG%' or ss.name_salesroom like '%手机%')
          and ( ss.name_salesroom like '%专卖%' or ss.name_salesroom like '%旗舰%' or ss.name_salesroom like '%店%' or 
                ss.name_salesroom like '%体验%' or ss.name_salesroom like '%授权%' or ss.name_salesroom like '%专柜%'or 
                ss.name_salesroom like '%超市%' or ss.name_salesroom like '%连锁%' or ss.name_salesroom like '%卖场%' or 
                ss.name_salesroom like '%专营%' or ss.name_salesroom like '%商城%' or ss.name_salesroom like '%商行%' or
                ss.name_salesroom like '%商贸%' or ss.name_salesroom like '%售卖%' or ss.name_salesroom like '%回收%') )       
        or ( ( ss.name_salesroom like '%手机%' or ss.name_salesroom like '%移动%' or ss.name_salesroom like '%联通%' or
               ss.name_salesroom like '%电信%') 
             and (ss.name_salesroom like '%城%' or ss.name_salesroom like '%维修%' or ss.name_salesroom like '%经营部%' or 
                  ss.name_salesroom like '%经销部%' or ss.name_salesroom like '%门市%' or ss.name_salesroom like '%营业厅%' or 
                  ss.name_salesroom like '%服务部%' or ss.name_salesroom like '%专营店%' or ss.name_salesroom like '%商城%' or 
                  ss.name_salesroom like '%商行%') )   
        or ss.name_salesroom like '%通讯%' or ss.name_salesroom like '%通信%' or ss.name_salesroom like '%电讯%'  
        or ss.name_salesroom like '%数码%'
     )
and ss.name_salesroom not like '%家具%' and ss.name_salesroom not like '%家居%' and ss.name_salesroom not like '%家电%'
and ss.name_salesroom not like '%车%' and ss.name_salesroom not like '%摩托%'  and ss.name_salesroom not like '%电摩%'
and ss.name_salesroom not like '%雅马哈%' and ss.name_salesroom not like '%爱码%' and ss.name_salesroom not like '%本铃%'
and ss.name_salesroom not like '%雅迪%' and ss.name_salesroom not like '%爱玛%' and ss.name_salesroom not like '%台铃%'
and ss.name_salesroom not like '%大阳%' and ss.name_salesroom not like '%新大洲%' and ss.name_salesroom not like '%凤奇%'
and ss.name_salesroom not like '%电器%' and ss.name_salesroom not like '%无极%'
and ( ( ad.amt_credit>5000 and ss.text_shop_name not like '%车%' and ss.text_shop_name not like '%摩托%'   ---卖的MOT credit大于五千
         and ss.text_shop_name not like '%交通%' and good.NAME_GOODS_CATEGORY in ('摩托车') ) 
       or good.NAME_GOODS_CATEGORY not in ('手机','个人电脑和办公通讯工具','话费套餐','时尚消费品','其他',
                                           '第三方（增值）服务','白色家电','黑色家电','电动车电池','摩托车','智能家居') )
and wifi_phone.skp_credit_case is null
),
wifi_mot as 
(
SELECT distinct ss.code_salesroom,
                ad.skp_credit_case,
                ad.text_contract_number,
                ad.text_username_employee_sales,
                ad.date_decision,
                ad.CODE_CREDIT_STATUS,
                'WIFI NAME与所卖商品的类型不一致' as TRIGGER_SOURCE,
                'WIFI NAME:'||smt.name_wifi||',SALESROOM NAME:"'||ss.name_salesroom||'",本单合同卖的商品类型:"'
                   ||good.NAME_GOODS_CATEGORY||'"' as TRIGGER_VALUE
FROM OWNER_DWH.F_APPLICATION_VCT_SMARTPOS_AT smt
join DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD  ON ad.skp_credit_case=smt.SKP_CREDIT_CASE 
                                          and ad.date_decision >= TRUNC(SYSDATE)-7
join owner_dwh.dc_salesroom ss  ON ad.skp_salesroom = ss.SKP_SALESROOM
LEFT join OWNER_DWH.F_PURCHASED_GOODS_TT TT  ON TT.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE AND TT.DATE_DECISION=AD.DATE_DECISION 
                                             AND TT.DATE_DECISION >= TRUNC(SYSDATE)-7 AND TT.SKP_CREDIT_TYPE = 1     
                                             and TT.FLAG_MOST_EXPENSIVE = 'Y'                      
LEFT JOIN owner_dwh.Dc_Goods_Type GOOD  ON GOOD.SKP_GOODS_TYPE=TT.SKP_GOODS_TYPE
where smt.date_decision >= TRUNC(SYSDATE)-7
and AD.date_decision >= TRUNC(SYSDATE)-7
and AD.SKP_CREDIT_TYPE = 1 
 and ss.FLAG_POS_TEST = 'N'  
 and ( name_wifi like '%摩托%' or name_wifi like '%电动%' or name_wifi like '%车行%' or name_wifi like '%车业%' or 
       name_wifi like '%车友俱乐部%' or name_wifi like '%电摩%' or name_wifi like '%汽车销售%' or name_wifi like '%助力车%' or
       name_wifi like '%电瓶车%' or name_wifi like '%机車%' or name_wifi like '%机车%' or name_wifi like '%自行车%' or
       name_wifi like '%三轮车%')
and name_wifi not like '%家电%' and name_wifi not like '%家具%' and name_wifi not like '%电器%' and name_wifi not like '%手机%'
and upper(name_wifi) not like '%的 IPHONE%'
and ( ( ad.amt_credit>5000 and ( good.NAME_GOODS_CATEGORY in ('手机') or good.NAME_GOODS_CATEGORY like '%家电%' ) ) ---卖的Phone/HA credit大于五千
       or ( good.NAME_GOODS_CATEGORY not in ('摩托车','个人电脑和办公通讯工具','话费套餐','时尚消费品','其他',
                                             '第三方（增值）服务','电动车电池','手机','智能家居') 
            and good.NAME_GOODS_CATEGORY not like '%家电%' )  )
),
POS_mot as
(
SELECT distinct ss.code_salesroom,
                ad.skp_credit_case,
                ad.text_contract_number,
                ad.text_username_employee_sales,
                ad.date_decision,
                ad.CODE_CREDIT_STATUS,
                'SALESROOM NAME与所卖商品的类型不一致' as TRIGGER_SOURCE,
                'SALESROOM NAME:"'||ss.name_salesroom||'",WIFI NAME:'||smt.name_wifi||',本单合同卖的商品类型:"'
                   ||good.NAME_GOODS_CATEGORY||'"' as TRIGGER_VALUE
FROM OWNER_DWH.F_APPLICATION_VCT_SMARTPOS_AT smt
join DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD  ON ad.skp_credit_case=smt.SKP_CREDIT_CASE 
                                          and ad.date_decision >= TRUNC(SYSDATE)-7
join owner_dwh.dc_salesroom ss  ON ad.skp_salesroom = ss.SKP_SALESROOM
LEFT join OWNER_DWH.F_PURCHASED_GOODS_TT TT  ON TT.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE AND TT.DATE_DECISION=AD.DATE_DECISION 
                                             AND TT.DATE_DECISION >= TRUNC(SYSDATE)-7 AND TT.SKP_CREDIT_TYPE = 1     
                                             and TT.FLAG_MOST_EXPENSIVE = 'Y'                      
LEFT JOIN owner_dwh.Dc_Goods_Type GOOD  ON GOOD.SKP_GOODS_TYPE=TT.SKP_GOODS_TYPE
LEFT JOIN wifi_mot on wifi_mot.skp_credit_case=smt.SKP_CREDIT_CASE and wifi_mot.date_decision=smt.DATE_DECISION
where smt.date_decision >= TRUNC(SYSDATE)-7
and AD.date_decision >= TRUNC(SYSDATE)-7
and AD.SKP_CREDIT_TYPE = 1 
 and ss.FLAG_POS_TEST = 'N'  
 and ( ss.name_salesroom like '%摩托%' or ss.name_salesroom like '%电动%' or ss.name_salesroom like '%车行%' or 
       ss.name_salesroom like '%车业%' or ss.name_salesroom like '%电摩%' or ss.name_salesroom like '%车友俱乐部%' or 
       ss.name_salesroom like '%汽车销售%' or ss.name_salesroom like '%助力车%' or ss.name_salesroom like '%电瓶车%' or
       ss.name_salesroom like '%机車%' or ss.name_salesroom like '%机车%' or ss.name_salesroom like '%自行车%' or 
       ss.name_salesroom like '%三轮车%')
and ss.name_salesroom not like '%摩托罗拉%'
and ss.name_salesroom not like '%手机%'
and ss.name_salesroom not like '%家具%'
and ss.name_salesroom not like '%家电%'
and ss.name_salesroom not like '%电动工具%'
and ss.name_salesroom not like '%电器%'
and ( ( ad.amt_credit>5000 and ( good.NAME_GOODS_CATEGORY in ('手机') or good.NAME_GOODS_CATEGORY like '%家电%' ) ) ---卖的Phone/HA credit大于五千
       or ( good.NAME_GOODS_CATEGORY not in ('摩托车','个人电脑和办公通讯工具','话费套餐','时尚消费品','其他',
                                             '第三方（增值）服务','电动车电池','手机','智能家居') 
            and good.NAME_GOODS_CATEGORY not like '%家电%' )  )          
 and wifi_mot.skp_credit_case is null
),
wifi_Beauty as 
(
SELECT distinct ss.code_salesroom,
                ad.skp_credit_case,
                ad.text_contract_number,
                ad.text_username_employee_sales,
                ad.date_decision,
                ad.CODE_CREDIT_STATUS,
                'WIFI NAME与所卖商品的类型不一致' as TRIGGER_SOURCE,
                'WIFI NAME:'||smt.name_wifi||',SALESROOM NAME:"'||ss.name_salesroom||'",本单合同卖的商品类型:"'
                   ||good.NAME_GOODS_CATEGORY||'"' as TRIGGER_VALUE
FROM OWNER_DWH.F_APPLICATION_VCT_SMARTPOS_AT smt
join DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD  ON ad.skp_credit_case=smt.SKP_CREDIT_CASE 
                                          and ad.date_decision >= TRUNC(SYSDATE)-7
join owner_dwh.dc_salesroom ss  ON ad.skp_salesroom = ss.SKP_SALESROOM
LEFT join OWNER_DWH.F_PURCHASED_GOODS_TT TT  ON TT.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE AND TT.DATE_DECISION=AD.DATE_DECISION 
                                             AND TT.DATE_DECISION >= TRUNC(SYSDATE)-7 AND TT.SKP_CREDIT_TYPE = 1     
                                             and TT.FLAG_MOST_EXPENSIVE = 'Y'                      
LEFT JOIN owner_dwh.Dc_Goods_Type GOOD  ON GOOD.SKP_GOODS_TYPE=TT.SKP_GOODS_TYPE
where smt.date_decision >= TRUNC(SYSDATE)-7
and AD.date_decision >= TRUNC(SYSDATE)-7
and AD.SKP_CREDIT_TYPE = 1 
 and ss.FLAG_POS_TEST = 'N'  
 and ( name_wifi like '%整形%' or name_wifi like '%女子会馆%' or name_wifi like '%祛痘%' or name_wifi like '%医疗%' or 
       name_wifi like '%美容%' or name_wifi like '%医美%' or name_wifi like '%口腔%' or name_wifi like '%美妆%' or
       name_wifi like '%医堂%' or name_wifi like '%祛斑%' or name_wifi like '%美颜%' or name_wifi like '%养肤%' or
       name_wifi like '%皮肤%' or name_wifi like '%化妆品%'or name_wifi like '%养生%' or name_wifi like '%美体%' or
       name_wifi like '%门诊%' or name_wifi like '%医学%' or name_wifi like '%抗衰%' or name_wifi like '%牙医%' or
       name_wifi like '%瘦身%' or name_wifi like '%妊娠纹%' or name_wifi like '%医生%' )
and name_wifi not like '%手机%' and name_wifi not like '%车%' and name_wifi not like '%健身%'
and upper(name_wifi) not like '%的 IPHONE%' and upper(name_wifi) not like '%OPPO%' 
 and good.NAME_GOODS_CATEGORY not in ('个人电脑和办公通讯工具','话费套餐','时尚消费品','其他',
                                      '第三方（增值）服务','电动车电池','智能家居')
and good.NAME_GOODS_CATEGORY not like '%美容%'
and good.NAME_GOODS_CATEGORY not like '%培训%'
),
POS_Beauty as 
(
SELECT distinct ss.code_salesroom,
                ad.skp_credit_case,
                ad.text_contract_number,
                ad.text_username_employee_sales,
                ad.date_decision,
                ad.CODE_CREDIT_STATUS,
                'SALESROOM NAME与所卖商品的类型不一致' as TRIGGER_SOURCE,
                'SALESROOM NAME:"'||ss.name_salesroom||'",WIFI NAME:'||smt.name_wifi||',本单合同卖的商品类型:"'
                   ||good.NAME_GOODS_CATEGORY||'"' as TRIGGER_VALUE
FROM OWNER_DWH.F_APPLICATION_VCT_SMARTPOS_AT smt
join DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD  ON ad.skp_credit_case=smt.SKP_CREDIT_CASE 
                                          and ad.date_decision >= TRUNC(SYSDATE)-7
join owner_dwh.dc_salesroom ss  ON ad.skp_salesroom = ss.SKP_SALESROOM
LEFT join OWNER_DWH.F_PURCHASED_GOODS_TT TT  ON TT.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE AND TT.DATE_DECISION=AD.DATE_DECISION 
                                             AND TT.DATE_DECISION >= TRUNC(SYSDATE)-7 AND TT.SKP_CREDIT_TYPE = 1     
                                             and TT.FLAG_MOST_EXPENSIVE = 'Y'                      
LEFT JOIN owner_dwh.Dc_Goods_Type GOOD  ON GOOD.SKP_GOODS_TYPE=TT.SKP_GOODS_TYPE
LEFT JOIN wifi_Beauty on wifi_Beauty.skp_credit_case=smt.SKP_CREDIT_CASE and wifi_Beauty.date_decision=smt.DATE_DECISION
where smt.date_decision >= TRUNC(SYSDATE)-7
and AD.date_decision >= TRUNC(SYSDATE)-7
and AD.SKP_CREDIT_TYPE = 1 
 and ss.FLAG_POS_TEST = 'N'  
 and ( ss.name_salesroom like '%整形%' or ss.name_salesroom like '%女子会馆%' or ss.name_salesroom like '%祛痘%' or 
       ss.name_salesroom like '%医疗%' or ss.name_salesroom like '%美容%' or ss.name_salesroom like '%医美%' or
       ss.name_salesroom like '%口腔%' or ss.name_salesroom like '%美妆%' or ss.name_salesroom like '%医堂%' or 
       ss.name_salesroom like '%祛斑%' or ss.name_salesroom like '%美颜%' or ss.name_salesroom like '%养肤%' or 
       ss.name_salesroom like '%皮肤%' or ss.name_salesroom like '%化妆品%'or ss.name_salesroom like '%养生%' or
       ss.name_salesroom like '%美体%' or ss.name_salesroom like '%门诊%' or ss.name_salesroom like '%医学%' or 
       ss.name_salesroom like '%抗衰%' or ss.name_salesroom like '%诊所%' or ss.name_salesroom like '%瘦身%' or 
       ss.name_salesroom like '%妊娠纹%' or ss.name_salesroom like '%医生%' or ss.name_salesroom like '%牙医%')
and ss.name_salesroom not like '%通信%' and ss.name_salesroom not like '%通讯%' and ss.name_salesroom not like '%手机%'
and ss.name_salesroom not like '%健身%' and ss.name_salesroom not like '%车%'  
 and (  ( ss.text_shop_name not like '%车%' and ss.text_shop_name not like '%摩托%' and 
          ss.text_shop_name not like '%交通%' and good.NAME_GOODS_CATEGORY in ('摩托车') )
      OR ( good.NAME_GOODS_CATEGORY not in ('个人电脑和办公通讯工具','话费套餐','时尚消费品','其他','第三方（增值）服务',
                                            '电动车电池','智能家居','摩托车') )  )
and good.NAME_GOODS_CATEGORY not like '%美容%'
and good.NAME_GOODS_CATEGORY not like '%培训%'
and wifi_Beauty.skp_credit_case is null
),
wifi_HA as 
(
SELECT distinct ss.code_salesroom,
                ad.skp_credit_case,
                ad.text_contract_number,
                ad.text_username_employee_sales,
                ad.date_decision,
                ad.CODE_CREDIT_STATUS,
                'WIFI NAME与所卖商品的类型不一致' as TRIGGER_SOURCE,
                'WIFI NAME:'||smt.name_wifi||',SALESROOM NAME:"'||ss.name_salesroom||'",本单合同卖的商品类型:"'
                   ||good.NAME_GOODS_CATEGORY||'"' as TRIGGER_VALUE
FROM OWNER_DWH.F_APPLICATION_VCT_SMARTPOS_AT smt
join DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD  ON ad.skp_credit_case=smt.SKP_CREDIT_CASE 
                                          and ad.date_decision >= TRUNC(SYSDATE)-7
join owner_dwh.dc_salesroom ss  ON ad.skp_salesroom = ss.SKP_SALESROOM
LEFT join OWNER_DWH.F_PURCHASED_GOODS_TT TT  ON TT.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE AND TT.DATE_DECISION=AD.DATE_DECISION 
                                             AND TT.DATE_DECISION >= TRUNC(SYSDATE)-7 AND TT.SKP_CREDIT_TYPE = 1     
                                             and TT.FLAG_MOST_EXPENSIVE = 'Y'                      
LEFT JOIN owner_dwh.Dc_Goods_Type GOOD  ON GOOD.SKP_GOODS_TYPE=TT.SKP_GOODS_TYPE
where smt.date_decision >= TRUNC(SYSDATE)-7
and AD.date_decision >= TRUNC(SYSDATE)-7
and AD.SKP_CREDIT_TYPE = 1 
 and ss.FLAG_POS_TEST = 'N'  
 and ( name_wifi like '%电器%' or name_wifi like '%家电%' or name_wifi like '美的%' or name_wifi like '%空调%' or 
       name_wifi like '%海尔%' or name_wifi like '%电脑%' or name_wifi like '%净水%' or name_wifi like '%史密斯%' or
       name_wifi like '%格力%' or name_wifi like '%电力%' )
and name_wifi not like '%车%' and name_wifi not like '%摩托%' and name_wifi not like '%电动%' and upper(name_wifi) not like '%的 IPHONE%'
and ( ( ad.amt_credit>10000 and good.NAME_GOODS_CATEGORY in ('家装','家具','摩托车') )  ---卖的HDHF/MOT credit大于一万
       or ( good.NAME_GOODS_CATEGORY not in ('手机','个人电脑和办公通讯工具','话费套餐','时尚消费品','其他',
                                             '第三方（增值）服务','电动车电池','家装','家具','摩托车','智能家居') 
            and good.NAME_GOODS_CATEGORY not like '%家电%' )  )
),
POS_HA as 
(
SELECT distinct ss.code_salesroom,
                ad.skp_credit_case,
                ad.text_contract_number,
                ad.text_username_employee_sales,
                ad.date_decision,
                ad.CODE_CREDIT_STATUS,
                'SALESROOM NAME与所卖商品的类型不一致' as TRIGGER_SOURCE,
                'SALESROOM NAME:"'||ss.name_salesroom||'",WIFI NAME:'||smt.name_wifi||',本单合同卖的商品类型:"'
                   ||good.NAME_GOODS_CATEGORY||'"' as TRIGGER_VALUE
FROM OWNER_DWH.F_APPLICATION_VCT_SMARTPOS_AT smt
join DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD  ON ad.skp_credit_case=smt.SKP_CREDIT_CASE 
                                          and ad.date_decision >= TRUNC(SYSDATE)-7
join owner_dwh.dc_salesroom ss  ON ad.skp_salesroom = ss.SKP_SALESROOM
LEFT join OWNER_DWH.F_PURCHASED_GOODS_TT TT  ON TT.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE AND TT.DATE_DECISION=AD.DATE_DECISION 
                                             AND TT.DATE_DECISION >= TRUNC(SYSDATE)-7 AND TT.SKP_CREDIT_TYPE = 1     
                                             and TT.FLAG_MOST_EXPENSIVE = 'Y'                      
LEFT JOIN owner_dwh.Dc_Goods_Type GOOD  ON GOOD.SKP_GOODS_TYPE=TT.SKP_GOODS_TYPE
LEFT JOIN wifi_HA on wifi_HA.skp_credit_case=smt.SKP_CREDIT_CASE and wifi_HA.date_decision=smt.DATE_DECISION
where smt.date_decision >= TRUNC(SYSDATE)-7
and AD.date_decision >= TRUNC(SYSDATE)-7
and AD.SKP_CREDIT_TYPE = 1 
 and ss.FLAG_POS_TEST = 'N'  
 and ( ss.name_salesroom like '%电器%' or ss.name_salesroom like '%家电%' or ss.name_salesroom like '%空调%' or
       ss.name_salesroom like '美的%' or ss.name_salesroom like '%海尔专卖%' or ss.name_salesroom like '%电脑%' or
       ss.name_salesroom like '%净水%' or ss.name_salesroom like '%史密斯%' or ss.name_salesroom like '%格力%' or 
       ss.name_salesroom like '%电力%' )
and ss.name_salesroom not like '%家具%' and ss.name_salesroom not like '%橱柜%' and ss.name_salesroom not like '%照明%'
and ss.name_salesroom not like '%车%' and ss.name_salesroom not like '%摩托%' and ss.name_salesroom not like '%厨房%'
and ss.name_salesroom not like '%厨卫%' and ss.name_salesroom not like '%家居%' and ss.name_salesroom not like '%家装%'
and ss.name_salesroom not like '%卫浴%'
and (  ( ad.amt_credit>10000 and good.NAME_GOODS_CATEGORY in ('家装','家具') )       ---卖的HDHF/MOT credit大于一万
      or ( ad.amt_credit>10000 and ss.text_shop_name not like '%车%' and ss.text_shop_name not like '%摩托%' and 
           ss.text_shop_name not like '%交通%' and good.NAME_GOODS_CATEGORY in ('摩托车') )
      or ( good.NAME_GOODS_CATEGORY not in ('手机','个人电脑和办公通讯工具','话费套餐','时尚消费品','其他',
                                             '第三方（增值）服务','电动车电池','家装','家具','摩托车','智能家居') 
           and good.NAME_GOODS_CATEGORY not like '%家电%' )  )
and wifi_HA.skp_credit_case is null
),
wifi_HDHF as 
(
SELECT distinct ss.code_salesroom,
                ad.skp_credit_case,
                ad.text_contract_number,
                ad.text_username_employee_sales,
                ad.date_decision,
                ad.CODE_CREDIT_STATUS,
                'WIFI NAME与所卖商品的类型不一致' as TRIGGER_SOURCE,
                'WIFI NAME:'||smt.name_wifi||',SALESROOM NAME:"'||ss.name_salesroom||'",本单合同卖的商品类型:"'
                   ||good.NAME_GOODS_CATEGORY||'"' as TRIGGER_VALUE
FROM OWNER_DWH.F_APPLICATION_VCT_SMARTPOS_AT smt
join DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD  ON ad.skp_credit_case=smt.SKP_CREDIT_CASE 
                                          and ad.date_decision >= TRUNC(SYSDATE)-7
join owner_dwh.dc_salesroom ss  ON ad.skp_salesroom = ss.SKP_SALESROOM
LEFT join OWNER_DWH.F_PURCHASED_GOODS_TT TT  ON TT.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE AND TT.DATE_DECISION=AD.DATE_DECISION 
                                             AND TT.DATE_DECISION >= TRUNC(SYSDATE)-7 AND TT.SKP_CREDIT_TYPE = 1     
                                             and TT.FLAG_MOST_EXPENSIVE = 'Y'                      
LEFT JOIN owner_dwh.Dc_Goods_Type GOOD  ON GOOD.SKP_GOODS_TYPE=TT.SKP_GOODS_TYPE
where smt.date_decision >= TRUNC(SYSDATE)-7
and AD.date_decision >= TRUNC(SYSDATE)-7
and AD.SKP_CREDIT_TYPE = 1 
 and ss.FLAG_POS_TEST = 'N'   
 and name_wifi not like '%家电%' and name_wifi not like '%电器%' and name_wifi not like '%车%'
and name_wifi not like '%数码%' and name_wifi not like '%广告%' and name_wifi not like '%手机%'
and upper(name_wifi) not like '%的 IPHONE%' and upper(name_wifi) not like '%OPPO%'
and ( ( ad.amt_credit>10000 and good.NAME_GOODS_CATEGORY like '%家电%'  ---卖的HA credit大于一万
         and (name_wifi like '%家装%' or name_wifi like '%家具%' or name_wifi like '%装修%' or
              name_wifi like '%装潢%' or name_wifi like '%床垫%' or name_wifi like '%床业%') ) 
       or ( ( name_wifi like '%床垫%' or name_wifi like '%家装%' or name_wifi like '%家具%' or name_wifi like '%灯饰%' or 
              name_wifi like '%磁砖%' or name_wifi like '%陶瓷%' or name_wifi like '%卫浴%' or name_wifi like '%石材%' or
              name_wifi like '%衣柜%' or name_wifi like '%地面材料%' or name_wifi like '%木门%' or name_wifi like '%门业%' or
              name_wifi like '%照明%' or name_wifi like '%吊顶%' or name_wifi like '%洁具%' or name_wifi like '%灯具%' or
              name_wifi like '%装潢%' or name_wifi like '%装饰%' or name_wifi like '%壁纸%' or name_wifi like '%装修%' or
              name_wifi like '%全屋定制%' or name_wifi like '%橱柜%' or name_wifi like '%厨卫%' or name_wifi like '%厨柜%' or
              name_wifi like '%地板%' or name_wifi like '%布艺%' or name_wifi like '%门窗%' or name_wifi like '%地砖%' or 
              name_wifi like '%瓷砖%' or name_wifi like '%床业%')
            and good.NAME_GOODS_CATEGORY not like '%家电%' 
            and good.NAME_GOODS_CATEGORY not in ('家具','家装','个人电脑和办公通讯工具','话费套餐','时尚消费品','其他',
                                            '第三方（增值）服务','电动车电池','智能家居') )   )
),
POS_HDHF as 
(
SELECT distinct ss.code_salesroom,
                ad.skp_credit_case,
                ad.text_contract_number,
                ad.text_username_employee_sales,
                ad.date_decision,
                ad.CODE_CREDIT_STATUS,
                'SALESROOM NAME与所卖商品的类型不一致' as TRIGGER_SOURCE,
                'SALESROOM NAME:"'||ss.name_salesroom||'",WIFI NAME:'||smt.name_wifi||',本单合同卖的商品类型:"'
                   ||good.NAME_GOODS_CATEGORY||'"' as TRIGGER_VALUE
FROM OWNER_DWH.F_APPLICATION_VCT_SMARTPOS_AT smt
join DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD  ON ad.skp_credit_case=smt.SKP_CREDIT_CASE 
                                          and ad.date_decision >= TRUNC(SYSDATE)-7
join owner_dwh.dc_salesroom ss  ON ad.skp_salesroom = ss.SKP_SALESROOM
LEFT join OWNER_DWH.F_PURCHASED_GOODS_TT TT  ON TT.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE AND TT.DATE_DECISION=AD.DATE_DECISION 
                                             AND TT.DATE_DECISION >= TRUNC(SYSDATE)-7 AND TT.SKP_CREDIT_TYPE = 1     
                                             and TT.FLAG_MOST_EXPENSIVE = 'Y'                      
LEFT JOIN owner_dwh.Dc_Goods_Type GOOD  ON GOOD.SKP_GOODS_TYPE=TT.SKP_GOODS_TYPE
LEFT JOIN wifi_HDHF on wifi_HDHF.skp_credit_case=smt.SKP_CREDIT_CASE and wifi_HDHF.date_decision=smt.DATE_DECISION
where smt.date_decision >= TRUNC(SYSDATE)-7
and AD.date_decision >= TRUNC(SYSDATE)-7
and AD.SKP_CREDIT_TYPE = 1 
 and ss.FLAG_POS_TEST = 'N'  
 and ss.name_salesroom not like '%家电%' and ss.name_salesroom not like '%电器%' and ss.name_salesroom not like '%雅迪%'
and ss.name_salesroom not like '%手机%' and ss.name_salesroom not like '%车%' and ss.name_salesroom not like '%医疗%'
and ss.name_salesroom not like '%广告%' and ss.name_salesroom not like '%通讯%'
and ( ( ad.amt_credit>10000 and good.NAME_GOODS_CATEGORY like '%家电%'  ---卖的HA credit大于一万
         and (ss.name_salesroom like '%家装%' or ss.name_salesroom like '%家具%' or ss.name_salesroom like '%装修%' or
              ss.name_salesroom like '%装潢%' or ss.name_salesroom like '%床垫%' or ss.name_salesroom like '%床业%'))  
      or ( ( ss.name_salesroom like '%床垫%' or ss.name_salesroom like '%家装%' or ss.name_salesroom like '%家具%' or
             ss.name_salesroom like '%灯饰%' or ss.name_salesroom like '%磁砖%' or ss.name_salesroom like '%陶瓷%' or 
             ss.name_salesroom like '%卫浴%' or ss.name_salesroom like '%石材%' or ss.name_salesroom like '%衣柜%' or 
             ss.name_salesroom like '%地面材料%' or ss.name_salesroom like '%木门%' or ss.name_salesroom like '%门业%' or
             ss.name_salesroom like '%照明%' or ss.name_salesroom like '%吊顶%' or ss.name_salesroom like '%洁具%' or 
             ss.name_salesroom like '%灯具%' or ss.name_salesroom like '%装潢%' or ss.name_salesroom like '%装饰%' or 
             ss.name_salesroom like '%床业%' or ss.name_salesroom like '%壁纸%' or ss.name_salesroom like '%全屋定制%' or 
             ss.name_salesroom like '%橱柜%' or ss.name_salesroom like '%厨卫%' or ss.name_salesroom like '%厨柜%' or
             ss.name_salesroom like '%地板%' or ss.name_salesroom like '%布艺%' or ss.name_salesroom like '%门窗%' or 
             ss.name_salesroom like '%地砖%' or ss.name_salesroom like '%瓷砖%' or ss.name_salesroom like '%装修%')
            and (  (good.NAME_GOODS_CATEGORY not in ('家具','家装','个人电脑和办公通讯工具','话费套餐','时尚消费品','其他',
                                                       '第三方（增值）服务','电动车电池','智能家居','摩托车') 
                    and good.NAME_GOODS_CATEGORY not like '%家电%' )
                 or (ss.text_shop_name not like '%车%' and ss.text_shop_name not like '%摩托%' and 
                     ss.text_shop_name not like '%交通%' and good.NAME_GOODS_CATEGORY in ('摩托车')) )  )   )
and wifi_HDHF.skp_credit_case is null
),
BASE AS
(
SELECT distinct wi_po.*, gps.smt_longitude, gps.smt_latitude,
                 RANK()OVER(PARTITION BY wi_po.text_contract_number ORDER BY wi_po.trigger_value) AS RANK,
                 CASE WHEN  ap_antifraud.getdistance(gps.smt_latitude,gps.smt_longitude,gps.smart_latitude,gps.smart_longitude) IS NOT NULL 
                 THEN to_char(  ap_antifraud.getdistance(gps.smt_latitude,gps.smt_longitude,gps.smart_latitude,gps.smart_longitude), 'FM999999999990.9999' )
                 else 'Null' end as dis
FROM (SELECT * FROM wifi_phone
       UNION ALL
       SELECT * FROM pos_phone
       UNION ALL
       SELECT * FROM wifi_MOT
       UNION ALL
       SELECT * FROM pos_MOT 
       UNION ALL
       SELECT * FROM wifi_Beauty
       UNION ALL
       SELECT * FROM pos_Beauty 
       UNION ALL
       SELECT * FROM wifi_HA
       UNION ALL
       SELECT * FROM pos_HA 
       UNION ALL
       SELECT * FROM wifi_HDHF
       UNION ALL
       SELECT * FROM pos_HDHF ) wi_po
JOIN OWNER_DWH.Dc_Employee ee  ON ee.TEXT_USERNAME_EMPLOYEE=wi_po.text_username_employee_sales
                                AND ee.SKP_BANK_ROLE!=1962      ---不要AVS
JOIN ap_antifraud.f_application_gps gps  ON gps.skp_credit_case=wi_po.skp_credit_case
                                          AND gps.date_decision=wi_po.date_decision
WHERE NOT EXISTS ( SELECT 1 FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS BB
                    WHERE BB.CODE_SALESROOM=WI_PO.CODE_SALESROOM AND BB.CLASS=549 AND BB.IV_COMMENT LIKE '%#门店类型不准确#%' )
),
wifi_POS as
(
SELECT distinct base.CODE_SALESROOM, base.TRIGGER_SOURCE, base.SKP_CREDIT_CASE, base.TEXT_CONTRACT_NUMBER, base.DATE_DECISION,
                 base.TRIGGER_VALUE||'。SMT GPS: longitude '||base.smt_longitude||', latitude '||base.smt_latitude||'。'||
                 'SMT and SMARTPOS distance: '||base.dis||'。' as TRIGGER_VALUE 
 FROM BASE
where BASE.rank=1
)                
SELECT DISTINCT 'POS' AS UNIT
                ,CODE_SALESROOM
                ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
                ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
                ,'549' AS CLASS
                ,TRIGGER_SOURCE
                ,TRIGGER_VALUE
                ,'SOFT' AS TRIGGER_TYPE
                ,SKP_CREDIT_CASE
                ,TEXT_CONTRACT_NUMBER
FROM wifi_POS;
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;

PROCEDURE TRIGGER_557_LIVENESS_DETECTION IS
  BEGIN

INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '557 Liveness Detection Trigger',SYSDATE FROM DUAL;
COMMIT;
--launch 20200730
INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection 
with hack AS
(
SELECT DISTINCT  hv.SKP_CREDIT_CASE, att.NAME_VECTOR,
att.DESC_ATTRIBUTE ,hv.CHAR_VALUE,hv.NUM_VALUE
FROM owner_dwh.f_scoring_vector_tt hv
JOIN owNER_DWH.Dc_Scoring_Vector_Attribute att ON att.SKP_SCORING_VECTOR_ATTRIBUTE=hv.SKP_SCORING_VECTOR_ATTRIBUTE
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='557' AND hv.date_decision>= EX.MAX_DETECT
WHERE hv.date_decision>SYSDATE-10
AND hv.SKP_SCORING_VECTOR_ATTRIBUTE IN (8506,8501,8503)
)
,dm_table AS
(
SELECT ad.skp_credit_case,ad.date_decision,ad.code_salesroom,ad.text_contract_number,ad.amt_credit,ad.text_username_employee_sales,ad.skp_contract
FROM 
dm_antifraud.ft_af_credit_case_ad ad
WHERE ad.date_decision>SYSDATE-10
AND ad.SKP_CREDIT_TYPE=1
)
,hack_conc as 
(
SELECT ad.Code_Salesroom, 
COUNT(DISTINCT ad.skp_credit_case) as app_cnt,
COUNT(DISTINCT hh.skp_credit_case) as hack_app_cnt,
COUNT(DISTINCT hh.skp_credit_case)/COUNT(DISTINCT ad.skp_credit_case) as hack_rate
FROM dm_table ad
left JOIN HACK hh ON hh.skp_credit_case=ad.skp_credit_case 
AND DESC_ATTRIBUTE='HACK or NOHACK when using LD, Not sending when using camera.'
AND  CHAR_VALUE='HACK'
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='557' AND ad.date_decision>= EX.MAX_DETECT
GROUP BY  ad.Code_Salesroom
HAVING COUNT(DISTINCT hh.skp_credit_case) >=3
--ORDER BY  COUNT(DISTINCT hh.skp_credit_case) DESC
)
,hack_contract as 
(
SELECT DISTINCT hc.code_salesroom,ad.skp_credit_case,ad.text_contract_number,hh.desc_attribute,hh.char_value，
ad.amt_credit,ad.text_username_employee_sales,tc.skp_tipper,dct.name_tipper,aa.num_face_recognition_Score
,ddc.skp_credit_acquisition_chnl
FROM hack_conc hc
JOIN dm_table ad on ad.code_salesroom=hc.code_salesroom
JOIN hack hh ON hh.skp_credit_case=ad.skp_credit_case
LEFT JOIN owNER_DWH.f_Tipper_Commission_Tt tc ON  ad.skp_contract=TC.SKP_CONTRACT and tc.skp_Contract <> -1
LEFT JOIN owNER_DWH.dc_tipper dct on dct.skp_tipper=tc.skp_tipper
LEFT JOIN OWNER_DWH.F_APPLICATION_VCT_INFO_AT AA on aa.skp_Credit_case=ad.skp_credit_case 
AND  aa.num_face_recognition_Score is not null
LEFT JOIN OWNER_DWH.DC_CREDIT_CASE ddc on ddc.skp_Credit_case=ad.skp_credit_Case  
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='557' AND ad.date_decision>= EX.MAX_DETECT
WHERE hh.DESC_ATTRIBUTE='HACK or NOHACK when using LD, Not sending when using camera.'
AND hh.CHAR_VALUE='HACK' 
)
select 
'POS' AS UNIT
,h1.code_salesroom AS ID_ENTITY
,TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE, 'IW')+6,'YYYY/MM/DD') AS WEEK_DETECT
,'557' AS CLASS
,'liveness detection concentration POS' AS TRIGGER_SOURCE
,'该门店(' || h1.CODE_SALESROOM || ') 因一周内有不少于三单活体检测结果为“HACK”的申请被trigger,'|| 
' 该门店一周内单量为: ' ||h2.app_cnt||', 活体检测结果为HACK单量为为: ' || h2.hack_app_cnt ||
', 相应比例为: ' || trunc(h2.hack_rate,2) ||
' 其中此单SA_ID为: ' ||h1.text_username_employee_sales|| '; '  || 
' 人脸识别分数FR_score为: ' ||h1.num_face_recognition_Score|| '; '  ||
CASE WHEN h1.skp_tipper is not null  THEN ', 此单由推客-' ||h1.NAME_TIPPER || '(' ||h1.skp_tipper || ')介绍'  || '; '   END  
AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM hack_contract h1
join hack_conc h2 on h1.code_salesroom=h2.code_salesroom;
COMMIT;
END;

PROCEDURE TRIGGER_DEL_ACL IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_DEL_ACL';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP:TRIGGER_DEL_ACL';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
--20191104
--=====================================================================================================================================================
--============================HARDSOFT SA=============================================================================================================
--=====================================================================================================================================================
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'TRIGGER DEL SA ACL',SYSDATE FROM DUAL;
COMMIT;
EXECUTE IMMEDIATE' TRUNCATE TABLE AP_ANTIFRAUD.TRIGGER_HARD_SA_ACL';
INSERT INTO AP_ANTIFRAUD.TRIGGER_HARD_SA_ACL
-----------------------------FIND THE 1ST MONDAY OF EVERY MONTH
WITH ACLL AS
(---------------------FIND ALL ACL CONTARCT 
SELECT A.date_decision , A.skp_credit_case,A.skp_credit_type, A.skp_credit_status , A.skp_client, A.text_contract_number , D.TEXT_USERNAME_EMPLOYEE ,
B.num_min_inst_def4_dd , B.num_observ_def4_maxinst,
B.num_min_inst_def10_dd , B.num_observ_def10_maxinst,
B.num_min_inst_def30_dd , B.num_observ_def30_maxinst
FROM OWNER_DWH.DC_CREDIT_CASE A
JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD B
ON A.skp_credit_case = B.skp_credit_case
AND A.skp_credit_type = B.skp_credit_type
AND A.DATE_DECISION = B.DATE_DECISION
JOIN OWNER_DWH.F_APPLICATION_TT C
ON A.SKP_CREDIT_CASE = C.SKP_CREDIT_CASE
AND B.SKP_CREDIT_CASE = C.SKP_CREDIT_CASE 
AND A.DATE_DECISION = C.DATE_DECISION
AND B.DATE_DECISION = C.DATE_DECISION
AND A.skp_credit_type = C.SKP_CREDIT_TYPE
AND B.skp_credit_type = C.SKP_CREDIT_TYPE 
JOIN OWNER_DWH.DC_EMPLOYEE D
ON C.skp_employee_consult_3rd_block = D.SKP_EMPLOYEE
WHERE A.skp_credit_type = 2 AND B.skp_credit_type = 2 AND C.SKP_CREDIT_TYPE  =2
AND A.skp_credit_acquisition_chnl = 6
AND A.skp_credit_status IN (2,3,5)
AND D.TEXT_IDENT_NUMBER <>'XNA' 
AND A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-6)
AND B.date_decision >= ADD_MONTHS(TRUNC(sysdate,'MM'),-6)
AND C.date_decision >= ADD_MONTHS(TRUNC(sysdate,'MM'),-6)
) 
, CON AS
(  --------MARK DEF TYPE
SELECT A.date_decision , A.skp_credit_case,A.skp_credit_type, A.skp_credit_status , A.skp_client, A.text_contract_number , 
A.TEXT_USERNAME_EMPLOYEE AS SA_ID,
CASE WHEN A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-3) AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-2)
  AND A.num_min_inst_def4_dd =1 AND A.num_observ_def4_maxinst>=1 THEN 1 ELSE 0 END AS FPD4,
CASE WHEN A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-3) AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-2)
  AND A.num_min_inst_def10_dd =1 AND A.num_observ_def10_maxinst>=1 THEN 1 ELSE 0 END AS FPD10,
CASE WHEN A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-3) AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-2)
  AND A.num_min_inst_def30_dd =1 AND A.num_observ_def30_maxinst>=1 THEN 1 ELSE 0 END AS FPD30,
CASE WHEN A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-4) AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-3)
  AND A.num_min_inst_def4_dd =2 AND A.num_observ_def4_maxinst>=2 THEN 1 ELSE 0 END AS SPD4,
CASE WHEN A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-4) AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-3)
  AND A.num_min_inst_def10_dd =2 AND A.num_observ_def10_maxinst>=2 THEN 1 ELSE 0 END AS SPD10,
CASE WHEN A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-4) AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-3)
  AND A.num_min_inst_def10_dd =2 AND A.num_observ_def30_maxinst>=2 THEN 1 ELSE 0 END AS SPD30,
CASE WHEN A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-5) AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-4)
  AND A.num_min_inst_def4_dd =3 AND A.num_observ_def4_maxinst>=3 THEN 1 ELSE 0 END AS TPD4,
CASE WHEN A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-5) AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-4)
  AND A.num_min_inst_def10_dd =3 AND A.num_observ_def10_maxinst>=3 THEN 1 ELSE 0 END AS TPD10,
CASE WHEN A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-5) AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-4)
  AND A.num_min_inst_def30_dd =3 AND A.num_observ_def30_maxinst>=3 THEN 1 ELSE 0 END AS TPD30,
CASE WHEN A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-6) AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-5)
  AND A.num_min_inst_def4_dd =4 AND A.num_observ_def4_maxinst>=4 THEN 1 ELSE 0 END AS QPD4,
CASE WHEN A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-6) AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-5)
  AND A.num_min_inst_def10_dd =4 AND A.num_observ_def10_maxinst>=4 THEN 1 ELSE 0 END AS QPD10,
CASE WHEN A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-6) AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-5)
  AND A.num_min_inst_def30_dd =4 AND A.num_observ_def30_maxinst>=4 THEN 1 ELSE 0 END AS QPD30,
CASE WHEN A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-6) AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-5)
  AND A.num_min_inst_def4_dd <=4 AND A.num_observ_def4_maxinst>=4 THEN 1 ELSE 0 END AS FSTQPD4,
CASE WHEN A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-6) AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-5)
  AND A.num_min_inst_def10_dd <=4 AND A.num_observ_def10_maxinst>=4 THEN 1 ELSE 0 END AS FSTQPD10,
CASE WHEN A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-6) AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-5)
  AND A.num_min_inst_def30_dd <=4 AND A.num_observ_def30_maxinst>=4 THEN 1 ELSE 0 END AS FSTQPD30
FROM ACLL A
)
, FPD AS 
(  ------ALL FPD CONTRACT
SELECT A.TEXT_USERNAME_EMPLOYEE,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def4_dd = 1 AND A.num_observ_def4_maxinst>=1 THEN A.SKP_CREDIT_CASE END) AS CNT_FPD4,
COUNT(DISTINCT CASE WHEN A.num_observ_def4_maxinst>=1  THEN A.SKP_CREDIT_CASE END ) AS OBS_FPD4,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def10_dd = 1 AND A.num_observ_def10_maxinst>=1 THEN A.SKP_CREDIT_CASE END) AS CNT_FPD10,
COUNT(DISTINCT CASE WHEN A.num_observ_def10_maxinst>=1  THEN A.SKP_CREDIT_CASE END ) AS OBS_FPD10,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd = 1 AND A.num_observ_def30_maxinst>=1 THEN A.SKP_CREDIT_CASE END) AS CNT_FPD30,
COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst>=1  THEN A.SKP_CREDIT_CASE END ) AS OBS_FPD30,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def4_maxinst>=1  THEN A.SKP_CREDIT_CASE END )=0 THEN 0
  ELSE COUNT(DISTINCT CASE WHEN A.num_min_inst_def4_dd = 1 AND A.num_observ_def4_maxinst>=1 THEN A.SKP_CREDIT_CASE END)/
    COUNT(DISTINCT CASE WHEN A.num_observ_def4_maxinst>=1  THEN A.SKP_CREDIT_CASE END ) END AS R_FPD4,
    CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def10_maxinst>=1  THEN A.SKP_CREDIT_CASE END )=0 THEN 0
  ELSE COUNT(DISTINCT CASE WHEN A.num_min_inst_def10_dd = 1 AND A.num_observ_def10_maxinst>=1 THEN A.SKP_CREDIT_CASE END)/
    COUNT(DISTINCT CASE WHEN A.num_observ_def10_maxinst>=1  THEN A.SKP_CREDIT_CASE END ) END AS R_FPD10,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst>=1  THEN A.SKP_CREDIT_CASE END ) =0 THEN 0
  ELSE COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd = 1 AND A.num_observ_def30_maxinst>=1 THEN A.SKP_CREDIT_CASE END)/
    COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst>=1  THEN A.SKP_CREDIT_CASE END ) END AS R_FPD30
FROM ACLL A
WHERE A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-3)
AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-2)
GROUP BY A.TEXT_USERNAME_EMPLOYEE
)
,SPD AS
( ------------ALL SPD
SELECT A.TEXT_USERNAME_EMPLOYEE,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def4_dd = 2 AND A.num_observ_def4_maxinst>=2 THEN A.SKP_CREDIT_CASE END) AS CNT_SPD4,
COUNT(DISTINCT CASE WHEN A.num_observ_def4_maxinst>=2  THEN A.SKP_CREDIT_CASE END ) AS OBS_SPD4,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def10_dd = 2 AND A.num_observ_def10_maxinst>=2 THEN A.SKP_CREDIT_CASE END) AS CNT_SPD10,
COUNT(DISTINCT CASE WHEN A.num_observ_def10_maxinst>=2  THEN A.SKP_CREDIT_CASE END ) AS OBS_SPD10,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd = 2 AND A.num_observ_def30_maxinst>=2 THEN A.SKP_CREDIT_CASE END) AS CNT_SPD30,
COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst>=2  THEN A.SKP_CREDIT_CASE END ) AS OBS_SPD30,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def4_maxinst>=2  THEN A.SKP_CREDIT_CASE END ) <>0 THEN
  COUNT(DISTINCT CASE WHEN A.num_min_inst_def4_dd = 2 AND A.num_observ_def4_maxinst>=2 THEN A.SKP_CREDIT_CASE END)/
  COUNT(DISTINCT CASE WHEN A.num_observ_def4_maxinst>=2  THEN A.SKP_CREDIT_CASE END ) ELSE 0 END AS R_SPD4,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def10_maxinst>=2  THEN A.SKP_CREDIT_CASE END ) <>0 THEN
  COUNT(DISTINCT CASE WHEN A.num_min_inst_def10_dd = 2 AND A.num_observ_def10_maxinst>=2 THEN A.SKP_CREDIT_CASE END)/
  COUNT(DISTINCT CASE WHEN A.num_observ_def10_maxinst>=2  THEN A.SKP_CREDIT_CASE END ) ELSE 0 END AS R_SPD10,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst>=2  THEN A.SKP_CREDIT_CASE END ) <>0 THEN
  COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd = 2 AND A.num_observ_def30_maxinst>=2 THEN A.SKP_CREDIT_CASE END)/
  COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst>=2  THEN A.SKP_CREDIT_CASE END ) ELSE 0 END AS R_SPD30
FROM ACLL A
WHERE A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-4)
AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-3)
GROUP BY A.TEXT_USERNAME_EMPLOYEE
)
,TPD AS
(   ----------------------------ALL TPD
SELECT A.TEXT_USERNAME_EMPLOYEE,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def4_dd = 3 AND A.num_observ_def4_maxinst>=3 THEN A.SKP_CREDIT_CASE END) AS CNT_TPD4,
COUNT(DISTINCT CASE WHEN A.num_observ_def4_maxinst>=3  THEN A.SKP_CREDIT_CASE END ) AS OBS_TPD4,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def10_dd = 3 AND A.num_observ_def10_maxinst>=3 THEN A.SKP_CREDIT_CASE END) AS CNT_TPD10,
COUNT(DISTINCT CASE WHEN A.num_observ_def10_maxinst>=3  THEN A.SKP_CREDIT_CASE END ) AS OBS_TPD10,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd = 3 AND A.num_observ_def30_maxinst>=3 THEN A.SKP_CREDIT_CASE END) AS CNT_TPD30,
COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst>=3  THEN A.SKP_CREDIT_CASE END ) AS OBS_TPD30,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def4_maxinst>=3  THEN A.SKP_CREDIT_CASE END ) <>0 THEN
  COUNT(DISTINCT CASE WHEN A.num_min_inst_def4_dd = 3 AND A.num_observ_def4_maxinst>=3 THEN A.SKP_CREDIT_CASE END)/
  COUNT(DISTINCT CASE WHEN A.num_observ_def4_maxinst>=3  THEN A.SKP_CREDIT_CASE END ) ELSE 0 END AS R_TPD4,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def10_maxinst>=3  THEN A.SKP_CREDIT_CASE END ) <>0 THEN
  COUNT(DISTINCT CASE WHEN A.num_min_inst_def10_dd = 3 AND A.num_observ_def10_maxinst>=3 THEN A.SKP_CREDIT_CASE END)/
  COUNT(DISTINCT CASE WHEN A.num_observ_def10_maxinst>=3  THEN A.SKP_CREDIT_CASE END ) ELSE 0 END AS R_TPD10,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst>=3  THEN A.SKP_CREDIT_CASE END ) <>0 THEN
  COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd = 3 AND A.num_observ_def30_maxinst>=3 THEN A.SKP_CREDIT_CASE END)/
  COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst>=3  THEN A.SKP_CREDIT_CASE END ) ELSE 0 END AS R_TPD30
FROM ACLL A
WHERE A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-5)
AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-4)
GROUP BY A.TEXT_USERNAME_EMPLOYEE
)
,QPD AS 
(   -------------------ALL QPD
SELECT A.TEXT_USERNAME_EMPLOYEE,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def4_dd = 4 AND A.num_observ_def4_maxinst>=4 THEN A.SKP_CREDIT_CASE END) AS CNT_QPD4,
COUNT(DISTINCT CASE WHEN A.num_observ_def4_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) AS OBS_QPD4,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def10_dd = 4 AND A.num_observ_def10_maxinst>=4 THEN A.SKP_CREDIT_CASE END) AS CNT_QPD10,
COUNT(DISTINCT CASE WHEN A.num_observ_def10_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) AS OBS_QPD10,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd = 4 AND A.num_observ_def30_maxinst>=4 THEN A.SKP_CREDIT_CASE END) AS CNT_QPD30,
COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) AS OBS_QPD30,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def4_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) <>0 THEN
  COUNT(DISTINCT CASE WHEN A.num_min_inst_def4_dd = 4 AND A.num_observ_def4_maxinst>=4 THEN A.SKP_CREDIT_CASE END)/
  COUNT(DISTINCT CASE WHEN A.num_observ_def4_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) ELSE 0 END AS R_QPD4,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def10_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) <>0 THEN
  COUNT(DISTINCT CASE WHEN A.num_min_inst_def10_dd = 4 AND A.num_observ_def10_maxinst>=4 THEN A.SKP_CREDIT_CASE END)/
  COUNT(DISTINCT CASE WHEN A.num_observ_def10_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) ELSE 0 END AS R_QPD10,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) <>0 THEN
  COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd = 4 AND A.num_observ_def30_maxinst>=4 THEN A.SKP_CREDIT_CASE END)/
  COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) ELSE 0 END AS R_QPD30
FROM ACLL A
WHERE A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-6)
AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-5)
GROUP BY A.TEXT_USERNAME_EMPLOYEE
)
,FSTQ AS
(  -------------------------ALL FSTQ
SELECT A.TEXT_USERNAME_EMPLOYEE,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def4_dd <= 4 AND A.num_observ_def4_maxinst>=4 THEN A.SKP_CREDIT_CASE END) AS CNT_FSTQPD4,
COUNT(DISTINCT CASE WHEN A.num_observ_def4_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) AS OBS_FSTQPD4,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def10_dd <= 4 AND A.num_observ_def10_maxinst>=4 THEN A.SKP_CREDIT_CASE END) AS CNT_FSTQPD10,
COUNT(DISTINCT CASE WHEN A.num_observ_def10_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) AS OBS_FSTQPD10,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd <= 4 AND A.num_observ_def30_maxinst>=4 THEN A.SKP_CREDIT_CASE END) AS CNT_FSTQPD30,
COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) AS OBS_FSTQPD30,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def4_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) <>0 THEN
  COUNT(DISTINCT CASE WHEN A.num_min_inst_def4_dd <= 4 AND A.num_observ_def4_maxinst>=4 THEN A.SKP_CREDIT_CASE END)/
  COUNT(DISTINCT CASE WHEN A.num_observ_def4_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) ELSE 0 END AS R_FSTQPD4,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def10_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) <>0 THEN
  COUNT(DISTINCT CASE WHEN A.num_min_inst_def10_dd <= 4 AND A.num_observ_def10_maxinst>=4 THEN A.SKP_CREDIT_CASE END)/
  COUNT(DISTINCT CASE WHEN A.num_observ_def10_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) ELSE 0 END AS R_FSTQPD10,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) <>0 THEN
  COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd <= 4 AND A.num_observ_def30_maxinst>=4 THEN A.SKP_CREDIT_CASE END)/
  COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst>=4  THEN A.SKP_CREDIT_CASE END ) ELSE 0 END AS R_FSTQPD30
FROM ACLL A
WHERE A.DATE_DECISION >= ADD_MONTHS(TRUNC(sysdate,'MM'),-6)
AND A.DATE_DECISION < ADD_MONTHS(TRUNC(sysdate,'MM'),-5)
/*A.DATE_DECISION >= ADD_MONTHS(TRUNC(DATE'2019-07-01','MM'),-6)*/ 
GROUP BY A.TEXT_USERNAME_EMPLOYEE
)
,TRI AS
(   -------------------------------------MARK TRIGGER TYPE
-------------------FPD------------------------------------------------------------------------------------------------------------------------------------
SELECT A.TEXT_USERNAME_EMPLOYEE,A.CNT_FPD4 AS CNT_DEF,A.OBS_FPD4 AS CNT_OBS  ,'HARD' AS TRIGGER_TYPE, '1' AS OBS, 4 AS DEF,'FPD4' AS TYPE
FROM FPD A
WHERE A.R_FPD4 >= 0.6 AND A.CNT_FPD4 >= 3
UNION
SELECT A.TEXT_USERNAME_EMPLOYEE,A.CNT_FPD4 AS CNT_DEF,A.OBS_FPD4 AS CNT_OBS  ,'SOFT' AS TRIGGER_TYPE, '1' AS OBS, 4 AS DEF,'FPD4' AS TYPE
FROM FPD A
WHERE A.R_FPD4 >= 0.35 AND A.R_FPD4 < 0.6  AND A.CNT_FPD4 >= 3
UNION
SELECT A.TEXT_USERNAME_EMPLOYEE,A.CNT_FPD10 AS CNT_DEF,A.OBS_FPD10 AS CNT_OBS  ,'HARD' AS TRIGGER_TYPE, '1' AS OBS, 10 AS DEF,'FPD10' AS TYPE
FROM FPD A
WHERE A.R_FPD10 >= 0.6 AND A.CNT_FPD10 >= 3
UNION
SELECT A.TEXT_USERNAME_EMPLOYEE,A.CNT_FPD10 AS CNT_DEF,A.OBS_FPD10 AS CNT_OBS  ,'SOFT' AS TRIGGER_TYPE, '1' AS OBS, 10 AS DEF,'FPD10' AS TYPE
FROM FPD A
WHERE A.R_FPD10 >= 0.35 AND A.R_FPD10 < 0.6  AND A.CNT_FPD10 >= 3
UNION
SELECT A.TEXT_USERNAME_EMPLOYEE,A.CNT_FPD30 AS CNT_DEF,A.OBS_FPD30 AS CNT_OBS  ,'HARD' AS TRIGGER_TYPE, '1' AS OBS, 30 AS DEF,'FPD30' AS TYPE
FROM FPD A
WHERE A.R_FPD30 >= 0.6 AND A.CNT_FPD30 >= 3
UNION
SELECT A.TEXT_USERNAME_EMPLOYEE,A.CNT_FPD30 AS CNT_DEF,A.OBS_FPD30 AS CNT_OBS  ,'SOFT' AS TRIGGER_TYPE, '1' AS OBS, 30 AS DEF,'FPD30' AS TYPE
FROM FPD A
WHERE A.R_FPD30 >= 0.35 AND A.R_FPD30 < 0.6  AND A.CNT_FPD30 >= 3
---------------------SPD----------------------------------------------------------------------------------------------------------------------------------
UNION
SELECT B.TEXT_USERNAME_EMPLOYEE,B.CNT_SPD4 AS CNT_DEF,B.OBS_SPD4 AS CNT_OBS  ,'HARD' AS TRIGGER_TYPE, '2' AS OBS, 4 AS DEF,'SPD4' AS TYPE
FROM SPD B
WHERE B.R_SPD4 >= 0.6 AND B.CNT_SPD4 >= 3
UNION
SELECT B.TEXT_USERNAME_EMPLOYEE,B.CNT_SPD4 AS CNT_DEF,B.OBS_SPD4 AS CNT_OBS  ,'SOFT' AS TRIGGER_TYPE, '2' AS OBS, 4 AS DEF,'SPD4' AS TYPE
FROM SPD B
WHERE B.R_SPD4 >= 0.35 AND B.R_SPD4 < 0.6  AND B.CNT_SPD4 >= 3
UNION
SELECT B.TEXT_USERNAME_EMPLOYEE,B.CNT_SPD10 AS CNT_DEF,B.OBS_SPD10 AS CNT_OBS  ,'HARD' AS TRIGGER_TYPE, '2' AS OBS, 10 AS DEF,'SPD10' AS TYPE
FROM SPD B
WHERE B.R_SPD10 >= 0.6 AND B.CNT_SPD10 >= 3
UNION
SELECT B.TEXT_USERNAME_EMPLOYEE,B.CNT_SPD10 AS CNT_DEF,B.OBS_SPD10 AS CNT_OBS  ,'SOFT' AS TRIGGER_TYPE, '2' AS OBS, 10 AS DEF,'SPD10' AS TYPE
FROM SPD B
WHERE B.R_SPD10 >= 0.35 AND B.R_SPD10 < 0.6  AND B.CNT_SPD10 >= 3
UNION
SELECT B.TEXT_USERNAME_EMPLOYEE,B.CNT_SPD30 AS CNT_DEF,B.OBS_SPD30 AS CNT_OBS  ,'HARD' AS TRIGGER_TYPE, '2' AS OBS, 30 AS DEF,'SPD30' AS TYPE
FROM SPD B
WHERE B.R_SPD30 >= 0.6 AND B.CNT_SPD30 >= 3
UNION
SELECT B.TEXT_USERNAME_EMPLOYEE,B.CNT_SPD30 AS CNT_DEF,B.OBS_SPD30 AS CNT_OBS  ,'SOFT' AS TRIGGER_TYPE, '2' AS OBS, 30 AS DEF,'SPD30' AS TYPE
FROM SPD B
WHERE B.R_SPD30 >= 0.35 AND B.R_SPD30 < 0.6  AND B.CNT_SPD30 >= 3
--------------------TPD-------------------------------------------------------------------------------------------------------------------------------------
UNION
SELECT C.TEXT_USERNAME_EMPLOYEE,C.CNT_TPD4 AS CNT_DEF,C.OBS_TPD4 AS CNT_OBS  ,'HARD' AS TRIGGER_TYPE, '3' AS OBS, 4 AS DEF,'TPD4' AS TYPE
FROM TPD C
WHERE C.R_TPD4 >= 0.6 AND C.CNT_TPD4 >= 3
UNION
SELECT C.TEXT_USERNAME_EMPLOYEE,C.CNT_TPD4 AS CNT_DEF,C.OBS_TPD4 AS CNT_OBS  ,'SOFT' AS TRIGGER_TYPE, '3' AS OBS, 4 AS DEF,'TPD4' AS TYPE
FROM TPD C
WHERE C.R_TPD4 >= 0.35 AND C.R_TPD4 < 0.6  AND C.CNT_TPD4 >= 3
UNION
SELECT C.TEXT_USERNAME_EMPLOYEE,C.CNT_TPD10 AS CNT_DEF,C.OBS_TPD10 AS CNT_OBS  ,'HARD' AS TRIGGER_TYPE, '3' AS OBS, 10 AS DEF,'TPD10' AS TYPE
FROM TPD C
WHERE C.R_TPD10 >= 0.6 AND C.CNT_TPD10 >= 3
UNION
SELECT C.TEXT_USERNAME_EMPLOYEE,C.CNT_TPD10 AS CNT_DEF,C.OBS_TPD10 AS CNT_OBS  ,'SOFT' AS TRIGGER_TYPE, '3' AS OBS, 10 AS DEF,'TPD10' AS TYPE
FROM TPD C
WHERE C.R_TPD10 >= 0.35 AND C.R_TPD10 < 0.6  AND C.CNT_TPD10 >= 3
UNION
SELECT C.TEXT_USERNAME_EMPLOYEE,C.CNT_TPD30 AS CNT_DEF,C.OBS_TPD30 AS CNT_OBS  ,'HARD' AS TRIGGER_TYPE, '3' AS OBS, 30 AS DEF,'TPD30' AS TYPE
FROM TPD C
WHERE C.R_TPD30 >= 0.6 AND C.CNT_TPD30 >= 3
UNION
SELECT C.TEXT_USERNAME_EMPLOYEE,C.CNT_TPD30 AS CNT_DEF,C.OBS_TPD30 AS CNT_OBS  ,'SOFT' AS TRIGGER_TYPE, '3' AS OBS, 30 AS DEF,'TPD30' AS TYPE
FROM TPD C
WHERE C.R_TPD30 >= 0.35 AND C.R_TPD30 < 0.6  AND C.CNT_TPD30 >= 3
-------------------------QPD---------------------------------------------------------------------------------------------------------------------------------
UNION
SELECT D.TEXT_USERNAME_EMPLOYEE,D.CNT_QPD4 AS CNT_DEF,D.OBS_QPD4 AS CNT_OBS  ,'HARD' AS TRIGGER_TYPE,'4' AS OBS, 4 AS DEF,'QPD4' AS TYPE
FROM QPD D
WHERE D.R_QPD4 >= 0.6 AND D.CNT_QPD4 >= 3
UNION
SELECT D.TEXT_USERNAME_EMPLOYEE,D.CNT_QPD4 AS CNT_DEF,D.OBS_QPD4 AS CNT_OBS  ,'SOFT' AS TRIGGER_TYPE, '4' AS OBS, 4 AS DEF,'QPD4' AS TYPE
FROM QPD D
WHERE D.R_QPD4 >= 0.35 AND D.R_QPD4 < 0.6  AND D.CNT_QPD4 >= 3
UNION
SELECT D.TEXT_USERNAME_EMPLOYEE,D.CNT_QPD10 AS CNT_DEF,D.OBS_QPD10 AS CNT_OBS  ,'HARD' AS TRIGGER_TYPE, '4' AS OBS, 10 AS DEF,'QPD10' AS TYPE
FROM QPD D
WHERE D.R_QPD10 >= 0.6 AND D.CNT_QPD10 >= 3
UNION
SELECT D.TEXT_USERNAME_EMPLOYEE,D.CNT_QPD10 AS CNT_DEF,D.OBS_QPD10 AS CNT_OBS  ,'SOFT' AS TRIGGER_TYPE, '4' AS OBS, 10 AS DEF,'QPD10' AS TYPE
FROM QPD D
WHERE D.R_QPD10 >= 0.35 AND D.R_QPD10 < 0.6  AND D.CNT_QPD10 >= 3
UNION
SELECT D.TEXT_USERNAME_EMPLOYEE,D.CNT_QPD30 AS CNT_DEF,D.OBS_QPD30 AS CNT_OBS  ,'HARD' AS TRIGGER_TYPE, '4' AS OBS, 30 AS DEF,'QPD30' AS TYPE
FROM QPD D
WHERE D.R_QPD30 >= 0.6 AND D.CNT_QPD30 >= 3
UNION
SELECT D.TEXT_USERNAME_EMPLOYEE,D.CNT_QPD30 AS CNT_DEF,D.OBS_QPD30 AS CNT_OBS  ,'SOFT' AS TRIGGER_TYPE, '4' AS OBS, 30 AS DEF,'QPD30' AS TYPE
FROM QPD D
WHERE D.R_QPD30 >= 0.35 AND D.R_QPD30 < 0.6  AND D.CNT_QPD30 >= 3
-------------------------FSTQPD-----------------------------------------------------------------------------------------------------------------------------
UNION
SELECT E.TEXT_USERNAME_EMPLOYEE,E.CNT_FSTQPD4 AS CNT_DEF,E.OBS_FSTQPD4 AS CNT_OBS  ,'HARD' AS TRIGGER_TYPE, 'FSTQ' AS OBS, 4 AS DEF,'FSTQPD4' AS TYPE
FROM FSTQ E
WHERE E.R_FSTQPD4 >= 0.6 AND E.CNT_FSTQPD4 >= 3
UNION
SELECT E.TEXT_USERNAME_EMPLOYEE,E.CNT_FSTQPD4 AS CNT_DEF,E.OBS_FSTQPD4 AS CNT_OBS  ,'SOFT' AS TRIGGER_TYPE, 'FSTQ' AS OBS, 4 AS DEF,'FSTQPD4' AS TYPE
FROM FSTQ E
WHERE E.R_FSTQPD4 >= 0.35 AND E.R_FSTQPD4 < 0.6  AND E.CNT_FSTQPD4 >= 3
UNION
SELECT E.TEXT_USERNAME_EMPLOYEE,E.CNT_FSTQPD10 AS CNT_DEF,E.OBS_FSTQPD10 AS CNT_OBS  ,'HARD' AS TRIGGER_TYPE, 'FSTQ' AS OBS, 10 AS DEF,'FSTQPD10' AS TYPE
FROM FSTQ E
WHERE E.R_FSTQPD10 >= 0.6 AND E.CNT_FSTQPD10 >= 3
UNION
SELECT E.TEXT_USERNAME_EMPLOYEE,E.CNT_FSTQPD10 AS CNT_DEF,E.OBS_FSTQPD10 AS CNT_OBS  ,'SOFT' AS TRIGGER_TYPE, 'FSTQ' AS OBS, 10 AS DEF,'FSTQPD10' AS TYPE
FROM FSTQ E
WHERE E.R_FSTQPD10 >= 0.35 AND E.R_FSTQPD10 < 0.6  AND E.CNT_FSTQPD10 >= 3
UNION
SELECT E.TEXT_USERNAME_EMPLOYEE,E.CNT_FSTQPD30 AS CNT_DEF,E.OBS_FSTQPD30 AS CNT_OBS  ,'HARD' AS TRIGGER_TYPE, 'FSTQ' AS OBS, 30 AS DEF,'FSTQPD30' AS TYPE
FROM FSTQ E
WHERE E.R_FSTQPD30 >= 0.6 AND E.CNT_FSTQPD30 >= 3
UNION
SELECT E.TEXT_USERNAME_EMPLOYEE,E.CNT_FSTQPD30 AS CNT_DEF,E.OBS_FSTQPD30 AS CNT_OBS  ,'SOFT' AS TRIGGER_TYPE, 'FSTQ' AS OBS, 30 AS DEF,'FSTQPD30' AS TYPE
FROM FSTQ E
WHERE E.R_FSTQPD30 >= 0.35 AND E.R_FSTQPD30 < 0.6  AND E.CNT_FSTQPD30 >= 3
)
/*SELECT * FROM TRI;*/
,LEVEL1 AS 
( ----------------------------------SA HIT 'SOFT' AND 'HARD' THEN 'HARD'
SELECT A.TEXT_USERNAME_EMPLOYEE ,COUNT(DISTINCT A.TRIGGER_TYPE)
FROM TRI A
GROUP BY A.TEXT_USERNAME_EMPLOYEE
HAVING COUNT(DISTINCT A.TRIGGER_TYPE) >1
) 
/*SELECT * FROM LEVEL1;*/
,LEVEL_FINAL AS
(   -----------------------------THE FINAL SA TRIGGER TYPE
SELECT * FROM TRI A
WHERE A.TEXT_USERNAME_EMPLOYEE  NOT IN (SELECT TEXT_USERNAME_EMPLOYEE FROM LEVEL1)
UNION
SELECT * FROM TRI B
WHERE B.TEXT_USERNAME_EMPLOYEE IN (SELECT TEXT_USERNAME_EMPLOYEE FROM LEVEL1)
AND B.TRIGGER_TYPE='HARD'
)
/*SELECT * FROM LEVEL_FINAL;*/
,TRI_FINAL AS
(         -------------HIT DEF4/10/30 IN THE SAME INSTALLMENT , SAVE THE MAX VALUE
SELECT * FROM(
SELECT A.*,ROW_NUMBER()OVER(PARTITION BY A.TEXT_USERNAME_EMPLOYEE, A.OBS ORDER BY A.DEF DESC) AS R
FROM LEVEL_FINAL A)
WHERE R=1
) 
,TRI_CON AS
(   ---------------------------DEF CONTRACT
SELECT A.*,B.* FROM TRI_FINAL A
JOIN CON B ON A.TEXT_USERNAME_EMPLOYEE = B.SA_ID 
WHERE A.TYPE = 'FPD4'
AND B.FPD4 =1 
UNION 
SELECT A.*,B.* FROM TRI_FINAL A
JOIN CON B ON A.TEXT_USERNAME_EMPLOYEE = B.SA_ID
WHERE A.TYPE = 'FPD10'
AND B.FPD10 =1 
UNION 
SELECT A.*,B.* FROM TRI_FINAL A
JOIN CON B ON A.TEXT_USERNAME_EMPLOYEE = B.SA_ID 
WHERE A.TYPE = 'FPD30'
AND B.FPD30 =1 
UNION
SELECT A.*,B.* FROM TRI_FINAL A
JOIN CON B ON A.TEXT_USERNAME_EMPLOYEE = B.SA_ID 
WHERE A.TYPE = 'SPD4'
AND B.SPD4 =1 
UNION 
SELECT A.*,B.* FROM TRI_FINAL A
JOIN CON B ON A.TEXT_USERNAME_EMPLOYEE = B.SA_ID 
WHERE A.TYPE = 'SPD10'
AND B.SPD10 =1 
UNION 
SELECT A.*,B.* FROM TRI_FINAL A
JOIN CON B ON A.TEXT_USERNAME_EMPLOYEE = B.SA_ID 
WHERE A.TYPE = 'SPD30'
AND B.SPD30 =1 
UNION 
SELECT A.*,B.* FROM TRI_FINAL A
JOIN CON B ON A.TEXT_USERNAME_EMPLOYEE = B.SA_ID 
WHERE A.TYPE = 'TPD4'
AND B.TPD4 =1 
UNION 
SELECT A.*,B.* FROM TRI_FINAL A
JOIN CON B ON A.TEXT_USERNAME_EMPLOYEE = B.SA_ID 
WHERE A.TYPE = 'TPD10'
AND B.TPD10 =1 
UNION 
SELECT A.*,B.* FROM TRI_FINAL A
JOIN CON B ON A.TEXT_USERNAME_EMPLOYEE = B.SA_ID 
WHERE A.TYPE = 'TPD30'
AND B.TPD30 =1 
UNION 
SELECT A.*,B.* FROM TRI_FINAL A
JOIN CON B ON A.TEXT_USERNAME_EMPLOYEE = B.SA_ID 
WHERE A.TYPE = 'QPD4'
AND B.QPD4 =1 
UNION 
SELECT A.*,B.* FROM TRI_FINAL A
JOIN CON B ON A.TEXT_USERNAME_EMPLOYEE = B.SA_ID 
WHERE A.TYPE = 'QPD10'
AND B.QPD10 =1 
UNION 
SELECT A.*,B.* FROM TRI_FINAL A
JOIN CON B ON A.TEXT_USERNAME_EMPLOYEE = B.SA_ID 
WHERE A.TYPE = 'QPD30'
AND B.QPD30 =1 
UNION 
SELECT A.*,B.* FROM TRI_FINAL A
JOIN CON B ON A.TEXT_USERNAME_EMPLOYEE = B.SA_ID 
WHERE A.TYPE = 'FSTQPD4'
AND B.FSTQPD4 =1 
UNION 
SELECT A.*,B.* FROM TRI_FINAL A
JOIN CON B ON A.TEXT_USERNAME_EMPLOYEE = B.SA_ID 
WHERE A.TYPE = 'FSTQPD10'
AND B.FSTQPD10 =1 
UNION 
SELECT A.*,B.* FROM TRI_FINAL A
JOIN CON B ON A.TEXT_USERNAME_EMPLOYEE = B.SA_ID 
WHERE A.TYPE = 'FSTQPD30'
AND B.FSTQPD30 =1 
)
,FINAL_SOURCE AS
(   --------------------LISTAGG TRIGGER SOURCE
SELECT DISTINCT A.TEXT_USERNAME_EMPLOYEE,LISTAGG(A.TYPE,';')WITHIN GROUP (ORDER BY A.TYPE) AS TRIGGER_SOURCE
FROM (SELECT DISTINCT B.TEXT_USERNAME_EMPLOYEE, B.TYPE||'_ACL' AS TYPE FROM  TRI_CON B) A
GROUP BY A.TEXT_USERNAME_EMPLOYEE
)
,FINAL_VALUE AS
(--------------------LISTAGG TRIGGER VALUE
SELECT DISTINCT A.TEXT_USERNAME_EMPLOYEE,LISTAGG(A.RATE,';')WITHIN GROUP (ORDER BY A.RATE)AS TRIGGER_VALUE 
FROM (SELECT DISTINCT B.TEXT_USERNAME_EMPLOYEE,B.CNT_DEF||'/'||B.CNT_OBS AS RATE  FROM  TRI_CON B) A
GROUP BY A.TEXT_USERNAME_EMPLOYEE 
)

SELECT DISTINCT 'SA' AS UNIT, A.TEXT_USERNAME_EMPLOYEE AS ID_ENTITY, TRUNC(sysdate) AS DATE_DETECT,-----------------------------------20191028
TRUNC(sysdate,'IW')+6 AS WEEK_DETECT, 11 as CLASS , C.TRIGGER_SOURCE AS TRIGGER_SOURCE,
D.TRIGGER_VALUE AS TRIGGER_VALUE,A.TRIGGER_TYPE AS TRIGGER_TYPE,A.SKP_CREDIT_CASE AS SKP_CREDIT_CASE,
A.TEXT_CONTRACT_NUMBER AS TEXT_CONTRACT_NUMBER,SA.SKP_EMPLOYEE,SA.TEXT_USERNAME_EMPLOYEE ,A.CNT_OBS,A.CNT_DEF
FROM  TRI_CON A
JOIN OWNER_DWH.DC_EMPLOYEE SA
ON A.TEXT_USERNAME_EMPLOYEE = SA.TEXT_USERNAME_EMPLOYEE
JOIN FINAL_SOURCE C
ON A.TEXT_USERNAME_EMPLOYEE = C.TEXT_USERNAME_EMPLOYEE
JOIN FINAL_VALUE D
ON A.TEXT_USERNAME_EMPLOYEE = D.TEXT_USERNAME_EMPLOYEE;
--WHERE TRUNC(SYSDATE) IN (SELECT C1 FROM MONDAY);------------------------------20191028
COMMIT;

--=====================================================================================================================================================
--============================MEDIUM SA================================================================================================================
--=====================================================================================================================================================

INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'TRIGGER TO HARD ACL',SYSDATE FROM DUAL;
COMMIT;

EXECUTE IMMEDIATE'TRUNCATE TABLE AP_ANTIFRAUD.TRIGGER_TO_HARD_ACL';
INSERT INTO AP_ANTIFRAUD.TRIGGER_TO_HARD_ACL
WITH CON_HARD_SA AS 
( --------------ACL IN LAST 1 YEAR
SELECT /*+materialize use_hash(DCC,TT,S,CLP,DCCI)*/
CLP.NAME_PROVINCE_EN
,SA.TEXT_USERNAME_EMPLOYEE
,TRUNC(DCC.DATE_DECISION , 'MM') AS RATIF_MONTH
,DCC.DATE_DECISION
,DCC.SKP_CREDIT_CASE
,DCC.SKP_CREDIT_TYPE
,DCC.text_contract_number
,Q.num_min_inst_def30_dd
,Q.num_observ_def30_maxinst
FROM OWNER_DWH.DC_CREDIT_CASE DCC
JOIN OWNER_DWH.F_APPLICATION_TT TT ON DCC.SKP_CREDIT_CASE =TT.SKP_CREDIT_CASE
AND DCC.DATE_DECISION =TT.DATE_DECISION
JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT S ON TT.SKP_CREDIT_CASE = S.SKP_CREDIT_CASE
JOIN OWNER_DWH.CL_PROVINCE CLP ON S.SKP_PROVINCE=CLP.SKP_PROVINCE
JOIN OWNER_DWH.DC_CITY DCCI ON S.SKP_CITY = DCCI.SKP_CITY
JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD Q
ON DCC.skp_credit_case = Q.skp_credit_case AND TT.SKP_CREDIT_CASE = Q.skp_credit_case AND S.SKP_CREDIT_CASE = Q.skp_credit_case
AND DCC.date_decision  = Q.date_decision  AND TT.DATE_DECISION = Q.date_decision
JOIN TRIGGER_HARD_SA_ACL SA
ON TT.skp_employee_consult_3rd_block = sa.skp_employee
WHERE DCC.SKP_CREDIT_STATUS IN (2,3,5)
AND DCC.DATE_DECISION>=TRUNC(sysdate) -365
AND TT.DATE_DECISION>=TRUNC(sysdate) -365
AND S.DATE_DECISION>=TRUNC(sysdate) -365
AND Q.DATE_DECISION>=TRUNC(sysdate) -365
AND DCC.skp_credit_type = 2  AND Q.skp_credit_type = 2
AND DCC.skp_credit_acquisition_chnl= 6
AND S.SKP_ADDRESS_TYPE = 2
AND SA.TRIGGER_TYPE = 'HARD'
)
,DEF_EVERY_SA AS-------------------------RISK PERFORMACNCE IN LAST 1 YEAR
(SELECT A.NAME_PROVINCE_EN, A.TEXT_USERNAME_EMPLOYEE,
COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst >=1 THEN A.SKP_CREDIT_CASE END) AS OBS_FPD30,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd =1 AND A.num_observ_def30_maxinst >=1 THEN A.SKP_CREDIT_CASE END) AS FPD30,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst >=1 THEN A.SKP_CREDIT_CASE END)<>0 THEN
     COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd =1 AND A.num_observ_def30_maxinst >=1 THEN A.SKP_CREDIT_CASE END)/
     COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst >=1 THEN A.SKP_CREDIT_CASE END) ELSE 0 END AS R_HA_FPD30,
COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst >=2 THEN A.SKP_CREDIT_CASE END) AS OBS_SPD30,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd =2 AND A.num_observ_def30_maxinst >=2 THEN A.SKP_CREDIT_CASE END) AS SPD30,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst >=2 THEN A.SKP_CREDIT_CASE END)<>0 THEN
     COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd =2 AND A.num_observ_def30_maxinst >=2 THEN A.SKP_CREDIT_CASE END)/
     COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst >=2 THEN A.SKP_CREDIT_CASE END) ELSE 0 END AS  R_HA_SPD30,
COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst >=3 THEN A.SKP_CREDIT_CASE END) AS OBS_TPD30,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd =3 AND A.num_observ_def30_maxinst >=3 THEN A.SKP_CREDIT_CASE END) AS TPD30,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst >=3 THEN A.SKP_CREDIT_CASE END) <>0 THEN 
     COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd =3 AND A.num_observ_def30_maxinst >=3THEN A.SKP_CREDIT_CASE END)/
     COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst >=3 THEN A.SKP_CREDIT_CASE END) ELSE 0 END AS R_HA_TPD30,
COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst >=4 THEN A.SKP_CREDIT_CASE END) AS OBS_QPD30,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd =4 AND A.num_observ_def30_maxinst >=4 THEN A.SKP_CREDIT_CASE END) AS QPD30,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst >=4 THEN A.SKP_CREDIT_CASE END) <>0 THEN
     COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd =4 AND A.num_observ_def30_maxinst >=4THEN A.SKP_CREDIT_CASE END)/
     COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst >=4 THEN A.SKP_CREDIT_CASE END) ELSE 0 END AS R_HA_QPD30,
COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst >=4 THEN A.SKP_CREDIT_CASE END) AS OBS_FSTQPD30,
COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd <=4 AND A.num_observ_def30_maxinst >=4 THEN A.SKP_CREDIT_CASE END) AS FSTQPD30,
CASE WHEN COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst >=4 THEN A.SKP_CREDIT_CASE END)<>0 THEN
     COUNT(DISTINCT CASE WHEN A.num_min_inst_def30_dd <=4 AND A.num_observ_def30_maxinst >=4 THEN A.SKP_CREDIT_CASE END)/
     COUNT(DISTINCT CASE WHEN A.num_observ_def30_maxinst >=4 THEN A.SKP_CREDIT_CASE END) ELSE 0 END AS R_HA_FSTQPD30
FROM CON_HARD_SA A
GROUP BY A.NAME_PROVINCE_EN, A.TEXT_USERNAME_EMPLOYEE
)
,H_DEF AS
(
SELECT  A.NAME_PROVINCE_EN, A.TEXT_USERNAME_EMPLOYEE ,
CASE WHEN FPD30>= 4 AND R_HA_FPD30 >0.3 THEN 'Y' ELSE 'N' END AS FLAG_H_FPD30 ,
  CASE WHEN SPD30>= 4 AND R_HA_SPD30 >0.3 THEN 'Y' ELSE 'N' END AS FLAG_H_SPD30 ,
     CASE WHEN TPD30>= 4 AND R_HA_TPD30 >0.3 THEN 'Y' ELSE 'N' END AS FLAG_H_TPD30 ,
       CASE WHEN QPD30>= 4 AND R_HA_QPD30 >0.3 THEN 'Y' ELSE 'N' END AS FLAG_H_QPD30 ,
        CASE WHEN FSTQPD30>= 4 AND R_HA_FSTQPD30 >0.4 THEN 'Y' ELSE 'N' END AS FLAG_H_FSTQPD30
FROM DEF_EVERY_SA A
)
,HARD AS 
(------------------------BAD PERFORMANCE IN LAST 1 YEAR
SELECT A.* , 'HARD' AS TRIGGER_TYPE
FROM DEF_EVERY_SA A
JOIN H_DEF B 
ON A.NAME_PROVINCE_EN = B.NAME_PROVINCE_EN
AND A.TEXT_USERNAME_EMPLOYEE = B.TEXT_USERNAME_EMPLOYEE
WHERE ((B.FLAG_H_FPD30='Y' AND A.FPD30 >= 4)
OR(B.FLAG_H_SPD30 = 'Y' AND A.SPD30 >= 4)
OR (B.FLAG_H_TPD30 = 'Y' AND A.TPD30 >= 4)
OR (B.FLAG_H_FSTQPD30 = 'Y' AND A.FSTQPD30 >=4)
OR (B.FLAG_H_QPD30 = 'Y' AND A.QPD30 >= 4))
)
,F_L AS 
(  --------------------------WORK LESS THAN 3 MONTH
SELECT a.skp_employee, a.date_first_contract, B.TEXT_USERNAME_EMPLOYEE
FROM dm_antifraud.f_employee_ad a
join OWNER_DWH.DC_EMPLOYEE b 
on a.skp_employee = b.SKP_EMPLOYEE
WHERE b.TEXT_USERNAME_EMPLOYEE in (SELECT TEXT_USERNAME_EMPLOYEE FROM TRIGGER_HARD_SA_ACL)
AND TRUNC(sysdate)-TRUNC(a.date_first_contract)<=90
)
SELECT * FROM  HARD
WHERE TEXT_USERNAME_EMPLOYEE NOT IN (SELECT TEXT_USERNAME_EMPLOYEE FROM F_L);
COMMIT;

INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'TRIGGER ACL DELINQUENCY',SYSDATE FROM DUAL;
COMMIT;

-----------------------FINAL RESULT-------------------------------------------
EXECUTE IMMEDIATE'TRUNCATE TABLE AP_ANTIFRAUD.TRIGGER_ACL_DELINQUENCY';
INSERT INTO AP_ANTIFRAUD.TRIGGER_ACL_DELINQUENCY
SELECT A.UNIT, 
A.ID_ENTITY,
A.DATE_DETECT,
A.WEEK_DETECT,
A.CLASS,
A.TRIGGER_SOURCE,
A.TRIGGER_VALUE,
A.TRIGGER_TYPE,
A.SKP_CREDIT_CASE,
A.TEXT_CONTRACT_NUMBER 
,A.CNT_OBS,A.CNT_DEF
FROM AP_ANTIFRAUD.TRIGGER_HARD_SA_ACL A
JOIN AP_ANTIFRAUD.TRIGGER_TO_HARD_ACL B  ON A.TEXT_USERNAME_EMPLOYEE = B.TEXT_USERNAME_EMPLOYEE 
UNION 
SELECT A.UNIT,
A.ID_ENTITY,
A.DATE_DETECT,
A.WEEK_DETECT,
A.CLASS,
A.TRIGGER_SOURCE,
A.TRIGGER_VALUE,
A.TRIGGER_TYPE,
A.SKP_CREDIT_CASE,
A.TEXT_CONTRACT_NUMBER 
,A.CNT_OBS,A.CNT_DEF
FROM AP_ANTIFRAUD.TRIGGER_HARD_SA_ACL  A
WHERE A.TRIGGER_TYPE =  'SOFT'
UNION 
SELECT A.UNIT,
A.ID_ENTITY,
A.DATE_DETECT,
A.WEEK_DETECT,
A.CLASS,
A.TRIGGER_SOURCE,
A.TRIGGER_VALUE,
'MEDIUM' AS TRIGGER_TYPE,
A.SKP_CREDIT_CASE,
A.TEXT_CONTRACT_NUMBER,A.CNT_OBS,A.CNT_DEF
FROM AP_ANTIFRAUD.TRIGGER_HARD_SA_ACL  A
WHERE A.TRIGGER_TYPE =  'HARD' 
AND A.TEXT_USERNAME_EMPLOYEE NOT IN (SELECT TEXT_USERNAME_EMPLOYEE FROM AP_ANTIFRAUD.TRIGGER_TO_HARD_ACL);
COMMIT;

INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'INSERT RECORDS',SYSDATE FROM DUAL;
COMMIT;

------------------INSERT TRIGGER---------------------------------------------------------------------------------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
SELECT DISTINCT A.UNIT,A.ID_ENTITY,TO_CHAR(A.DATE_DETECT,'YYYY/MM/DD') AS DATE_DETECT,TO_CHAR(A.WEEK_DETECT,'YYYY/MM/DD') AS WEEK_DETECT,A.CLASS,    
A.TRIGGER_SOURCE,A.TRIGGER_VALUE,A.TRIGGER_TYPE,A.SKP_CREDIT_CASE,A.TEXT_CONTRACT_NUMBER
FROM TRIGGER_ACL_DELINQUENCY A
JOIN OWNER_DWH.DC_EMPLOYEE B
ON A.ID_ENTITY = B.TEXT_USERNAME_EMPLOYEE 
WHERE B.CODE_EMPLOYEE_STATUS = 'a';
COMMIT;
---------------------INSERT HARD SA--------------------------------------------------------------------------------------
DELETE FROM AP_ANTIFRAUD.DCT_DEL_SA_HARD_HISTORY 
WHERE current_report_date=TRUNC(SYSDATE)--??
AND CURRENT_WORST_TRIGGER LIKE ('%ACL');
COMMIT;

INSERT INTO AP_ANTIFRAUD.DCT_DEL_SA_HARD_HISTORY  
(
CREDIT_TYPE,NAME_SALES_ASSISTANT,SALES_ID,EMPLOYED_FROM,STATUS,PARAMETER,CURRENT_REPORT_DATE,CURRENT_WORST_RESULT,CURRENT_WORST_TRIGGER
,CURRENT_WORST_RATE,CURRENT_WORST_DEL,CURRENT_WORST_AGR,SKP_EMPLOYEE
)
SELECT DISTINCT 'ACL' AS CREDIT_TYPE,B.NAME_LAST AS NAME_SALES_ASSISTANT, A.ID_ENTITY AS SALES_ID,
TRUNC(B.DATE_EMPLOYED_FROM) AS EMPLOYED_FROM --??
, B.CODE_EMPLOYEE_STATUS AS STATUS,  1 AS PARAMETER
, TRUNC(SYSDATE) AS CURRENT_REPORT_DATE,--??
A.TRIGGER_TYPE AS CURRENT_WORST_RESULT,A.TRIGGER_SOURCE AS CURRENT_WORST_TRIGGER,A.CNT_DEF/A.CNT_OBS AS CURRENT_WORST_RATE,
A.CNT_DEF AS CURRENT_WORST_DEL,A.CNT_OBS AS CURRENT_WORST_AGR,B.SKP_EMPLOYEE
FROM TRIGGER_ACL_DELINQUENCY A
JOIN OWNER_DWH.DC_EMPLOYEE B
ON A.ID_ENTITY = B.TEXT_USERNAME_EMPLOYEE
WHERE A.TRIGGER_TYPE = 'HARD'
AND A.TRIGGER_SOURCE LIKE '%ACL';
COMMIT;
------------------------INSERT HARD SA CONTR----------------------------------------------------------------------------
DELETE FROM AP_ANTIFRAUD.DCT_DEL_SA_HARD_HISTORY_CONTR co 
WHERE co.current_report_date=TRUNC(SYSDATE)--???
AND CO.CURRENT_WORST_TRIGGER LIKE ('%ACL');
COMMIT;

INSERT INTO AP_ANTIFRAUD.DCT_DEL_SA_HARD_HISTORY_CONTR co
SELECT TRUNC(SYSDATE) AS current_report_date,--??
    AA.ID_ENTITY AS SALES_ID,
    'ACL' AS CREDIT_TYPE ,
    AA.TEXT_CONTRACT_NUMBER ,
    AA.TRIGGER_SOURCE AS CURRENT_WORST_TRIGGER,
    AA.TRIGGER_TYPE AS CURRENT_WORST_RESULT
FROM TRIGGER_ACL_DELINQUENCY AA
WHERE EXISTS (SELECT 1 FROM AP_ANTIFRAUD.DCT_DEL_SA_HARD_HISTORY bb WHERE aa.ID_ENTITY=bb.sales_id AND bb.credit_type='ACL'
AND BB.CURRENT_REPORT_DATE=TRUNC(sysdate) AND AA.TRIGGER_SOURCE LIKE '%ACL')
AND AA.TRIGGER_TYPE = 'HARD';
COMMIT;

------------------------INSERT MEDIUM SA-----------------------------------------------------------------------------------
DELETE FROM AP_ANTIFRAUD.DCT_DEL_SA_PARDON_HISTORY 
WHERE current_report_date=TRUNC(SYSDATE)--????
AND CURRENT_WORST_TRIGGER LIKE ('%ACL');
COMMIT;

INSERT INTO AP_ANTIFRAUD.DCT_DEL_SA_PARDON_HISTORY  
(
CREDIT_TYPE,NAME_SALES_ASSISTANT,SALES_ID,EMPLOYED_FROM,STATUS,PARAMETER,CURRENT_REPORT_DATE,CURRENT_WORST_RESULT,CURRENT_WORST_TRIGGER
,CURRENT_WORST_RATE,CURRENT_WORST_DEL,CURRENT_WORST_AGR,SKP_EMPLOYEE
)
SELECT DISTINCT 'ACL' AS CREDIT_TYPE,B.NAME_LAST AS NAME_SALES_ASSISTANT, A.ID_ENTITY AS SALES_ID,
B.DATE_EMPLOYED_FROM AS EMPLOYED_FROM , B.CODE_EMPLOYEE_STATUS AS STATUS,  1 AS PARAMETER,TRUNC( SYSDATE) AS CURRENT_REPORT_DATE,
A.TRIGGER_TYPE AS CURRENT_WORST_RESULT,A.TRIGGER_SOURCE AS CURRENT_WORST_TRIGGER,A.CNT_DEF/A.CNT_OBS AS CURRENT_WORST_RATE,
A.CNT_DEF AS CURRENT_WORST_DEL,A.CNT_OBS AS CURRENT_WORST_AGR,B.SKP_EMPLOYEE
FROM TRIGGER_ACL_DELINQUENCY A
JOIN OWNER_DWH.DC_EMPLOYEE B
ON A.ID_ENTITY = B.TEXT_USERNAME_EMPLOYEE
WHERE A.TRIGGER_TYPE = 'MEDIUM'
AND A.TRIGGER_SOURCE LIKE ('%ACL');
COMMIT;
--------------------------INSERT MEDIUM CONTRACT---------------------------------------------------------------------------
DELETE FROM AP_ANTIFRAUD.DCT_DEL_SA_PARDON_HIST_CONTR co 
WHERE co.current_report_date=TRUNC(SYSDATE)--??
AND CO.CURRENT_WORST_TRIGGER LIKE ('%ACL');
COMMIT;

INSERT INTO AP_ANTIFRAUD.DCT_DEL_SA_PARDON_HIST_CONTR co 
SELECT TRUNC(SYSDATE) AS current_report_date,--??
    AA.ID_ENTITY AS SALES_ID,
    'ACL' AS CREDIT_TYPE ,
    AA.TEXT_CONTRACT_NUMBER ,
    AA.TRIGGER_SOURCE AS CURRENT_WORST_TRIGGER,
    AA.TRIGGER_TYPE AS CURRENT_WORST_RESULT
FROM TRIGGER_ACL_DELINQUENCY AA
WHERE EXISTS (SELECT 1 FROM AP_ANTIFRAUD.DCT_DEL_SA_HARD_HISTORY bb WHERE AA.ID_ENTITY=bb.sales_id AND bb.credit_type='ACL'
AND BB.CURRENT_REPORT_DATE=TRUNC(SYSDATE) --??
AND AA.TRIGGER_SOURCE LIKE '%ACL')
AND AA.TRIGGER_TYPE = 'MEDIUM';
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;

---20201027 ZX
PROCEDURE TRIGGER_559_HCP_REGULAR_TRANSACTION IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name: length       
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_559_HCP';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP:559_HCP_REG_TRANSACTION';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL); 
 
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '559 HCP REGULAR TRANSACTION TRIGGER',SYSDATE FROM DUAL;
COMMIT;
-----(1) Abnormal sales increase -------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH BASE AS(
SELECT DISTINCT B.* FROM(
SELECT DISTINCT CO.SKP_CREDIT_CASE, CO.SKP_CLIENT ,CO.DATE_DECISION 
            ,CO.AMT_CREDIT_LIMIT_MAX
            ,TRUNC(TRANS.DTIME_INSERTED) AS DATE_TRANSACTION
            ,TRUNC(TRANS.DTIME_INSERTED,'IW')+6 AS WEEK_TRANSACTION
            ,NVL(CODE_SALESROOM,TRIM(TEXT_EXTERNAL_MERCHANT_ID)||'-'||TRIM(TEXT_EXTERNAL_MERCHANT_NAME)) AS POS
            ,TRANS.DTIME_INSERTED AS DTIME_TRANSACTION
            ,TRANS.SKF_HCP_TRANSACTION
            ,TRANS.AMT_HCP_FINAL
            ,CASE WHEN TRANS.TEXT_EXTERNAL_MERCHANT_NAME!='XNA' THEN TRIM(TRANS.TEXT_EXTERNAL_MERCHANT_NAME) ELSE TRIM(S.NAME_SALESROOM) END AS POS_NAME
            ,CASE WHEN TRANS.TEXT_EXTERNAL_MERCHANT_NAME!='XNA' THEN TRIM(TRANS.TEXT_EXTERNAL_MERCHANT_ID) ELSE TRIM(S.CODE_SALESROOM) END AS POS_CODE
            ,CASE WHEN TRANS.TEXT_EXTERNAL_MERCHANT_NAME!='XNA' THEN 'EXTERNAL' 
                  WHEN TRANS.TEXT_EXTERNAL_MERCHANT_NAME='XNA' AND TRANS.SKP_SALESROOM!=-1 THEN 'INTERNAL' ELSE 'NO POS' END AS POS_TYPE
            ,TRANS.FLAG_PIN_REQUIRED
            ,CASE WHEN CLTC.ID_SOURCE ='mapp' THEN 'CAPP-MAPP'
                  WHEN CLTC.ID_SOURCE ='cup' THEN 'CAPP-CUP'
                  WHEN CLTC.ID_SOURCE ='direct' THEN '3rd party-'|| CLTRC.NAME_HCP_TRADE_CHANNEL 
                  END AS TRADE_CHANNEL    
            ,CLTC.ID_SOURCE
FROM OWNER_DWH.F_HCP_TRANSACTION_TT TRANS 
JOIN OWNER_DWH.CL_HCP_TRANSACTION_STATUS CLS  
  ON TRANS.SKP_HCP_TRANSACTION_STATUS=CLS.SKP_HCP_TRANSACTION_STATUS
JOIN OWNER_DWH.F_CONTRACT_BASE_AD CO
  ON TRANS.SKP_CREDIT_CASE=CO.SKP_CREDIT_CASE AND CO.SKP_CREDIT_TYPE=4
LEFT JOIN OWNER_DWH.CL_HCP_TRANSACTION_CHANNEL CLTC 
  ON TRANS.SKP_HCP_TRANSACTION_CHANNEL=CLTC.SKP_HCP_TRANSACTION_CHANNEL
LEFT JOIN OWNER_DWH.CL_HCP_TRADE_CHANNEL CLTRC 
  ON TRANS.SKP_HCP_TRADE_CHANNEL=CLTRC.SKP_HCP_TRADE_CHANNEL
LEFT JOIN OWNER_DWH.DC_SALESROOM S 
  ON TRANS.SKP_SALESROOM=S.SKP_SALESROOM AND TRANS.TEXT_EXTERNAL_MERCHANT_NAME='XNA'
WHERE CODE_HCP_TRANSACTION_STATUS = 'POSTED' ---change only posted success trx
AND CO.SKP_CREDIT_TYPE=4
AND TRANS.DTIME_INSERTED>=SYSDATE -180 
AND CO.DTIME_DECISION>=SYSDATE -180 
AND CO.DATE_DECISION>=SYSDATE -180 ) B
--20201104 ZX
WHERE B.POS NOT LIKE '%58同城%' AND B.POS NOT LIKE '%5EPLay%' AND B.POS NOT LIKE '%95秀%' AND B.POS NOT LIKE '%ALIBABA%' AND B.POS NOT LIKE '%Airbnb%' AND B.POS NOT LIKE '%App Store%' 
AND B.POS NOT LIKE '%爱奇艺%' AND B.POS NOT LIKE '%爱微游%' AND B.POS NOT LIKE '%爱游之城%' AND B.POS NOT LIKE '%安利%' AND B.POS NOT LIKE '%安踏%' AND B.POS NOT LIKE '%伴伴%' 
AND B.POS NOT LIKE '%不就%' AND B.POS NOT LIKE '%财政厅%' AND B.POS NOT LIKE '%畅游时代%' AND B.POS NOT LIKE '%充值%' AND B.POS NOT LIKE '%当当网%' AND B.POS NOT LIKE '%得物%' 
AND B.POS NOT LIKE '%电魂%' AND B.POS NOT LIKE '%电力公司%' AND B.POS NOT LIKE '%鼎多多%' AND B.POS NOT LIKE '%抖蓝%' AND B.POS NOT LIKE '%对缘%' AND B.POS NOT LIKE '%多彩宝%' 
AND B.POS NOT LIKE '%高速%' AND B.POS NOT LIKE '%GoFun出行%' AND B.POS NOT LIKE '%公安交通管理局%' AND B.POS NOT LIKE '%广州华多网络科技有限公司%' AND B.POS NOT LIKE '%海澜之家%' 
AND B.POS NOT LIKE '%杭州有赞科技有限公司%' AND B.POS NOT LIKE '%HM%' AND B.POS NOT LIKE '%哈喽换电%' AND B.POS NOT LIKE '%海底捞%' AND B.POS NOT LIKE '%航空%' AND B.POS NOT LIKE '%好玩友%' 
AND B.POS NOT LIKE '%Hello语音%' AND B.POS NOT LIKE '%红豆角%' AND B.POS NOT LIKE '%虎牙%' AND B.POS NOT LIKE '%华为%' AND B.POS NOT LIKE '%欢游%' AND B.POS NOT LIKE '%货车帮%' 
AND B.POS NOT LIKE '%霍尔果斯新锐网络%' AND B.POS NOT LIKE '%货拉拉%' AND B.POS NOT LIKE '%Immotor%' AND B.POS NOT LIKE '%JD%' AND B.POS NOT LIKE '%交通罚没款%' 
AND B.POS NOT LIKE '%交易猫%' AND B.POS NOT LIKE '%京东商城%' AND B.POS NOT LIKE '%竞技世界%' AND B.POS NOT LIKE '%精品游戏%' AND B.POS NOT LIKE '%京喜%' AND B.POS NOT LIKE '%九机%' 
AND B.POS NOT LIKE '%九游%' AND B.POS NOT LIKE '%考拉海购%' AND B.POS NOT LIKE '%课堂%' AND B.POS NOT LIKE '%酷狗%' AND B.POS NOT LIKE '%快手%' AND B.POS NOT LIKE '%快团团%' 
AND B.POS NOT LIKE '%联通%' AND B.POS NOT LIKE '%绿森%' AND B.POS NOT LIKE '%漫灵科技%' AND B.POS NOT LIKE '%美菜网%' AND B.POS NOT LIKE '%美团%' AND B.POS NOT LIKE '%咪呀%' 
AND B.POS NOT LIKE '%面对面收款%' AND B.POS NOT LIKE '%喵聊交友%' AND B.POS NOT LIKE '%miHoYo Games%' AND B.POS NOT LIKE '%摩范%' AND B.POS NOT LIKE '%蘑菇街%' AND B.POS NOT LIKE '%陌陌%' 
AND B.POS NOT LIKE '%派派%' AND B.POS NOT LIKE '%拼多多%' AND B.POS NOT LIKE '%平安养老险%' AND B.POS NOT LIKE '%QuHu游戏%' AND B.POS NOT LIKE '%去哪儿网%' AND B.POS NOT LIKE '%瑞可游戏%' 
AND B.POS NOT LIKE '%瑞途游%' AND B.POS NOT LIKE '%深圳雷霆%' AND B.POS NOT LIKE '%生活缴费%' AND B.POS NOT LIKE '%手机充值%' AND B.POS NOT LIKE '%手游%' AND B.POS NOT LIKE '%税务%' 
AND B.POS NOT LIKE '%苏宁易购%' AND B.POS NOT LIKE '%太平洋产险%' AND B.POS NOT LIKE '%贪玩信息%' AND B.POS NOT LIKE '%桃缘交友%' AND B.POS NOT LIKE '%天猫%' AND B.POS NOT LIKE '%同程%' 
AND B.POS NOT LIKE '%团油平台%' AND B.POS NOT LIKE '%玩家就是玩%' AND B.POS NOT LIKE '%网龙%' AND B.POS NOT LIKE '%网易%' AND B.POS NOT LIKE '%微联通%' AND B.POS NOT LIKE '%微拍堂%' 
AND B.POS NOT LIKE '%唯品会%' AND B.POS NOT LIKE '%微信红包%' AND B.POS NOT LIKE '%微信AA收款%' AND B.POS NOT LIKE '%微信支付%' AND B.POS NOT LIKE '%微信转账%' 
AND B.POS NOT LIKE '%喜团%' AND B.POS NOT LIKE '%相互宝%' AND B.POS NOT LIKE '%香满楼酒家%' AND B.POS NOT LIKE '%享少花%' AND B.POS NOT LIKE '%小鹅通知识助手%' 
AND B.POS NOT LIKE '%小红书%' AND B.POS NOT LIKE '%携程%' AND B.POS NOT LIKE '%心娱%' AND B.POS NOT LIKE '%秀场%' AND B.POS NOT LIKE '%雅诗兰黛%' AND B.POS NOT LIKE '%养乐多%' 
AND B.POS NOT LIKE '%氧气%' AND B.POS NOT LIKE '%易充宝%' AND B.POS NOT LIKE '%依游网络%' AND B.POS NOT LIKE '%医院%' AND B.POS NOT LIKE '%音泡%' AND B.POS NOT LIKE '%印象互娱%' 
AND B.POS NOT LIKE '%映客%' AND B.POS NOT LIKE '%游卡网络%' AND B.POS NOT LIKE '%优酷%' AND B.POS NOT LIKE '%游戏币%' AND B.POS NOT LIKE '%有一玩%' AND B.POS NOT LIKE '%游族%' 
AND B.POS NOT LIKE '%云缴费%' AND B.POS NOT LIKE '%运满满%' AND B.POS NOT LIKE '%早游戏%' AND B.POS NOT LIKE '%直播%' AND B.POS NOT LIKE '%智行%' AND B.POS NOT LIKE '%织音%' 
AND B.POS NOT LIKE '%中国电信%' AND B.POS NOT LIKE '%中国联合网络通信%' AND B.POS NOT LIKE '%中国石化%' AND B.POS NOT LIKE '%中国石油%' AND B.POS NOT LIKE '%中国铁路%' 
AND B.POS NOT LIKE '%中国移动%' AND B.POS NOT LIKE '%中通快递%' AND B.POS NOT LIKE '%中移动%' AND B.POS NOT LIKE '%转转%' AND B.POS NOT LIKE '%字节跳动%' AND B.POS NOT LIKE '%作业帮%' 
AND B.POS NOT LIKE '%Apple%' AND B.POS NOT LIKE '%欧莱雅%' AND B.POS NOT LIKE '%耐克%' AND B.POS NOT LIKE '%交警%'
AND B.POS NOT LIKE '%特约商户%' AND B.POS NOT LIKE '%猿辅导%'
----20201210 ZX
AND B.POS NOT LIKE '%平安健康险%' AND B.POS NOT LIKE '%交租助手%' AND B.POS NOT LIKE '%世纪芒果%' AND B.POS NOT LIKE '%Apple%' AND B.POS NOT LIKE '%六间房%'
AND B.POS NOT LIKE '%魔筷星选%' AND B.POS NOT LIKE '%微革网络%' AND B.POS NOT LIKE '%酷飞在线%' AND B.POS NOT LIKE '%世纪华联%' AND B.POS NOT LIKE '%家乐福%'
AND B.POS NOT LIKE '%沃尔玛%' AND B.POS NOT LIKE '%超神玩%' AND B.POS NOT LIKE '%多益网络%' AND B.POS NOT LIKE '%一谈网络%' AND B.POS NOT LIKE '%悦导电子商务%'
AND B.POS NOT LIKE '%拉扎斯信息科技%' AND B.POS NOT LIKE '%华宇掌上网络%' AND B.POS NOT LIKE '%米哈游影铁%' AND B.POS NOT LIKE '%阿里云计算%' AND B.POS NOT LIKE '%狼望网络%'
AND B.POS NOT LIKE '%识装信息科技%' AND B.POS NOT LIKE '%西山居%' AND B.POS NOT LIKE '%美宜佳%' AND B.POS NOT LIKE '%顺联网络%' AND B.POS NOT LIKE '%无限极%'
AND B.POS NOT LIKE '%蜂享%' AND B.POS NOT LIKE '%探探%' AND B.POS NOT LIKE '%沃尔玛%' AND B.POS NOT LIKE '%分期乐%'
AND B.POS <> 'XNA' AND B.SKP_CREDIT_CASE NOT IN --和已有trigger去重    另外可能需要 AND B.AMT_CREDIT_LIMIT_MAX > 0 
          (SELECT DISTINCT SKP_CREDIT_CASE FROM AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION WHERE CLASS='559' AND TRIGGER_SOURCE = 'Abnormal sales increase')  
)
-------CUTOFF 90%
, POS_BASE AS(
SELECT POS,
COUNT(DISTINCT SKP_CLIENT) AS CNT_CLI,
COUNT(DISTINCT DATE_TRANSACTION) AS CNT_TRX_D,
COUNT(DISTINCT SKF_HCP_TRANSACTION) AS CNT_TRX,
SUM(AMT_HCP_FINAL) AS AMT_TRX
FROM BASE
GROUP BY POS
)
,CUT_OFF_1 AS(
SELECT 
PERCENTILE_CONT(0.9) WITHIN GROUP(ORDER BY B.CNT_CLI) AS CUT_CNT_CLI,
PERCENTILE_CONT(0.9) WITHIN GROUP(ORDER BY B.CNT_TRX_D) AS CUT_CNT_TRX_D,
PERCENTILE_CONT(0.9) WITHIN GROUP(ORDER BY B.CNT_TRX) AS CUT_CNT_TRX,
PERCENTILE_CONT(0.9) WITHIN GROUP(ORDER BY B.AMT_TRX) AS CUT_AMT_TRX
FROM POS_BASE B
)
,POS_LAYER AS(
SELECT DISTINCT
 T.POS
,T.POS_NAME
,T.POS_CODE
,T.POS_TYPE
,T.DATE_TRANSACTION
,T.SKP_CREDIT_CASE
,T.SKP_CLIENT
,T.DATE_DECISION
,T.DTIME_TRANSACTION
,T.AMT_HCP_FINAL
,T.SKF_HCP_TRANSACTION
,T.AMT_CREDIT_LIMIT_MAX
,T.TRADE_CHANNEL
,T.ID_SOURCE
FROM BASE T
JOIN (SELECT DISTINCT B.POS FROM POS_BASE B, CUT_OFF_1 C WHERE B.CNT_CLI > C.CUT_CNT_CLI AND B.CNT_TRX_D>C.CUT_CNT_TRX_D AND B.CNT_TRX>C.CUT_CNT_TRX AND B.AMT_TRX>C.CUT_AMT_TRX) M
ON M.POS=T.POS
)
-----OUTLIER
,POS_1 AS(
SELECT POS, DATE_TRANSACTION,
COUNT(DISTINCT SKP_CLIENT) AS CNT_CLI,
COUNT(DISTINCT SKF_HCP_TRANSACTION) AS CNT_TRX,
SUM(AMT_HCP_FINAL) AS SUM_AMT
FROM POS_LAYER
GROUP BY POS, DATE_TRANSACTION
)
,CUT_OFF_2 AS(
SELECT POS,
AVG(CNT_CLI)+ 3*STDDEV(CNT_CLI) AS OUT_CNT_CLI, --阈值（异常值定义）
AVG(CNT_TRX)+ 3*STDDEV(CNT_TRX) AS OUT_CNT_TRX, --阈值（异常值定义）
AVG(SUM_AMT)+ 3*STDDEV(SUM_AMT) AS OUT_SUM_AMT --阈值（异常值定义）
FROM POS_1
GROUP BY POS
)
,SUS_POS AS(
SELECT 
B.POS, B.DATE_TRANSACTION,B.CNT_CLI,B.CNT_TRX,B.SUM_AMT,C.OUT_CNT_CLI,C.OUT_CNT_TRX,C.OUT_SUM_AMT
FROM POS_1 B
JOIN CUT_OFF_2 C
ON B.POS=C.POS
AND B.CNT_CLI > C.OUT_CNT_CLI AND B.CNT_TRX > C.OUT_CNT_TRX AND B.SUM_AMT > C.OUT_SUM_AMT
WHERE B.SUM_AMT > 1000 ----阈值（门店当日消费总额）
)
---SUSPICIOUS TRANSACTIONS FILTER
,SUS_TRX AS(
SELECT 
TRI.SKP_CREDIT_CASE,
TRI.SKP_CLIENT,
TRI.DATE_DECISION,
TRI.DATE_TRANSACTION,
TRI.POS,
TRI.POS_NAME,
TRI.POS_CODE,
TRI.POS_TYPE,
TRI.DTIME_TRANSACTION,
TRI.SKF_HCP_TRANSACTION,
TRI.AMT_HCP_FINAL,
TRI.AMT_CREDIT_LIMIT_MAX,
TRI.TRADE_CHANNEL,
S.CNT_CLI,
S.CNT_TRX,
S.SUM_AMT,
COUNT(DISTINCT TRI.SKF_HCP_TRANSACTION) OVER(PARTITION BY TRI.DATE_TRANSACTION, TRI.POS, TRI.SKP_CLIENT) AS TRX_PER_CLI,
SUM(TRI.AMT_HCP_FINAL) OVER(PARTITION BY TRI.DATE_TRANSACTION, TRI.POS, TRI.SKP_CLIENT) AS AMT_CLI,
CASE WHEN TRI.AMT_CREDIT_LIMIT_MAX = 0 THEN 1 ELSE SUM(TRI.AMT_HCP_FINAL) OVER(PARTITION BY TRI.DATE_TRANSACTION, TRI.POS, TRI.SKP_CLIENT)/TRI.AMT_CREDIT_LIMIT_MAX END AS LIMIT_PERCENT
FROM BASE TRI
JOIN SUS_POS S
ON TRI.POS=S.POS AND TRI.DATE_TRANSACTION=S.DATE_TRANSACTION
)
,HCP_TRI AS(
SELECT 
ST.SKP_CREDIT_CASE,
ST.SKP_CLIENT,
ST.DATE_DECISION,
ST.DATE_TRANSACTION,
ST.POS,
ST.POS_NAME,
ST.POS_CODE,
ST.POS_TYPE,
ST.DTIME_TRANSACTION,
ST.SKF_HCP_TRANSACTION,
ST.AMT_HCP_FINAL,
ST.AMT_CREDIT_LIMIT_MAX,
ST.TRADE_CHANNEL,
ST.TRX_PER_CLI,
ST.AMT_CLI,
ST.LIMIT_PERCENT
FROM SUS_TRX ST
WHERE (TRX_PER_CLI=1 AND LIMIT_PERCENT >= 0.4) OR (TRX_PER_CLI>1 AND LIMIT_PERCENT >= 0.2) --阈值（trigger合同筛选）
)
,GPS_FIND AS(
SELECT DISTINCT
TR.SKP_CLIENT,
TR.SKF_HCP_TRANSACTION,
TR.DTIME_TRANSACTION,
TT.DTIME_INSERTED,
TT.SKP_MOBILE_APP_DEVICE,
TT.NUM_GEO_LATITUDE,
TT.NUM_GEO_LONGITUDE,
DV.CODE_DEVICE||'('||DV.NAME_DEVICE||')' AS DEVICE_INFO,
RANK() OVER(PARTITION BY TR.SKF_HCP_TRANSACTION ORDER BY ABS(TR.DTIME_TRANSACTION-TT.DTIME_INSERTED)) AS RNK --取离trx时间最近的gps
FROM OWNER_DWH.F_MOBILE_APP_EVENT_LOG_TT TT
JOIN OWNER_DWH.CL_MOBILE_APP_EVENT_TYPE ET 
ON TT.SKP_MOBILE_APP_EVENT_TYPE=ET.SKP_MOBILE_APP_EVENT_TYPE 
AND ET.NAME_EVENT IN ('HCP_HP_PAYMENT_CLICK','LM_HCP_QR_CLICK')
JOIN HCP_TRI TR
ON TT.SKP_CLIENT = TR.SKP_CLIENT
AND TR.DATE_TRANSACTION=TRUNC(TT.DTIME_INSERTED)
AND TR.TRADE_CHANNEL LIKE 'CAPP%' AND TR.DTIME_TRANSACTION >= TRUNC(SYSDATE)-30
JOIN OWNER_DWH.DC_MOBILE_APP_DEVICE DV
ON TT.SKP_MOBILE_APP_DEVICE = DV.SKP_MOBILE_APP_DEVICE
WHERE TT.DTIME_INSERTED >= (SELECT MIN(TR.DATE_TRANSACTION) FROM HCP_TRI TR WHERE TR.TRADE_CHANNEL LIKE 'CAPP%' AND TR.DTIME_TRANSACTION >= TRUNC(SYSDATE)-30)
AND TT.NUM_GEO_LATITUDE > 0 AND TT.NUM_GEO_LONGITUDE > 0
)
,BASIC_INFO AS(
SELECT DISTINCT
TR.SKP_CLIENT,
TR.SKP_CREDIT_CASE,
TR.POS,
TR.POS_NAME,
TR.POS_CODE,
TR.POS_TYPE,
TR.DATE_DECISION,
TR.DTIME_TRANSACTION,
TR.DATE_TRANSACTION,
TR.SKF_HCP_TRANSACTION,
TR.AMT_HCP_FINAL,
TR.AMT_CREDIT_LIMIT_MAX,
TR.TRADE_CHANNEL,
CASE WHEN FF.NUM_GEO_LATITUDE IS NOT NULL THEN '(GPS:'||FF.NUM_GEO_LATITUDE||','||FF.NUM_GEO_LONGITUDE||')' END AS GPS_INFO,
CASE WHEN FF.DEVICE_INFO IS NOT NULL THEN '(设备:'||FF.DEVICE_INFO||')' END AS DV_INFO,
COUNT(DISTINCT TR.SKF_HCP_TRANSACTION) OVER(PARTITION BY TR.SKP_CLIENT, TR.POS, TR.DATE_TRANSACTION) AS TRX_PER_CLI,
SUM(TR.AMT_HCP_FINAL) OVER(PARTITION BY TR.SKP_CLIENT, TR.POS, TR.DATE_TRANSACTION) AS AMT_CLI
FROM HCP_TRI TR
LEFT JOIN GPS_FIND FF
ON TR.SKP_CLIENT = FF.SKP_CLIENT
AND TR.SKF_HCP_TRANSACTION = FF.SKF_HCP_TRANSACTION
AND FF.RNK=1
)
SELECT DISTINCT
 'POS' AS UNIT
,'160212' AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'559' AS CLASS
,'Abnormal sales increase' AS TRIGGER_SOURCE
----20201229 zx
,BB.SKF_HCP_TRANSACTION||'//'||BB.POS_CODE||'-'||BB.POS_NAME||'// ['||BB.POS_TYPE||']'||
'客户在'||TO_CHAR(BB.DATE_TRANSACTION,'yy/mm/dd')||'消费'||BB.TRX_PER_CLI||'笔,共'||BB.AMT_CLI||'元;'
||'本单交易为'||TO_CHAR(BB.DTIME_TRANSACTION,'yy/mm/dd hh24:mi')||'通过'||BB.TRADE_CHANNEL||'交易'
||BB.AMT_HCP_FINAL||'元'||BB.GPS_INFO||BB.DV_INFO||';' AS TRIGGER_VALUE                                                                          
,'SOFT'AS TRIGGER_TYPE
,BB.SKP_CREDIT_CASE
,CC.TEXT_CONTRACT_NUMBER
FROM BASIC_INFO BB
JOIN OWNER_DWH.DC_CREDIT_CASE CC 
ON BB.SKP_CLIENT=CC.SKP_CLIENT AND BB.SKP_CREDIT_CASE=CC.SKP_CREDIT_CASE
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
ON EX.CLASS='559'
WHERE BB.DATE_TRANSACTION >= TRUNC(EX.MAX_DETECT) --从上次trigger看到现在
;
COMMIT;

-----(2) Small pos with large transaction-------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION 
WITH BASE AS(
SELECT DISTINCT B.* FROM(
SELECT DISTINCT CO.SKP_CREDIT_CASE, CO.SKP_CLIENT ,CO.DATE_DECISION 
            ,CO.AMT_CREDIT_LIMIT_MAX
            ,TRUNC(TRANS.DTIME_INSERTED) AS DATE_TRANSACTION
            ,TRUNC(TRANS.DTIME_INSERTED,'IW')+6 AS WEEK_TRANSACTION
            ,NVL(CODE_SALESROOM,TRIM(TEXT_EXTERNAL_MERCHANT_ID)||'-'||TRIM(TEXT_EXTERNAL_MERCHANT_NAME)) AS POS
            ,TRANS.DTIME_INSERTED AS DTIME_TRANSACTION
            ,TRANS.SKF_HCP_TRANSACTION
            ,TRANS.AMT_HCP_FINAL
            ,CASE WHEN TRANS.TEXT_EXTERNAL_MERCHANT_NAME!='XNA' THEN TRIM(TRANS.TEXT_EXTERNAL_MERCHANT_NAME) ELSE TRIM(S.NAME_SALESROOM) END AS POS_NAME
            ,CASE WHEN TRANS.TEXT_EXTERNAL_MERCHANT_NAME!='XNA' THEN TRIM(TRANS.TEXT_EXTERNAL_MERCHANT_ID) ELSE TRIM(S.CODE_SALESROOM) END AS POS_CODE
            ,CASE WHEN TRANS.TEXT_EXTERNAL_MERCHANT_NAME!='XNA' THEN 'EXTERNAL' 
                  WHEN TRANS.TEXT_EXTERNAL_MERCHANT_NAME='XNA' AND TRANS.SKP_SALESROOM!=-1 THEN 'INTERNAL' ELSE 'NO POS' END AS POS_TYPE
            ,CASE WHEN CLTC.ID_SOURCE ='mapp' THEN 'CAPP-MAPP'
                  WHEN CLTC.ID_SOURCE ='cup' THEN 'CAPP-CUP'
                  WHEN CLTC.ID_SOURCE ='direct' THEN '3rd party-'|| CLTRC.NAME_HCP_TRADE_CHANNEL 
                  END AS TRADE_CHANNEL    
FROM OWNER_DWH.F_HCP_TRANSACTION_TT TRANS 
JOIN OWNER_DWH.CL_HCP_TRANSACTION_STATUS CLS  
  ON TRANS.SKP_HCP_TRANSACTION_STATUS=CLS.SKP_HCP_TRANSACTION_STATUS
JOIN OWNER_DWH.F_CONTRACT_BASE_AD CO
  ON TRANS.SKP_CREDIT_CASE=CO.SKP_CREDIT_CASE AND CO.SKP_CREDIT_TYPE=4
LEFT JOIN OWNER_DWH.CL_HCP_TRANSACTION_CHANNEL CLTC 
  ON TRANS.SKP_HCP_TRANSACTION_CHANNEL=CLTC.SKP_HCP_TRANSACTION_CHANNEL
LEFT JOIN OWNER_DWH.CL_HCP_TRADE_CHANNEL CLTRC 
  ON TRANS.SKP_HCP_TRADE_CHANNEL=CLTRC.SKP_HCP_TRADE_CHANNEL
LEFT JOIN OWNER_DWH.DC_SALESROOM S 
  ON TRANS.SKP_SALESROOM=S.SKP_SALESROOM AND TRANS.TEXT_EXTERNAL_MERCHANT_NAME='XNA'
WHERE CODE_HCP_TRANSACTION_STATUS = 'POSTED' ---change only posted success trx
AND CO.SKP_CREDIT_TYPE=4
AND TRANS.DTIME_INSERTED>=SYSDATE -180 
AND CO.DTIME_DECISION>=SYSDATE -180
AND CO.DATE_DECISION>=SYSDATE -180) B
---20201104 zx
WHERE B.POS NOT LIKE '%58同城%' AND B.POS NOT LIKE '%5EPLay%' AND B.POS NOT LIKE '%95秀%' AND B.POS NOT LIKE '%Airbnb%' AND B.POS NOT LIKE '%App Store%' AND B.POS NOT LIKE '%爱奇艺%' 
AND B.POS NOT LIKE '%爱微游%' AND B.POS NOT LIKE '%爱游之城%' AND B.POS NOT LIKE '%安利%' AND B.POS NOT LIKE '%安踏%' AND B.POS NOT LIKE '%伴伴%' AND B.POS NOT LIKE '%备用金%' 
AND B.POS NOT LIKE '%不就%' AND B.POS NOT LIKE '%财政厅%' AND B.POS NOT LIKE '%畅游时代%' AND B.POS NOT LIKE '%充值%' AND B.POS NOT LIKE '%当当网%' AND B.POS NOT LIKE '%得物%' 
AND B.POS NOT LIKE '%电魂%' AND B.POS NOT LIKE '%电力公司%' AND B.POS NOT LIKE '%鼎多多%' AND B.POS NOT LIKE '% 抖蓝%' AND B.POS NOT LIKE '%对缘%' AND B.POS NOT LIKE '%多彩宝%' 
AND B.POS NOT LIKE '%高速%' AND B.POS NOT LIKE '%GoFun出行%' AND B.POS NOT LIKE '%公安交通管理局%' AND B.POS NOT LIKE '%公司%' AND B.POS NOT LIKE '%广州华多网络科技有限公司%' 
AND B.POS NOT LIKE '%海澜之家%' AND B.POS NOT LIKE '%杭州有赞科技有限公司%' AND B.POS NOT LIKE '%HM%' AND B.POS NOT LIKE '%哈喽换电%' AND B.POS NOT LIKE '%航空%' 
AND B.POS NOT LIKE '%好玩友%' AND B.POS NOT LIKE '%Hello语音%' AND B.POS NOT LIKE '%红豆角%' AND B.POS NOT LIKE '%虎牙%' AND B.POS NOT LIKE '%华为%' AND B.POS NOT LIKE '%欢游%' 
AND B.POS NOT LIKE '%货车帮%' AND B.POS NOT LIKE '%霍尔果斯新锐网络%' AND B.POS NOT LIKE '%货拉拉%' AND B.POS NOT LIKE '%Immotor%' AND B.POS NOT LIKE '%JD%' AND B.POS NOT LIKE '%交通罚没款%' 
AND B.POS NOT LIKE '%交易猫%' AND B.POS NOT LIKE '%京东商城%' AND B.POS NOT LIKE '%竞技世界%' AND B.POS NOT LIKE '%精品游戏%' AND B.POS NOT LIKE '%京喜%' AND B.POS NOT LIKE '%九机%' 
AND B.POS NOT LIKE '%九游%' AND B.POS NOT LIKE '%考拉海购%' AND B.POS NOT LIKE '%酷狗%' AND B.POS NOT LIKE '%快手%' AND B.POS NOT LIKE '%快团团%' AND B.POS NOT LIKE '%联通%' AND B.POS NOT LIKE '%绿森%' 
AND B.POS NOT LIKE '%漫灵科技%' AND B.POS NOT LIKE '%美菜网%' AND B.POS NOT LIKE '%美团%' AND B.POS NOT LIKE '%咪呀%' AND B.POS NOT LIKE '%面对面收款%' AND B.POS NOT LIKE '%喵聊交友%' 
AND B.POS NOT LIKE '%miHoYo Games%' AND B.POS NOT LIKE '%摩范%' AND B.POS NOT LIKE '%蘑菇街%' AND B.POS NOT LIKE '%陌陌%' AND B.POS NOT LIKE '%陌声%' AND B.POS NOT LIKE '%派派%' 
AND B.POS NOT LIKE '%拼多多%' AND B.POS NOT LIKE '%平安养老险%' AND B.POS NOT LIKE '%QuHu游戏%' AND B.POS NOT LIKE '%去哪儿网%' AND B.POS NOT LIKE '%趣约会%' AND B.POS NOT LIKE '%瑞可游戏%' 
AND B.POS NOT LIKE '%瑞途游%' AND B.POS NOT LIKE '%深圳雷霆%' AND B.POS NOT LIKE '%生活缴费%' AND B.POS NOT LIKE '%手机%' AND B.POS NOT LIKE '%手游%' AND B.POS NOT LIKE '%税务%' 
AND B.POS NOT LIKE '%太平洋产险%' AND B.POS NOT LIKE '%贪玩信息%' AND B.POS NOT LIKE '%桃缘交友%' AND B.POS NOT LIKE '%天猫%' AND B.POS NOT LIKE '%同程%' AND B.POS NOT LIKE '%通行宝%' 
AND B.POS NOT LIKE '%通讯%' AND B.POS NOT LIKE '%团油平台%' AND B.POS NOT LIKE '%玩家就是玩%' AND B.POS NOT LIKE '%网龙%' AND B.POS NOT LIKE '%网易%' AND B.POS NOT LIKE '%微保%' 
AND B.POS NOT LIKE '%微联通%' AND B.POS NOT LIKE '%微拍堂%' AND B.POS NOT LIKE '%唯品会%' AND B.POS NOT LIKE '%微信红包%' AND B.POS NOT LIKE '%微信AA收款%' AND B.POS NOT LIKE '%微信支付%' 
AND B.POS NOT LIKE '%微信转账%' AND B.POS NOT LIKE '%喜团%' AND B.POS NOT LIKE '%相互宝%' AND B.POS NOT LIKE '%享少花%' AND B.POS NOT LIKE '%小鹅通知识助手%' AND B.POS NOT LIKE '%小红书%' 
AND B.POS NOT LIKE '%携程%' AND B.POS NOT LIKE '%心娱%' AND B.POS NOT LIKE '%秀场%' AND B.POS NOT LIKE '%雅诗兰黛%' AND B.POS NOT LIKE '%养乐多%' AND B.POS NOT LIKE '%氧气%' 
AND B.POS NOT LIKE '%易充宝%' AND B.POS NOT LIKE '%依游网络%' AND B.POS NOT LIKE '%医院%' AND B.POS NOT LIKE '%音泡%' AND B.POS NOT LIKE '%印象互娱%' AND B.POS NOT LIKE '%映客%' 
AND B.POS NOT LIKE '%游卡网络%' AND B.POS NOT LIKE '%优酷%' AND B.POS NOT LIKE '%游戏币%' AND B.POS NOT LIKE '%优衣库%' AND B.POS NOT LIKE '%有一玩%' AND B.POS NOT LIKE '%游族%' 
AND B.POS NOT LIKE '%语玩%' AND B.POS NOT LIKE '%猿辅导%' AND B.POS NOT LIKE '%云缴费%' AND B.POS NOT LIKE '%运满满%' AND B.POS NOT LIKE '%早游戏%' AND B.POS NOT LIKE '%直播%' 
AND B.POS NOT LIKE '%智行%' AND B.POS NOT LIKE '%织音%' AND B.POS NOT LIKE '%中国电信%' AND B.POS NOT LIKE '%中国联合网络通信%' AND B.POS NOT LIKE '%中国石化%' AND B.POS NOT LIKE '%中国石油%' 
AND B.POS NOT LIKE '%中国铁路%' AND B.POS NOT LIKE '%中国移动%' AND B.POS NOT LIKE '%中移动%' AND B.POS NOT LIKE '%转转%' AND B.POS NOT LIKE '%字节跳动%' AND B.POS NOT LIKE '%作业帮%' 
AND B.POS NOT LIKE '%1' AND B.POS <> 'XNA' 
---20201210 ZX
AND B.POS NOT LIKE '%抖一抖%' AND B.POS NOT LIKE '%一手%' AND B.POS NOT LIKE '%盘丝洞%' AND B.POS NOT LIKE '%当乐%' AND B.POS NOT LIKE '%欢娱%' AND B.POS NOT LIKE '%华联超市%'
AND B.POS NOT LIKE '%永辉超市%' AND B.POS NOT LIKE '%批批网%' AND B.POS NOT LIKE '%柒玖游%' AND B.POS NOT LIKE '%沃尔玛%' AND B.POS NOT LIKE '%分期乐%'
      AND ((LENGTH(B.POS_NAME)<=3) OR (B.POS_NAME LIKE '%美容%') OR (B.POS_NAME LIKE '%美发%') OR (B.POS_NAME LIKE '%美发%') OR (B.POS_NAME LIKE '%超市%') 
      OR (B.POS_NAME LIKE '%饭店%') OR (B.POS_NAME LIKE '%服装%') OR (B.POS_NAME LIKE '%药店%') OR (B.POS_NAME LIKE '%市场%') OR (B.POS_NAME LIKE '%个体%'))
      AND B.SKP_CREDIT_CASE NOT IN --和已有trigger去重
          (SELECT DISTINCT SKP_CREDIT_CASE FROM AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION WHERE CLASS='559' AND TRIGGER_SOURCE = 'Small pos with large transaction')    
)
,POS_BASE AS(
SELECT POS,
COUNT(DISTINCT SKP_CLIENT) AS CNT_CLI,
COUNT(DISTINCT SKF_HCP_TRANSACTION) AS CNT_TRX,
SUM(AMT_HCP_FINAL) AS AMT_TRX,
MAX(AMT_HCP_FINAL) AS MAX_TRX,
AVG(AMT_HCP_FINAL)+ 4*STDDEV(AMT_HCP_FINAL) AS OUTLIER--阈值（异常值定义）
FROM BASE
GROUP BY POS
)
,CUT_OFF_1 AS(
SELECT 
PERCENTILE_CONT(0.9) WITHIN GROUP(ORDER BY B.CNT_CLI) AS CUT_CNT_CLI,--1
PERCENTILE_CONT(0.9) WITHIN GROUP(ORDER BY B.CNT_TRX) AS CUT_CNT_TRX,--3
PERCENTILE_CONT(0.9) WITHIN GROUP(ORDER BY B.AMT_TRX) AS CUT_AMT_TRX,--700
PERCENTILE_CONT(0.9) WITHIN GROUP(ORDER BY B.MAX_TRX) AS CUT_MAX_TRX--500
FROM POS_BASE B
)
,POS_LAYER AS(
SELECT DISTINCT
 T.POS
,T.POS_NAME
,T.POS_CODE
,T.POS_TYPE
,T.DATE_TRANSACTION
,T.SKP_CREDIT_CASE
,T.SKP_CLIENT
,T.DATE_DECISION
,T.DTIME_TRANSACTION
,T.AMT_HCP_FINAL
,T.SKF_HCP_TRANSACTION
,T.AMT_CREDIT_LIMIT_MAX
,T.TRADE_CHANNEL
,M.OUTLIER
,COUNT(DISTINCT T.SKF_HCP_TRANSACTION) OVER(PARTITION BY T.DATE_TRANSACTION, T.POS, T.SKP_CLIENT) AS TRX_PER_CLI
,SUM(T.AMT_HCP_FINAL) OVER(PARTITION BY T.DATE_TRANSACTION, T.POS, T.SKP_CLIENT) AS AMT_CLI
FROM BASE T
JOIN (SELECT DISTINCT B.POS, B.OUTLIER FROM POS_BASE B, CUT_OFF_1 C WHERE B.CNT_CLI > C.CUT_CNT_CLI AND B.CNT_TRX>C.CUT_CNT_TRX AND B.AMT_TRX>C.CUT_AMT_TRX
                                                         AND   B.MAX_TRX > C.CUT_MAX_TRX AND B.MAX_TRX>B.OUTLIER) M
ON M.POS=T.POS
)
,GPS_FIND AS(
SELECT DISTINCT
TR.SKP_CLIENT,
TR.SKF_HCP_TRANSACTION,
TR.DTIME_TRANSACTION,
TT.DTIME_INSERTED,
TT.SKP_MOBILE_APP_DEVICE,
TT.NUM_GEO_LATITUDE,
TT.NUM_GEO_LONGITUDE,
DV.CODE_DEVICE||'('||DV.NAME_DEVICE||')' AS DEVICE_INFO,
RANK() OVER(PARTITION BY TR.SKF_HCP_TRANSACTION ORDER BY ABS(TR.DTIME_TRANSACTION-TT.DTIME_INSERTED)) AS RNK --取离trx时间最近的gps
FROM OWNER_DWH.F_MOBILE_APP_EVENT_LOG_TT TT
JOIN OWNER_DWH.CL_MOBILE_APP_EVENT_TYPE ET 
ON TT.SKP_MOBILE_APP_EVENT_TYPE=ET.SKP_MOBILE_APP_EVENT_TYPE 
AND ET.NAME_EVENT IN ('HCP_HP_PAYMENT_CLICK','LM_HCP_QR_CLICK')
JOIN POS_LAYER TR
ON TT.SKP_CLIENT = TR.SKP_CLIENT
AND TR.DATE_TRANSACTION=TRUNC(TT.DTIME_INSERTED)
AND TR.TRADE_CHANNEL LIKE 'CAPP%' AND TR.DTIME_TRANSACTION >= TRUNC(SYSDATE)-30
JOIN OWNER_DWH.DC_MOBILE_APP_DEVICE DV
ON TT.SKP_MOBILE_APP_DEVICE = DV.SKP_MOBILE_APP_DEVICE
WHERE TT.DTIME_INSERTED >= (SELECT MIN(TR.DATE_TRANSACTION) FROM POS_LAYER TR WHERE TR.TRADE_CHANNEL LIKE 'CAPP%' AND TR.DTIME_TRANSACTION >= TRUNC(SYSDATE)-30)
AND TT.NUM_GEO_LATITUDE > 0 AND TT.NUM_GEO_LONGITUDE > 0
)
,BASIC_INFO AS(
SELECT DISTINCT
TR.SKP_CLIENT,
TR.SKP_CREDIT_CASE,
TR.POS,
TR.POS_NAME,
TR.POS_CODE,
TR.POS_TYPE,
TR.DATE_DECISION,
TR.DTIME_TRANSACTION,
TR.DATE_TRANSACTION,
TR.SKF_HCP_TRANSACTION,
TR.AMT_HCP_FINAL,
TR.AMT_CREDIT_LIMIT_MAX,
TR.TRADE_CHANNEL,
CASE WHEN FF.NUM_GEO_LATITUDE IS NOT NULL THEN '(GPS:'||FF.NUM_GEO_LATITUDE||','||FF.NUM_GEO_LONGITUDE||')' END AS GPS_INFO,
CASE WHEN FF.DEVICE_INFO IS NOT NULL THEN '(设备:'||FF.DEVICE_INFO||')' END AS DV_INFO,
COUNT(DISTINCT TR.SKF_HCP_TRANSACTION) OVER(PARTITION BY TR.SKP_CLIENT, TR.POS, TR.DATE_TRANSACTION) AS TRX_PER_CLI,
SUM(TR.AMT_HCP_FINAL) OVER(PARTITION BY TR.SKP_CLIENT, TR.POS, TR.DATE_TRANSACTION) AS AMT_CLI
FROM POS_LAYER TR
LEFT JOIN GPS_FIND FF
ON TR.SKP_CLIENT = FF.SKP_CLIENT
AND TR.SKF_HCP_TRANSACTION = FF.SKF_HCP_TRANSACTION
AND FF.RNK=1
WHERE TR.AMT_CLI >= TR.OUTLIER AND TR.AMT_CLI >= 300--阈值
)
SELECT DISTINCT
 'POS' AS UNIT
,'160212' AS ID_ENTITY ---虚拟ID
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'559' AS CLASS
,'Small pos with large transaction' AS TRIGGER_SOURCE
----20201229 zx
,BB.SKF_HCP_TRANSACTION||'//'||BB.POS_CODE||'-'||BB.POS_NAME||'// ['||BB.POS_TYPE||']'||'客户在'||
TO_CHAR(BB.DATE_TRANSACTION,'yy/mm/dd')||'消费'||BB.TRX_PER_CLI||'笔,共'
||BB.AMT_CLI||'元;'||'本单交易为'||TO_CHAR(BB.DTIME_TRANSACTION,'yy/mm/dd hh24:mi')||'通过'||BB.TRADE_CHANNEL||'交易'
||BB.AMT_HCP_FINAL||'元'||BB.GPS_INFO||BB.DV_INFO||';' AS TRIGGER_VALUE                                                                                
,'SOFT'AS TRIGGER_TYPE
,BB.SKP_CREDIT_CASE
,CC.TEXT_CONTRACT_NUMBER
FROM BASIC_INFO BB
JOIN OWNER_DWH.DC_CREDIT_CASE CC 
ON BB.SKP_CLIENT=CC.SKP_CLIENT AND BB.SKP_CREDIT_CASE=CC.SKP_CREDIT_CASE
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
ON EX.CLASS='559'
WHERE BB.DATE_TRANSACTION >= TRUNC(EX.MAX_DETECT) --从上次trigger看到现在
;
COMMIT;
-------===============================================================================
-------3. Full Volume transaction at date decision ---20201229 ZX
-------===============================================================================
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION 
WITH TRX AS(
SELECT DISTINCT 
CO.SKP_CREDIT_CASE, CO.SKP_CLIENT ,CO.DATE_DECISION, CO.DTIME_DECISION,CO.TEXT_CONTRACT_NUMBER,
CO.AMT_CREDIT_LIMIT_MAX,AA.AMT_CREDIT AS APPLICATION_AMT_LIMIT
,NVL(CODE_SALESROOM,TRIM(TEXT_EXTERNAL_MERCHANT_ID)||'-'||TRIM(TEXT_EXTERNAL_MERCHANT_NAME)) AS POS
,TRANS.DTIME_INSERTED AS DTIME_TRANSACTION
,TRANS.SKF_HCP_TRANSACTION
,TRANS.AMT_HCP_FINAL
,CASE WHEN TRANS.TEXT_EXTERNAL_MERCHANT_NAME!='XNA' THEN TRIM(TRANS.TEXT_EXTERNAL_MERCHANT_NAME) ELSE TRIM(S.NAME_SALESROOM) END AS POS_NAME
,CASE WHEN TRANS.TEXT_EXTERNAL_MERCHANT_NAME!='XNA' THEN TRIM(TRANS.TEXT_EXTERNAL_MERCHANT_ID) ELSE TRIM(S.CODE_SALESROOM) END AS POS_CODE
,CASE WHEN TRANS.TEXT_EXTERNAL_MERCHANT_NAME!='XNA' THEN 'EXTERNAL' 
      WHEN TRANS.TEXT_EXTERNAL_MERCHANT_NAME='XNA' AND TRANS.SKP_SALESROOM!=-1 THEN 'INTERNAL' ELSE 'NO POS' END AS POS_TYPE
,CASE WHEN CLTC.ID_SOURCE ='mapp' THEN 'CAPP-MAPP'
      WHEN CLTC.ID_SOURCE ='cup' THEN 'CAPP-CUP'
      WHEN CLTC.ID_SOURCE ='direct' THEN '3rd party-'|| CLTRC.NAME_HCP_TRADE_CHANNEL 
      END AS TRADE_CHANNEL    
FROM OWNER_DWH.F_HCP_TRANSACTION_TT TRANS 
JOIN OWNER_DWH.CL_HCP_TRANSACTION_STATUS CLS  
  ON TRANS.SKP_HCP_TRANSACTION_STATUS=CLS.SKP_HCP_TRANSACTION_STATUS
JOIN OWNER_DWH.F_CONTRACT_BASE_AD CO
  ON TRANS.SKP_CREDIT_CASE=CO.SKP_CREDIT_CASE 
  AND CO.SKP_CREDIT_TYPE=4
  AND TRUNC(TRANS.DTIME_INSERTED) = TRUNC(CO.DATE_DECISION) --TRX DAT=DECISION DAY
JOIN OWNER_DWH.F_APPLICATION_TT AA
  ON CO.SKP_CREDIT_CASE = AA.SKP_CREDIT_CASE 
  AND AA.SKP_CREDIT_TYPE = 4
  AND TRANS.AMT_HCP_FINAL = AA.AMT_CREDIT ---FULL VOLUME
LEFT JOIN OWNER_DWH.CL_HCP_TRANSACTION_CHANNEL CLTC 
  ON TRANS.SKP_HCP_TRANSACTION_CHANNEL=CLTC.SKP_HCP_TRANSACTION_CHANNEL
LEFT JOIN OWNER_DWH.CL_HCP_TRADE_CHANNEL CLTRC 
  ON TRANS.SKP_HCP_TRADE_CHANNEL=CLTRC.SKP_HCP_TRADE_CHANNEL
LEFT JOIN OWNER_DWH.DC_SALESROOM S 
  ON TRANS.SKP_SALESROOM=S.SKP_SALESROOM 
  AND TRANS.TEXT_EXTERNAL_MERCHANT_NAME='XNA'
WHERE CLS.CODE_HCP_TRANSACTION_STATUS = 'POSTED' ---CHANGE ONLY POSTED SUCCESS TRX
AND CO.SKP_CREDIT_TYPE=4
AND CO.SKP_CREDIT_STATUS IN (2,3,5)
AND TRANS.DTIME_INSERTED>=DATE'2020-10-01' AND CO.DTIME_DECISION>=DATE'2020-10-01' AND CO.DATE_DECISION>=DATE'2020-10-01' AND AA.DATE_DECISION >= DATE'2020-10-01'
AND TRANS.DTIME_INSERTED>=(SYSDATE-90) AND CO.DTIME_DECISION>=(SYSDATE-90) AND CO.DATE_DECISION>=(SYSDATE-90) AND AA.DATE_DECISION >= (SYSDATE-90) ---三个月内
---排除已经trigger过的合同
AND NOT EXISTS (SELECT 1 FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS P WHERE P.SKP_CREDIT_CASE = AA.SKP_CREDIT_CASE AND CLASS='559' 
                              AND TRIGGER_SOURCE = 'Full volume transaction on date decision') 
)
---POS CONCENTRATION
,BASE AS(
SELECT B.POS_NAME, B.POS_CODE, COUNT(DISTINCT SKP_CREDIT_CASE) AS POS_CONCENTRATION
FROM TRX B
WHERE B.POS_NAME NOT LIKE '%微信%' AND B.POS_CODE <> 'XNA' AND B.POS_CODE <> '00000000'
GROUP BY B.POS_NAME, B.POS_CODE
ORDER BY COUNT(DISTINCT SKP_CREDIT_CASE) DESC
)
---TRIGGER FORMAT
,PRE_TRIGGER AS(
SELECT AA.SKF_HCP_TRANSACTION, AA.SKP_CLIENT, AA.SKP_CREDIT_CASE, AA.POS, AA.TEXT_CONTRACT_NUMBER,
AA.POS_CODE,AA.POS_NAME,
TO_CHAR(AA.DTIME_DECISION,'yy/mm/dd hh24:mi:ss') AS DTIME_DECISION,
TO_CHAR(AA.DTIME_TRANSACTION,'yy/mm/dd hh24:mi:ss') AS DTIME_TRANSACTION,
AA.AMT_HCP_FINAL, AA.APPLICATION_AMT_LIMIT, AA.AMT_CREDIT_LIMIT_MAX, 
AA.POS_TYPE, AA.TRADE_CHANNEL,
DENSE_RANK() OVER(ORDER BY AA.POS) AS GROUP_NUM
FROM TRX AA
JOIN BASE BB
ON BB.POS_CONCENTRATION>=3
AND AA.POS_NAME=BB.POS_NAME AND AA.POS_CODE=BB.POS_CODE
)
SELECT 
'POS' AS UNIT
,'160212' AS ID_ENTITY ---虚拟ID
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'559' AS CLASS
,'Full volume transaction on date decision' AS TRIGGER_SOURCE
,P.SKF_HCP_TRANSACTION||'//'||P.POS_CODE||'-'||P.POS_NAME||'// ['||P.POS_TYPE||'] 客户在'||P.DTIME_DECISION||'办单后，当天'||P.DTIME_TRANSACTION||'通过'||P.TRADE_CHANNEL||
'满额消费'||P.AMT_HCP_FINAL||'元' AS TRIGGER_VALUE                                                                           
,'SOFT'AS TRIGGER_TYPE
,P.SKP_CREDIT_CASE
,P.TEXT_CONTRACT_NUMBER
FROM PRE_TRIGGER P
;
COMMIT;

owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;

-----20201030 ZX
PROCEDURE TRIGGER_563_CAPP_APPLICATION IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name: length       
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_563_CAPP';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP:563_CAPP_APPLICATION';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL); 
 
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '563 CAPP APPLICATION TRIGGER',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION 
WITH BASE AS(
SELECT DISTINCT
FCC.DATE_DECISION,
FCC.DTIME_DECISION,
FCC.SKP_CLIENT,
FCC.SKP_CREDIT_CASE,
FCC.DTIME_WEB_FORM_OPEN,
FCC.DTIME_REVIEW,
FCC.SKP_CREDIT_STATUS,
TO_CHAR(FCC.DTIME_DECISION,'hh24') AS APP_HOUR,
ROUND(ABS((FCC.DTIME_REVIEW - FCC.DTIME_WEB_FORM_OPEN)*24*60),2) AS MIN_DIFF,
CASE WHEN CC.SKP_CREDIT_CASE IS NOT NULL THEN 'Y' ELSE 'N' END AS PREVIOUS_RECORD_FLAG ---20201125 zx
FROM OWNER_DWH.F_CREDIT_CASE_AD FCC
JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD CIA
ON FCC.SKP_CREDIT_CASE = CIA.SKP_CREDIT_CASE
AND FCC.DATE_DECISION = CIA.DATE_DECISION
JOIN OWNER_DWH.DC_CREDIT_CASE DC
ON  FCC.SKP_CREDIT_CASE = DC.SKP_CREDIT_CASE
AND FCC.DATE_DECISION = DC.DATE_DECISION
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
ON EX.CLASS='563'
---20201125 zx
LEFT JOIN OWNER_DWH.DC_CREDIT_CASE CC
ON FCC.SKP_CLIENT = CC.SKP_CLIENT
---在capp申请之前90days有过办单记录的
AND CC.DTIME_DECISION < FCC.DTIME_DECISION
AND CC.DATE_DECISION >= (FCC.DATE_DECISION - 90)
AND CC.SKP_CREDIT_CASE <> FCC.SKP_CREDIT_CASE
AND CC.SKP_CREDIT_STATUS IN (2,3,5)
WHERE FCC.SKP_CREDIT_TYPE=2 
AND DC.SKP_CREDIT_ACQUISITION_CHNL=8
AND FCC.DATE_DECISION >= TRUNC(EX.MAX_DETECT)
AND CIA.DATE_DECISION >= TRUNC(EX.MAX_DETECT)
AND DC.DATE_DECISION >= TRUNC(EX.MAX_DETECT)
AND CIA.SKP_CREDIT_STATUS IN (2,3,5)
AND FCC.DTIME_WEB_FORM_OPEN >= TRUNC(EX.MAX_DETECT)
AND FCC.DTIME_WEB_FORM_OPEN <= SYSDATE+2 ---限定时间是正常的即可
--排除已经在202里面调查的合同
AND FCC.SKP_CREDIT_CASE NOT IN 
    (SELECT F.SKP_CREDIT_CASE FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS F WHERE CLASS='202' AND TRIGGER_SOURCE='Capp application late at night within very short time')
--排除已经在563里面的合同
AND FCC.SKP_CREDIT_CASE NOT IN 
    (SELECT F.SKP_CREDIT_CASE FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS F WHERE CLASS='563' AND TRIGGER_SOURCE='Capp application late at night within very short time')   
)
SELECT 
'SA' AS UNIT,
C.TEXT_USERNAME_EMPLOYEE_SALES AS ID_ENTITY,
TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT,
'563'AS CLASS,
'Capp application late at night within very short time' AS TRIGGER_SOURCE,
'客户在'||TO_CHAR(B.DTIME_DECISION,'YYYY-MM-DD HH24:MI:SS')||'办理XCL, 整个办理过程仅持续 '||ROUND(B.MIN_DIFF,2)||' 分钟' AS TRIGGER_VALUE,
'SOFT' AS TRIGGER_TYPE,
B.SKP_CREDIT_CASE,
C.TEXT_CONTRACT_NUMBER
FROM BASE B
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD C
ON B.SKP_CLIENT = C.SKP_CLIENT AND B.SKP_CREDIT_CASE = C.SKP_CREDIT_CASE
WHERE (B.APP_HOUR BETWEEN 2 AND 5) --半夜2点-6点办单
AND B.MIN_DIFF <= 2 --整个申请过程不超过2min
AND B.PREVIOUS_RECORD_FLAG='N' --20201125 zx
;

owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;


PROCEDURE TRIGGER_568_HIGH_TRIGGER_RATE_POS IS
  v_stepnum      INTEGER DEFAULT 0;
  v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
  v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
  v_err_txt      VARCHAR2(70);
  l_rowcount     integer;
  v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
  -- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_568_HIGH_TRIGGER_RATE_POS';
  -- check whether the process need to run
  IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy,
                                          p_name  => v_dealprc,
                                          p_date  => trunc(SYSDATE)) IN
     ('Not Started', 'Failed') THEN
    -- procedure start
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'start');
  
    --! report robots log start
  
    INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
      SELECT '568 high trigger rate pos', SYSDATE FROM DUAL;
    COMMIT;
  
    v_step_message := 'STEP1 1 month pos contract';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'truncate table ap_antifraud.TRIGGER_568_ACTIVE_POS_CASE';
  
    insert into ap_antifraud.TRIGGER_568_ACTIVE_POS_CASE
      select c.skp_credit_case,
             c.text_contract_number,
             sr.code_salesroom,
             c.date_decision,
             trunc(c.date_decision, 'mm') as month_decision
        from owner_dwh.dc_credit_case c
        join owner_dwh.F_APPLICATION_TT a
          on c.skp_credit_case = a.SKP_CREDIT_CASE
        JOIN owner_dwh.Ddc_salesroom SR
          ON A.SKP_SALESROOM = SR.skp_salesroom
       where c.date_decision between add_months(trunc(sysdate, 'mm'), -2) and ---生产改成2
             add_months(trunc(sysdate, 'mm'), -1) - 1
         and a.date_decision between add_months(trunc(sysdate, 'mm'), -2) and
             add_months(trunc(sysdate, 'mm'), -1) - 1
         and c.skp_credit_type = 1
         and a.SKP_CREDIT_TYPE = 1
         AND c.SKP_CREDIT_STATUS IN (2, 3, 5)
         AND skp_credit_acquisition_chnl = 21
         AND SR.code_salesroom_status = 'a';
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := 'STEP2 contract 30 days trigger info';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'truncate table ap_antifraud.TRIGGER_568_trigger_info';
  
    insert into ap_antifraud.TRIGGER_568_trigger_info
      with base as
       (select b0.skp_credit_case,
               f.action,
               f.date_detect,
               f.class,
               f.trigger_source
          from ap_antifraud.TRIGGER_568_ACTIVE_POS_CASE b0
          LEFT JOIN AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS F
            ON b0.SKP_CREDIT_CASE = F.SKP_CREDIT_CASE
           AND F.TRIGGER_SOURCE != 'GZQN20210609-REG(GROUP FRAUD CASE)'
           and f.class not in ('66', '22', '566')
           and f.date_detect - f.date_decision < 30)
      select skp_credit_case,
             case
               when sum(case
                          when action is not null then
                           1
                          else
                           0
                        end) > 0 then
                1
               else
                0
             end as flag_trigger,
             case
               when sum(case
                          when action = 'IV' then
                           1
                          else
                           0
                        end) > 0 then
                1
               else
                0
             end as flag_iv
        from base
       group by skp_credit_case;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
    v_step_message := 'STEP3 result to pre selection';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
                                                
    insert into AP_ANTIFRAUD.f_Trcontracts_Preselection
      with base as
       (select b0.code_salesroom,
               b0.month_decision,
               count(b0.skp_credit_case) as cnt_contract,
               sum(flag_trigger) / count(flag_trigger) as trigger_rate
          from ap_antifraud.TRIGGER_568_ACTIVE_POS_CASE b0
          join ap_antifraud.TRIGGER_568_trigger_info t0
            on b0.skp_credit_Case = t0.skp_credit_case
         group by b0.code_salesroom, b0.month_decision),
      trigger_info as
       (select b0.skp_credit_case,
               b0.TEXT_CONTRACT_NUMBER,
               b0.code_salesroom,
               trigger_rate,
               cnt_contract,
               b0.date_decision,
               f.action,
               f.date_detect,
               f.class,
               f.trigger_source,
               row_number() over(partition by b0.SKP_CREDIT_CASE order by DATE_DETECT desc) as rn
          from ap_antifraud.TRIGGER_568_ACTIVE_POS_CASE b0
          join base b
            on b0.CODE_SALESROOM = b.CODE_SALESROOM
           and b.month_decision = b0.month_decision
          LEFT JOIN AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS F
            ON b0.SKP_CREDIT_CASE = F.SKP_CREDIT_CASE
           AND F.TRIGGER_SOURCE != 'GZQN20210609-REG(GROUP FRAUD CASE)'
           and f.class not in ('66', '22', '566')
           and f.date_detect - f.date_decision < 30
         where cnt_contract > 6
           and trigger_rate > 0.5),
      agg as
       (select distinct skp_credit_case,
                        listagg('trigger记录:' ||
                                to_char(date_detect, 'yyyy-mm-dd') ||
                                ' class:' || class || ' TRIGGER_SOURCE:' ||
                                trigger_source,
                                '; ') within group(order by rn) as his_tri
          from trigger_info
         where date_detect is not null
         group by skp_credit_case)
      
      select 'POS' AS UNIT,
             code_salesroom AS ID_ENTITY,
             TO_CHAR(TRUNC(SYSDATE), 'YYYY/MM/DD') AS DATE_DETECT,
             TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
             '568' AS CLASS,
             'MONTHLY HIGH TRIGGER RATE POS REVIEW' AS TRIGGER_SOURCE,
             'POS ' || code_salesroom || ' 在' ||
             to_char(DATE_DECISION, 'yyyy') || '年' ||
             to_char(DATE_DECISION, 'mm') || '月共有' || CNT_CONTRACT ||
             '单合同,其中' || round(trigger_rate * 100, 2) ||
             '%曾被trigger过, 本单合同' || nvl(his_tri, '未被trigger') as trigger_value,
             'SOFT' as TRIGGER_TYPE,
             t.SKP_CREDIT_CASE,
             t.text_contract_number
        from trigger_info t
        left join agg a
          on t.skp_credit_case = a.skp_credit_case
       where rn = 1;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
    -- procedure end
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'end');
  END IF;
EXCEPTION
  WHEN OTHERS THEN
    -- ROBOTS_LOG
    owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                               p_step            => v_step_message,
                                               p_additional_info => NULL);
    -- process_log  
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => SQLCODE,
                                  p_msg    => 'Error in step (' ||
                                              v_step_message || ') - ' ||
                                              substr(SQLERRM, 1, 150));
    RAISE;
END;



PROCEDURE TRIGGER_WEEKLY_RUN IS
  v_stepnum      INTEGER DEFAULT 0;
  v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
  v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
  v_err_txt      VARCHAR2(70);
  v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
  -- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_WEEKLY_RUN';
  -- check whether the process need to run
  IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy,
                                          p_name  => v_dealprc,
                                          p_date  => trunc(SYSDATE)) IN
     ('Not Started', 'Failed') THEN
    -- procedure start
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'start');
  
    IF to_char(SYSDATE - 1, 'D') IN (1) THEN
    
      TRIGGER_545_REMOTE_APPLICATION;
    
    ELSIF to_char(SYSDATE - 1, 'D') IN (2) THEN
      

    
      TRIGGER_40_PAYMENT;
    
      TRIGGER_40_3PARTY_PAYMENT;
    
      TRIGGER_23_PRICE_CHEATING;
    
      TRIGGER_538_ONLINE_3PARTY;
      


      BEGIN
        EXECUTE IMMEDIATE 'alter session set NLS_DATE_FORMAT=''DD-MON-RR''';
        EXECUTE IMMEDIATE 'alter session set NLS_DATE_LANGUAGE=AMERICAN ';
        EXECUTE IMMEDIATE 'alter session set nls_language=AMERICAN';
      
        IF TRUNC(SYSDATE) = next_day(TRUNC(SYSDATE, 'mm') - 1, 'TUE') THEN
          --每个月的第一个周二跑
          TRIGGER_568_HIGH_TRIGGER_RATE_POS;
        END IF;
      
        /*        IF TRUNC(SYSDATE) = next_day(TRUNC(SYSDATE, 'mm') - 1, 'MON') THEN
          --每个月的第一个周一跑
           TRIGGER_DEL_ACL;
        END IF;*/
      END;
      ---TRIGGER_15_WC_WEEKLY;

    ELSIF to_char(SYSDATE - 1, 'D') IN (3) THEN

      TRIGGER_519_FAKE_WECHAT_BIND;
    
      TRIGGER_525_SA_DO_ORBP;
    
      TRIGGER_526_HIT_POS_OWNER;
    
      TRIGGER_528_INBOUND_CHANGE;
    
      ---TRIGGER_559_HCP_REGULAR_TRANSACTION; Pause at 20211015 since half year no case
    
    ELSIF to_char(SYSDATE - 1, 'D') IN (4) THEN
    
      TRIGGER_563_CAPP_APPLICATION;
    
    ELSIF to_char(SYSDATE - 1, 'D') IN (5) THEN
    
      TRIGGER_282_EWS_COMBINATION;
    
      TRIGGER_549_GOODSTYPE_MISMATCH;
    
    END IF;
  
    COMMIT;
    -- procedure end
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'end');
  END IF;
EXCEPTION
  WHEN OTHERS THEN
    -- ROBOTS_LOG
    owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                               p_step            => v_step_message,
                                               p_additional_info => NULL);
    -- process_log  
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => SQLCODE,
                                  p_msg    => 'Error in step (' ||
                                              v_step_message || ') - ' ||
                                              substr(SQLERRM, 1, 150));
    RAISE;
END;

END lib_TRIGGER_WEEKLY;
