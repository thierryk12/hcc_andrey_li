CREATE OR REPLACE PACKAGE BODY AP_ANTIFRAUD.lib_TRIGGER_DAILY_RUN IS

  /*
   *
   * $Header: http://svn.homecredit.cn/svn/DB_DWH/HomeDW/trunk/AP_ANTIFRAUD/2021_new_procedure/lib_TRIGGER_DAILY_RUN.pck 10887 2021-10-29 09:39:31Z bauer.wang $
   *
   * Author: bauer.wang
   * Last revision $Author: bauer.wang $
   * $Date: 2021-10-29 17:39:31 +0800 (Fri, 29 Oct 2021) $
   *
   * $Revision: 10887 $
   *
  **/

 

 PROCEDURE TRIGGER_22_99_44_202_AD_HOC IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';

BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_22_99_44_202_AD_HOC';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  

    
  ----TRUNCATE TABLE AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION;
 EXECUTE IMMEDIATE'TRUNCATE TABLE AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME' ;
 
INSERT INTO AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME
  SELECT TRUNC(SYSDATE) AS UPLOAD_DATE,
         CLASS,
         TRUNC(SYSDATE) - TO_DATE(max(AA.DATE_DETECT), 'YYYY-MM-DD') AS DAYS, -------------20210330 YW 修改date_detect
         TO_DATE(max(AA.DATE_DETECT), 'YYYY-MM-DD') AS MAX_DATE_DETECT
    FROM AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION AA
   GROUP BY TRUNC(SYSDATE), CLASS;
COMMIT;

INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
  SELECT '22 SIV& AD HOC', SYSDATE FROM DUAL;
COMMIT;
-----------------SPECIAL CASE& AD HOC CASES------------
DELETE FROM AP_ANTIFRAUD.TRIGGER_MANUAL_UPLOAD WHERE CLASS IS NULL;

UPDATE AP_ANTIFRAUD.TRIGGER_MANUAL_UPLOAD
   SET DATE_UPLOAD = TRUNC(SYSDATE)
 WHERE CLASS IN ('22', '66', '202', '514', '566', '567')
   AND DATE_UPLOAD IS NULL
   AND contract_no NOT IN ('2530', '2531'); --old case 20180710

COMMIT;

INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection
  SELECT 'SA' AS UNIT,
         facc.text_username_employee_sales AS ID_ENTITY,
         TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
         TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
         AA.CLASS,
         TRIGGER_SOURCE --FRAUD_TYPE AS TRIGGER_SOURCE 改名字20200821
        ,
         TRIGGER_VALUE --FRAUD_DESCRIPTION AS TRIGGER_VALUE
        ,
         CASE
           WHEN AA.CLASS = '22' THEN
            'MEDIUM'
           ELSE
            PRIORITY
         END AS TRIGGER_TYPE,
         BB.SKP_CREDIT_CASE,
         AA.CONTRACT_NO
    FROM AP_ANTIFRAUD.TRIGGER_MANUAL_UPLOAD AA
  -- JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS IN ('22') AND AA.DATE_UPLOAD>EX.MAX_DETECT
    JOIN OWNER_DWH.DC_CREDIT_CASE BB
      ON AA.CONTRACT_NO = BB.text_contract_number
    JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC
      ON FACC.skp_credit_case = BB.SKP_CREDIT_CASE
     AND BB.DATE_DECISION = FACC.date_decision
   WHERE AA.CLASS IN ('22', '66', '202', '514', '566', '567')
     AND DATE_UPLOAD = TRUNC(SYSDATE)
     AND (AA.UNIT IS NULL OR AA.UNIT <> 'POS'); --25: REG, 22: SPECIAL, 99: REGULAR AD-HOC, 44:online 
COMMIT;
 --add POS unit 20201112
INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection
  SELECT 'POS' AS UNIT,
         facc.code_salesroom AS ID_ENTITY,
         TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
         TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
         AA.CLASS,
         TRIGGER_SOURCE --FRAUD_TYPE AS TRIGGER_SOURCE 改名字20200821
        ,
         TRIGGER_VALUE --FRAUD_DESCRIPTION AS TRIGGER_VALUE
        ,
         CASE
           WHEN AA.CLASS = '22' THEN
            'MEDIUM'
           ELSE
            PRIORITY
         END AS TRIGGER_TYPE,
         BB.SKP_CREDIT_CASE,
         AA.CONTRACT_NO
    FROM AP_ANTIFRAUD.TRIGGER_MANUAL_UPLOAD AA
  -- JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS IN ('22') AND AA.DATE_UPLOAD>EX.MAX_DETECT
    JOIN OWNER_DWH.DC_CREDIT_CASE BB
      ON AA.CONTRACT_NO = BB.text_contract_number
    JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC
      ON FACC.skp_credit_case = BB.SKP_CREDIT_CASE
     AND BB.DATE_DECISION = FACC.date_decision
   WHERE AA.CLASS IN
         ('22', '66', '202', '514', '566', '567')
     AND DATE_UPLOAD = TRUNC(SYSDATE)
     AND AA.UNIT = 'POS'; --25: REG, 22: SPECIAL, 99: REGULAR AD-HOC, 44:online 
COMMIT;
 
 
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '22 SIV& AD HOC TRIGGER',SYSDATE FROM DUAL;
COMMIT;

--DELETE FROM  AP_ANTIFRAUD.F_AF_FINAL_TRIGGERS WHERE CLASS IN('22','98','44','517','514','513') AND DATE_DETECT=TRUNC(SYSDATE);
INSERT INTO AP_ANTIFRAUD.F_AF_FINAL_TRIGGERS
SELECT  --DISTINCT
AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID
,UNIT
,CASE WHEN UNIT='SA' THEN 'SA'||'_'||AF_FINAL_TRIGGERS_SEQ.NEXTVAL WHEN UNIT='POS'THEN 'POS'||'_'||AF_FINAL_TRIGGERS_SEQ.NEXTVAL END AS ID_TRIGGER
,DATE_DETECT
,WEEK_DETECT
,ID_ENTITY
,NAME_ENTITY
,REGION
,CODE_SALES_AREA AS CITY
,CASE WHEN UNIT='SA' AND SUBSTR(ID_ENTITY,1,1) IN ('6','D') THEN 'RA' WHEN UNIT= 'SA' AND SUBSTR(ID_ENTITY,1,1) NOT IN ('6','D')THEN 'SA'
             WHEN UNIT='POS' AND SUBSTR(ID_ENTITY,1,1) IN ('6','D') THEN 'ALDI'  ELSE 'NON-ALDI' END AS TYPE
, ACTIVE_DAYS
,CLASS
,TRIGGER_SOURCE
,TRIGGER_TYPE
,TRIGGER_VALUE
,NULL CHECKED_BY
,NULL CASE_STATUS
,NULL CASE_DECISION
,NULL CASE_NO
,NULL INTO_SECURITY
,SYSDATE AS TIME_DETECT
,CASE_CATEGORY
,NULL AS NAME_DISTRICT   --20180319
,'是' AS FLAG_SEC_ALL_CONTRACT
FROM (SELECT DISTINCT UNIT,TO_DATE(DATE_DETECT,'YYYY-MM-DD')AS DATE_DETECT,CLASS--,PRE.SKP_CREDIT_CASE
,TO_DATE(WEEK_DETECT,'YYYY-MM-DD')AS WEEK_DETECT
,ID_ENTITY
,TRIGGER_SOURCE
,TRIGGER_TYPE
,TRIGGER_VALUE
,CASE WHEN UNIT='SA' AND PRE.ID_ENTITY='XNA' THEN NULL --销售为空的
            WHEN UNIT='SA' AND PRE.ID_ENTITY<>'XNA' THEN  name_last_sales
      WHEN UNIT='POS' AND PRE.CLASS=513 THEN DS.NAME_SALESROOM --20180710
      ELSE FACC.name_salesroom END AS NAME_ENTITY
--,CC.CODE_SALES_AREA
,CASE WHEN UNIT='SA' AND PRE.ID_ENTITY='XNA' THEN NULL ELSE SA.cnt_days_from_first_credit END as ACTIVE_DAYS
, CASE WHEN PRE.CLASS=513 THEN HCSAP.CODE_SALES_AREA--20180710
            WHEN ((FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR FACC.text_username_employee_sales IN ('homer_o2o','rpos') OR DCC.skp_product_channel=804 OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%' OR FACC.name_product LIKE '%MINI%') AND DSAC.CODE_SALES_AREA IS NOT NULL THEN DSAC.CODE_SALES_AREA ELSE  PRO.CODE_SALES_AREA END AS REGION
, CASE WHEN PRE.CLASS=513 THEN HCSA.CODE_SALES_AREA --20180710
            WHEN ((FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR FACC.text_username_employee_sales IN ('homer_o2o','rpos') OR DCC.skp_product_channel=804 OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%' OR FACC.name_product LIKE '%MINI%') AND DSA.CODE_SALES_AREA IS NOT NULL THEN DSA.CODE_SALES_AREA ELSE  CC.CODE_SALES_AREA END AS CODE_SALES_AREA
              
,MIN(CASE WHEN FACC.name_channel='商品贷' AND FACC.text_username_employee_sales!='extreme' THEN '1 POS LOAN'
                         WHEN FACC.name_channel LIKE '%无预约%' AND FACC.text_username_employee_sales!='extreme' THEN '2 WALK-IN'  
                           WHEN FACC.name_channel LIKE '消费贷%'  AND FACC.text_username_employee_sales!='extreme' THEN '3 XSELL' 
                             WHEN FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme' THEN '4 ELOAN' ELSE '5 MINI' END ) OVER
                               (PARTITION BY ID_ENTITY, DATE_DETECT,TRIGGER_SOURCE,TRIGGER_VALUE,
                               CASE WHEN ((FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR FACC.text_username_employee_sales IN ('homer_o2o','rpos'))AND DSA.CODE_SALES_AREA  IS NOT NULL THEN DSA.CODE_SALES_AREA ELSE  CC.CODE_SALES_AREA END)AS CASE_CATEGORY
 ,ROW_NUMBER()OVER (PARTITION BY PRE.DATE_DETECT
                                 ,CASE WHEN ((FACC.name_channel='商品贷' AND FACC.text_username_employee_sales='extreme') OR FACC.NAME_SALESROOM LIKE '%DEO%' OR FACC.text_username_employee_sales IN ('homer_o2o','rpos') OR DCC.skp_product_channel=804 OR FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%' OR FACC.name_product LIKE '%MINI%') AND DSA.CODE_SALES_AREA IS NOT NULL THEN DSA.CODE_SALES_AREA ELSE  CC.CODE_SALES_AREA END
                                 ,PRE.TRIGGER_SOURCE,PRE.TRIGGER_VALUE ORDER BY PRE.ID_ENTITY )AS SEQ --20200820 ADD TRIGGER_VALUE                       
                                                                                                                              
FROM AP_ANTIFRAUD.f_Trcontracts_Preselection PRE 
--JOIN owner_dwh.f_credit_case_ad dcc ON pre.skp_credit_case = dcc.skp_credit_case 
JOIN dm_antifraud.f_af_credit_case_ad facc ON pre.skp_credit_case = facc.skp_credit_case AND FACC.date_decision>=DATE'2015-01-01' 
                                                                                          AND pre.date_detect = to_char(SYSDATE, 'YYYY/MM/DD') AND PRE.CLASS  IN ('22','98','44','517','514','513','66','566') --,'99'
JOIN OWNER_DWH.Dc_Credit_Case dcc ON DCC.skp_credit_case=FACC.SKP_CREDIT_CASE AND DCC.date_decision=FACC.date_decision                                                                                          
LEFT JOIN OWNER_DWH.DC_SALES_AREA CC ON CC.NAME_SALES_AREA=FACC.name_region AND CC.code_sales_area_status='a' and  CC.skp_sales_area_type=1 
LEFT JOIN OWNER_DWH.DC_SALES_AREA PRO ON CC.SKP_SALES_AREA_SUPERIOR=PRO.SKP_SALES_AREA AND  PRO.CODE_SALES_AREA_STATUS='a' and PRO.SKP_SALES_AREA_TYPE=2 
---SA_ACTIVE_DAYS
LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON FACC.skp_employee_consultant=sa.skp_employee AND PRE.UNIT='SA'
---POS_ACTIVE_DAYS
--LEFT JOIN DM_ANTIFRAUD.F_SALESROOM_AD FS ON FACC.skp_salesroom=FS.skp_salesroom AND PRE.UNIT='POS'
JOIN OWNER_DWH.f_Application_Client_Tt ACT ON ACT.SKP_CREDIT_CASE=FACC.SKP_CREDIT_CASE AND ACT.date_decision=FACC.DATE_DECISION AND ACT.SKP_CREDIT_TYPE=FACC.SKP_CREDIT_TYPE AND ACT.SKP_CLIENT_ROLE=14
LEFT JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR ON ADDR.SKP_CREDIT_CASE= FACC.SKP_CREDIT_CASE AND ACT.SKP_APPLICATION_CLIENT=ADDR.SKP_APPLICATION_CLIENT AND ADDR.SKP_ADDRESS_TYPE=2--CURRENT
LEFT JOIN OWNER_DWH.DC_CITY DC ON DC.SKP_CITY=ADDR.SKP_CITY
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSA ON DSA.NAME_SALES_AREA=DC.NAME_CITY AND DSA.code_sales_area_status='a' and  DSA.skp_sales_area_type=1
LEFT JOIN OWNER_DWH.DC_SALES_AREA DSAC ON DSA.SKP_SALES_AREA_SUPERIOR=DSAC.SKP_SALES_AREA AND  DSAC.CODE_SALES_AREA_STATUS='a' and DSAC.SKP_SALES_AREA_TYPE=2 
--for HCP 20180710
LEFT JOIN OWNER_DWH.f_Hcp_Transaction_Tt TR ON SUBSTR(PRE.TRIGGER_VALUE,1,REGEXP_INSTR(PRE.TRIGGER_VALUE, '//', 1, 1)-1)=TR.SKF_HCP_TRANSACTION AND PRE.CLASS=513
LEFT JOIN OWNER_DWH.DC_SALESROOM DS ON TR.SKP_SALESROOM=DS.SKP_SALESROOM 
LEFT JOIN OWNER_DWH.DC_CITY DCC ON DCC.SKP_CITY=DS.SKP_CITY
LEFT JOIN OWNER_DWH.DC_SALES_AREA HCSA ON HCSA.NAME_SALES_AREA=DCC.NAME_CITY AND HCSA.code_sales_area_status='a' and  HCSA.skp_sales_area_type=1--CITY
LEFT JOIN OWNER_DWH.DC_SALES_AREA HCSAP ON HCSA.SKP_SALES_AREA_SUPERIOR=HCSAP.SKP_SALES_AREA AND  HCSAP.CODE_SALES_AREA_STATUS='a' and HCSAP.SKP_SALES_AREA_TYPE=2 --PROVINCE

)CC WHERE SEQ=1;
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
 COMMIT;

-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;
   



 PROCEDURE TRIGGER_15_WC_SIGNAL IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_15_WC_SIGNAL';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')--,'Running'
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  

--2018-02-23 anny start
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '15 NEW DAILY SEGMENT',SYSDATE FROM DUAL;
COMMIT;

--CHANGE 20190125--IT 优化 20191218
--============================================================================================================
--NEW DAILY SEGMENTS 1'
--============================================================================================================
EXECUTE IMMEDIATE 'truncate table AP_ANTIFRAUD.TRIGGER_15_ANNY_WC';
COMMIT;

---Replaced 20200425 by YAWEN --
INSERT /*+ append */ INTO TRIGGER_15_ANNY_WC
-------------------------------------
--BASE FOR ALMOST ALL--hp_wc optimized by ken.wang-20200327  Edit by Yawen 20200429
-------------------------------------
WITH hp_wc as (                
select WC.TEXT_CONTRACT_NUMBER  
      ,WC.DTIME_REVIEW          
      ,WC.SKP_CREDIT_CASE       
      ,WC.SKP_CLIENT            
      ,WC.NUM_DAYS_TILL_EVENT   
      ,WC.DTIME_ACTIVITY_START  
      ,WC.NAME_QUESTION         
      ,WC.NAME_ANSWER           
      ,WC.NAME_RESULT           
      ,WC.text_activity_info    
      ,WC.NAME_CAMPAIGN         
      ,WC.TEXT_BIRTH_NUMBER     
      ,WC.text_stage_result_note
  from DM_ANTIFRAUD.F_WC_CAMPAIGN_AD WC 
),
BASE0_1 AS 
(
    select /*+ FULL(WC) FULL(DC) FULL(EX) USE_HASH(WC DC EX) CARDINALITY(300000) NO_MERGE */
             WC.TEXT_CONTRACT_NUMBER
            ,WC.DTIME_REVIEW
            ,WC.SKP_CREDIT_CASE
            ,WC.SKP_CLIENT
            ,WC.NUM_DAYS_TILL_EVENT
            ,TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS DTIME_CALL-----change on 2018.04.23 Angela
            ,WC.NAME_QUESTION
            ,WC.NAME_ANSWER
            ,WC.NAME_RESULT 
            ,regexp_replace(WC.text_activity_info,'[^0-9]') AS text_activity_info---2019.06.24 angela
            ,LISTAGG(REGEXP_REPLACE(REPLACE(WC.text_activity_info,'XNA',''),'[[:punct:]]'),',') WITHIN GROUP (ORDER BY WC.text_activity_info)OVER (PARTITION BY WC.SKP_CREDIT_CASE) AS TEXT_RESULT--2019/11/28 nancy
            ,WC.NAME_CAMPAIGN
            ,WC.TEXT_BIRTH_NUMBER---05.04 ANGELA
            ,WC.text_stage_result_note--new added 18.05.10 Angela
            ,SUBSTR(WC.NAME_ANSWER, 3, LENGTH(WC.NAME_ANSWER) - 2) AS WC_ANSWER--new added 18.05.10 Angela
            ,dc.skp_credit_acquisition_chnl  -----20200428 Yawen 
            ,dc.code_rpos_type -----20200528 Yawen
      FROM hp_wc WC 
      JOIN OWNER_DWH.DC_CREDIT_CASE DC ON WC.SKP_CREDIT_CASE=DC.skp_credit_case
      JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
      WHERE  1=1
            AND DC.date_decision>=SYSDATE-30
            AND WC.DTIME_REVIEW>=SYSDATE-30
            AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC')>0 
            AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-Voice Bot问卷')=0 --anny 2018-06-14 --20180827
            AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-VoiceBot')=0      --jason 20210402
            AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-POS_VoiceBot')=0  --jason 20210402          
            AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-INTEGRATE问卷')=0 ---Yawen 20200113
            AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-CASH问卷')=0 ---Yawen 20200113
            AND TRUNC(WC.DTIME_ACTIVITY_START)-TRUNC(WC.DTIME_REVIEW)<=15--20190626
            AND TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
            AND DC.skp_credit_type=1
),
------------------------------------- 
--BASE FOR TIPPER & POS
-------------------------------------
TIP AS(
 SELECT AFC.SKP_CREDIT_CASE , AFC.CODE_SALESROOM,DDT.SKP_TIPPER ,DDT.NAME_TIPPER , DDT.TEXT_PHONE_NUMBER,PP.SKP_SALESROOM
  FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS AFC 
  JOIN OWNER_DWH.DC_CREDIT_CASE DCC
    ON AFC.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE 
   AND AFC.CLASS = 15
   AND AFC.DATE_DETECT >= TRUNC(SYSDATE)-90 
   AND (INSTR (AFC.TRIGGER_SOURCE,'PAY EXTRA FEE')>0 OR INSTR(AFC.TRIGGER_SOURCE,'extra_fee')>0)
  LEFT JOIN OWNER_DWH.F_TIPPER_COMMISSION_TT MT
    ON MT.SKP_CONTRACT = DCC.SKP_CONTRACT
  LEFT JOIN owner_dwh.dc_tipper DDT
    ON MT.SKP_TIPPER = DDT.SKP_TIPPER
   AND MT.SKP_TIPPER <>-1
   AND DDT.SKP_TIPPER <>-1
  LEFT JOIN OWNER_DWH.DC_SALESROOM PP
    ON AFC.CODE_SALESROOM = PP.CODE_SALESROOM
),   ----------------20200304 Yawen 
--------------------------------------------------------------------------
--BASE FOR NEW POS30 6.申请提前还款+合同已撤销 
--------------------------------------------------------------------------
BASE0_2 AS 
(
    SELECT /*+ FULL(WC) FULL(EX) NO_MERGE CARDINALITY(300000) */
             WC.TEXT_CONTRACT_NUMBER
            ,WC.DTIME_REVIEW
            ,WC.SKP_CREDIT_CASE
            ,WC.SKP_CLIENT
            ,WC.NUM_DAYS_TILL_EVENT
            ,TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS DTIME_CALL
            ,WC.NAME_QUESTION
            ,WC.NAME_ANSWER
            ,WC.NAME_RESULT 
            ,WC.text_activity_info
            ,WC.NAME_CAMPAIGN
      FROM hp_wc WC 
      JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX 
        ON EX.CLASS=15
     WHERE  1=1
       AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC')>0 
       AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-Voice Bot问卷')=0 --anny 2018-06-14 --20180827
       AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-VoiceBot')=0      --jason 20210402
       AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-POS_VoiceBot')=0  --jason 20210402          
       AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-INTEGRATE问卷')=0 ---Yawen 20200113
       AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-CASH问卷')=0 ---Yawen 20200113
       AND TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT)-14 AND TRUNC(SYSDATE)-15------trigger15天前 4.23 Angela
       AND WC.DTIME_REVIEW>=SYSDATE-30
),
--------------------------------------------------------------------
---- new subquery to join BASE0_1 and f_af_credit_case_ad for data reuse
---- Added 18.12.2019, YS
--------------------------------------------------------------------
TMP_AD30 AS 
(
    SELECT ACCA.*
    FROM (SELECT DISTINCT SKP_CREDIT_CASE FROM BASE0_1) B
    JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA  ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE ACCA.DATE_DECISION >= SYSDATE-30
),
---=============================
---NEW POS30 1.贷款类型异常  --38''  Angela 04.23 
--==============================
----符合deny delivery条件的合同所在 pos----
DE AS
(
SELECT /*+FULL(ACCA) FULL(DCC) USE_HASH(B ACCA DCC) NO_MERGE */ 
       B.NAME_QUESTION,  ------YAWEN 2020-02-17
       B.NAME_ANSWER,
       B.DTIME_CALL,
       ACCA.SKP_SALESROOM,
       ACCA.TEXT_CONTRACT_NUMBER,
       ACCA.SKP_CREDIT_CASE ,
       ACCA.TEXT_USERNAME_EMPLOYEE_SALES
  FROM BASE0_1 B
  ---JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA
  JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS 
    ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
  JOIN OWNER_DWH.DC_CREDIT_CASE DCC --20190529
    ON DCC.SKP_CREDIT_CASE =ACCA.SKP_CREDIT_CASE 
   AND DCC.DATE_DECISION =ACCA.DATE_DECISION 
 WHERE ACCA.DATE_DECISION >= SYSDATE-30
   AND DCC.DATE_DECISION >= SYSDATE-30
   AND
    (
    (INSTR(B.NAME_QUESTION,'还是')>0   AND INSTR(B.NAME_QUESTION,'钱')>0 AND 
      (INSTR(B.NAME_ANSWER,'贷款类型异常')>0    --anny 2019-01-22
      OR INSTR(B.NAME_ANSWER,'不清楚')>0 
      OR INSTR(B.NAME_ANSWER,'未来也不使用')>0  
      OR INSTR(B.NAME_ANSWER,'钱')>0 ----------20200428 Yawen 
      OR INSTR(B.NAME_ANSWER,'什么都没拿')>0 ------20200528 Yawen
      ))  
    OR (INSTR(B.NAME_QUESTION,'分期购买的是什么类型的商品')>0 AND INSTR(B.NAME_ANSWER,'没有购买')>0 )
    OR (INSTR(B.NAME_QUESTION,'分期购买的是哪方面的服务')>0 AND INSTR(B.NAME_ANSWER,'没有购买')>0 )
    OR (B.NAME_CAMPAIGN= 'CFC-WC-市场调研问卷' AND INSTR(B.NAME_RESULT,'贷款类型异常')>0)   ------YAWEN 2020-02-17
     )  
  AND ACCA.SKP_CREDIT_TYPE =1   ----only Pos 30
  AND DCC.SKP_CREDIT_TYPE =1
  AND DCC.skp_product_channel!=804---20190529排除rpos
),
----其他当天被class 15 trigger的合同所在pos----
OTH AS 
(
   SELECT  /*+NO_MERGE*/ 
        SEL.TEXT_CONTRACT_NUMBER,
        SEL.TRIGGER_SOURCE,
        ACCA.SKP_SALESROOM
   FROM AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION SEL
   JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA ON SEL.SKP_CREDIT_CASE = ACCA.SKP_CREDIT_CASE  
    AND ACCA.TEXT_USERNAME_EMPLOYEE_SALES= SEL.ID_ENTITY
    AND ACCA.TEXT_CONTRACT_NUMBER = SEL.TEXT_CONTRACT_NUMBER
  WHERE SEL.DATE_DETECT=TO_CHAR(TRUNC(SYSDATE), 'YYYY/MM/DD')
    AND SEL.CLASS = 15
    AND SEL.TRIGGER_SOURCE != '贷款类型异常'
    AND ACCA.SKP_CREDIT_TYPE =1   ----only Pos 30
    AND ACCA.DATE_DECISION >= SYSDATE-30
)
,COMB AS 
(
  SELECT /*+ USE_HASH(DE,OTH) */ 
       DISTINCT 'SA' AS UNIT
      ,DE.TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'贷款类型异常' AS TRIGGER_SOURCE 
      ,'客户声称现场取走了' ||
              CASE WHEN  INSTR(DE.NAME_ANSWER , '钱')>0 THEN '钱' 
                  WHEN  INSTR(DE.NAME_ANSWER , '什么都没拿')>0 THEN '什么都没取走' 
                  WHEN  INSTR(DE.NAME_ANSWER , '其它')>0 THEN '其它' 
                    WHEN INSTR(DE.NAME_ANSWER , '不清楚')>0 THEN '不清楚' ---0803改
                  ELSE NULL END  ||';skp_salesroom:'||DE.SKP_SALESROOM||',此POS hit合同: '||LISTAGG(OTH.TEXT_CONTRACT_NUMBER,',')WITHIN GROUP(ORDER BY OTH.TEXT_CONTRACT_NUMBER)||': '||LISTAGG (OTH.TRIGGER_SOURCE,',')WITHIN GROUP(ORDER BY OTH.TEXT_CONTRACT_NUMBER)
                  ||'; WC time: '|| DE.DTIME_CALL AS TRIGGER_VALUE-----add POS info+calling time 0423
      ,'SOFT' AS TRIGGER_TYPE
      ,DE.SKP_CREDIT_CASE
      ,DE.TEXT_CONTRACT_NUMBER
FROM DE
LEFT JOIN OTH---pos join pos
   ON DE.SKP_SALESROOM = OTH.SKP_SALESROOM
WHERE INSTR(DE.NAME_QUESTION,'还是')>0   -------20200426 Yawen
AND INSTR(DE.NAME_QUESTION,'钱')>0    -------20200426 Yawen
AND (INSTR(DE.NAME_ANSWER,'钱')>0 OR INSTR(DE.NAME_ANSWER,'什么都没拿')>0
OR INSTR(DE.NAME_ANSWER,'其它')>0 OR INSTR(DE.NAME_ANSWER,'不清楚')>0)
GROUP BY DE.TEXT_USERNAME_EMPLOYEE_SALES,
                     DE.NAME_ANSWER,
                     DE.SKP_SALESROOM,
                     DE.DTIME_CALL,
                     DE.SKP_CREDIT_CASE,
                     DE.TEXT_CONTRACT_NUMBER 
---=====================================
---POSL&SERVICE 贷款类型异常 “没有购买” 
--======================================      
------YAWEN 2020-02-17               
UNION          
SELECT  DISTINCT 'SA' AS UNIT
      ,DE.TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'贷款类型异常' AS TRIGGER_SOURCE 
      ,'客户声称现场没有购买任何'||
      CASE WHEN INSTR(DE.NAME_QUESTION ,'商品') >0 THEN '商品'
        WHEN INSTR(DE.NAME_QUESTION ,'服务') >0 THEN '服务' END ||';skp_salesroom:'||DE.SKP_SALESROOM
          ||',此POS hit合同: '||LISTAGG(OTH.TEXT_CONTRACT_NUMBER,',')WITHIN GROUP(ORDER BY OTH.TEXT_CONTRACT_NUMBER)||': '||
          LISTAGG (OTH.TRIGGER_SOURCE,',')WITHIN GROUP(ORDER BY OTH.TEXT_CONTRACT_NUMBER)
                  ||'; WC time: '|| DE.DTIME_CALL AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,DE.SKP_CREDIT_CASE
      ,DE.TEXT_CONTRACT_NUMBER
FROM DE 
LEFT JOIN OTH---pos join pos
   ON DE.SKP_SALESROOM = OTH.SKP_SALESROOM
WHERE (INSTR(DE.NAME_QUESTION,'分期购买的是什么类型的商品')>0  
 OR INSTR(DE.NAME_QUESTION,'分期购买的是哪方面的服务')>0 )
AND INSTR(DE.NAME_ANSWER,'没有购买')>0
GROUP BY DE.TEXT_USERNAME_EMPLOYEE_SALES,
                     DE.NAME_QUESTION,
                     DE.NAME_ANSWER,
                     DE.SKP_SALESROOM,
                     DE.DTIME_CALL,
                     DE.SKP_CREDIT_CASE,
                     DE.TEXT_CONTRACT_NUMBER
---==========================================================
---POSL& SERVICE 贷款类型异常：未取走商品/未使用服务
--=========================================================     
------YAWEN 2020-02-17                           
UNION 
SELECT /*+ FULL(ACCA) USE_HASH(B ACCA) */
       DISTINCT 'SA' AS UNIT
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'贷款类型异常' AS TRIGGER_SOURCE 
      ,'客户称'||B.NAME_ANSWER||';WC time: '|| B.DTIME_CALL AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
     ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
---JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA
JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
   ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE 1=1
  AND ((INSTR (B.NAME_QUESTION,'取走的是这个商品还是钱')>0 AND INSTR(B.NAME_ANSWER, '未取走商品，也没有取货计划')>0 )
      OR (INSTR (B.NAME_QUESTION,'使用了这项服务还是取走了钱')>0 AND INSTR(B.NAME_ANSWER, '未来也不使用')>0 ))
  AND ACCA.SKP_CREDIT_TYPE =1    --only Pos 30
  AND ACCA.DATE_DECISION >= SYSDATE-30
UNION
---=============================
---NEW POS30 2.他人承诺还款
--==============================
SELECT /*+ FULL(ACCA) USE_HASH(B,ACCA, B1, B2)*/
       DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'非本人还款' AS TRIGGER_SOURCE 
      ,'客户声称由' || 
      CASE WHEN (INSTR(B1.NAME_ANSWER, '其他')>0 OR  INSTR(B1.NAME_ANSWER, '其它')>0)AND  B2.text_activity_info IS NOT NULL THEN B2.text_activity_info
                WHEN B1.NAME_ANSWER  IS NOT NULL AND INSTR(B1.NAME_ANSWER, '其它')=0 THEN B1.NAME_ANSWER ELSE  'XNA'  END || '承诺还款; WC time: ' || B.DTIME_CALL  AS TRIGGER_VALUE--add calling time 0423
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
---JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA
JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS 
   ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
JOIN BASE0_1 B1 ON B.SKP_CREDIT_CASE =B1.SKP_CREDIT_CASE 
  AND B.DTIME_REVIEW=B1.DTIME_REVIEW 
  AND( INSTR(B1.NAME_QUESTION,'请问是谁承诺帮您还款呢')>0 OR INSTR(B1.NAME_QUESTION,'请问是谁将代替您还款')>0)----4.18改+市场调研问卷问题
LEFT JOIN BASE0_1 B2 ON B.SKP_CREDIT_CASE =B2.SKP_CREDIT_CASE 
  AND B.DTIME_REVIEW=B2.DTIME_REVIEW 
  AND INSTR(B2.NAME_QUESTION,'WC-Qs7.1.1 其他-详情')>0--------4.18改问题序号
WHERE 1=1
AND INSTR(B.NAME_QUESTION,'自己还款还是' )>0
AND INSTR(B.NAME_ANSWER,'他人')>0
AND INSTR(B1.NAME_ANSWER,'配偶/父母')=0----4.23改不trigger父母/配偶
AND ACCA.SKP_CREDIT_TYPE =1    --only Pos 30
AND ACCA.DATE_DECISION >= SYSDATE-30
UNION 
-----**除SA以外他人代替还款 +没有后续问题**----
SELECT /*+FULL(ACCA) USE_HASH(B,ACCA, B1)*/
        DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'非本人还款' AS TRIGGER_SOURCE 
      ,'客户声称由' || '-没有后续问题-承诺还款; WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE------中途挂断 add calling time 0423
     ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
--JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
 JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
  ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
LEFT JOIN BASE0_1 B1 ON B.SKP_CREDIT_CASE =B1.SKP_CREDIT_CASE 
  AND B.DTIME_REVIEW=B1.DTIME_REVIEW 
  AND( INSTR(B1.NAME_QUESTION,'请问是谁承诺帮您还款呢')>0 OR INSTR(B1.NAME_QUESTION,'请问是谁将代替您还款')>0)----4.18改+市场调研问卷问题
WHERE 1=1
AND INSTR(B.NAME_QUESTION,'自己还款还是' )>0
AND INSTR(B.NAME_ANSWER,'他人')>0
AND B1.NAME_QUESTION IS NULL
AND ACCA.SKP_CREDIT_TYPE =1    --only Pos 30
AND ACCA.DATE_DECISION >= SYSDATE-30
UNION
--==============================================================
-------TAEK-OUT FRAUD SUSPICIOUS 20210415
--===============================================================
SELECT /*+FULL(ACCA) USE_HASH(B,ACCA)*/
       DISTINCT  'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'外卖欺诈嫌疑' AS TRIGGER_SOURCE ------20201029 YW
      ,'客户称是为了入职'||ACCA.NAME_EMPLOYER||'公司才购买了商品; WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE --20181026
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
--JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
 JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
  ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE 1=1
AND INSTR(NAME_QUESTION,'是否为了入职')>0 AND NAME_ANSWER='是' --20181026
AND ACCA.SKP_CREDIT_TYPE =1    --only Pos 30
AND ACCA.DATE_DECISION >= SYSDATE-30
UNION
--==============================================================
-------EMPLOYER FRAUD SUSPICIOUS 20210415
--===============================================================
SELECT /*+FULL(ACCA) USE_HASH(B,ACCA)*/
       DISTINCT  'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'雇主欺诈嫌疑' AS TRIGGER_SOURCE ------20201029 YW
      ,'客户称是'||ACCA.NAME_EMPLOYER||'介绍其办理的捷信贷款; WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE --20181026
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
--JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
 JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
  ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE 1=1
AND INSTR(NAME_QUESTION,'是否为了入职')>0 AND NAME_ANSWER='是' --20181026
AND ACCA.SKP_CREDIT_TYPE =1    --only Pos 30
AND ACCA.DATE_DECISION >= SYSDATE-30
UNION
--==============================================================
-------HIDDEN POS SUSPICIOUS 20210415
--===============================================================
SELECT /*+FULL(ACCA) USE_HASH(B,ACCA)*/
       DISTINCT  'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'暗点嫌疑' AS TRIGGER_SOURCE ------20201029 YW
      ,'客户称不是在'||TT.NAME_GOODS_CATEGORY||'门店办理的捷信贷款; WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE --20181026
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
--JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
 JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
  ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
 JOIN (
SELECT PGT.SKP_CREDIT_CASE,DGT.SKP_GOODS_CATEGORY,PGT.SKP_GOODS_TYPE,DGT.NAME_GOODS_TYPE,DGT.NAME_GOODS_CATEGORY, DGT.NAME_GOODS_CATEGORY_ENG ,
ROW_NUMBER()OVER(PARTITION BY PGT.SKP_CREDIT_CASE ORDER BY PGT.AMT_GOODS_PRICE DESC ) AS RNK_GOODS
FROM OWNER_DWH.F_PURCHASED_GOODS_TT PGT
JOIN OWNER_DWH.DC_GOODS_TYPE DGT
on PGT.SKP_GOODS_TYPE = DGT.SKP_GOODS_TYPE
WHERE PGT.DATE_DECISION >= TRUNC(SYSDATE) - 30
AND PGT.SKP_CREDIT_TYPE = 1 
)  TT
ON TT.skp_Credit_case = ACCA.skp_credit_case
WHERE 1=1
AND INSTR(NAME_QUESTION,'的店里办理的分期吗')>0 AND NAME_ANSWER='否' --20181026
AND ACCA.SKP_CREDIT_TYPE =1    --only Pos 30
AND ACCA.DATE_DECISION >= SYSDATE-30
UNION
--==============================================================
-------AGENT ALDI2.0&RPO EXTRA FEE YAWEN 20191203 EDIT 20200304
--===============================================================
SELECT /*+ FULL(ACCA) FULL(CC) USE_HASH(B,ACCA CC)*/
       DISTINCT 'SA' AS UNIT
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,case when B.skp_credit_acquisition_chnl = 8 and B.code_rpos_type = '1' then 'rpos_online:' 
            when B.skp_credit_acquisition_chnl = 8 and B.code_rpos_type = '2' then 'rpos_offline:'  
            when B.skp_credit_acquisition_chnl = 21 then 'ALDI2.0:' else null end ||'extra_fee' AS TRIGGER_SOURCE ------20201029 YW
      ,'客户称办单时被收取手续费; WC time: '|| B.DTIME_CALL ||
    CASE WHEN CC.skp_credit_acquisition_chnl = 21 AND T1.CNT IS NOT NULL THEN ',除本单合同外,该合同的办单门店'||T1.CODE_SALESROOM||'在三个月内有'||T1.CNT||'个合同声称支付了额外费用' 
      ELSE NULL END ||
        CASE WHEN CC.skp_credit_acquisition_chnl = 21 AND T2.CNT IS NOT NULL AND T2.SKP_TIPPER IS NOT NULL THEN ',除本单合同外,推荐该合同的tipper'||T2.NAME_TIPPER||'在三个月内有'
          ||T2.CNT||'个合同声称支付了额外费用,SKP_TIPPER:'||T2.SKP_TIPPER||',TIPPER手机号为'||T2.TEXT_PHONE_NUMBER ELSE NULL END
AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
--JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA
JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
  ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
JOIN OWNER_DWH.DC_CREDIT_CASE CC ON ACCA.skp_credit_case = CC.skp_credit_case
------------20200304 Yawen ---------------------------------------------------
    LEFT JOIN OWNER_DWH.F_TIPPER_COMMISSION_TT MT
    ON CC.SKP_CONTRACT= MT.SKP_CONTRACT
    LEFT JOIN (SELECT SKP_SALESROOM,CODE_SALESROOM,COUNT(DISTINCT SKP_CREDIT_CASE ) AS CNT 
    FROM TIP
    GROUP BY SKP_SALESROOM,CODE_SALESROOM ) T1
    ON ACCA.SKP_SALESROOM = T1.SKP_SALESROOM
    LEFT JOIN (SELECT SKP_TIPPER,NAME_TIPPER,TEXT_PHONE_NUMBER,COUNT(DISTINCT SKP_CREDIT_CASE ) AS CNT 
    FROM TIP
    GROUP BY SKP_TIPPER,NAME_TIPPER,TEXT_PHONE_NUMBER ) T2
    ON MT.SKP_TIPPER = T2.SKP_TIPPER

WHERE 1=1
AND INSTR (B.NAME_QUESTION,'手续费')>0 
AND (B.NAME_ANSWER LIKE ('是%') OR B.NAME_ANSWER LIKE ('有%'))
AND ACCA.SKP_CREDIT_TYPE =1    --POSL
AND CC.skp_credit_type = 1 --POSL
AND ACCA.DATE_DECISION >= SYSDATE-30
AND CC.DATE_DECISION >= SYSDATE-30
UNION
--==============================
-------NEW POS30 4.工作类型异常
--=============================
----**学生且<30岁**---
SELECT /*+FULL(ACCA) USE_HASH(B,ACCA)*/
       DISTINCT  'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,case when skp_credit_acquisition_chnl = 8 and code_rpos_type = '1' then 'rpos_online:' 
            when skp_credit_acquisition_chnl = 8 and code_rpos_type = '2' then 'rpos_offline:'  
            when skp_credit_acquisition_chnl = 21 then 'ALDI2.0:' else null end ||'工作类型异常' AS TRIGGER_SOURCE ------20201029 YW
   --   ,'工作类型为: ' || NAME_ANSWER ||' WC time: ' || B.DTIME_CALL  --anny 2018-02-23
      , '疑似学生办单; WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE --20181026
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
--JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
 JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
  ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE 1=1
--AND INSTR(NAME_QUESTION,'请问您是做什么工作的')>0  AND NAME_ANSWER ='学生' 
AND INSTR(NAME_QUESTION,'学生')>0 AND NAME_ANSWER='学生' --20181026
AND ACCA.SKP_CREDIT_TYPE =1    --only Pos 30
AND ACCA.DATE_DECISION >= SYSDATE-30
AND acca.num_age<=23 --20191107 
UNION
---=====================================================
---NEW POS30 6.申请提前还款+合同已撤销  trigger 15天前合同 
--======================================================
----4.23 Angela
SELECT /*+FULL(ACCA) USE_HASH(BB,ACCA) NO_MERGE*/ 
        DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'可疑合同状态' AS TRIGGER_SOURCE 
      ,CASE WHEN INSTR(BB.NAME_RESULT,'提前还款')>0 THEN '客户声称已申请提前还款'
            WHEN INSTR(BB.NAME_RESULT,'撤销或完结或签署')>0  THEN '客户声称合同已经撤销或完结, 但接听欢迎电话时合同状态为现行' ELSE NULL END|| ' WC time: ' ||BB.DTIME_CALL
      AS TRIGGER_VALUE  -------20201104 YW
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_2 BB
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA  ON ACCA.SKP_CREDIT_CASE=BB.SKP_CREDIT_CASE
WHERE 1=1
AND( INSTR(BB.NAME_RESULT,'提前还款')>0 OR INSTR(BB.NAME_RESULT,'撤销或完结或签署')>0 )
AND ACCA.code_credit_status IN ('a') -----合同状态为a  20201104 YW
AND ACCA.DATE_DECISION >=SYSDATE-30
UNION
--20200708 COMMENT BY YW --20201020 OPEN BY YW
--=====================================================================
----AGENT CAMPAIGN Q+A 8. 客户商品类型回答错误--anny 2019-01-22 
--======================================================================
SELECT /*+ FULL(ACCA) USE_HASH(B,ACCA)*/ 
       DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'商品种类回答错误' AS TRIGGER_SOURCE 
      ,'外卖欺诈嫌疑：客户称购买的商品为其他商品'|| '; WC time: '|| B.DTIME_CALL AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
--JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE 1=1
AND INSTR(B.NAME_QUESTION,'还是钱')>0 
AND INSTR(B.NAME_ANSWER,'其他商品')>0
AND INSTR(B.NAME_CAMPAIGN,'外卖')>0
AND ACCA.DATE_DECISION >=SYSDATE-30
--=================================================================================================
------AGENT CAMPAIGN  DP INCONSISTENT YAWEN 20191219---------------------------------------------
--=================================================================================================
UNION
SELECT /*+ FULL(ACCA) USE_HASH(B,ACCA)*/
       DISTINCT 'SA' AS UNIT
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'首付不一致' AS TRIGGER_SOURCE
      ,'客户称首付与合同上不一致; WC time: '|| B.DTIME_CALL AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
JOIN TMP_AD30 ACCA ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
JOIN OWNER_DWH.DC_CREDIT_CASE CC ON ACCA.skp_credit_case = CC.skp_credit_case
WHERE 1=1
AND INSTR (B.NAME_QUESTION,'手续费')>0 
AND INSTR(B.NAME_ANSWER, '首付')>0
AND ACCA.SKP_CREDIT_TYPE =1    --POSL
AND CC.skp_credit_type = 1 --POSL
AND CC.skp_credit_acquisition_chnl <> 21  
AND ACCA.DATE_DECISION >= SYSDATE-30
AND CC.DATE_DECISION >= SYSDATE-30
--=================================================
--ALL CAMPAIGN : 2. 客户声称合同已被拒绝 
--=================================================
--change on 2018-04-23 Angela
UNION
SELECT /*+FULL(ACCA) USE_HASH(B,ACCA)*/ 
      DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'可疑合同状态' AS TRIGGER_SOURCE 
      , '客户声称申请已被拒绝; WC time: ' ||B.DTIME_CALL ----add calling time
      AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
     ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
---JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE 1=1
AND INSTR(B.NAME_RESULT,'客户声称申请已被拒绝')>0 
AND ACCA.DATE_DECISION >=SYSDATE-30

UNION
------20210324 YW COMMENTED
--====================================
--ALL CAMPAIGN : 3. 客户否认申请贷款 
--====================================
SELECT /*+FULL(ACCA) USE_HASH(B,ACCA)*/
       DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'客户否认申请贷款' AS TRIGGER_SOURCE 
      ,'客户否认申请贷款' || '; WC time: ' ||B.DTIME_CALL AS TRIGGER_VALUE ----add calling time
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
--JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE INSTR(B.NAME_RESULT,'客户否认申请贷款')>0
AND ACCA.DATE_DECISION >= sysdate-30-----------------上trigger时改

UNION
---====================================
--ALL CAMPAIGN : 4. 错误方接听
--====================================
SELECT /*+FULL(ACCA) USE_HASH(B,ACCA)*/
       DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'错误方接听' AS TRIGGER_SOURCE 
      ,'错误方接听: '|| 
      CASE WHEN INSTR(B.NAME_RESULT,'不认识客户')>0 THEN '不认识客户' 
        WHEN  INSTR(B.NAME_RESULT, '拒绝提供客户电话')>0 THEN '拒绝提供客户电话' 
          WHEN  INSTR(B.NAME_RESULT, '错误方接听')>0 THEN '错误方接听' 
        ELSE NULL END || ' WC time: ' ||B.DTIME_CALL AS TRIGGER_VALUE ----add calling time
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
---JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE ( INSTR(B.NAME_RESULT,'不认识客户')>0 OR INSTR(B.NAME_RESULT, '拒绝提供客户电话')>0 OR INSTR(B.NAME_RESULT, '错误方接听')>0)
AND ACCA.DATE_DECISION >= SYSDATE-30
-------20210324 YW
UNION 
--==============================================
--OLD SETTINGS: 2. Suspicious Homer comments 201700915
--==============================================
SELECT DISTINCT *
FROM
(
    SELECT UNIT,
    TEXT_USERNAME_EMPLOYEE,
    DATE_DETECT,
    WEEK_DETECT,
    CLASS,
    TRIGGER_SOURCE,
    TRIGGER_VALUE,
    TRIGGER_TYPE,
    SKP_CREDIT_CASE,
    TEXT_CONTRACT_NUMBER
    FROM 
    (
       SELECT /*+ FULL(A) FULL(DCC) USE_HASH(B A DCC) */ 'SA' AS UNIT,
        A.TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE,
        TO_CHAR(TRUNC(SYSDATE), 'YYYY/MM/DD') AS DATE_DETECT,
        TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
        '15' AS CLASS,
        '可疑Homer评论结果' AS TRIGGER_SOURCE,
        '可疑Homer评论结果为：' || B.WC_ANSWER || ' WC time: ' ||B.DTIME_CALL AS TRIGGER_VALUE,
        'SOFT' AS TRIGGER_TYPE,
        A.SKP_CREDIT_CASE,
        A.TEXT_CONTRACT_NUMBER,
        B.NAME_ANSWER,
        CASE WHEN S.NAME_PRODUCT LIKE '%OPR%' AND S.NAME_PRODUCT NOT LIKE '%DXT%' THEN 'OPR'
        ELSE 'OTHERS' END AS TP
        FROM BASE0_1  B
        ---JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD A
        JOIN TMP_AD30 A    ---- Added 18.12.2019, YS 
          ON B.SKP_CREDIT_CASE = A.SKP_CREDIT_CASE
        JOIN OWNER_DWH.DC_CREDIT_CASE DCC  
          ON B.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE
         AND B.SKP_CLIENT = DCC.SKP_CLIENT
        JOIN OWNER_DWH.DC_PRODUCT S 
          ON DCC.SKP_PRODUCT = S.SKP_PRODUCT
         AND DCC.SKP_CREDIT_TYPE=S.SKP_CREDIT_TYPE 
         and S.SKP_PRODUCT > 0 --NEW
       WHERE B.DTIME_REVIEW > date'2018-01-01'  --SYSDATE - 12
         AND INSTR(B.NAME_QUESTION ,'Homer评论结果是')>0  --anny 2018-02-23 start
         AND B.NAME_ANSWER IS NOT NULL
         AND INSTR(B.NAME_ANSWER,'拒绝回访')=0
         AND INSTR(B.NAME_ANSWER,'WC-C1-1')=0  ------20201106 YW
         AND A.DATE_DECISION >=SYSDATE-30   ---- NEW ADDED, 18.12.2019, YS
         AND DCC.DATE_DECISION >=SYSDATE-30 ---- NEW ADDED, 18.12.2019, YS
    )
    WHERE (TP = 'OTHERS' AND INSTR(NAME_ANSWER,'销售/门店/其他第三方平台欺诈嫌疑')>0) --THIRD PARTY EXCLUDE OPR
    OR INSTR(NAME_ANSWER,'销售/门店/其他第三方平台欺诈嫌疑')=0
) 
WHERE SKP_CREDIT_CASE NOT IN  --2017-09-21 SALLY
(
   SELECT SKP_CREDIT_CASE
     FROM AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
    WHERE DATE_DETECT = TO_CHAR(TRUNC(SYSDATE), 'YYYY/MM/DD')
      AND CLASS = 15
      AND TRIGGER_SOURCE != '可疑Homer评论结果'
)
UNION
--==============================================
--OLD SETTINGS: --3. NOTE FOR NOTICE
--==============================================
SELECT /*+ FULL(EX) FULL(WC) FULL(A) USE_HASH(EX WC A)*/ 
       DISTINCT 'SA' AS UNIT 
      ,A.text_username_employee_sales AS TEXT_USERNAME_EMPLOYEE
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'NOTE FOR NOTICE' AS TRIGGER_SOURCE 
      ,'NOTE FOR NOTICE: '||WC.TEXT_STAGE_RESULT_NOTE||'@'||A.TEXT_CONTRACT_NUMBER || ' WC time: ' ||TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS TRIGGER_VALUE   
      ,'SOFT' AS TRIGGER_TYPE
      ,A.SKP_CREDIT_CASE
      ,A.TEXT_CONTRACT_NUMBER 
  FROM AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX 
  JOIN hp_wc WC 
    ON EX.CLASS='15'
  JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD A  
    ON A.SKP_CREDIT_CASE=WC.SKP_CREDIT_CASE
   AND A.date_decision>=TRUNC(SYSDATE)-30
   AND TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
--AND WC.NUM_DAYS_TILL_EVENT<=9 -----delete 20200114 angela
   AND  INSTR(WC.NAME_CAMPAIGN,'CFC-WC-INTEGRATE问卷')=0  -----20200113Yawen
   AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-CASH问卷')=0 -----20200113Yawen
   AND A.SKP_CREDIT_TYPE = 1-----20200113Yawen
   AND (INSTR(WC.TEXT_STAGE_RESULT_NOTE,'套现',1,1)>0
        OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'借用客户身份证',1,1)>0
        OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'不认识客户',1,1)>0
        OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'拒绝回访',1,1)>0
        OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'帮他人贷款',1,1)>0
        OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'还款金额不一致',1,1)>0
        OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'商品类型不一致',1,1)>0
        OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'前几期和后几期还款金额不一样',1,1)>0
        OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'前三个月',1,1)>0  --2018-02-23 anny
       )
   AND A.skp_employee_consultant<>5036527--'EXTREME'
UNION
--===========================================================
--NEW SETTINGS:  NOTE FOR NOTICE ----GUS SYSTEM---20201104 YW
--===========================================================
SELECT /*+ FULL(EX) FULL(WC) FULL(A) USE_HASH(EX WC A)*/ 
       DISTINCT 'SA' AS UNIT 
      ,A.text_username_employee_sales AS TEXT_USERNAME_EMPLOYEE
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'NOTE FOR NOTICE' AS TRIGGER_SOURCE 
      ,'NOTE FOR NOTICE: '||WC.text_activity_info ||'@'||A.TEXT_CONTRACT_NUMBER || ' WC time: ' ||TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS TRIGGER_VALUE   
      ,'SOFT' AS TRIGGER_TYPE
      ,A.SKP_CREDIT_CASE
      ,A.TEXT_CONTRACT_NUMBER 
  FROM AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX 
  JOIN hp_wc WC 
    ON EX.CLASS='15'
  JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD A  
    ON A.SKP_CREDIT_CASE=WC.SKP_CREDIT_CASE
   AND A.date_decision>=TRUNC(SYSDATE)-30
   AND TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
--AND WC.NUM_DAYS_TILL_EVENT<=9 -----delete 20200114 angela
   AND  INSTR(WC.NAME_CAMPAIGN,'CFC-WC-INTEGRATE问卷')=0  -----20200113Yawen
   AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-CASH问卷')=0 -----20200113Yawen
   AND A.SKP_CREDIT_TYPE = 1-----20200113Yawen
   AND INSTR(WC.NAME_QUESTION,'WC-C1-1')>0
   AND (INSTR(WC.text_activity_info,'套现',1,1)>0
        OR INSTR(WC.text_activity_info,'借用客户身份证',1,1)>0
        OR INSTR(WC.text_activity_info,'不认识客户',1,1)>0
        OR INSTR(WC.text_activity_info,'拒绝回访',1,1)>0
        OR INSTR(WC.text_activity_info,'帮他人贷款',1,1)>0
        OR INSTR(WC.text_activity_info,'还款金额不一致',1,1)>0
        OR INSTR(WC.text_activity_info,'商品类型不一致',1,1)>0
        OR INSTR(WC.text_activity_info,'前几期和后几期还款金额不一样',1,1)>0
        OR INSTR(WC.text_activity_info,'前三个月',1,1)>0  --2018-02-23 anny
       )
   AND A.skp_employee_consultant<>5036527--'EXTREME'
)
SELECT /*+ dynamic_sampling(8) opt_param('optimizer_index_cost_adj',500) parallel(2)*/
        UNIT
       ,TEXT_USERNAME_EMPLOYEE
       ,DATE_DETECT
       ,WEEK_DETECT
       ,CLASS
       ,TRIGGER_SOURCE
       ,LISTAGG(TRIGGER_VALUE, '| ') WITHIN GROUP (ORDER BY TRIGGER_VALUE DESC) "TRIGGER_VALUE"
       ,TRIGGER_TYPE
       ,SKP_CREDIT_CASE
       ,TEXT_CONTRACT_NUMBER
  FROM COMB
 GROUP BY UNIT
         ,TEXT_USERNAME_EMPLOYEE
         ,DATE_DETECT
         ,WEEK_DETECT
         ,CLASS
         ,TRIGGER_SOURCE
         ,TRIGGER_TYPE
         ,SKP_CREDIT_CASE
         ,TEXT_CONTRACT_NUMBER
;
COMMIT;



--temp stop 20191008--start 20191009
--temp stop 20200210--start 20200213

/******************************************************/
----------------------WC-Voice Bot问卷--20180817 
/******************************************************/
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'WC-Voice Bot begin',SYSDATE FROM DUAL;
COMMIT;
----replaced by yawen 20210425--------------------------
INSERT INTO AP_ANTIFRAUD.TRIGGER_15_ANNY_WC
WITH BASE0_1 AS 
(
    SELECT /*+ materialize */
    WC.TEXT_CONTRACT_NUMBER
    ,WC.DTIME_REVIEW
    ,WC.SKP_CREDIT_CASE
    ,WC.SKP_CLIENT
    ,WC.DTIME_ACTIVITY_START  ------20200312 Yawen
    ,TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS DTIME_CALL
    ,WC.NAME_QUESTION
    ,WC.NAME_ANSWER
    ,WC.NAME_RESULT 
    ,WC.text_activity_info
    ,WC.NAME_CAMPAIGN
    ,WC.TEXT_BIRTH_NUMBER
    ,WC.text_stage_result_note
    ,DCC.SKP_CREDIT_ACQUISITION_CHNL  ------20200528 Yawen
    ,DCC.CODE_RPOS_TYPE    ------20200528 Yawen
    FROM DM_ANTIFRAUD.F_WC_CAMPAIGN_AD WC 
    JOIN OWNER_DWH.DC_CREDIT_CASE DCC
    ON WC.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE
    JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15 
    WHERE  1=1
    AND(INSTR(WC.NAME_CAMPAIGN,'CFC-WC-Voice Bot问卷' )>0 
    OR INSTR(WC.NAME_CAMPAIGN,'CFC-WC-Voice Bot转人工' )>0
    OR INSTR(WC.NAME_CAMPAIGN,'CFC-WC-VoiceBot' )>0           --JASON 20210402
    OR INSTR(WC.NAME_CAMPAIGN,'CFC-WC-POS_VoiceBot' )>0       --JASON 20210402
     ) ------------------20201210 YW ADD NEW CAMPAIGN
    AND TRUNC(WC.DTIME_ACTIVITY_START)-TRUNC(WC.DTIME_REVIEW)<=15--20190626
    AND TRUNC (wc.dtime_activity_start) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
    AND WC.DTIME_REVIEW>=SYSDATE-30
)
,
TIP AS(
SELECT AFC.SKP_CREDIT_CASE , AFC.CODE_SALESROOM,DDT.SKP_TIPPER ,DDT.NAME_TIPPER , DDT.TEXT_PHONE_NUMBER,PP.SKP_SALESROOM
    FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS AFC 
    JOIN OWNER_DWH.DC_CREDIT_CASE DCC
    ON AFC.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE 
    AND AFC.CLASS = 15
    AND AFC.DATE_DETECT >= TRUNC(SYSDATE)-90
    AND (INSTR (AFC.TRIGGER_SOURCE,'PAY EXTRA FEE')>0
        OR INSTR(AFC.TRIGGER_SOURCE,'extra_fee')>0)
    LEFT JOIN OWNER_DWH.F_TIPPER_COMMISSION_TT MT
    ON MT.SKP_CONTRACT = DCC.SKP_CONTRACT
    LEFT JOIN owner_dwh.dc_tipper DDT
    ON MT.SKP_TIPPER = DDT.SKP_TIPPER
    AND MT.SKP_TIPPER <>-1
    AND DDT.SKP_TIPPER <>-1
    LEFT JOIN OWNER_DWH.DC_SALESROOM PP
    ON AFC.CODE_SALESROOM = PP.CODE_SALESROOM
),   ----------------20200304 Yawen
DM_TABLE AS
(
    SELECT AD.skp_credit_case,AD.date_decision,AD.skp_salesroom,AD.text_contract_number,AD.code_credit_status
    ,AD.TEXT_USERNAME_EMPLOYEE_SALES,AD.skp_credit_type,AD.NAME_PRODUCT,AD.num_age --20191107
    ,AD.amt_credit,AD.name_employer--20210506
    ,skp_employee_consultant--20210625
    FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD  AD
    WHERE AD.date_decision>=SYSDATE-30
    AND AD.SKP_CREDIT_TYPE=1 --20191014
),
----REDO
B2_REDO AS 
(
    SELECT B1.SKP_CREDIT_CASE,
    B1.SKP_CLIENT,
    B1.DTIME_REVIEW,
    B1.DTIME_ACTIVITY_START  --------20200312 Yawen
    FROM BASE0_1 B1
    WHERE INSTR(B1.NAME_ANSWER,'VB复听')>0 -------20191230 Yawen
),---选出复听case
-------BASE FOR WC TIME  20200312 Yawen
DTIME_WC AS (
SELECT SKP_CREDIT_CASE ,DTIME_ACTIVITY_START ,ROW_NUMBER()OVER(PARTITION BY SKP_CREDIT_CASE ORDER BY DTIME_ACTIVITY_START DESC) AS RNK
FROM (SELECT DISTINCT WCC.SKP_CREDIT_CASE , WCC.DTIME_ACTIVITY_START
FROM DM_ANTIFRAUD.F_WC_CAMPAIGN_AD WCC
JOIN B2_REDO B2
ON B2.SKP_CREDIT_CASE =WCC.SKP_CREDIT_CASE 
    AND B2.SKP_CLIENT=WCC.SKP_CLIENT
    AND B2.DTIME_ACTIVITY_START > WCC.DTIME_ACTIVITY_START
    AND WCC.DTIME_REVIEW >= SYSDATE-30
    AND INSTR(WCC.NAME_CAMPAIGN,'Voice')>0
    AND TRUNC(WCC.DTIME_ACTIVITY_START)-TRUNC(WCC.DTIME_REVIEW)<=15--20190626
))
,
REDO AS 
(    -------WC TIME  20200312 Yawen
    SELECT  BASE0_1.TEXT_CONTRACT_NUMBER
    ,BASE0_1.DTIME_REVIEW
    ,BASE0_1.SKP_CREDIT_CASE
    ,BASE0_1.SKP_CLIENT
    ,B3.DTIME_ACTIVITY_START  ------20200312 Yawen
    ,TO_CHAR(B3.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS DTIME_CALL
    ,BASE0_1.NAME_QUESTION
    ,BASE0_1.NAME_ANSWER
   ,BASE0_1.NAME_RESULT 
    ,BASE0_1.text_activity_info
    ,BASE0_1.NAME_CAMPAIGN
    ,BASE0_1.TEXT_BIRTH_NUMBER
    ,BASE0_1.text_stage_result_note--复听case的所有
    ,BASE0_1.skp_credit_acquisition_chnl
    ,BASE0_1.code_rpos_type
    FROM BASE0_1
    JOIN B2_REDO B2
    ON B2.SKP_CREDIT_CASE =BASE0_1.SKP_CREDIT_CASE ---复听case
    AND B2.SKP_CLIENT=BASE0_1.SKP_CLIENT
    AND B2.DTIME_ACTIVITY_START =BASE0_1.DTIME_ACTIVITY_START ----时间与复听时间一致
    AND B2.DTIME_REVIEW=BASE0_1.DTIME_REVIEW
    JOIN DTIME_WC B3
    ON BASE0_1.SKP_CREDIT_CASE =B3.SKP_CREDIT_CASE 
    AND B3.RNK =1
),
TRANSFER_TO_AGENT AS 
(SELECT * FROM BASE0_1 
WHERE INSTR (NAME_CAMPAIGN ,'转人工')>0
      OR INSTR (NAME_CAMPAIGN ,'CFC-WC-POS_VoiceBot新问卷')>0),   --JASON 20210402
--------------------------------------------------------------------------
--BASE FOR 申请提前还款+合同已撤销  trigger 15天前
--------------------------------------------------------------------------
BASE0_2 AS 
(
    select /*+ materialize */
    WC.TEXT_CONTRACT_NUMBER
    ,WC.DTIME_REVIEW
    ,WC.SKP_CREDIT_CASE
    ,WC.SKP_CLIENT
    ,WC.NUM_DAYS_TILL_EVENT
    ,WC.DTIME_ACTIVITY_START  ----20201027 YW
    ,TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS DTIME_CALL
    ,WC.NAME_QUESTION
    ,WC.NAME_ANSWER
    ,WC.NAME_RESULT 
    ,WC.text_activity_info
    ,WC.NAME_CAMPAIGN
    ,wc.text_stage_result_note
    FROM DM_ANTIFRAUD.F_WC_CAMPAIGN_AD WC --join class15
    JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
    WHERE  1=1
    AND(INSTR(WC.NAME_CAMPAIGN,'CFC-WC-Voice Bot问卷' )>0 
    OR INSTR(WC.NAME_CAMPAIGN,'CFC-WC-Voice Bot转人工' )>0
    OR INSTR(WC.NAME_CAMPAIGN,'CFC-WC-VoiceBot' )>0           --JASON 20210402
    OR INSTR(WC.NAME_CAMPAIGN,'CFC-WC-POS_VoiceBot' )>0       --JASON 20210402
     ) ------------------20201210 YW ADD NEW CAMPAIGN
    AND TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT)-14 AND TRUNC(SYSDATE)-15 --20191219 angela
    AND TRUNC(WC.DTIME_ACTIVITY_START) >=(SELECT  MIN(max_detect) -14 FROM AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME WHERE CLASS=15)
    AND WC.DTIME_REVIEW>=SYSDATE-30
),
B22 AS 
(  -----20201027 YW
    SELECT B1.SKP_CREDIT_CASE,
    B1.SKP_CLIENT,
    B1.DTIME_REVIEW,
    B1.DTIME_ACTIVITY_START 
    FROM BASE0_2 B1
    WHERE INSTR(B1.NAME_QUESTION,'VB-Agent信息')>0  
    AND B1.TEXT_ACTIVITY_INFO IS NOT NULL
    AND B1.TEXT_ACTIVITY_INFO <> 'XNA' ---选出有VB-AGENT信息的合同
),

B33 AS 
(
    SELECT * FROM BASE0_2
    WHERE INSTR(BASE0_2.NAME_ANSWER,'VB复听') >0 -------20191230 Yawen
),

TRANSFER_TO_AGENT2 AS 
(
    SELECT * FROM BASE0_2 
    WHERE BASE0_2.SKP_CREDIT_CASE IN (SELECT B22.SKP_CREDIT_CASE FROM B22)-------20201027 YW
    AND BASE0_2.SKP_CREDIT_CASE NOT IN (SELECT B33.SKP_CREDIT_CASE FROM B33) 
) ,

DE_REDO AS
(
    SELECT /*+MATERIALIZE USE_HASH(B,ACCA)*/ 
    B.NAME_QUESTION,  ------YAWEN 2020-02-17
    B.NAME_ANSWER,
    B.DTIME_CALL,
    ACCA.SKP_SALESROOM,
    ACCA.TEXT_CONTRACT_NUMBER,
    ACCA.SKP_CREDIT_CASE ,
    ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    FROM REDO B
    JOIN DM_TABLE ACCA 
    ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE 1=1
    AND (
  /*  (INSTR(B.NAME_QUESTION,'还是钱')>0 AND INSTR(B.NAME_ANSWER,'贷款类型异常')>0)   
    OR (INSTR(B.NAME_QUESTION,'分期购买的商品是不是')>0 AND INSTR(B.NAME_ANSWER,'贷款类型异常')>0)   
    OR (INSTR(B.NAME_QUESTION,'现场取走的是')>0 AND 
    (INSTR(B.NAME_ANSWER,'钱')>0 OR INSTR(B.NAME_ANSWER,'没拿')>0)) */
   (INSTR(B.NAME_ANSWER,'钱')>0 OR INSTR(B.NAME_ANSWER,'没有购买')>0 OR INSTR(B.NAME_ANSWER,'什么都没拿')>0 OR INSTR(B.NAME_ANSWER,'不清楚')>0)--UPDATE 20210625 NANCY
   AND  INSTR(B.NAME_RESULT,'贷款类型异常')>0    
    ) ------YAWEN 2020-02-17
    AND ACCA.SKP_CREDIT_TYPE =1
),
 
DE_AGENT AS
(
    SELECT /*+MATERIALIZE USE_HASH(B,ACCA)*/ 
    B.NAME_QUESTION,
    B.NAME_ANSWER,
    B.DTIME_CALL,
    ACCA.SKP_SALESROOM,
    ACCA.TEXT_CONTRACT_NUMBER,
    ACCA.SKP_CREDIT_CASE ,
    ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    FROM TRANSFER_TO_AGENT B
    JOIN DM_TABLE ACCA 
    ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE 1=1
    AND (
    /*(INSTR(B.NAME_QUESTION,'还是钱')>0 AND INSTR(B.NAME_ANSWER,'贷款类型异常')>0)   
    OR (INSTR(B.NAME_QUESTION,'分期购买的商品是不是')>0 AND INSTR(B.NAME_ANSWER,'贷款类型异常')>0)   
    OR (INSTR(B.NAME_QUESTION,'现场取走的是')>0 AND 
    (INSTR(B.NAME_ANSWER,'钱')>0 OR INSTR(B.NAME_ANSWER,'没拿')>0))*/
    (INSTR(B.NAME_ANSWER,'钱')>0 OR INSTR(B.NAME_ANSWER,'没有购买')>0 OR INSTR(B.NAME_ANSWER,'什么都没拿')>0 OR INSTR(B.NAME_ANSWER,'不清楚')>0)--UPDATE 20210625 NANCY
   AND  INSTR(B.NAME_RESULT,'贷款类型异常')>0     
    ) ------YAWEN 2020-02-17
    AND ACCA.SKP_CREDIT_TYPE =1
),
PRE_TRIGGER AS
(
--===========================================================
--NEW SETTINGS:  NOTE FOR NOTICE ----ADD IN VB 20210625 NANCY
--===========================================================

SELECT /*+ FULL(EX) FULL(WC) FULL(A) USE_HASH(EX WC A)*/
       DISTINCT 'SA' AS UNIT 
      ,A.text_username_employee_sales 
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'NOTE FOR NOTICE' AS TRIGGER_SOURCE 
      ,'NOTE FOR NOTICE: '||WC.TEXT_STAGE_RESULT_NOTE||'@'||A.TEXT_CONTRACT_NUMBER || ' WC time: ' ||TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS TRIGGER_VALUE   
      ,'SOFT' AS TRIGGER_TYPE
      ,A.SKP_CREDIT_CASE
      ,A.TEXT_CONTRACT_NUMBER 
      ,A.skp_salesroom
  FROM AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX 
  JOIN BASE0_1 WC 
    ON EX.CLASS='15'
  JOIN DM_TABLE A  
    ON A.SKP_CREDIT_CASE=WC.SKP_CREDIT_CASE
   AND A.date_decision>=TRUNC(SYSDATE)-30
   AND TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
--AND WC.NUM_DAYS_TILL_EVENT<=9 -----delete 20200114 angela
   AND A.SKP_CREDIT_TYPE = 1-----20200113Yawen
   AND (INSTR(WC.TEXT_STAGE_RESULT_NOTE,'套现',1,1)>0
        OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'借用客户身份证',1,1)>0
        OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'不认识客户',1,1)>0
        OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'拒绝回访',1,1)>0
        OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'帮他人贷款',1,1)>0
        OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'还款金额不一致',1,1)>0
        OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'商品类型不一致',1,1)>0
        OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'前几期和后几期还款金额不一样',1,1)>0
        OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'前三个月',1,1)>0  --2018-02-23 anny
       )
   AND A.skp_employee_consultant<>5036527--'EXTREME'
UNION
--===========================================================
--NEW SETTINGS:  NOTE FOR NOTICE ----ADD IN VB 20210625 NANCY
--===========================================================
SELECT /*+ FULL(EX) FULL(WC) FULL(A) USE_HASH(EX WC A)*/
       DISTINCT 'SA' AS UNIT 
      ,A.text_username_employee_sales 
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'NOTE FOR NOTICE' AS TRIGGER_SOURCE 
      ,'NOTE FOR NOTICE: '||WC.text_activity_info ||'@'||A.TEXT_CONTRACT_NUMBER || ' WC time: ' ||TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS TRIGGER_VALUE   
      ,'SOFT' AS TRIGGER_TYPE
      ,A.SKP_CREDIT_CASE
      ,A.TEXT_CONTRACT_NUMBER 
      ,A.skp_salesroom
  FROM AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX 
  JOIN BASE0_1 WC 
    ON EX.CLASS='15'
  JOIN DM_TABLE A  
    ON A.SKP_CREDIT_CASE=WC.SKP_CREDIT_CASE
   AND A.date_decision>=TRUNC(SYSDATE)-30
   AND TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
--AND WC.NUM_DAYS_TILL_EVENT<=9 -----delete 20200114 angela
   AND A.SKP_CREDIT_TYPE = 1-----20200113Yawen
  -- AND INSTR(WC.NAME_QUESTION,'WC-C1-1')>0
   AND (INSTR(WC.text_activity_info,'套现',1,1)>0
        OR INSTR(WC.text_activity_info,'借用客户身份证',1,1)>0
        OR INSTR(WC.text_activity_info,'不认识客户',1,1)>0
        OR INSTR(WC.text_activity_info,'拒绝回访',1,1)>0
        OR INSTR(WC.text_activity_info,'帮他人贷款',1,1)>0
        OR INSTR(WC.text_activity_info,'还款金额不一致',1,1)>0
        OR INSTR(WC.text_activity_info,'商品类型不一致',1,1)>0
        OR INSTR(WC.text_activity_info,'前几期和后几期还款金额不一样',1,1)>0
        OR INSTR(WC.text_activity_info,'前三个月',1,1)>0  --2018-02-23 anny
       )
   AND A.skp_employee_consultant<>5036527--'EXTREME'
/*UNION---HIDE VB外卖，雇主，暗点,贷款类型异常 ONLY CHECK IN VB REDO& AGENT 20210625 NANCY
---========================================================
--------------TAKE OUT QUESTIONNAIRE 20210506-------------
---========================================================
-- TAKE_OUT CHANGE TO VB 20210506 NANCY
SELECT \*+FULL(ACCA) USE_HASH(B,ACCA)*\
       DISTINCT  'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'VB-外卖欺诈嫌疑' AS TRIGGER_SOURCE ------20201029 YW
      ,'客户称是为了入职'||ACCA.NAME_EMPLOYER||'公司才购买了商品; WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE --20181026
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
      ,ACCA.SKP_SALESROOM
FROM BASE0_1 B
--JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
 JOIN DM_TABLE ACCA    ---- Added 18.12.2019, YS
  ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE 1=1
AND INSTR(NAME_QUESTION,'是否为了入职')>0 AND INSTR(NAME_ANSWER,'是')>0 --20181026
AND ACCA.SKP_CREDIT_TYPE =1    --only Pos 30
AND ACCA.DATE_DECISION >= SYSDATE-30
UNION

SELECT \*+FULL(ACCA) USE_HASH(B,ACCA)*\
       DISTINCT  'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'VB-雇主欺诈嫌疑' AS TRIGGER_SOURCE ------20201029 YW
      ,'客户称是'||ACCA.NAME_EMPLOYER||'介绍其办理的捷信贷款; WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE --20181026
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
      ,ACCA.SKP_SALESROOM
FROM BASE0_1 B
--JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
 JOIN DM_TABLE ACCA    ---- Added 18.12.2019, YS
  ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE 1=1
AND INSTR(NAME_QUESTION,'是否为了入职')>0 AND INSTR(NAME_ANSWER,'是')>0 --20181026
AND ACCA.SKP_CREDIT_TYPE =1    --only Pos 30
AND ACCA.DATE_DECISION >= SYSDATE-30

UNION
SELECT \*+FULL(ACCA) USE_HASH(B,ACCA)*\
       DISTINCT  'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'VB-暗点嫌疑' AS TRIGGER_SOURCE ------20201029 YW
      ,'客户称不是在'||TT.NAME_GOODS_CATEGORY||'门店办理的捷信贷款; WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE --20181026
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
      ,ACCA.SKP_SALESROOM
FROM  BASE0_1 B
--JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
 JOIN DM_TABLE ACCA    ---- Added 18.12.2019, YS
  ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
 JOIN (
SELECT PGT.SKP_CREDIT_CASE,DGT.SKP_GOODS_CATEGORY,PGT.SKP_GOODS_TYPE,DGT.NAME_GOODS_TYPE,DGT.NAME_GOODS_CATEGORY, DGT.NAME_GOODS_CATEGORY_ENG ,
ROW_NUMBER()OVER(PARTITION BY PGT.SKP_CREDIT_CASE ORDER BY PGT.AMT_GOODS_PRICE DESC ) AS RNK_GOODS
FROM OWNER_DWH.F_PURCHASED_GOODS_TT PGT
JOIN OWNER_DWH.DC_GOODS_TYPE DGT
on PGT.SKP_GOODS_TYPE = DGT.SKP_GOODS_TYPE
WHERE PGT.DATE_DECISION >= TRUNC(SYSDATE) - 30
AND PGT.SKP_CREDIT_TYPE = 1 
)  TT
ON TT.skp_Credit_case = ACCA.skp_credit_case
WHERE 1=1
AND INSTR(NAME_QUESTION,'的店里办理的分期吗')>0 AND NAME_ANSWER = '否' --20181026
AND ACCA.SKP_CREDIT_TYPE =1    --only Pos 30
AND ACCA.DATE_DECISION >= SYSDATE-30
  
UNION
---========================================================
--------------贷款类型异常YAWEN 2020-02-17-----------------
---========================================================
---------------钱+什么也没拿--SERVICE CHANGE TO VB--20210506 NANCY
    SELECT  \*+MATERIALIZE USE_HASH(DE,OTH)*\ 
    DISTINCT  'SA' AS UNIT 
    ,AD.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB-贷款类型异常' AS TRIGGER_SOURCE 
    ,'客户声称现场取走了' ||
    CASE WHEN  INSTR(DE.NAME_ANSWER , '钱')>0 THEN '钱' 
    WHEN  INSTR(DE.NAME_ANSWER , '没拿')>0 THEN '什么都没取走'  --什么都没拿->什么也没拿 20190807
      WHEN INSTR(DE.NAME_ANSWER , '不清楚')>0 THEN '不清楚' 
    ELSE NULL END  ||';skp_salesroom:'||AD.SKP_SALESROOM--',此POS hit合同: '||LISTAGG(OTH.TEXT_CONTRACT_NUMBER,',')WITHIN GROUP(ORDER BY OTH.TEXT_CONTRACT_NUMBER)||': '||LISTAGG (OTH.TRIGGER_SOURCE,',')WITHIN GROUP(ORDER BY OTH.TEXT_CONTRACT_NUMBER)
    ||'; WC time: '|| DE.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,DE.SKP_CREDIT_CASE
    ,DE.TEXT_CONTRACT_NUMBER
    ,AD.SKP_SALESROOM
    FROM BASE0_1 DE    
    JOIN DM_TABLE AD ON DE.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE
    WHERE NOT EXISTS
    (SELECT PG.SKP_CREDIT_CASE 
    FROM  OWNER_DWH.F_PURCHASED_GOODS_TT PG
    JOIN  OWNER_DWH.DC_GOODS_TYPE GTY ON PG.SKP_GOODS_TYPE=GTY.SKP_GOODS_TYPE
    WHERE ( GTY.CODE_GOODS_CATEGORY_RISK='SERVICE' OR GTY.NAME_GOODS_CATEGORY_ENG IN ('Common Beauty','Medical Beauty','Dental','Dental and Beauty','Gym','Training','Travelling','Driving School'))
    AND PG.SKP_CREDIT_CASE=DE.SKP_CREDIT_CASE AND PG.DATE_DECISION >= SYSDATE-30
    )
    AND INSTR(DE.NAME_ANSWER,'没有购买') =0
     AND (
    (INSTR(DE.NAME_QUESTION,'还是钱')>0 AND INSTR(DE.NAME_ANSWER,'贷款类型异常')>0)   
    OR (INSTR(DE.NAME_QUESTION,'分期购买的商品是不是')>0 AND INSTR(DE.NAME_ANSWER,'贷款类型异常')>0)   
    OR (INSTR(DE.NAME_QUESTION,'现场取走的是')>0 AND (INSTR(DE.NAME_ANSWER,'钱')>0 OR INSTR(DE.NAME_ANSWER,'没拿')>0))
    )
    \*LEFT JOIN OTH_REDO OTH
    ON DE.SKP_SALESROOM = OTH.SKP_SALESROOM---pos join pos*\
    GROUP BY AD.TEXT_USERNAME_EMPLOYEE_SALES,
     DE.NAME_ANSWER,
    AD.SKP_SALESROOM,
    DE.DTIME_CALL,
    DE.SKP_CREDIT_CASE,
    DE.TEXT_CONTRACT_NUMBER 
UNION
------------没有购买 SERVICE CHANGE TO VB 20210506 NANCY
    SELECT  \*+MATERIALIZE USE_HASH(DE,OTH)*\ 
    DISTINCT  'SA' AS UNIT 
    ,AD.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB-贷款类型异常' AS TRIGGER_SOURCE 
    ,'客户声称没有购买商品'||';skp_salesroom:'||AD.SKP_SALESROOM--',此POS hit合同: '||LISTAGG(OTH.TEXT_CONTRACT_NUMBER,',')WITHIN GROUP(ORDER BY OTH.TEXT_CONTRACT_NUMBER)||': '||LISTAGG (OTH.TRIGGER_SOURCE,',')WITHIN GROUP(ORDER BY OTH.TEXT_CONTRACT_NUMBER)
    ||'; WC time: '|| DE.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,DE.SKP_CREDIT_CASE
    ,DE.TEXT_CONTRACT_NUMBER
    ,AD.SKP_SALESROOM
    FROM BASE0_1 DE   
    JOIN DM_TABLE AD ON DE.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE 
    WHERE NOT EXISTS
    (SELECT PG.SKP_CREDIT_CASE 
    FROM  OWNER_DWH.F_PURCHASED_GOODS_TT PG
    JOIN  OWNER_DWH.DC_GOODS_TYPE GTY ON PG.SKP_GOODS_TYPE=GTY.SKP_GOODS_TYPE
    WHERE ( GTY.CODE_GOODS_CATEGORY_RISK='SERVICE' OR GTY.NAME_GOODS_CATEGORY_ENG IN ('Common Beauty','Medical Beauty','Dental','Dental and Beauty','Gym','Training','Travelling','Driving School'))
    AND PG.SKP_CREDIT_CASE=DE.SKP_CREDIT_CASE AND PG.DATE_DECISION >= SYSDATE-30
    )
    AND INSTR(DE.NAME_ANSWER,'没有购买') >0
    GROUP BY AD.TEXT_USERNAME_EMPLOYEE_SALES,
     DE.NAME_ANSWER,
    AD.SKP_SALESROOM,
    DE.DTIME_CALL,
    DE.SKP_CREDIT_CASE,
    DE.TEXT_CONTRACT_NUMBER */

UNION
---========================================================
--------VB REDO------TAKE OUT QUESTIONNAIRE ------------ADD REDO &AGENT ON 2021625 NANCY
---========================================================
-- TAKE_OUT CHANGE TO VB 20210506 NANCY
SELECT /*+FULL(ACCA) USE_HASH(B,ACCA)*/
       DISTINCT  'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'VB复听-外卖欺诈嫌疑' AS TRIGGER_SOURCE 
      ,'客户称是为了入职'||ACCA.NAME_EMPLOYER||'公司才购买了商品; WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE 
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
      ,ACCA.SKP_SALESROOM
FROM REDO B
--JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
 JOIN DM_TABLE ACCA   
  ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE 1=1
AND INSTR(NAME_QUESTION,'是否为了入职')>0 AND INSTR(NAME_ANSWER,'是')>0 
--AND ACCA.SKP_CREDIT_TYPE =1    
AND ACCA.DATE_DECISION >= SYSDATE-30

UNION

SELECT /*+FULL(ACCA) USE_HASH(B,ACCA)*/
       DISTINCT  'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'VB复听-雇主欺诈嫌疑' AS TRIGGER_SOURCE 
      ,'客户称是'||ACCA.NAME_EMPLOYER||'介绍其办理的捷信贷款; WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE 
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
      ,ACCA.SKP_SALESROOM
FROM REDO B
--JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
 JOIN DM_TABLE ACCA    
  ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE 1=1
AND INSTR(NAME_QUESTION,'向您推荐的捷信分期')>0 AND INSTR(NAME_ANSWER,'是')>0 
--AND ACCA.SKP_CREDIT_TYPE =1    
AND ACCA.DATE_DECISION >= SYSDATE-30

    UNION
---========================================================
--------VB TO AGENT------TAKE OUT QUESTIONNAIRE -----------
---========================================================
-- TAKE_OUT CHANGE TO VB 20210506 NANCY
SELECT /*+FULL(ACCA) USE_HASH(B,ACCA)*/
       DISTINCT  'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'VB_TO_AGENT-外卖欺诈嫌疑' AS TRIGGER_SOURCE 
      ,'客户称是为了入职'||ACCA.NAME_EMPLOYER||'公司才购买了商品; WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE 
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
      ,ACCA.SKP_SALESROOM
FROM TRANSFER_TO_AGENT2 B
--JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
 JOIN DM_TABLE ACCA   
  ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE 1=1
AND INSTR(NAME_QUESTION,'是否为了入职')>0 AND INSTR(NAME_ANSWER,'是')>0 
--AND ACCA.SKP_CREDIT_TYPE =1    
AND ACCA.DATE_DECISION >= SYSDATE-30

UNION

SELECT /*+FULL(ACCA) USE_HASH(B,ACCA)*/
       DISTINCT  'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'VB_TO_AGENT-雇主欺诈嫌疑' AS TRIGGER_SOURCE 
      ,'客户称是'||ACCA.NAME_EMPLOYER||'介绍其办理的捷信贷款; WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE 
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
      ,ACCA.SKP_SALESROOM
FROM TRANSFER_TO_AGENT2 B
--JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
 JOIN DM_TABLE ACCA    
  ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE 1=1
AND INSTR(NAME_QUESTION,'向您推荐的捷信分期')>0 AND INSTR(NAME_ANSWER,'是')>0 
--AND ACCA.SKP_CREDIT_TYPE =1    
AND ACCA.DATE_DECISION >= SYSDATE-30

--=============================
--VB-2.0贷款类型异常  REDO
--==============================
---------------钱+什么也没拿-------------------------
UNION
    SELECT  /*+MATERIALIZE USE_HASH(DE,OTH)*/ 
    DISTINCT  'SA' AS UNIT 
    ,DE.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB复听-贷款类型异常' AS TRIGGER_SOURCE 
    ,'客户声称现场取走了' ||
    CASE WHEN  INSTR(DE.NAME_ANSWER , '钱')>0 THEN '钱' 
    WHEN  INSTR(DE.NAME_ANSWER , '没拿')>0 THEN '什么都没取走'  --什么都没拿->什么也没拿 20190807
      WHEN INSTR(DE.NAME_ANSWER , '不清楚')>0 THEN '不清楚' 
    ELSE NULL END  ||';skp_salesroom:'||DE.SKP_SALESROOM--',此POS hit合同: '||LISTAGG(OTH.TEXT_CONTRACT_NUMBER,',')WITHIN GROUP(ORDER BY OTH.TEXT_CONTRACT_NUMBER)||': '||LISTAGG (OTH.TRIGGER_SOURCE,',')WITHIN GROUP(ORDER BY OTH.TEXT_CONTRACT_NUMBER)
    ||'; WC time: '|| DE.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,DE.SKP_CREDIT_CASE
    ,DE.TEXT_CONTRACT_NUMBER
    ,DE.SKP_SALESROOM
    FROM DE_REDO DE    
    WHERE NOT EXISTS
    (SELECT PG.SKP_CREDIT_CASE 
    FROM  OWNER_DWH.F_PURCHASED_GOODS_TT PG
    JOIN  OWNER_DWH.DC_GOODS_TYPE GTY ON PG.SKP_GOODS_TYPE=GTY.SKP_GOODS_TYPE
    WHERE ( GTY.CODE_GOODS_CATEGORY_RISK='SERVICE' OR GTY.NAME_GOODS_CATEGORY_ENG IN ('Common Beauty','Medical Beauty','Dental','Dental and Beauty','Gym','Training','Travelling','Driving School'))
    AND PG.SKP_CREDIT_CASE=DE.SKP_CREDIT_CASE AND PG.DATE_DECISION >= SYSDATE-30
    )
    AND INSTR(DE.NAME_ANSWER,'没有购买') =0
    /*LEFT JOIN OTH_REDO OTH
    ON DE.SKP_SALESROOM = OTH.SKP_SALESROOM---pos join pos*/
    GROUP BY DE.TEXT_USERNAME_EMPLOYEE_SALES,
     DE.NAME_ANSWER,
    DE.SKP_SALESROOM,
    DE.DTIME_CALL,
    DE.SKP_CREDIT_CASE,
    DE.TEXT_CONTRACT_NUMBER 
---------------没有购买YAWEN 2020-02-17-------------------------            
    UNION
    SELECT  /*+MATERIALIZE USE_HASH(DE,OTH)*/ 
    DISTINCT  'SA' AS UNIT 
    ,DE.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB复听-贷款类型异常' AS TRIGGER_SOURCE 
    ,'客户声称没有购买商品'||';skp_salesroom:'||DE.SKP_SALESROOM--',此POS hit合同: '||LISTAGG(OTH.TEXT_CONTRACT_NUMBER,',')WITHIN GROUP(ORDER BY OTH.TEXT_CONTRACT_NUMBER)||': '||LISTAGG (OTH.TRIGGER_SOURCE,',')WITHIN GROUP(ORDER BY OTH.TEXT_CONTRACT_NUMBER)
    ||'; WC time: '|| DE.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,DE.SKP_CREDIT_CASE
    ,DE.TEXT_CONTRACT_NUMBER
    ,DE.SKP_SALESROOM
    FROM DE_REDO DE    
    WHERE NOT EXISTS
    (SELECT PG.SKP_CREDIT_CASE 
    FROM  OWNER_DWH.F_PURCHASED_GOODS_TT PG
    JOIN  OWNER_DWH.DC_GOODS_TYPE GTY ON PG.SKP_GOODS_TYPE=GTY.SKP_GOODS_TYPE
    WHERE ( GTY.CODE_GOODS_CATEGORY_RISK='SERVICE' OR GTY.NAME_GOODS_CATEGORY_ENG IN ('Common Beauty','Medical Beauty','Dental','Dental and Beauty','Gym','Training','Travelling','Driving School'))
    AND PG.SKP_CREDIT_CASE=DE.SKP_CREDIT_CASE AND PG.DATE_DECISION >= SYSDATE-30
    )
    AND INSTR(DE.NAME_ANSWER,'没有购买') >0
    GROUP BY DE.TEXT_USERNAME_EMPLOYEE_SALES,
     DE.NAME_ANSWER,
    DE.SKP_SALESROOM,
    DE.DTIME_CALL,
    DE.SKP_CREDIT_CASE,
    DE.TEXT_CONTRACT_NUMBER  
    UNION
    ---=============================
    --VB-2.0贷款类型异常  AGENT
    --==============================
    SELECT  /*+MATERIALIZE USE_HASH(DE,OTH)*/ 
    DISTINCT  'SA' AS UNIT 
    ,DE.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB_TO_AGENT-贷款类型异常' AS TRIGGER_SOURCE 
    ,'客户声称现场取走了' ||
    CASE WHEN  INSTR(DE.NAME_ANSWER , '钱')>0 THEN '钱' 
    WHEN  INSTR(DE.NAME_ANSWER , '没拿')>0 THEN '什么都没取走' 
      WHEN INSTR(DE.NAME_ANSWER , '不清楚')>0 THEN '不清楚' 
    ELSE NULL END  ||';skp_salesroom:'||DE.SKP_SALESROOM--',此POS hit合同: '||LISTAGG(OTH.TEXT_CONTRACT_NUMBER,',')WITHIN GROUP(ORDER BY OTH.TEXT_CONTRACT_NUMBER)||': '||LISTAGG (OTH.TRIGGER_SOURCE,',')WITHIN GROUP(ORDER BY OTH.TEXT_CONTRACT_NUMBER)
    ||'; WC time: '|| DE.DTIME_CALL AS TRIGGER_VALUE-----add POS info+calling time 0423
    ,'SOFT' AS TRIGGER_TYPE
    ,DE.SKP_CREDIT_CASE
    ,DE.TEXT_CONTRACT_NUMBER
    ,DE.SKP_SALESROOM
    FROM DE_AGENT DE
    WHERE  NOT EXISTS
    (SELECT PG.SKP_CREDIT_CASE 
    FROM  OWNER_DWH.F_PURCHASED_GOODS_TT PG
    JOIN  OWNER_DWH.DC_GOODS_TYPE GTY ON PG.SKP_GOODS_TYPE=GTY.SKP_GOODS_TYPE
    WHERE  (GTY.CODE_GOODS_CATEGORY_RISK='SERVICE' OR GTY.NAME_GOODS_CATEGORY_ENG IN ('Common Beauty','Medical Beauty','Dental','Dental and Beauty','Gym','Training','Travelling','Driving School') )
    AND PG.SKP_CREDIT_CASE=DE.SKP_CREDIT_CASE AND PG.DATE_DECISION >= SYSDATE-30
    )
    AND INSTR(DE.NAME_ANSWER,'没有购买') =0
    GROUP BY DE.TEXT_USERNAME_EMPLOYEE_SALES,
     DE.NAME_ANSWER,
    DE.SKP_SALESROOM,
    DE.DTIME_CALL,
    DE.SKP_CREDIT_CASE,
    DE.TEXT_CONTRACT_NUMBER
    UNION
    -------------没有购买YAWEN 2020-02-17--------------------------
    SELECT  /*+MATERIALIZE USE_HASH(DE,OTH)*/ 
    DISTINCT  'SA' AS UNIT 
    ,DE.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB_TO_AGENT-贷款类型异常' AS TRIGGER_SOURCE 
    ,'客户声称没有购买商品;skp_salesroom:'||DE.SKP_SALESROOM--',此POS hit合同: '||LISTAGG(OTH.TEXT_CONTRACT_NUMBER,',')WITHIN GROUP(ORDER BY OTH.TEXT_CONTRACT_NUMBER)||': '||LISTAGG (OTH.TRIGGER_SOURCE,',')WITHIN GROUP(ORDER BY OTH.TEXT_CONTRACT_NUMBER)
    ||'; WC time: '|| DE.DTIME_CALL AS TRIGGER_VALUE-----add POS info+calling time 0423
    ,'SOFT' AS TRIGGER_TYPE
    ,DE.SKP_CREDIT_CASE
    ,DE.TEXT_CONTRACT_NUMBER
    ,DE.SKP_SALESROOM
    FROM DE_AGENT DE
    WHERE  NOT EXISTS
    (SELECT PG.SKP_CREDIT_CASE 
    FROM  OWNER_DWH.F_PURCHASED_GOODS_TT PG
    JOIN  OWNER_DWH.DC_GOODS_TYPE GTY ON PG.SKP_GOODS_TYPE=GTY.SKP_GOODS_TYPE
    WHERE ( GTY.CODE_GOODS_CATEGORY_RISK='SERVICE' OR GTY.NAME_GOODS_CATEGORY_ENG IN ('Common Beauty','Medical Beauty','Dental','Dental and Beauty','Gym','Training','Travelling','Driving School'))
    AND PG.SKP_CREDIT_CASE=DE.SKP_CREDIT_CASE AND PG.DATE_DECISION >= SYSDATE-30
    )
    AND INSTR(DE.NAME_QUESTION ,'分期购买的商品是不是')>0
    AND INSTR(DE.NAME_ANSWER ,'没有购买')>0
    GROUP BY DE.TEXT_USERNAME_EMPLOYEE_SALES,
    DE.NAME_ANSWER,
    DE.SKP_SALESROOM,
    DE.DTIME_CALL,
    DE.SKP_CREDIT_CASE,
    DE.TEXT_CONTRACT_NUMBER  
    
    UNION  
    --===============================
    ---VB-1.0.客户声称合同已被拒绝 AGENT
    --===============================
    SELECT /*+MATERIALIZE USE_HASH(B,ACCA)*/ DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB_TO_AGENT-可疑合同状态' AS TRIGGER_SOURCE 
    , '客户声称申请已被拒绝; WC time: ' ||B.DTIME_CALL ----add calling time
    AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
    FROM TRANSFER_TO_AGENT B
    JOIN DM_TABLE ACCA 
    ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE 1=1
    AND B.NAME_ANSWER='申请被拒'
    UNION 
    --====================================
    --VB-1.0. 客户否认申请贷款 AGENT
    --====================================

    SELECT /*+MATERIALIZE USE_HASH(B,ACCA)*/DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB_TO_AGENT-客户否认申请贷款' AS TRIGGER_SOURCE 
    ,'客户否认申请贷款' || '; WC time: ' ||B.DTIME_CALL AS TRIGGER_VALUE ----add calling time
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
    FROM TRANSFER_TO_AGENT B
    JOIN DM_TABLE ACCA 
    ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE INSTR(B.NAME_RESULT,'客户否认申请贷款')>0 
    --=============================================
    --VB复听 客户否认申请贷款 ------20200325 Yawen 
    --=============================================
UNION
SELECT /*+MATERIALIZE USE_HASH(B,ACCA)*/DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB复听-客户否认申请贷款' AS TRIGGER_SOURCE 
    ,'客户否认申请贷款' || '; WC time: ' ||B.DTIME_CALL AS TRIGGER_VALUE ----add calling time
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
    FROM REDO B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE 1=1
AND INSTR(B.NAME_RESULT,'客户否认申请贷款')>0 
    UNION
    ---====================================
    --VB-1.0.  错误方接听 AGENT
    --====================================

    SELECT /*+MATERIALIZE USE_HASH(B,ACCA)*/DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB_TO_AGENT-错误方接听' AS TRIGGER_SOURCE 
    ,'错误方接听: '|| 
    CASE WHEN INSTR(B.NAME_RESULT,'不认识客户')>0 THEN '不认识客户' 
    WHEN  INSTR(B.NAME_RESULT, '拒绝提供客户电话')>0 THEN '拒绝提供客户电话' 
    WHEN  INSTR(B.NAME_RESULT, '错误方接听')>0 THEN '错误方接听' 
    ELSE NULL END || ' WC time: ' ||B.DTIME_CALL AS TRIGGER_VALUE ----add calling time
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
    FROM TRANSFER_TO_AGENT  B
    JOIN DM_TABLE ACCA 
    ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE ( INSTR(B.NAME_RESULT,'不认识客户')>0 OR INSTR(B.NAME_RESULT, '拒绝提供客户电话')>0 OR INSTR(B.NAME_RESULT, '错误方接听')>0)
    UNION
    ---====================================
    --VB-1.0.  错误方接听 REDO
    --====================================

    SELECT /*+MATERIALIZE USE_HASH(B,ACCA)*/DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB复听-错误方接听' AS TRIGGER_SOURCE 
    ,'错误方接听: '|| 
    CASE WHEN INSTR(B.NAME_RESULT,'不认识客户')>0 THEN '不认识客户' 
    WHEN  INSTR(B.NAME_RESULT, '拒绝提供客户电话')>0 THEN '拒绝提供客户电话' 
    WHEN  INSTR(B.NAME_RESULT, '错误方接听')>0 THEN '错误方接听' 
    ELSE NULL END || ' WC time: ' ||B.DTIME_CALL AS TRIGGER_VALUE ----add calling time
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
    FROM REDO  B
    JOIN DM_TABLE ACCA 
    ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE ( INSTR(B.NAME_RESULT,'不认识客户')>0 OR INSTR(B.NAME_RESULT, '拒绝提供客户电话')>0 OR INSTR(B.NAME_RESULT, '错误方接听')>0)
    
   /* UNION---hide only check in VB REDO & AGENT 20210625 nancy
    --=============================================================
    ---VB-商品类型回答错误   service change to VB---NANCY 20210506
    --=============================================================
 SELECT \*+MATERIALIZE USE_HASH(B,ACCA)*\ 
    DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB-商品类型回答错误' AS TRIGGER_SOURCE 
    ,'商品类型与合同不符;WC time: '|| B.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
    FROM BASE0_1 B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE 1=1
    AND INSTR(B.NAME_QUESTION,'分期购买的商品是不是')>0
    AND B.NAME_ANSWER='不是'
    AND ACCA.AMT_CREDIT > 10000
    AND NOT EXISTS
    (SELECT PG.SKP_CREDIT_CASE 
    FROM  OWNER_DWH.F_PURCHASED_GOODS_TT PG
    JOIN  OWNER_DWH.DC_GOODS_TYPE GTY ON PG.SKP_GOODS_TYPE=GTY.SKP_GOODS_TYPE
    WHERE  (GTY.CODE_GOODS_CATEGORY_RISK='SERVICE' OR GTY.NAME_GOODS_CATEGORY_ENG IN ('Common Beauty','Medical Beauty','Dental','Dental and Beauty','Gym','Training','Travelling','Driving School') )
    AND PG.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE AND PG.DATE_DECISION >= SYSDATE-90
    )--20181206 exclude beauty product*/
    
UNION
    --=============================================================
    ---VB复听-商品类型回答错误 REDO   ------YAWEN 2020-02-17
    --=============================================================
 SELECT /*+MATERIALIZE USE_HASH(B,ACCA)*/ 
    DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB复听-商品类型回答错误' AS TRIGGER_SOURCE 
    ,'商品类型与合同不符;WC time: '|| B.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
    FROM REDO B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE 1=1
    AND INSTR(B.NAME_QUESTION,'分期购买的商品是不是')>0
    AND B.NAME_ANSWER='不是'
    AND ACCA.AMT_CREDIT > 10000
    AND NOT EXISTS
    (SELECT PG.SKP_CREDIT_CASE 
    FROM  OWNER_DWH.F_PURCHASED_GOODS_TT PG
    JOIN  OWNER_DWH.DC_GOODS_TYPE GTY ON PG.SKP_GOODS_TYPE=GTY.SKP_GOODS_TYPE
    WHERE  (GTY.CODE_GOODS_CATEGORY_RISK='SERVICE' OR GTY.NAME_GOODS_CATEGORY_ENG IN ('Common Beauty','Medical Beauty','Dental','Dental and Beauty','Gym','Training','Travelling','Driving School') )
    AND PG.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE AND PG.DATE_DECISION >= SYSDATE-90
    )--20181206 exclude beauty product
 UNION
--=============================================================
---VB-商品类型回答错误 AGENT   ------YAWEN 2020-02-17
--=============================================================
 SELECT /*+MATERIALIZE USE_HASH(B,ACCA)*/ 
    DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB_TO_AGENT-商品类型回答错误' AS TRIGGER_SOURCE 
    ,'商品类型与合同不符;WC time: '|| B.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
    FROM TRANSFER_TO_AGENT B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE 1=1
    AND INSTR(B.NAME_QUESTION,'分期购买的商品是不是')>0
    AND B.NAME_ANSWER='不是'
    AND NOT EXISTS
    (SELECT PG.SKP_CREDIT_CASE 
    FROM  OWNER_DWH.F_PURCHASED_GOODS_TT PG
    JOIN  OWNER_DWH.DC_GOODS_TYPE GTY ON PG.SKP_GOODS_TYPE=GTY.SKP_GOODS_TYPE
    WHERE  (GTY.CODE_GOODS_CATEGORY_RISK='SERVICE' OR GTY.NAME_GOODS_CATEGORY_ENG IN ('Common Beauty','Medical Beauty','Dental','Dental and Beauty','Gym','Training','Travelling','Driving School') )
    AND PG.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE AND PG.DATE_DECISION >= SYSDATE-90)
    AND ACCA.AMT_CREDIT > 10000 
---=================================================
--VB- EXTRA FEE  AGENT 20191203 Yawen EDIT 20200304
--==================================================
UNION
SELECT /*+MATERIALIZE USE_HASH(B,ACCA)*/DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB_TO_AGENT-'||case when B.skp_credit_acquisition_chnl = 8 and B.code_rpos_type = '1' then 'rpos_online:' 
            when B.skp_credit_acquisition_chnl = 8 and B.code_rpos_type = '2' then 'rpos_offline:'  
              when B.skp_credit_acquisition_chnl = 21 then 'ALDI2.0:' else null end||'extra_fee' AS TRIGGER_SOURCE -----20201029 YW
    ,'客户称办单时被收取手续费' || '; WC time: ' ||B.DTIME_CALL ||
    CASE WHEN CC.skp_credit_acquisition_chnl = 21 AND T1.CNT IS NOT NULL THEN ',除本单合同外,该合同的办单门店'||T1.CODE_SALESROOM||'在三个月内有'||T1.CNT||'个合同声称支付了额外费用' 
      ELSE NULL END ||CASE WHEN CC.skp_credit_acquisition_chnl = 21 AND T2.CNT IS NOT NULL AND T2.SKP_TIPPER IS NOT NULL THEN ',除本单合同外,推荐该合同的tipper'||T2.NAME_TIPPER||'在三个月内有'
          ||T2.CNT||'个合同声称支付了额外费用,SKP_TIPPER:'||T2.SKP_TIPPER||',TIPPER手机号为'||T2.TEXT_PHONE_NUMBER ELSE NULL END
    AS TRIGGER_VALUE ----add calling time
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
    FROM TRANSFER_TO_AGENT B
    JOIN DM_TABLE ACCA 
    ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    JOIN OWNER_DWH.DC_CREDIT_CASE CC
    ON ACCA.SKP_CREDIT_CASE = CC.SKP_CREDIT_CASE 
    LEFT JOIN OWNER_DWH.F_TIPPER_COMMISSION_TT MT
    ON CC.SKP_CONTRACT= MT.SKP_CONTRACT
    LEFT JOIN (SELECT SKP_SALESROOM,CODE_SALESROOM,COUNT(DISTINCT SKP_CREDIT_CASE ) AS CNT 
    FROM TIP
    GROUP BY SKP_SALESROOM,CODE_SALESROOM ) T1
    ON ACCA.SKP_SALESROOM = T1.SKP_SALESROOM
    LEFT JOIN (SELECT SKP_TIPPER,NAME_TIPPER,TEXT_PHONE_NUMBER,COUNT(DISTINCT SKP_CREDIT_CASE ) AS CNT 
    FROM TIP
    GROUP BY SKP_TIPPER,NAME_TIPPER,TEXT_PHONE_NUMBER ) T2
    ON MT.SKP_TIPPER = T2.SKP_TIPPER
    WHERE CC.skp_credit_type = 1   --POSL         
AND CC.date_decision >= SYSDATE-30
AND INSTR (B.NAME_QUESTION,'手续费')>0 
AND B.NAME_ANSWER = '有'  
--================================================
---VB EXTRA FEE REDO 20191203 Yawen EDIT 20200304
--================================================
UNION
  SELECT /*+MATERIALIZE USE_HASH(B,ACCA)*/ 
    DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB复听-'||case when B.skp_credit_acquisition_chnl = 8 and B.code_rpos_type = '1' then 'rpos_online:' 
            when B.skp_credit_acquisition_chnl = 8 and B.code_rpos_type = '2' then 'rpos_offline:'  
              when B.skp_credit_acquisition_chnl = 21 then 'ALDI2.0:' else null end|| 'extra_fee' AS TRIGGER_SOURCE  -------20201029 YW
    ,'客户称办单时被收取手续费' || '; WC time: ' ||B.DTIME_CALL ||
    CASE WHEN CC.skp_credit_acquisition_chnl = 21 AND T1.CNT IS NOT NULL THEN ',除本单合同外,该合同的办单门店'||T1.CODE_SALESROOM||'在三个月内有'||T1.CNT||'个合同声称支付了额外费用' 
      ELSE NULL END ||
        CASE WHEN CC.skp_credit_acquisition_chnl = 21 AND T2.CNT IS NOT NULL AND T2.SKP_TIPPER IS NOT NULL THEN ',除本单合同外,推荐该合同的tipper'||T2.NAME_TIPPER||'在三个月内有'
          ||T2.CNT||'个合同声称支付了额外费用,SKP_TIPPER:'||T2.SKP_TIPPER||',TIPPER手机号为'||T2.TEXT_PHONE_NUMBER ELSE NULL END
    AS TRIGGER_VALUE ----add calling time  ,'SOFT' AS TRIGGER_TYPE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
    FROM REDO B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    JOIN OWNER_DWH.DC_CREDIT_CASE CC
    ON ACCA.SKP_CREDIT_CASE = CC.SKP_CREDIT_CASE 
 ------------20200304 Yawen ---------------------------------------------------
    LEFT JOIN OWNER_DWH.F_TIPPER_COMMISSION_TT MT
    ON CC.SKP_CONTRACT= MT.SKP_CONTRACT
    LEFT JOIN (SELECT SKP_SALESROOM,CODE_SALESROOM,COUNT(DISTINCT SKP_CREDIT_CASE ) AS CNT 
    FROM TIP
    GROUP BY SKP_SALESROOM,CODE_SALESROOM ) T1
    ON ACCA.SKP_SALESROOM = T1.SKP_SALESROOM
    LEFT JOIN (SELECT SKP_TIPPER,NAME_TIPPER,TEXT_PHONE_NUMBER,COUNT(DISTINCT SKP_CREDIT_CASE ) AS CNT 
    FROM TIP
    GROUP BY SKP_TIPPER,NAME_TIPPER,TEXT_PHONE_NUMBER ) T2
    ON MT.SKP_TIPPER = T2.SKP_TIPPER
    WHERE 1=1
    AND INSTR(B.NAME_QUESTION,'手续费')>0
    AND B.NAME_ANSWER ='有'
    AND CC.SKP_CREDIT_TYPE =1
  UNION
    --==============================
    ----VB-7.0&VB-8.0工作类型异常 REDO
    --=============================

    SELECT    /*+MATERIALIZE USE_HASH(B,ACCA)*/
    DISTINCT  'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB复听-'||case when skp_credit_acquisition_chnl = 8 and code_rpos_type = '1' then 'rpos_online:' 
            when skp_credit_acquisition_chnl = 8 and code_rpos_type = '2' then 'rpos_offline:'  
              when skp_credit_acquisition_chnl = 21 then 'ALDI2.0:' else null end||'工作类型异常' AS TRIGGER_SOURCE ----20201029 YW 
    ,'疑似学生办单; WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE --20181026
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
    FROM REDO B
    JOIN DM_TABLE ACCA 
    ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE 1=1
    AND INSTR(B.NAME_QUESTION,'请问您是学生吗')>0 AND B.NAME_ANSWER='是'--20181026
    AND ACCA.SKP_CREDIT_TYPE =1    --only Pos 30
    AND ACCA.NUM_AGE<=23 --20191107
    UNION
    --==============================
    ----VB-7.0&VB-8.0工作类型异常 AGENT
    --=============================

    SELECT    /*+MATERIALIZE USE_HASH(B,ACCA)*/
    DISTINCT  'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB_TO_AGENT'||case when skp_credit_acquisition_chnl = 8 and code_rpos_type = '1' then 'rpos_online:' 
            when skp_credit_acquisition_chnl = 8 and code_rpos_type = '2' then 'rpos_offline:'  
              when skp_credit_acquisition_chnl = 21 then 'ALDI2.0:' else null end||'工作类型异常' AS TRIGGER_SOURCE ----20201029 YW
    ,'疑似学生办单; WC time: ' || B.DTIME_CALL --ADD ON 2018.10.22 modify 10.26  
    AS TRIGGER_VALUE --anny 2018-02-23
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
    FROM TRANSFER_TO_AGENT B
    JOIN DM_TABLE ACCA 
    ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE 1=1
    AND INSTR(B.NAME_QUESTION,'请问您是学生吗')>0 AND B.NAME_ANSWER='是'--20181026
    AND ACCA.SKP_CREDIT_TYPE =1    --only Pos 30
    AND ACCA.NUM_AGE<=23 --20191107
    UNION
    ---=============================
    ---VB-9.0.1他人承诺还款 REDO
    --==============================

    SELECT /* /*+ORDERED USE_HASH(B,ACCA)*/
    DISTINCT 'SA' AS UNIT
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB复听-非本人还款' AS TRIGGER_SOURCE
    ,'客户声称非本人或家人还款; WC time: '|| B.DTIME_CALL AS TRIGGER_VALUE----add calling time 0423
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
    FROM REDO B
    JOIN DM_TABLE ACCA
    ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE 1=1
   -- AND INSTR (B.NAME_QUESTION,'请问是您的家人帮您还款吗')>0 --20190327
      AND  INSTR (B.NAME_QUESTION,'家人')>0 
      AND INSTR (B.NAME_QUESTION,'还款')>0 
      AND B.NAME_ANSWER='不是' 
      AND ACCA.SKP_CREDIT_TYPE =1 
    ---=============================
    ---VB-9.0.1他人承诺还款 AGENT
    --==============================
    UNION
    SELECT /* /*+ORDERED USE_HASH(B,ACCA)*/
    DISTINCT 'SA' AS UNIT
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB_TO_AGENT-非本人还款' AS TRIGGER_SOURCE
    ,'客户声称非本人或家人还款; WC time: '|| B.DTIME_CALL AS TRIGGER_VALUE----add calling time 0423
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
    FROM TRANSFER_TO_AGENT B
    JOIN DM_TABLE ACCA
    ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE 1=1
   -- AND INSTR (B.NAME_QUESTION,'请问是您的家人帮您还款吗')>0  --20190327
    AND  INSTR (B.NAME_QUESTION,'家人')>0 
    AND INSTR (B.NAME_QUESTION,'还款')>0 
    AND B.NAME_ANSWER='不是' 
    AND ACCA.SKP_CREDIT_TYPE =1 
    UNION 
    ---=====================================================
    ---VB-AGENT 申请提前还款+合同已撤销  trigger 15天前合同 
    --======================================================

    SELECT /*+MATERIALIZE USE_HASH(BB,ACCA)*/ 
    DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB_TO_AGENT-可疑合同状态' AS TRIGGER_SOURCE 
    ,CASE WHEN INSTR(BB.NAME_RESULT,'提前还款')>0 THEN '客户声称已申请提前还款'
    WHEN INSTR(BB.NAME_RESULT,'撤销或完结或签署')>0 THEN '客户声称合同已经撤销或完结, 但接听欢迎电话时合同状态为现行' ------20201104 YW
    ELSE NULL END|| ' WC time: ' ||BB.DTIME_CALL
    AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
    FROM TRANSFER_TO_AGENT2 BB
    JOIN DM_TABLE ACCA 
    ON ACCA.SKP_CREDIT_CASE=BB.SKP_CREDIT_CASE
    WHERE 1=1
    AND( INSTR(BB.NAME_RESULT,'提前还款')>0 OR INSTR(BB.NAME_RESULT,'撤销或完结或签署')>0 )------20201104 YW
    AND ACCA.code_credit_status IN ('a')------20201104 YW    
UNION
    ---=============================
    --VB_AGENT  SUSPICIOUS COMMENT 20201104 YW
    --==============================
SELECT /*+MATERIALIZE USE_HASH(B,ACCA)*/ 
    DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB_TO_AGENT-可疑Homer评论结果' AS TRIGGER_SOURCE 
    ,'可疑Homer评论结果为：'||B.NAME_ANSWER ||';WC time: '|| B.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
    FROM TRANSFER_TO_AGENT B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE 1=1
    AND INSTR(B.NAME_QUESTION,'Homer')>0
    AND INSTR(B.NAME_ANSWER,'复听')=0 
    AND INSTR(B.NAME_ANSWER,'WC-C1-1')=0  ------20201117 YW
    UNION
---=============================
--VB_REDO  SUSPICIOUS COMMENT 20201104 YW
--==============================
SELECT /*+MATERIALIZE USE_HASH(B,ACCA)*/ 
    DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB复听-可疑Homer评论结果' AS TRIGGER_SOURCE 
    ,'可疑Homer评论结果为：'||B.NAME_ANSWER ||';WC time: '|| B.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
    FROM REDO B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE 1=1
    AND INSTR(B.NAME_QUESTION,'Homer')>0
    AND INSTR(B.NAME_ANSWER,'复听')=0
    AND INSTR(B.NAME_ANSWER,'WC-C1-1')=0  ------20201117 YW   
UNION
--=============================================
--VB复听 PROVINCE&CITY   ------20200528 Yawen --stop 20200629 yawen
--=============================================
SELECT DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB复听-客户省市回答错误' AS TRIGGER_SOURCE 
    ,'客户办单日在'||b.text_activity_info||',而门店实际位于'||pro.NAME_PROVINCE||city.NAME_CITY||';WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
FROM REDO B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    JOIN OWNER_DWH.DC_SALESROOM pp
    on acca.skp_salesroom = pp.skp_salesroom
    join OWNER_DWH.DC_city city
    on pp.skp_city = city.skp_city
    join OWNER_DWH.cl_province pro
    on pp.skp_province = pro.skp_province
    WHERE INSTR(B.NAME_QUESTION,'哪个省哪个市')>0   
    AND b.text_activity_info <> pro.NAME_PROVINCE||city.NAME_CITY
UNION 
--=============================================
--VB_TO_AGENT PROVINCE&CITY   ------20200528 Yawen  --stop 20200629 yawen
--=============================================
SELECT DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB_TO_AGENT-客户省市回答错误' AS TRIGGER_SOURCE 
    ,'客户办单日在'||b.text_activity_info||',而门店实际位于'||pro.NAME_PROVINCE||city.NAME_CITY||';WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
FROM TRANSFER_TO_AGENT B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    JOIN OWNER_DWH.DC_SALESROOM pp
    on acca.skp_salesroom = pp.skp_salesroom
    join OWNER_DWH.DC_city city
    on pp.skp_city = city.skp_city
    join OWNER_DWH.cl_province pro
    on pp.skp_province = pro.skp_province
    WHERE INSTR(B.NAME_QUESTION,'哪个省哪个市')>0   
    AND b.text_activity_info <> pro.NAME_PROVINCE||city.NAME_CITY
UNION
--=============================================
--VB复听 QR code question   ------20200528 Yawen --COMMENT BY YW 20200608
--=============================================
SELECT DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB复听-Send QR code to others' AS TRIGGER_SOURCE 
    ,'客户称将消费二维码截图发送给他人;WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
FROM REDO B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE INSTR(B.NAME_QUESTION,'消费二维码截图通过微信等聊天软件')>0   
    AND B.NAME_ANSWER='是'   
UNION 
--=============================================
--VB_TO_AGENT QR code question  ------20200528 Yawen --20200608 COMMENT BY YW
--=============================================
SELECT DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB_TO_AGENT-Send QR code to others' AS TRIGGER_SOURCE 
    ,'客户称将消费二维码截图发送给他人;WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM 
FROM TRANSFER_TO_AGENT B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE INSTR(B.NAME_QUESTION,'消费二维码截图通过微信等聊天软件')>0   
    AND B.NAME_ANSWER='是'  
UNION
--=============================================
--VB复听 inconsistent DP   
--=============================================
SELECT DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB复听-首付不一致' AS TRIGGER_SOURCE 
    ,'客户称首付不一致;WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
FROM REDO B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE INSTR(B.NAME_QUESTION,'首付')>0   
    AND B.NAME_ANSWER='首付不一致'   
UNION 
--=============================================
--VB_TO_AGENT inconsistent DP   
--=============================================
SELECT DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB_TO_AGENT-首付不一致' AS TRIGGER_SOURCE 
    ,'客户称首付不一致;WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM 
FROM TRANSFER_TO_AGENT B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE INSTR(B.NAME_QUESTION,'首付')>0   
    AND B.NAME_ANSWER='首付不一致' 
UNION
--=============================================
--VB复听 receive goods via mail
--=============================================
SELECT DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB复听-邮递收货' AS TRIGGER_SOURCE 
    ,'客户称将邮递收货;WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
FROM REDO B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE INSTR(B.NAME_QUESTION,'邮递')>0   
    --AND B.NAME_ANSWER='邮递' 
    AND B.NAME_ANSWER='邮递收货'--UPDATE 20210625 NANCY  
UNION 
--=============================================
--VB_TO_AGENT receive goods via mail
--=============================================
SELECT DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB_TO_AGENT-邮递收货' AS TRIGGER_SOURCE 
    ,'客户称将邮递收货;WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM 
FROM TRANSFER_TO_AGENT B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE INSTR(B.NAME_QUESTION,'邮递')>0   
    --AND B.NAME_ANSWER='邮递'  
    AND B.NAME_ANSWER='邮递收货'--UPDATE 20210625 NANCY
/*UNION
--=============================================
--VB复听 Bad source
--=============================================
SELECT DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB复听-Bad source' AS TRIGGER_SOURCE 
    ,'客户称通过微信、抖音、招聘平台了解到捷信分期;WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
FROM REDO B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE INSTR(B.NAME_QUESTION,'招聘平台等网络平台了解到捷信分期的')>0   
    AND B.NAME_ANSWER='是'  
UNION 
--=============================================
--VB_TO_AGENT Bad source
--=============================================
SELECT DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB_TO_AGENT-Bad source' AS TRIGGER_SOURCE 
    ,'客户称通过微信、抖音、招聘平台了解到捷信分期;WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM 
FROM TRANSFER_TO_AGENT B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    WHERE INSTR(B.NAME_QUESTION,'招聘平台等网络平台了解到捷信分期的')>0   
    AND B.NAME_ANSWER='是'   */
UNION 
--=============================================
--VB复听 Hideen POS suspicous 
--=============================================
SELECT DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB复听-暗点嫌疑' AS TRIGGER_SOURCE 
    ,'客户称不是在'||TT1.NAME_GOODS_CATEGORY||'门店办理的捷信贷款; WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM
FROM REDO B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    JOIN (
SELECT PGT.SKP_CREDIT_CASE,DGT.SKP_GOODS_CATEGORY,PGT.SKP_GOODS_TYPE,DGT.NAME_GOODS_TYPE,DGT.NAME_GOODS_CATEGORY, DGT.NAME_GOODS_CATEGORY_ENG ,
ROW_NUMBER()OVER(PARTITION BY PGT.SKP_CREDIT_CASE ORDER BY PGT.AMT_GOODS_PRICE DESC ) AS RNK_GOODS
FROM OWNER_DWH.F_PURCHASED_GOODS_TT PGT
JOIN OWNER_DWH.DC_GOODS_TYPE DGT
on PGT.SKP_GOODS_TYPE = DGT.SKP_GOODS_TYPE
WHERE PGT.DATE_DECISION >= TRUNC(SYSDATE) - 30
AND PGT.SKP_CREDIT_TYPE = 1 
)  TT1
ON TT1.skp_Credit_case = ACCA.skp_credit_case
    WHERE INSTR(B.NAME_QUESTION,'的店里办理的分期吗')>0   
    AND B.NAME_ANSWER='否'   
UNION 
--=============================================
--VB_TO_AGENT Hideen POS suspicous 
--=============================================
SELECT DISTINCT 'SA' AS UNIT 
    ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
    ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
    ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
    ,'15' AS CLASS
    ,'VB_TO_AGENT-暗点嫌疑' AS TRIGGER_SOURCE 
    ,'客户称不是在'||TT1.NAME_GOODS_CATEGORY||'门店办理的捷信贷款; WC time: ' || B.DTIME_CALL AS TRIGGER_VALUE
    ,'SOFT' AS TRIGGER_TYPE
    ,ACCA.SKP_CREDIT_CASE
    ,ACCA.TEXT_CONTRACT_NUMBER
    ,ACCA.SKP_SALESROOM 
FROM TRANSFER_TO_AGENT B
    JOIN DM_TABLE ACCA 
    ON   ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    JOIN (
SELECT PGT.SKP_CREDIT_CASE,DGT.SKP_GOODS_CATEGORY,PGT.SKP_GOODS_TYPE,DGT.NAME_GOODS_TYPE,DGT.NAME_GOODS_CATEGORY, DGT.NAME_GOODS_CATEGORY_ENG ,
ROW_NUMBER()OVER(PARTITION BY PGT.SKP_CREDIT_CASE ORDER BY PGT.AMT_GOODS_PRICE DESC ) AS RNK_GOODS
FROM OWNER_DWH.F_PURCHASED_GOODS_TT PGT
JOIN OWNER_DWH.DC_GOODS_TYPE DGT
on PGT.SKP_GOODS_TYPE = DGT.SKP_GOODS_TYPE
WHERE PGT.DATE_DECISION >= TRUNC(SYSDATE) - 30
AND PGT.SKP_CREDIT_TYPE = 1 
)  TT1
ON TT1.skp_Credit_case = ACCA.skp_credit_case
    WHERE INSTR(B.NAME_QUESTION,'的店里办理的分期吗')>0   
    AND B.NAME_ANSWER='否'  
)

SELECT 
DISTINCT UNIT 
,BB.TEXT_USERNAME_EMPLOYEE_SALES
,DATE_DETECT
,WEEK_DETECT
,CLASS
,BB.TRIGGER_SOURCE 
,bb.TRIGGER_VALUE -----20210111 yw 
,BB.TRIGGER_TYPE
,BB.SKP_CREDIT_CASE
,BB.TEXT_CONTRACT_NUMBER
FROM PRE_TRIGGER BB
;
COMMIT;
--temp stop 20200210
--DAILY
--INSERT 2018-01-26 --20191030
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH RPOS AS (
SELECT DISTINCT WC.*, CC.SKP_CREDIT_TYPE  ,CC.DATE_DECISION, CC.SKp_CLIENT , FF.TEXT_MOBILE_CLIENT 
,CASE WHEN CC.code_rpos_type='1'THEN ' RPOS-online' ELSE ' RPOS-offline' END AS RPOS_TYPE--ADD 20200805 NANCY
FROM ap_ANTIFRAUD.TRIGGER_15_ANNY_WC WC
JOIN OWNER_DWH.DC_CREDIT_CASE CC
ON WC.SKP_CREDIT_CASE =CC.SKP_CREDIT_CASE 
JOIN DM_ANTIFRAUD.FT_AF_CREDIT_CASE_AD FF
ON CC.SKP_CREDIT_CASE =FF.SKP_CREDIT_CASE AND FF.DATE_DECISION =CC.DATE_DECISION AND FF.SKP_CREDIT_TYPE =CC.SKP_CREDIT_TYPE 
WHERE CC.DATE_DECISION >=SYSDATE-30 AND CC.skp_product_channel=804
AND FF.SKP_CREDIT_TYPE =1 AND CC.SKP_CREDIT_TYPE =1 AND FF.DATE_DECISION  >=SYSDATE-30
)


,ORBP AS (
SELECT SKp_CLIENT ,  COUNT(DISTINCT SKF_CAMP_ACC_SOFFER_DETAIL)  OVER (PARTITION BY SKp_CLIENT ) AS CNT_ORBP
            ,LISTAGG (TO_CHAR(DTIME_INSERTED,'YYYY-MM-DD')||'使用号码'||TEXT_PHONE_NUMBER||'(与客户申请表填写的客户号码'||FLAG_SAME||'),结果'||CODE_SCORING_STATUS,';') WITHIN GROUP (ORDER BY DTIME_INSERTED)OVER (PARTITION BY SKp_CLIENT ) ||'。' AS ORBP_DETAILS 
FROM (
            SELECT DISTINCT RP.SKp_CLIENT  , OB.DTIME_INSERTED, OB.CODE_SCORING_STATUS , OB.TEXT_PHONE_NUMBER,OB.SKF_CAMP_ACC_SOFFER_DETAIL,TEXT_MOBILE_CLIENT
                         ,CASE WHEN TEXT_MOBILE_CLIENT=TEXT_PHONE_NUMBER THEN '相同' ELSE '不同' END AS FLAG_SAME
            FROM RPOS RP
            JOIN OWNER_DWH.f_Camp_Acc_Soffer_Detail_Tt OB
            ON RP.SKp_CLIENT =OB.SKp_CLIENT AND TRUNC(OB.DTIME_INSERTED )<= RP.DATE_DECISION ---firstly ORBP then apply
            WHERE 1=1
            AND DTIME_INSERTED>=SYSDATE-360
           )
)

,EXPRESS AS  --20200305 kate
(
SELECT EE.*,CASE WHEN TEXT_MOBILE_CLIENT=RECEIVER_PHONE THEN '一致' ELSE '不一致' END AS FLAG_SAME2
FROM (
            SELECT NN.SKP_CREDIT_CASE ,NN.TEXT_MOBILE_CLIENT
                        ,SS.LOGISTICS_LIST,SS.LOGISTICS_COMPANY,NVL(SS.receiver_mobile,SS.receiver_phone) AS RECEIVER_PHONE
            FROM RPOS NN
            JOIN OWNER_DWH.F_APPLICATION_TT PP
            ON NN.DATE_DECISION =PP.DATE_DECISION AND NN.SKP_CREDIT_TYPE =PP.SKP_CREDIT_TYPE AND NN.SKP_CREDIT_CASE =PP.SKP_CREDIT_CASE 
            JOIN OWNER_OPR.VH_SPX_SYSTRADE_TRADE SS
            ON PP.ID_external_partner_order = SS.TID||''  --20200820 NANCY
            WHERE PP.SKP_CREDIT_TYPE =1 AND PP.DATE_DECISION  >=SYSDATE-10
            )EE
)
,ALL_TRI AS ( --20200312 --20201105 KATE
SELECT DISTINCT UNIT,TEXT_USERNAME_EMPLOYEE_SALES,DATE_DETECT,WEEK_DETECT
           ,CLASS,TRIGGER_SOURCE
           ,TRIGGER_VALUE||'。该客户共进行ORBP'||CNT_ORBP||'次，具体记录：'||ORBP.ORBP_DETAILS||'收件人及电话：'||NAME_RECEIVER||RECEIVER_PHONE||'(与客户本人电话'||FLAG_SAME2||')'
           ||'。收件地址：'||NAME_RECEIVER_PROVINCE||NAME_RECEIVER_CITY||NAME_RECEIVER_DISTRICT||NAME_RECEIVER_ADDRESS
           ||'。目前交易状态：'||AD.CODE_PURCHASE_STATUS||'。快递单号'||EX.LOGISTICS_COMPANY||EX.LOGISTICS_LIST||',商品是'||GTY.NAME_GOODS_TYPE||',价格是'||TT.AMT_GOODS_PRICE ||',品牌及型号'||TT.TEXT_GOODS_DESC ||' RPOS_TYPE:'||RP.RPOS_TYPE AS TRIGGER_VALUE
           ,TRIGGER_TYPE,RP.SKP_CREDIT_CASE,RP.TEXT_CONTRACT_NUMBER 
FROM RPOS RP
LEFT JOIN owner_dwh.f_mp_purchase_ad AD
ON RP.SKP_CREDIT_CASE =AD.SKP_CREDIT_CASE
LEFT JOIN ORBP 
ON ORBP.SKp_CLIENT =RP.SKp_CLIENT
LEFT JOIN EXPRESS EX
ON RP.SKP_CREDIT_CASE =EX.SKP_CREDIT_CASE 
LEFT JOIN OWNER_DWH.F_PURCHASED_GOODS_TT TT
ON RP.DATE_DECISION =TT.DATE_DECISION AND RP.SKP_CREDIT_TYPE =TT.SKP_CREDIT_TYPE AND RP.SKP_CREDIT_CASE =TT.SKP_CREDIT_CASE 
AND TT.SKP_CREDIT_TYPE =1 AND TT.DATE_DECISION  >=SYSDATE-30
LEFT JOIN OWNER_DWH.DC_GOODS_TYPE GTY ON TT.SKP_GOODS_TYPE=GTY.SKP_GOODS_TYPE --20201105 KATE
UNION
SELECT * 
FROM ap_ANTIFRAUD.TRIGGER_15_ANNY_WC AA
WHERE AA.SKP_CREDIT_CASE NOT IN (SELECT DISTINCT SKP_CREDIT_CASE  FROM RPOS )
)

,A AS 
(
SELECT ANNY.*,
ROW_NUMBER() OVER (PARTITION BY SKP_CREDIT_CASE,TRIGGER_SOURCE  ORDER BY TRIGGER_VALUE) AS RNK
FROM ALL_TRI  ANNY
  )  
,PP AS 
(
SELECT ACCA.CODE_SALESROOM,DCC.SKP_CREDIT_CASE,DCC.skp_credit_acquisition_chnl
FROM A
JOIN OWNER_DWH.DC_CREDIT_CASE DCC
ON A.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA
ON A.SKP_CREDIT_CASE = ACCA.SKP_CREDIT_CASE
AND ACCA.DATE_DECISION >= TRUNC(SYSDATE) - 30
AND ACCA.SKP_CREDIT_TYPE = 1 
)
,GB AS 
(
SELECT CODE_SALESROOM,COUNT(DISTINCT SKP_CREDIT_CASE) AS CNT_C
FROM PP
WHERE skp_credit_acquisition_chnl = 21
GROUP BY CODE_SALESROOM 
HAVING COUNT(DISTINCT SKP_CREDIT_CASE) >1
),
E AS (
SELECT PP.SKP_CREDIT_CASE
FROM PP 
WHERE PP.CODE_SALESROOM NOT IN (SELECT CODE_SALESROOM FROM GB)
)
  
SELECT /*+MATERIALIZE*/ 
A.UNIT, 
A.TEXT_USERNAME_EMPLOYEE_SALES,
A.DATE_DETECT, 
A.WEEK_DETECT,
A.CLASS,
'WC BAD: '   ||LISTAGG(A.TRIGGER_SOURCE, ';') WITHIN GROUP (ORDER BY A.TRIGGER_SOURCE )  AS TRIGGER_SOURCE,
LISTAGG(A.TRIGGER_VALUE, ';') WITHIN GROUP (ORDER BY A.TRIGGER_VALUE )  AS TRIGGER_VALUE,
A.TRIGGER_TYPE,
A.SKP_CREDIT_CASE,
A.TEXT_CONTRACT_NUMBER
FROM A
JOIN OWNER_DWH.DC_CREDIT_CASE DCC 
ON A.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE 
AND DCC.DATE_DECISION >=SYSDATE-30
WHERE A.RNK=1
AND DCC.SKP_CREDIT_TYPE =1
--AND DCC.SKP_CREDIT_ACQUISITION_CHNL <>21  ----20200605 YAWEN ---20200608 Yawen
GROUP BY 
A.UNIT,
A.TEXT_USERNAME_EMPLOYEE_SALES, 
A.DATE_DETECT,
A.WEEK_DETECT,
A.CLASS,
A.TRIGGER_TYPE,
A.SKP_CREDIT_CASE,
A.TEXT_CONTRACT_NUMBER;
COMMIT;






------=========================================
-----2020.01.10 ANGELA CASH LOAN 8 SETTINGS----
------=========================================
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'WC-CLWC-NEW',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION

WITH CASH_LOAN AS 
(
SELECT /*+MATERIALIZE USE_HASH(DCC,AD,TT,EE)*/ 
DISTINCT DCC.SKP_CREDIT_CASE,
DCC.SKP_CLIENT,
DCC.DATE_DECISION,
AD.TEXT_CONTRACT_NUMBER,
DCC.SKP_CONTRACT,
TT.DTIME_3RD_BLOCK_SUBMIT,EE.SKP_BANK_ROLE, EE.TEXT_IDENT_NUMBER,AD.amt_credit,DCC.skp_credit_type,
DCC.skp_credit_status,DCC.skp_credit_acquisition_chnl ,
--kate ke 20191127
--AA.flag_3rd_block_eligible,
CASE WHEN DCC.SKP_CREDIT_ACQUISITION_CHNL=6 THEN 'ACL' ELSE 'XCL' END AS PRODUCT,
CASE WHEN DCC.SKP_CREDIT_ACQUISITION_CHNL=6 AND EE.TEXT_IDENT_NUMBER='XNA' THEN 'Onilne2Online'  --AA.flag_3rd_block_eligible='Y' THEN 'Onilne2Online' 
         WHEN DCC.SKP_CREDIT_ACQUISITION_CHNL=6  THEN EE.TEXT_USERNAME_EMPLOYEE 
           ELSE AD.TEXT_USERNAME_EMPLOYEE_SALES END AS SA
FROM OWNER_DWH.DC_CREDIT_CASE DCC
JOIN  DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD
ON DCC.SKP_CREDIT_CASE =AD.SKP_CREDIT_CASE 
AND DCC.SKP_CREDIT_TYPE =AD.SKP_CREDIT_TYPE 
AND DCC.DATE_DECISION =AD.DATE_DECISION 
JOIN OWNER_DWH.F_APPLICATION_TT TT
ON TT.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE 
AND TT.SKP_CREDIT_TYPE =DCC.SKP_CREDIT_TYPE 
AND TT.DATE_DECISION =DCC.DATE_DECISION 
JOIN OWNER_DWH.DC_EMPLOYEE EE
ON EE.SKP_EMPLOYEE = TT.SKP_EMPLOYEE_CONSULT_3RD_BLOCK
WHERE DCC.DATE_DECISION >=TRUNC(SYSDATE)-10
AND TT.DATE_DECISION >=TRUNC(SYSDATE)-10
AND AD.DATE_DECISION >=TRUNC(SYSDATE)-10
AND AD.SKP_CREDIT_TYPE =2
AND TT.SKP_CREDIT_TYPE =2 
AND DCC.SKP_CREDIT_TYPE =2
AND DCC.SKP_CREDIT_STATUS IN (2,3,5) 
)
---------20200414 Yawen 排除由于WC表join错误的合同------
,OPS AS (
SELECT ROT.SKP_CONTRACT 
FROM OWNER_DWH.F_CALL_RESULT_OPS_TD ROT
WHERE ROT.SKP_CALL_LIST_TYPE = 3
AND ROT.DTIME_CALL >= TRUNC(SYSDATE)-15
)
, BASE0_1 AS 
(
    select /*+ FULL(WC) FULL(DC) FULL(EX) USE_HASH(WC DC EX) CARDINALITY(300000) NO_MERGE */
             CC.DTIME_3RD_BLOCK_SUBMIT
             ,CC.TEXT_IDENT_NUMBER
             ,CC.SKP_BANK_ROLE
             ,CC.AMT_CREDIT
             ,CC.skp_credit_acquisition_chnl
             ,CC.PRODUCT
             ,CC.SA
             ,WC.TEXT_CONTRACT_NUMBER
            ,WC.DTIME_REVIEW
            ,WC.SKP_CREDIT_CASE
            ,WC.SKP_CLIENT
            ,WC.NUM_DAYS_TILL_EVENT
            ,WC.DTIME_ACTIVITY_START
            ,TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS DTIME_CALL-----change on 2018.04.23 Angela
            ,WC.NAME_QUESTION
            ,WC.NAME_ANSWER
            ,WC.NAME_RESULT 
            ,wc.text_activity_info 
            ,regexp_replace(WC.text_activity_info,'[^0-9]') AS ANSWER_AMOUNT---2019.06.24 angela
            ,LISTAGG(REGEXP_REPLACE(REPLACE(WC.text_activity_info,'XNA',''),'[[:punct:]]'),',') WITHIN GROUP (ORDER BY WC.text_activity_info)OVER (PARTITION BY WC.SKP_CREDIT_CASE) AS TEXT_RESULT--2019/11/28 nancy
            ,WC.NAME_CAMPAIGN
            ,WC.TEXT_BIRTH_NUMBER---05.04 ANGELA
            ,WC.text_stage_result_note--new added 18.05.10 Angela
            ,WC.NAME_CAMPAIGN_PROCESS_STEP --2020,01,10 Angela
            ,SUBSTR(WC.NAME_ANSWER, 3, LENGTH(WC.NAME_ANSWER) - 2) AS WC_ANSWER--new added 18.05.10 Angela
      FROM DM_ANTIFRAUD.F_WC_CAMPAIGN_AD WC 
      JOIN CASH_LOAN CC ON WC.SKP_CREDIT_CASE =CC.SKP_CREDIT_CASE  --CASH LOAN 2020,01,10 ANGELA
      JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
      WHERE  WC.DTIME_REVIEW>=SYSDATE-30
            AND INSTR(WC.NAME_CAMPAIGN ,'CFC-WC-CASH')>0
            AND INSTR(WC.NAME_CAMPAIGN ,'VB')=0 ------20201117 YW
            AND TRUNC(WC.DTIME_ACTIVITY_START)-TRUNC(WC.DTIME_REVIEW)<=15--20190626
             AND CC.SKP_CONTRACT IN (SELECT * FROM OPS)  ---------20200414 Yawen
            AND TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
)
---20201106 YW
,BASE0_2 AS 
(
    SELECT /*+ FULL(WC) FULL(EX) NO_MERGE CARDINALITY(300000) */
             WC.TEXT_CONTRACT_NUMBER
            ,WC.DTIME_REVIEW
            ,WC.SKP_CREDIT_CASE
            ,WC.SKP_CLIENT
            ,WC.NUM_DAYS_TILL_EVENT
            ,TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS DTIME_CALL
            ,WC.NAME_QUESTION
            ,WC.NAME_ANSWER
            ,WC.NAME_RESULT 
            ,WC.text_activity_info
            ,WC.NAME_CAMPAIGN
      FROM DM_ANTIFRAUD.F_WC_CAMPAIGN_AD WC 
      JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX 
        ON EX.CLASS=15
     WHERE  1=1
       AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC')>0 
       AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-Voice Bot问卷')=0 
       AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-INTEGRATE问卷')=0 
       AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-CASH问卷')>0 
       AND INSTR(WC.NAME_CAMPAIGN ,'VB')=0 ------20201117 YW
       AND TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT)-14 AND TRUNC(SYSDATE)-15------trigger15天前 4.23 Angela
       AND WC.DTIME_REVIEW>=SYSDATE-30
)
,TRI AS (
/*\***************************************************\
--1. 疑似学生办单 20190731 
\***************************************************\
SELECT DISTINCT 'SA' AS UNIT
      ,B.SA AS TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'CLWC-工作类型异常' AS TRIGGER_SOURCE
     --nancy 20191213
       ,CASE WHEN B.PRODUCT ='ACL' AND SKP_BANK_ROLE=1962 THEN 'ACL: Remote SA'
                 WHEN B.PRODUCT ='ACL' AND TEXT_IDENT_NUMBER<>'XNA' THEN 'ACL: online_to_offline' 
                   WHEN B.PRODUCT ='ACL' AND DTIME_3RD_BLOCK_SUBMIT<=TRUNC(SYSDATE) THEN 'ACL: online_to_online'
                 WHEN B.PRODUCT ='ACL' AND DTIME_3RD_BLOCK_SUBMIT=DATE'3000-01-01' THEN 'ACL: UNREACH_3BOD' 
                  ELSE 'XCL' END ||'-疑似学生办单; WC time: '|| DTIME_CALL  AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,B.SKP_CREDIT_CASE
      ,B.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
JOIN  AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
WHERE INSTR(B.NAME_QUESTION,'学生')>0 AND B.NAME_ANSWER='学生'    --------201901202Yawen
AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1   -------改为trigger前一天的数据
AND NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE ='CLWC-工作类型异常' AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )


\**************************************************\
--2. abnormal credit amount 20191029
\***************************************************\
UNION    ------------20200103Yawen 删掉答案为“不一致”条件
SELECT DISTINCT 'SA' AS UNIT
                        ,B.SA AS TEXT_USERNAME_EMPLOYEE_SALES
                        ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
                        ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
                        ,'15' AS CLASS
                        ,'CLWC-贷款金额异常' AS TRIGGER_SOURCE
                        ----nancy 20191213
                        ,CASE WHEN B.PRODUCT ='ACL' AND B.SKP_BANK_ROLE=1962 THEN 'ACL: Remote SA'
                                   WHEN B.PRODUCT ='ACL' AND B.TEXT_IDENT_NUMBER<>'XNA' THEN 'ACL: online_to_offline' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT<=TRUNC(SYSDATE) THEN 'ACL: online_to_online' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT=DATE'3000-01-01' THEN 'ACL: UNREACH_3BOD' 
                                    ELSE 'XCL' END ||'-贷款金额不一致; WC time: '|| DTIME_CALL||', 贷款金额: '||B.AMT_CREDIT|| '。客户说实际金额是'||B.ANSWER_AMOUNT ||'元。'  AS TRIGGER_VALUE
                        ,'SOFT' AS TRIGGER_TYPE
                        ,B.SKP_CREDIT_CASE
                        ,B.TEXT_CONTRACT_NUMBER

            FROM BASE0_1 B
            JOIN  AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
            WHERE INSTR(B.NAME_QUESTION,'您申请的消费贷款本金是多少')>0
            AND TO_NUMBER (regexp_replace(B.ANSWER_AMOUNT,'[^0-9]')) - B.amt_credit <>0
            AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1   -------改为trigger前一天的数据
            AND NOT EXISTS
            (SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE ='CLWC-贷款金额异常' AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )
 
--===========================================
--3.CLWC-CLIENT DENY LOAN & ACL WRONG PARTY--20170721
--===========================================
UNION*/
--------20210324 YW 
SELECT DISTINCT 'SA' AS UNIT
                        ,B.SA AS TEXT_USERNAME_EMPLOYEE_SALES
                        ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
                        ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
                        ,'15' AS CLASS
                        ,CASE WHEN B.NAME_RESULT='客户否认申请贷款' THEN 'CLWC-CLIENT DENY LOAN' ELSE 'CLWC-WRONG PARTY' END AS TRIGGER_SOURCE
                        ,CASE WHEN B.PRODUCT ='ACL' AND B.SKP_BANK_ROLE=1962 THEN 'ACL: Remote SA-'
                                   WHEN B.PRODUCT ='ACL' AND B.TEXT_IDENT_NUMBER<>'XNA' THEN 'ACL: online_to_offline-' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT<=TRUNC(SYSDATE) THEN 'ACL: online_to_online-' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT=DATE'3000-01-01' THEN 'ACL: UNREACH_3BOD-' 
                                    ELSE 'XCL-' END || B.NAME_RESULT||' WC time: '|| DTIME_CALL
                                      ||' Early Repay situation: ' ||CASE WHEN CON.flag_early_repaid_wo_interest='Y' THEN 'ER15' WHEN CON.flag_early_repaid_w_interest='Y' THEN 'ER-LATER' ELSE 'NEVER APPLY' END  AS TRIGGER_VALUE--20180111 
                        ,'SOFT' AS TRIGGER_TYPE
                        ,B.SKP_CREDIT_CASE
                        ,B.TEXT_CONTRACT_NUMBER 
FROM BASE0_1 B
JOIN OWNER_DWH.F_CONTRACT_BASE_AD CON
ON B.SKP_CREDIT_CASE = CON.SKP_CREDIT_CASE 
JOIN  AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
WHERE INSTR(B.NAME_CAMPAIGN_PROCESS_STEP,'CFC-WC-CASH问卷')>0 --排掉验证问卷里的重 2020,01,10 Angela
AND 
 (
INSTR(B.NAME_RESULT,'客户否认申请贷款')>0 
OR INSTR(B.NAME_RESULT,'不认识客户')>0 /*AND B.skp_credit_acquisition_chnl = 6*/----20200416 Yawen cash loan wrong party 全都trigger
OR INSTR(B.NAME_RESULT,'拒绝提供客户电话')>0 /*AND B.skp_credit_acquisition_chnl = 6*/   ----20200416 Yawen 

)
AND CON.DATE_DECISION >SYSDATE -15
AND CON.SKP_CREDIT_TYPE =2
AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1   -------改为trigger前一天的数据
AND NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE IN ('CLWC-CLIENT DENY LOAN','CLWC- ACL WRONG PARTY')AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )
/*\**************************************************\
--4. other repayment 20200103
\***************************************************\
-------------20200103 Yawen added
UNION 
SELECT DISTINCT 'SA' AS UNIT
                        ,B.SA AS TEXT_USERNAME_EMPLOYEE_SALES
                        ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
                        ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
                        ,'15' AS CLASS
                        ,'CLWC-他人代客户还款' AS TRIGGER_SOURCE
                        ,CASE WHEN B.PRODUCT ='ACL' AND B.SKP_BANK_ROLE=1962 THEN 'ACL: Remote SA'
                                   WHEN B.PRODUCT ='ACL' AND B.TEXT_IDENT_NUMBER<>'XNA' THEN 'ACL: online_to_offline' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT<=TRUNC(SYSDATE) THEN 'ACL: online_to_online' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT=DATE'3000-01-01' THEN 'ACL: UNREACH_3BOD' 
                                    ELSE 'XCL' END ||'-客户称'||CASE WHEN INSTR(B.NAME_ANSWER,'其他') >0 THEN '他人' ELSE B.NAME_ANSWER END ||'将代其还款 '||'; WC time: '|| TO_CHAR(B.DTIME_ACTIVITY_START , 'YYYY/MM/DD HH24:MI:SS')  AS TRIGGER_VALUE--20180111 
                        ,'SOFT' AS TRIGGER_TYPE
                        ,B.SKP_CREDIT_CASE
                        ,B.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B 
JOIN  AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
WHERE INSTR(NAME_QUESTION,'谁承诺帮您还款')>0 AND INSTR(B.NAME_ANSWER,'配偶') =0 
AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1   -------改为trigger前一天的数据
            AND NOT EXISTS
            (SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE IN ('CLWC-他人代客户还款')AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )


\**************************************************\
--5. PAY EXTRA FEES 20200108 ANGELA
\***************************************************\
UNION 
SELECT DISTINCT 'SA' AS UNIT
                        ,B.SA AS TEXT_USERNAME_EMPLOYEE_SALES
                        ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
                        ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
                        ,'15' AS CLASS
                        ,'CLWC-PAY EXTRA FEES' AS TRIGGER_SOURCE
                        ,CASE WHEN B.PRODUCT ='ACL' AND B.SKP_BANK_ROLE=1962 THEN 'ACL: Remote SA'
                                   WHEN B.PRODUCT ='ACL' AND B.TEXT_IDENT_NUMBER<>'XNA' THEN 'ACL: online_to_offline' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT<=TRUNC(SYSDATE) THEN 'ACL: online_to_online' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT=DATE'3000-01-01' THEN 'ACL: UNREACH_3BOD' 
                                    ELSE 'XCL' END ||'-客户称向'||CASE WHEN B2.NAME_ANSWER NOT LIKE '%其它%' THEN B2.NAME_ANSWER ELSE B3.text_activity_info END ||' 支付费用 '||'; WC time: '|| B.DTIME_CALL  AS TRIGGER_VALUE--20201104 YW
                        ,'SOFT' AS TRIGGER_TYPE
                        ,B.SKP_CREDIT_CASE
                        ,B.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B 
JOIN  AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
LEFT JOIN BASE0_1 B2
ON B.SKP_CREDIT_CASE =B2.SKP_CREDIT_CASE 
AND B2.NAME_QUESTION LIKE '%您向谁支付了这笔费用%'
LEFT JOIN BASE0_1 B3
ON B.SKP_CREDIT_CASE =B3.SKP_CREDIT_CASE 
AND B3.NAME_QUESTION LIKE '%WC-Qs4.6.3%' ---------20201104 YW 更改问题序号
WHERE INSTR(B.NAME_QUESTION,'手续费')>0 AND B.NAME_ANSWER LIKE '有%'   ------20200708 Yawen
AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
AND NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE IN ('CLWC-PAY EXTRA FEES')AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )
--============================
--6. 客户声称合同已拒绝 2020.01.10
---===========================
UNION
SELECT \*+FULL(ACCA) USE_HASH(B,ACCA)*\ 
      DISTINCT 'SA' AS UNIT 
      ,B.SA AS TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'CLWC-可疑合同状态' AS TRIGGER_SOURCE 
      , CASE WHEN B.PRODUCT ='ACL' AND B.SKP_BANK_ROLE=1962 THEN 'ACL: Remote SA'
                                   WHEN B.PRODUCT ='ACL' AND B.TEXT_IDENT_NUMBER<>'XNA' THEN 'ACL: online_to_offline' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT<=TRUNC(SYSDATE) THEN 'ACL: online_to_online' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT=DATE'3000-01-01' THEN 'ACL: UNREACH_3BOD' 
                                    ELSE 'XCL' END ||'客户声称申请已被拒绝; WC time: ' ||B.DTIME_CALL ----add calling time
      AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,B.SKP_CREDIT_CASE
     ,B.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
WHERE 1=1
AND INSTR(B.NAME_RESULT,'客户声称申请已被拒绝')>0 
 AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
AND NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE LIKE '%CLWC-可疑合同状态%' AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )
--============================
--7. 可疑homer 评论  2020.01.10
---===========================
UNION
SELECT \*+ FULL(A) FULL(DCC) USE_HASH(B A DCC) *\ 'SA' AS UNIT,
        B.SA  AS TEXT_USERNAME_EMPLOYEE,
        TO_CHAR(TRUNC(SYSDATE), 'YYYY/MM/DD') AS DATE_DETECT,
        TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
        '15' AS CLASS,
        'CLWC-可疑Homer评论结果' AS TRIGGER_SOURCE,
        CASE WHEN B.PRODUCT ='ACL' AND B.SKP_BANK_ROLE=1962 THEN 'ACL: Remote SA'
                                   WHEN B.PRODUCT ='ACL' AND B.TEXT_IDENT_NUMBER<>'XNA' THEN 'ACL: online_to_offline' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT<=TRUNC(SYSDATE) THEN 'ACL: online_to_online' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT=DATE'3000-01-01' THEN 'ACL: UNREACH_3BOD' 
                                    ELSE 'XCL' END ||'可疑Homer评论结果为：' || B.WC_ANSWER || ' WC time: ' ||B.DTIME_CALL AS TRIGGER_VALUE,
        'SOFT' AS TRIGGER_TYPE,
        B.SKP_CREDIT_CASE,
        B.TEXT_CONTRACT_NUMBER
        FROM BASE0_1  B
        JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
        WHERE INSTR(B.NAME_QUESTION ,'Homer评论结果是')>0  --anny 2018-02-23 start
        AND B.NAME_ANSWER IS NOT NULL
        AND INSTR(B.NAME_ANSWER,'拒绝回访')=0
        AND INSTR(B.NAME_ANSWER,'WC-C1-1')=0  -----20201117 YW
        AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
AND NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE LIKE '%CLWC-可疑Homer评论结果%' AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )

UNION 
--============================
--8. Note for notice  2020.01.10
---===========================
SELECT \*+ FULL(EX) FULL(WC) FULL(A) USE_HASH(EX WC A) *\ 
       DISTINCT 'SA' AS UNIT 
      ,WC.SA AS TEXT_USERNAME_EMPLOYEE
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'CLWC-NOTE FOR NOTICE' AS TRIGGER_SOURCE 
      ,'NOTE FOR NOTICE: '||WC.TEXT_STAGE_RESULT_NOTE || ' WC time: ' ||TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS TRIGGER_VALUE   
      ,'SOFT' AS TRIGGER_TYPE
      ,WC.SKP_CREDIT_CASE
      ,WC.TEXT_CONTRACT_NUMBER 
FROM BASE0_1 WC
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15 
WHERE  TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
AND (INSTR(WC.TEXT_STAGE_RESULT_NOTE,'套现',1,1)>0
      OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'借用客户身份证',1,1)>0
      OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'不认识客户',1,1)>0
      OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'拒绝回访',1,1)>0
      OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'帮他人贷款',1,1)>0
      OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'还款金额不一致',1,1)>0
      OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'商品类型不一致',1,1)>0
      OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'前几期和后几期还款金额不一样',1,1)>0
      OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'前三个月',1,1)>0  --2018-02-23 anny
      )
AND  NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE LIKE '%CLWC-NOTE FOR NOTICE%' AND FC.SKP_CREDIT_CASE=WC.SKP_CREDIT_CASE  )

--======================================
--9. Note for notice   GUS 20201104 YW
---=====================================
UNION
SELECT \*+ FULL(A) FULL(DCC) USE_HASH(B A DCC) *\ 'SA' AS UNIT,
        B.SA  AS TEXT_USERNAME_EMPLOYEE,
        TO_CHAR(TRUNC(SYSDATE), 'YYYY/MM/DD') AS DATE_DETECT,
        TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
        '15' AS CLASS,
        'CLWC-NOTE FOR NOTICE' AS TRIGGER_SOURCE,
        CASE WHEN B.PRODUCT ='ACL' AND B.SKP_BANK_ROLE=1962 THEN 'ACL: Remote SA'
                                   WHEN B.PRODUCT ='ACL' AND B.TEXT_IDENT_NUMBER<>'XNA' THEN 'ACL: online_to_offline' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT<=TRUNC(SYSDATE) THEN 'ACL: online_to_online' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT=DATE'3000-01-01' THEN 'ACL: UNREACH_3BOD' 
                                    ELSE 'XCL' END ||'NOTE FOR NOTICE：' || b.text_activity_info || ' WC time: ' ||B.DTIME_CALL AS TRIGGER_VALUE,
        'SOFT' AS TRIGGER_TYPE,
        B.SKP_CREDIT_CASE,
        B.TEXT_CONTRACT_NUMBER
        FROM BASE0_1  B
        JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
        WHERE INSTR(B.NAME_QUESTION ,'WC-C1-1')>0  --anny 2018-02-23 start
        AND B.NAME_ANSWER IS NOT NULL
        AND (INSTR(b.text_activity_info,'套现',1,1)>0
      OR INSTR(b.text_activity_info,'借用客户身份证',1,1)>0
      OR INSTR(b.text_activity_info,'不认识客户',1,1)>0
      OR INSTR(b.text_activity_info,'拒绝回访',1,1)>0
      OR INSTR(b.text_activity_info,'帮他人贷款',1,1)>0
      OR INSTR(b.text_activity_info,'还款金额不一致',1,1)>0
      OR INSTR(b.text_activity_info,'商品类型不一致',1,1)>0
      OR INSTR(b.text_activity_info,'前几期和后几期还款金额不一样',1,1)>0
      OR INSTR(b.text_activity_info,'前三个月',1,1)>0  --2018-02-23 anny
        )
        AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
AND NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE LIKE '%CLWC-可疑Homer评论结果%' AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )
UNION
---=====================================================
--- 10.申请提前还款+合同已撤销  20201106 YW
--======================================================
SELECT \*+FULL(ACCA) USE_HASH(BB,ACCA) NO_MERGE*\ 
        DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'CLWC-可疑合同状态' AS TRIGGER_SOURCE 
      ,CASE WHEN INSTR(BB.NAME_RESULT,'提前还款')>0 THEN '客户声称已申请提前还款'
            WHEN INSTR(BB.NAME_RESULT,'撤销或完结或签署')>0  THEN '客户声称合同已经撤销或完结, 但接听欢迎电话时合同状态为现行' ELSE NULL END|| ' WC time: ' ||BB.DTIME_CALL
      AS TRIGGER_VALUE  -------20201104 YW
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_2 BB
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA  ON ACCA.SKP_CREDIT_CASE=BB.SKP_CREDIT_CASE
WHERE 1=1
AND( INSTR(BB.NAME_RESULT,'提前还款')>0 OR INSTR(BB.NAME_RESULT,'撤销或完结或签署')>0 )
AND ACCA.code_credit_status IN ('a') -----合同状态为a  20201104 YW
AND ACCA.DATE_DECISION >=SYSDATE-30*/
---------20210324 YW
)
SELECT UNIT
,TEXT_USERNAME_EMPLOYEE_SALES AS ID_ENTITY
,DATE_DETECT
,WEEK_DETECT
,CLASS
,LISTAGG(TRIGGER_SOURCE, '| ') WITHIN GROUP (ORDER BY TRIGGER_SOURCE DESC)  AS TRIGGER_SOURCE ----20200114 angela
,LISTAGG(TRIGGER_VALUE, '| ') WITHIN GROUP (ORDER BY TRIGGER_VALUE DESC) AS TRIGGER_VALUE ----20200114 angela
,TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM TRI
GROUP BY UNIT
,TEXT_USERNAME_EMPLOYEE_SALES
,DATE_DETECT
,WEEK_DETECT
,CLASS
,TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER;
COMMIT;

---20201106 YW
------=========================================
-----2020.11.17 YW Cash loan VB
------=========================================
---20201106 YW
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'WC-CLWC-VB',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH CASH_LOAN AS 
(
SELECT /*+MATERIALIZE USE_HASH(DCC,AD,TT,EE)*/ 
DISTINCT DCC.SKP_CREDIT_CASE,
DCC.SKP_CLIENT,
DCC.DATE_DECISION,
AD.TEXT_CONTRACT_NUMBER,
DCC.SKP_CONTRACT,
TT.DTIME_3RD_BLOCK_SUBMIT,EE.SKP_BANK_ROLE, EE.TEXT_IDENT_NUMBER,AD.amt_credit,DCC.skp_credit_type,
DCC.skp_credit_status,DCC.skp_credit_acquisition_chnl ,
--kate ke 20191127
--AA.flag_3rd_block_eligible,
CASE WHEN DCC.SKP_CREDIT_ACQUISITION_CHNL=6 THEN 'ACL' ELSE 'XCL' END AS PRODUCT,
CASE WHEN DCC.SKP_CREDIT_ACQUISITION_CHNL=6 AND EE.TEXT_IDENT_NUMBER='XNA' THEN 'Onilne2Online'  --AA.flag_3rd_block_eligible='Y' THEN 'Onilne2Online' 
         WHEN DCC.SKP_CREDIT_ACQUISITION_CHNL=6  THEN EE.TEXT_USERNAME_EMPLOYEE 
           ELSE AD.TEXT_USERNAME_EMPLOYEE_SALES END AS SA
FROM OWNER_DWH.DC_CREDIT_CASE DCC
JOIN  DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD
ON DCC.SKP_CREDIT_CASE =AD.SKP_CREDIT_CASE 
AND DCC.SKP_CREDIT_TYPE =AD.SKP_CREDIT_TYPE 
AND DCC.DATE_DECISION =AD.DATE_DECISION 
JOIN OWNER_DWH.F_APPLICATION_TT TT
ON TT.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE 
AND TT.SKP_CREDIT_TYPE =DCC.SKP_CREDIT_TYPE 
AND TT.DATE_DECISION =DCC.DATE_DECISION 
JOIN OWNER_DWH.DC_EMPLOYEE EE
ON EE.SKP_EMPLOYEE = TT.SKP_EMPLOYEE_CONSULT_3RD_BLOCK
WHERE DCC.DATE_DECISION >=TRUNC(SYSDATE)-10
AND TT.DATE_DECISION >=TRUNC(SYSDATE)-10
AND AD.DATE_DECISION >=TRUNC(SYSDATE)-10
AND AD.SKP_CREDIT_TYPE =2
AND TT.SKP_CREDIT_TYPE =2 
AND DCC.SKP_CREDIT_TYPE =2
AND DCC.SKP_CREDIT_STATUS IN (2,3,5) 
)
---------20200414 Yawen 排除由于WC表join错误的合同------
,OPS AS (
SELECT ROT.SKP_CONTRACT 
FROM OWNER_DWH.F_CALL_RESULT_OPS_TD ROT
WHERE ROT.SKP_CALL_LIST_TYPE = 3
AND ROT.DTIME_CALL >= TRUNC(SYSDATE)-15
)
, BASE0_1 AS 
(
    select /*+ FULL(WC) FULL(DC) FULL(EX) USE_HASH(WC DC EX) CARDINALITY(300000) NO_MERGE */
             CC.DTIME_3RD_BLOCK_SUBMIT
             ,CC.TEXT_IDENT_NUMBER
             ,CC.SKP_BANK_ROLE
             ,CC.AMT_CREDIT
             ,CC.skp_credit_acquisition_chnl
             ,CC.PRODUCT
             ,CC.SA
             ,WC.TEXT_CONTRACT_NUMBER
            ,WC.DTIME_REVIEW
            ,WC.SKP_CREDIT_CASE
            ,WC.SKP_CLIENT
            ,WC.NUM_DAYS_TILL_EVENT
            ,WC.DTIME_ACTIVITY_START
            ,TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS DTIME_CALL-----change on 2018.04.23 Angela
            ,WC.NAME_QUESTION
            ,WC.NAME_ANSWER
            ,WC.NAME_RESULT 
            ,wc.text_activity_info 
            ,regexp_replace(WC.text_activity_info,'[^0-9]') AS ANSWER_AMOUNT---2019.06.24 angela
            ,LISTAGG(REGEXP_REPLACE(REPLACE(WC.text_activity_info,'XNA',''),'[[:punct:]]'),',') WITHIN GROUP (ORDER BY WC.text_activity_info)OVER (PARTITION BY WC.SKP_CREDIT_CASE) AS TEXT_RESULT--2019/11/28 nancy
            ,WC.NAME_CAMPAIGN
            ,WC.TEXT_BIRTH_NUMBER---05.04 ANGELA
            ,WC.text_stage_result_note--new added 18.05.10 Angela
            ,WC.NAME_CAMPAIGN_PROCESS_STEP --2020,01,10 Angela
            ,SUBSTR(WC.NAME_ANSWER, 3, LENGTH(WC.NAME_ANSWER) - 2) AS WC_ANSWER--new added 18.05.10 Angela
      FROM DM_ANTIFRAUD.F_WC_CAMPAIGN_AD WC 
      JOIN CASH_LOAN CC ON WC.SKP_CREDIT_CASE =CC.SKP_CREDIT_CASE  --CASH LOAN 2020,01,10 ANGELA
      JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
      WHERE  WC.DTIME_REVIEW>=SYSDATE-30
            AND (INSTR(WC.NAME_CAMPAIGN ,'CFC-WC-Cash_Voice Bot_WC问卷')>0
                OR INSTR(WC.NAME_CAMPAIGN ,'VB转人工问卷')>0 ) 
            AND TRUNC(WC.DTIME_ACTIVITY_START)-TRUNC(WC.DTIME_REVIEW)<=15--20190626
             AND CC.SKP_CONTRACT IN (SELECT * FROM OPS)  ---------20200414 Yawen
            AND TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
)
,
----REDO
B2_REDO AS 
(
    SELECT B1.SKP_CREDIT_CASE,
    B1.SKP_CLIENT,
    B1.DTIME_REVIEW,
    B1.DTIME_ACTIVITY_START  --------20200312 Yawen
    FROM BASE0_1 B1
    WHERE INSTR(B1.NAME_ANSWER,'VB复听')>0 -------20191230 Yawen
),---选出复听case
DTIME_WC AS (
SELECT SKP_CREDIT_CASE ,DTIME_ACTIVITY_START ,ROW_NUMBER()OVER(PARTITION BY SKP_CREDIT_CASE ORDER BY DTIME_ACTIVITY_START DESC) AS RNK
FROM (SELECT DISTINCT WCC.SKP_CREDIT_CASE , WCC.DTIME_ACTIVITY_START
FROM DM_ANTIFRAUD.F_WC_CAMPAIGN_AD WCC
JOIN B2_REDO B2
ON B2.SKP_CREDIT_CASE =WCC.SKP_CREDIT_CASE 
    AND B2.SKP_CLIENT=WCC.SKP_CLIENT
    AND B2.DTIME_ACTIVITY_START > WCC.DTIME_ACTIVITY_START
    AND WCC.DTIME_REVIEW >= SYSDATE-30
    AND INSTR(WCC.NAME_CAMPAIGN,'CFC-WC-Cash_Voice Bot_WC问卷')>0
    AND TRUNC(WCC.DTIME_ACTIVITY_START)-TRUNC(WCC.DTIME_REVIEW)<=15--20190626
)),
REDO AS 
(    -------WC TIME  20200312 Yawen
    SELECT  BASE0_1.TEXT_CONTRACT_NUMBER
    ,BASE0_1.DTIME_3RD_BLOCK_SUBMIT
    ,BASE0_1.DTIME_REVIEW
    ,BASE0_1.SKP_CREDIT_CASE
    ,BASE0_1.SKP_CLIENT
    ,B3.DTIME_ACTIVITY_START  ------20200312 Yawen
    ,TO_CHAR(B3.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS DTIME_CALL
    ,BASE0_1.NAME_QUESTION
    ,BASE0_1.NAME_ANSWER
   ,BASE0_1.NAME_RESULT 
    ,BASE0_1.text_activity_info
    ,BASE0_1.NAME_CAMPAIGN
    ,BASE0_1.TEXT_BIRTH_NUMBER
    ,BASE0_1.text_stage_result_note--复听case的所有
    ,BASE0_1.skp_credit_acquisition_chnl
    ,BASE0_1.ANSWER_AMOUNT
    ,BASE0_1.WC_ANSWER
    ,BASE0_1.PRODUCT
    ,BASE0_1.TEXT_IDENT_NUMBER
    ,BASE0_1.SKP_BANK_ROLE
    ,BASE0_1.SA
    FROM BASE0_1
    JOIN B2_REDO B2
    ON B2.SKP_CREDIT_CASE =BASE0_1.SKP_CREDIT_CASE ---复听case
    AND B2.SKP_CLIENT=BASE0_1.SKP_CLIENT
    AND B2.DTIME_ACTIVITY_START =BASE0_1.DTIME_ACTIVITY_START ----时间与复听时间一致
    AND B2.DTIME_REVIEW=BASE0_1.DTIME_REVIEW
    JOIN DTIME_WC B3
    ON BASE0_1.SKP_CREDIT_CASE =B3.SKP_CREDIT_CASE 
    AND B3.RNK =1
)
,
DM_TABLE AS
(
    SELECT AD.skp_credit_case,AD.date_decision,AD.skp_salesroom,AD.text_contract_number,AD.code_credit_status
    ,AD.TEXT_USERNAME_EMPLOYEE_SALES,AD.skp_credit_type,AD.NAME_PRODUCT,AD.num_age --20191107
    ,AD.amt_credit
    FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD  AD
    WHERE AD.date_decision>=SYSDATE-30
    AND AD.SKP_CREDIT_TYPE=2 --20191014
)
,TRANSFER_TO_AGENT as (
SELECT * FROM BASE0_1 WC
WHERE INSTR(WC.NAME_CAMPAIGN ,'VB转人工问卷')>0 
)
,TRI AS (

/*\***************************************************\
--1. VB REDO疑似学生办单 
\***************************************************\
SELECT DISTINCT 'SA' AS UNIT
      ,D.TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS 
      ,'VB复听-CLWC-工作类型异常' AS TRIGGER_SOURCE
     --nancy 20191213
       ,'XCL'||'-疑似学生办单; WC time: '||DTIME_CALL AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,B.SKP_CREDIT_CASE
      ,B.TEXT_CONTRACT_NUMBER
FROM REDO B
JOIN DM_TABLE D
ON B.SKP_CREDIT_cASE = D.SKP_CREDIT_cASE
WHERE INSTR(B.NAME_QUESTION,'学生')>0 AND B.NAME_ANSWER='是'    --------201901202Yawen
------AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1   -------改为trigger前一天的数据
AND NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE ='CLWC-工作类型异常' AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )
UNION
\***************************************************\
--1. VB_TO_AGENT 疑似学生办单 
\***************************************************\
SELECT DISTINCT 'SA' AS UNIT
      ,D.TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'VB_TO_AGENT-CLWC-工作类型异常' AS TRIGGER_SOURCE
     --nancy 20191213
       ,'XCL'||'-疑似学生办单; WC time: '||DTIME_CALL AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,B.SKP_CREDIT_CASE
      ,B.TEXT_CONTRACT_NUMBER
FROM TRANSFER_TO_AGENT B
JOIN DM_TABLE D
ON B.SKP_CREDIT_cASE = D.SKP_CREDIT_cASE
WHERE INSTR(B.NAME_QUESTION,'学生')>0 AND B.NAME_ANSWER='是'    --------201901202Yawen
------AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1   -------改为trigger前一天的数据
AND NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE ='CLWC-工作类型异常' AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )

\**************************************************\
--2.  VB REDO abnormal credit amount 
\***************************************************\
UNION    ------------20200103Yawen 删掉答案为“不一致”条件
SELECT DISTINCT 'SA' AS UNIT
                        ,D.TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE_SALES
                        ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
                        ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
                        ,'15' AS CLASS
                        ,'VB复听-CLWC-贷款金额异常' AS TRIGGER_SOURCE
                        ----nancy 20191213
                        ,'XCL'||'-贷款金额不一致; WC time: '|| DTIME_CALL||', 贷款金额: '||D.amt_credit|| '。客户说实际金额是'||B.ANSWER_AMOUNT ||'元。'  AS TRIGGER_VALUE
                        ,'SOFT' AS TRIGGER_TYPE
                        ,B.SKP_CREDIT_CASE
                        ,B.TEXT_CONTRACT_NUMBER

            FROM REDO B
            JOIN DM_TABLE D
            ON B.SKP_CREDIT_cASE = D.SKP_CREDIT_cASE
            -----JOIN  AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
            WHERE INSTR(B.NAME_QUESTION,'您申请的消费贷款本金是多少')>0
            AND TO_NUMBER (regexp_replace(B.ANSWER_AMOUNT,'[^0-9]')) - D.amt_credit <>0
            -----AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1   -------改为trigger前一天的数据
            AND NOT EXISTS
            (SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE ='CLWC-贷款金额异常' AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )
\**************************************************\
--2.  VB_TO_AGENT abnormal credit amount 
\***************************************************\
UNION
SELECT DISTINCT 'SA' AS UNIT
                        ,D.TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE_SALES
                        ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
                        ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
                        ,'15' AS CLASS
                        ,'VB_TO_AGENT-CLWC-贷款金额异常' AS TRIGGER_SOURCE
                        ----nancy 20191213
                        ,'XCL'||'-贷款金额不一致; WC time: '|| DTIME_CALL||', 贷款金额: '||D.amt_credit|| '。客户说实际金额是'||B.ANSWER_AMOUNT ||'元。'  AS TRIGGER_VALUE
                        ,'SOFT' AS TRIGGER_TYPE
                        ,B.SKP_CREDIT_CASE
                        ,B.TEXT_CONTRACT_NUMBER
            FROM TRANSFER_TO_AGENT B
            JOIN DM_TABLE D
            ON B.SKP_CREDIT_cASE = D.SKP_CREDIT_cASE
            -----JOIN  AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
            WHERE INSTR(B.NAME_QUESTION,'您申请的消费贷款本金是多少')>0
            AND TO_NUMBER (regexp_replace(B.ANSWER_AMOUNT,'[^0-9]')) - D.amt_credit <>0
            -----AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1   -------改为trigger前一天的数据
            AND NOT EXISTS
            (SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE ='CLWC-贷款金额异常' AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )
*/
---------20210324 COMMENTED BY YW
/**************************************************/
--3. VB REDO 否认贷款 
/***************************************************/
/*UNION*/
SELECT DISTINCT 'SA' AS UNIT
                        ,d.TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE_SALES
                        ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
                        ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
                        ,'15' AS CLASS
                        ,CASE WHEN B.NAME_RESULT='客户否认申请贷款' THEN 'VB复听-CLWC-CLIENT DENY LOAN' ELSE 'VB复听-CLWC-WRONG PARTY' END AS TRIGGER_SOURCE
                        ,'XCL-'|| B.NAME_RESULT||' WC time: '|| DTIME_CALL
                                      ||' Early Repay situation: ' ||CASE WHEN CON.flag_early_repaid_wo_interest='Y' THEN 'ER15' WHEN CON.flag_early_repaid_w_interest='Y' THEN 'ER-LATER' ELSE 'NEVER APPLY' END  AS TRIGGER_VALUE--20180111 
                        ,'SOFT' AS TRIGGER_TYPE 
                        ,B.SKP_CREDIT_CASE
                        ,B.TEXT_CONTRACT_NUMBER 
FROM redo B
JOIN OWNER_DWH.F_CONTRACT_BASE_AD CON
ON B.SKP_CREDIT_CASE = CON.SKP_CREDIT_CASE 
JOIN DM_TABLE D
            ON B.SKP_CREDIT_cASE = D.SKP_CREDIT_cASE
-----JOIN  AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
WHERE/* INSTR(B.NAME_CAMPAIGN_PROCESS_STEP,'CFC-WC-CASH问卷')>0 --排掉验证问卷里的重 2020,01,10 Angela*/
 (
INSTR(B.NAME_RESULT,'客户否认申请贷款')>0 
OR INSTR(B.NAME_RESULT,'不认识客户')>0 /*AND B.skp_credit_acquisition_chnl = 6*/----20200416 Yawen cash loan wrong party 全都trigger
OR INSTR(B.NAME_RESULT,'拒绝提供客户电话')>0 /*AND B.skp_credit_acquisition_chnl = 6*/   ----20200416 Yawen 
)
----AND CON.DATE_DECISION >SYSDATE -15
AND CON.SKP_CREDIT_TYPE =2
-----AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1   -------改为trigger前一天的数据
AND NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC 
WHERE FC.CLASS=15 
AND (FC.TRIGGER_SOURCE LIKE '%CLIENT DENY LOAN%'
    OR FC.TRIGGER_SOURCE LIKE '%WRONG PARTY%')
AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )  
/**************************************************/
--3. VB_TO_AGENT 否认贷款 
/***************************************************/
UNION
SELECT DISTINCT 'SA' AS UNIT
                        ,d.TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE_SALES
                        ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
                        ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
                        ,'15' AS CLASS
                        ,CASE WHEN B.NAME_RESULT='客户否认申请贷款' THEN 'VB_TO_AGENT-CLWC-CLIENT DENY LOAN' ELSE 'VB_TO_AGENT-CLWC-WRONG PARTY' END AS TRIGGER_SOURCE
                        ,'XCL-'|| B.NAME_RESULT||' WC time: '|| DTIME_CALL
                                      ||' Early Repay situation: ' ||CASE WHEN CON.flag_early_repaid_wo_interest='Y' THEN 'ER15' WHEN CON.flag_early_repaid_w_interest='Y' THEN 'ER-LATER' ELSE 'NEVER APPLY' END  AS TRIGGER_VALUE--20180111 
                        ,'SOFT' AS TRIGGER_TYPE 
                        ,B.SKP_CREDIT_CASE
                        ,B.TEXT_CONTRACT_NUMBER  
FROM TRANSFER_TO_AGENT B
JOIN OWNER_DWH.F_CONTRACT_BASE_AD CON
ON B.SKP_CREDIT_CASE = CON.SKP_CREDIT_CASE 
JOIN DM_TABLE D
            ON B.SKP_CREDIT_cASE = D.SKP_CREDIT_cASE
-----JOIN  AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
WHERE/* INSTR(B.NAME_CAMPAIGN_PROCESS_STEP,'CFC-WC-CASH问卷')>0 --排掉验证问卷里的重 2020,01,10 Angela*/
 (
INSTR(B.NAME_RESULT,'客户否认申请贷款')>0 
OR INSTR(B.NAME_RESULT,'不认识客户')>0 /*AND B.skp_credit_acquisition_chnl = 6*/----20200416 Yawen cash loan wrong party 全都trigger
OR INSTR(B.NAME_RESULT,'拒绝提供客户电话')>0 /*AND B.skp_credit_acquisition_chnl = 6*/   ----20200416 Yawen 
)
----AND CON.DATE_DECISION >SYSDATE -15
AND CON.SKP_CREDIT_TYPE =2
-----AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1   -------改为trigger前一天的数据
AND NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC 
WHERE FC.CLASS=15 
AND (FC.TRIGGER_SOURCE LIKE '%CLIENT DENY LOAN%'
    OR FC.TRIGGER_SOURCE LIKE '%WRONG PARTY%')
AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )  
/*\**************************************************\
--4. VB REDO  他人替客户还款 
\***************************************************\
UNION
SELECT DISTINCT 'SA' AS UNIT
                        ,d.TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE_SALES
                        ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
                        ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
                        ,'15' AS CLASS
                        ,'VB复听-CLWC-他人代客户还款' AS TRIGGER_SOURCE
                        ,'XCL'||'-客户称他人将代其还款 '||'; WC time: '|| TO_CHAR(B.DTIME_ACTIVITY_START , 'YYYY/MM/DD HH24:MI:SS')  AS TRIGGER_VALUE--20180111 
                        ,'SOFT' AS TRIGGER_TYPE
                        ,B.SKP_CREDIT_CASE
                        ,B.TEXT_CONTRACT_NUMBER
FROM REDO B 
JOIN DM_TABLE D
            ON B.SKP_CREDIT_cASE = D.SKP_CREDIT_cASE
-----JOIN  AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
WHERE INSTR(NAME_QUESTION,'家人或配偶')>0 AND B.NAME_ANSWER = '不是'
----AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1   -------改为trigger前一天的数据
            AND NOT EXISTS
            (SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE IN ('CLWC-他人代客户还款')AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )
\**************************************************\
--4. VB_TO_AGENT- 他人替客户还款 
\***************************************************\
UNION
SELECT DISTINCT 'SA' AS UNIT
                        ,d.TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE_SALES
                        ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
                        ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
                        ,'15' AS CLASS
                        ,'VB_TO_AGENT-CLWC-他人代客户还款' AS TRIGGER_SOURCE
                        ,'XCL'||'-客户称他人将代其还款 '||'; WC time: '|| TO_CHAR(B.DTIME_ACTIVITY_START , 'YYYY/MM/DD HH24:MI:SS')  AS TRIGGER_VALUE--20180111 
                        ,'SOFT' AS TRIGGER_TYPE
                        ,B.SKP_CREDIT_CASE
                        ,B.TEXT_CONTRACT_NUMBER
FROM TRANSFER_TO_AGENT B 
JOIN DM_TABLE D
            ON B.SKP_CREDIT_cASE = D.SKP_CREDIT_cASE
-----JOIN  AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
WHERE INSTR(NAME_QUESTION,'家人或配偶')>0 AND B.NAME_ANSWER = '不是'
----AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1   -------改为trigger前一天的数据
            AND NOT EXISTS
            (SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE IN ('CLWC-他人代客户还款')AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )
\**************************************************\
--5. VB REDO 客户向他人支付手续费
\***************************************************\
UNION 
SELECT DISTINCT 'SA' AS UNIT
                        ,D.TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE_SALES
                        ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
                        ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
                        ,'15' AS CLASS
                        ,'VB复听-CLWC-PAY EXTRA FEES' AS TRIGGER_SOURCE
                        ,'XCL'||'-客户称向他人支付费用 '||'; WC time: '|| B.DTIME_CALL  AS TRIGGER_VALUE--20200108
                        ,'SOFT' AS TRIGGER_TYPE
                        ,B.SKP_CREDIT_CASE
                        ,B.TEXT_CONTRACT_NUMBER
FROM REDO B 
JOIN DM_TABLE D
ON B.SKP_CREDIT_cASE = D.SKP_CREDIT_cASE
WHERE INSTR(B.NAME_QUESTION,'手续费')>0 AND B.NAME_ANSWER ='是'  ------20200708 Yawen
----AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
AND NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE IN ('CLWC-PAY EXTRA FEES')AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )
\**************************************************\
--5. VB_TO_AGENT 客户向他人支付手续费
\***************************************************\
UNION 
SELECT DISTINCT 'SA' AS UNIT
                        ,D.TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE_SALES
                        ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
                        ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
                        ,'15' AS CLASS
                        ,'VB_TO_AGENT-CLWC-PAY EXTRA FEES' AS TRIGGER_SOURCE
                        ,'XCL'||'-客户称向他人支付费用 '||'; WC time: '|| B.DTIME_CALL  AS TRIGGER_VALUE--20200108
                        ,'SOFT' AS TRIGGER_TYPE
                        ,B.SKP_CREDIT_CASE
                        ,B.TEXT_CONTRACT_NUMBER
FROM TRANSFER_TO_AGENT B 
JOIN DM_TABLE D
ON B.SKP_CREDIT_cASE = D.SKP_CREDIT_cASE
WHERE INSTR(B.NAME_QUESTION,'手续费')>0 AND B.NAME_ANSWER ='是'  ------20200708 Yawen
----AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
AND NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE IN ('CLWC-PAY EXTRA FEES')AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )
--============================
--6. VB REDO 客户声称合同已拒绝 2020.01.10
---===========================
UNION
SELECT \*+FULL(ACCA) USE_HASH(B,ACCA)*\ 
      DISTINCT 'SA' AS UNIT 
      ,B.SA AS TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'VB复听-CLWC-可疑合同状态' AS TRIGGER_SOURCE 
      , CASE WHEN B.PRODUCT ='ACL' AND B.SKP_BANK_ROLE=1962 THEN 'ACL: Remote SA'
                                   WHEN B.PRODUCT ='ACL' AND B.TEXT_IDENT_NUMBER<>'XNA' THEN 'ACL: online_to_offline' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT<=TRUNC(SYSDATE) THEN 'ACL: online_to_online' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT=DATE'3000-01-01' THEN 'ACL: UNREACH_3BOD' 
                                    ELSE 'XCL' END ||'客户声称申请已被拒绝; WC time: ' ||B.DTIME_CALL ----add calling time
      AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,B.SKP_CREDIT_CASE
     ,B.TEXT_CONTRACT_NUMBER
FROM REDO B
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
WHERE 1=1
AND INSTR(B.NAME_RESULT,'客户声称申请已被拒绝')>0 
 AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
AND NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE LIKE '%CLWC-可疑合同状态%' AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )
--============================
--6.TRANSFER_TO_AGENT 客户声称合同已拒绝 2020.01.10
---===========================
UNION
SELECT \*+FULL(ACCA) USE_HASH(B,ACCA)*\ 
      DISTINCT 'SA' AS UNIT 
      ,B.SA AS TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'VB_TO_AGENT-CLWC-可疑合同状态' AS TRIGGER_SOURCE 
      , CASE WHEN B.PRODUCT ='ACL' AND B.SKP_BANK_ROLE=1962 THEN 'ACL: Remote SA'
                                   WHEN B.PRODUCT ='ACL' AND B.TEXT_IDENT_NUMBER<>'XNA' THEN 'ACL: online_to_offline' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT<=TRUNC(SYSDATE) THEN 'ACL: online_to_online' 
                                   WHEN B.PRODUCT ='ACL' AND B.DTIME_3RD_BLOCK_SUBMIT=DATE'3000-01-01' THEN 'ACL: UNREACH_3BOD' 
                                    ELSE 'XCL' END ||'客户声称申请已被拒绝; WC time: ' ||B.DTIME_CALL ----add calling time
      AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,B.SKP_CREDIT_CASE
     ,B.TEXT_CONTRACT_NUMBER
FROM TRANSFER_TO_AGENT B
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
WHERE 1=1
AND INSTR(B.NAME_RESULT,'客户声称申请已被拒绝')>0 
 AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
AND NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE LIKE '%CLWC-可疑合同状态%' AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )
\**************************************************\
--7. VB REDO 可疑homer 评论
\***************************************************\
UNION
SELECT \*+ FULL(A) FULL(DCC) USE_HASH(B A DCC) *\ 'SA' AS UNIT,
        D.TEXT_USERNAME_EMPLOYEE_SALES  AS TEXT_USERNAME_EMPLOYEE_SALES,
        TO_CHAR(TRUNC(SYSDATE), 'YYYY/MM/DD') AS DATE_DETECT,
        TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
        '15' AS CLASS,
        'VB复听-CLWC-可疑Homer评论结果' AS TRIGGER_SOURCE,
        'XCL'||'可疑Homer评论结果为：' || B.WC_ANSWER || ' WC time: ' ||B.DTIME_CALL AS TRIGGER_VALUE,
        'SOFT' AS TRIGGER_TYPE,
        B.SKP_CREDIT_CASE,
        B.TEXT_CONTRACT_NUMBER
        FROM REDO  B
        JOIN DM_TABLE D
        ON B.SKP_CREDIT_cASE = D.SKP_CREDIT_cASE
        ---JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
        WHERE INSTR(B.NAME_QUESTION ,'Homer评论结果是')>0  --anny 2018-02-23 start
        AND B.NAME_ANSWER IS NOT NULL
        AND INSTR(B.NAME_ANSWER,'拒绝回访')=0
        AND INSTR(B.NAME_ANSWER,'复听')=0
        AND INSTR(B.NAME_ANSWER,'VBC-C1-1')=0
        ----AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
AND NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE LIKE '%CLWC-可疑Homer评论结果%' AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )
\**************************************************\
--7. VB_TO_AGENT 可疑homer 评论
\***************************************************\
UNION
SELECT \*+ FULL(A) FULL(DCC) USE_HASH(B A DCC) *\ 'SA' AS UNIT,
        D.TEXT_USERNAME_EMPLOYEE_SALES  AS TEXT_USERNAME_EMPLOYEE_SALES,
        TO_CHAR(TRUNC(SYSDATE), 'YYYY/MM/DD') AS DATE_DETECT,
        TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
        '15' AS CLASS,
        'VB_TO_AGENT-CLWC-可疑Homer评论结果' AS TRIGGER_SOURCE,
        'XCL'||'可疑Homer评论结果为：' || B.WC_ANSWER || ' WC time: ' ||B.DTIME_CALL AS TRIGGER_VALUE,
        'SOFT' AS TRIGGER_TYPE,
        B.SKP_CREDIT_CASE,
        B.TEXT_CONTRACT_NUMBER
        FROM TRANSFER_TO_AGENT B
        JOIN DM_TABLE D
        ON B.SKP_CREDIT_cASE = D.SKP_CREDIT_cASE
        ---JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
        WHERE INSTR(B.NAME_QUESTION ,'Homer评论结果是')>0  --anny 2018-02-23 start
        AND B.NAME_ANSWER IS NOT NULL
        AND INSTR(B.NAME_ANSWER,'拒绝回访')=0
        AND INSTR(B.NAME_ANSWER,'复听')=0
        AND INSTR(B.NAME_ANSWER,'VBC-C1-1')=0
        ----AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
AND NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE LIKE '%CLWC-可疑Homer评论结果%' AND FC.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE  )
UNION 
--============================
--8.VB TO AGENT Note for notice
---===========================
SELECT \*+ FULL(EX) FULL(WC) FULL(A) USE_HASH(EX WC A) *\ 
       DISTINCT 'SA' AS UNIT 
      ,D.TEXT_USERNAME_EMPLOYEE_SALES  AS TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'VB_TO_AGENT-CLWC-NOTE FOR NOTICE' AS TRIGGER_SOURCE 
      ,'NOTE FOR NOTICE: '||WC.text_activity_info || ' WC time: ' ||TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS TRIGGER_VALUE   
      ,'SOFT' AS TRIGGER_TYPE
      ,WC.SKP_CREDIT_CASE
      ,WC.TEXT_CONTRACT_NUMBER 
FROM TRANSFER_TO_AGENT WC
JOIN DM_TABLE D
        ON WC.SKP_CREDIT_cASE = D.SKP_CREDIT_cASE
---JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15 
WHERE  ----TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
\*AND*\ (INSTR(WC.text_activity_info,'套现',1,1)>0
      OR INSTR(WC.text_activity_info,'借用客户身份证',1,1)>0
      OR INSTR(WC.text_activity_info,'不认识客户',1,1)>0
      OR INSTR(WC.text_activity_info,'拒绝回访',1,1)>0
      OR INSTR(WC.text_activity_info,'帮他人贷款',1,1)>0
      OR INSTR(WC.text_activity_info,'还款金额不一致',1,1)>0
      OR INSTR(WC.text_activity_info,'商品类型不一致',1,1)>0
      OR INSTR(WC.text_activity_info,'前几期和后几期还款金额不一样',1,1)>0
      OR INSTR(WC.text_activity_info,'前三个月',1,1)>0  --2018-02-23 anny
      )
AND INSTR(WC.NAME_QUESTION ,'VBC-C1-1')>0  --anny 2018-02-23 start
AND  NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE LIKE '%CLWC-NOTE FOR NOTICE%' AND FC.SKP_CREDIT_CASE=WC.SKP_CREDIT_CASE  )
UNION 
--============================
--8.VB REDO Note for notice
---===========================
SELECT \*+ FULL(EX) FULL(WC) FULL(A) USE_HASH(EX WC A) *\ 
       DISTINCT 'SA' AS UNIT 
      ,D.TEXT_USERNAME_EMPLOYEE_SALES  AS TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'VB复听-CLWC-NOTE FOR NOTICE' AS TRIGGER_SOURCE 
      ,'NOTE FOR NOTICE: '||WC.TEXT_STAGE_RESULT_NOTE || ' WC time: ' ||TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS TRIGGER_VALUE   
      ,'SOFT' AS TRIGGER_TYPE
      ,WC.SKP_CREDIT_CASE
      ,WC.TEXT_CONTRACT_NUMBER 
FROM REDO WC
JOIN DM_TABLE D
        ON WC.SKP_CREDIT_cASE = D.SKP_CREDIT_cASE
---JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15 
WHERE  ----TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
\*AND*\ (INSTR(WC.TEXT_STAGE_RESULT_NOTE,'套现',1,1)>0
      OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'借用客户身份证',1,1)>0
      OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'不认识客户',1,1)>0
      OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'拒绝回访',1,1)>0
      OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'帮他人贷款',1,1)>0
      OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'还款金额不一致',1,1)>0
      OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'商品类型不一致',1,1)>0
      OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'前几期和后几期还款金额不一样',1,1)>0
      OR INSTR(WC.TEXT_STAGE_RESULT_NOTE,'前三个月',1,1)>0  --2018-02-23 anny
      )
AND  NOT EXISTS
(SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC WHERE FC.CLASS=15 AND FC.TRIGGER_SOURCE LIKE '%CLWC-NOTE FOR NOTICE%' AND FC.SKP_CREDIT_CASE=WC.SKP_CREDIT_CASE  )
*/
-----------20210324 YW COMMENTED
)

SELECT UNIT
,TEXT_USERNAME_EMPLOYEE_SALES AS ID_ENTITY
,DATE_DETECT
,WEEK_DETECT
,CLASS
,LISTAGG(TRIGGER_SOURCE, '| ') WITHIN GROUP (ORDER BY TRIGGER_SOURCE DESC)  AS TRIGGER_SOURCE ----20200114 angela
,LISTAGG(TRIGGER_VALUE, '| ') WITHIN GROUP (ORDER BY TRIGGER_VALUE DESC) AS TRIGGER_VALUE ----20200114 angela
,TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM TRI
GROUP BY UNIT
,TEXT_USERNAME_EMPLOYEE_SALES
,DATE_DETECT
,WEEK_DETECT
,CLASS
,TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER;
COMMIT;

--======================================================================================
--INTEGRATE CAMPAIGN 20200115 Yawen -- 20200119 Edit by Angela --20200210 Edit by Yawen --20200429 Yawen
--======================================================================================
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'WC-INTEGRATE',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH BASE_00 AS (
SELECT DISTINCT POSL.SKP_CREDIT_CASE 
       ,POSL.TEXT_CONTRACT_NUMBER
       ,POSL.DTIME_ACTIVATION AS DTIME_ACTIVATION_POS
       ,CASE /*WHEN DCC.SKP_CREDIT_TYPE = 1 AND DCC.SKP_CREDIT_ACQUISITION_CHNL = 8 AND DCC.SKP_PRODUCT_CHANNEL = 804 THEN 'RPOS'*/
       WHEN DCC.SKP_CREDIT_TYPE = 1 AND DCC.SKP_CREDIT_ACQUISITION_CHNL = 8 AND DCC.SKP_PRODUCT_CHANNEL = 804 AND DCC.code_rpos_type='1' THEN 'RPOS-online'
       WHEN DCC.SKP_CREDIT_TYPE = 1 AND DCC.SKP_CREDIT_ACQUISITION_CHNL = 8 AND DCC.SKP_PRODUCT_CHANNEL = 804 AND DCC.code_rpos_type='2' THEN 'RPOS-offline'--UPDATE 20200805 NANCY
       WHEN DCC.SKP_CREDIT_TYPE = 1 AND DCC.SKP_CREDIT_ACQUISITION_CHNL = 21 THEN 'ALDI 2.0' ELSE 'POSL' END AS POSL_LOAN_TYPE
       ,CL.SKP_CREDIT_CASE AS SKP_CREDIT_CASE_CASH
       ,CL.TEXT_CONTRACT_NUMBER AS TEXT_CONTRACT_NUMBER_CASH
       ,CL.DTIME_ACTIVATION AS DTIME_ACTIVATION_CASH
       ,CASE WHEN CLL.skp_credit_acquisition_chnl = 6 THEN 'ACL' ELSE 'XCL' END CASH_LOAN_TYPE
       ,POSL.DATE_DECISION AS DATE_DECISION_POS
       ,CL.DATE_DECISION AS DATE_DECISION_CASH
       ,POSL.SKP_CLIENT
       ,RANK()OVER(ORDER BY POSL.SKP_CLIENT) AS RNK
       ,ROW_NUMBER()OVER(PARTITION BY POSL.SKP_CLIENT ORDER BY CL.DTIME_ACTIVATION) AS RNK_C   -------20200414 Yawen 
FROM OWNER_DWH.DC_CONTRACT POSL
JOIN OWNER_DWH.DC_CONTRACT CL
ON POSL.SKP_CLIENT = CL.SKP_CLIENT
JOIN OWNER_DWH.DC_CREDIT_CASE CLL
ON CL.SKP_CREDIT_CASE = CLL.SKP_CREDIT_CASE 
AND CL.SKP_CREDIT_TYPE =CLL.SKP_CREDIT_TYPE 
AND CL.DATE_DECISION =CLL.DATE_DECISION 
JOIN OWNER_DWH.DC_CREDIT_CASE DCC
ON POSL.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE 
AND POSL.SKP_CREDIT_TYPE =DCC.SKP_CREDIT_TYPE 
AND POSL.DATE_DECISION =DCC.DATE_DECISION 
AND DCC.DATE_DECISION >SYSDATE-30
AND DCC.SKP_CREDIT_TYPE =1
WHERE POSL.DATE_DECISION >= SYSDATE-30
AND CL.DATE_DECISION >=  SYSDATE-30
AND CLL.DATE_DECISION >= DATE '2020-01-01'
AND POSL.DTIME_ACTIVATION >=  SYSDATE-30
AND CL.DTIME_ACTIVATION >= SYSDATE-30
AND POSL.SKP_CREDIT_TYPE = 1
AND CL.SKP_CREDIT_TYPE = 2 
AND CLL.SKP_CREDIT_TYPE = 2
AND ABS (TRUNC(POSL.DTIME_ACTIVATION)-TRUNC(CL.DTIME_ACTIVATION))<6
AND POSL.SKP_CREDIT_STATUS IN (2,3)
AND CL.SKP_CREDIT_STATUS IN (2,3) 
AND CLL.SKP_CREDIT_STATUS IN (2,3)
),
BASE0_1 AS 
(
    select /*+ FULL(WC) FULL(DC) FULL(EX) USE_HASH(WC DC EX) CARDINALITY(300000) NO_MERGE */
             WC.TEXT_CONTRACT_NUMBER
            ,WC.DTIME_REVIEW
            ,WC.SKP_CREDIT_CASE
            ,WC.SKP_CLIENT
            ,WC.NUM_DAYS_TILL_EVENT
            ,WC.DTIME_ACTIVITY_START
            ,TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS DTIME_CALL-----change on 2018.04.23 Angela
            ,WC.NAME_QUESTION
            ,WC.NAME_ANSWER
            ,WC.NAME_RESULT 
            ,WC.text_activity_info
            ,LISTAGG(REGEXP_REPLACE(REPLACE(WC.text_activity_info,'XNA',''),'[[:punct:]]'),',') 
            WITHIN GROUP (ORDER BY WC.text_activity_info)OVER (PARTITION BY WC.SKP_CREDIT_CASE) AS TEXT_RESULT--2019/11/28 nancy
            ,WC.NAME_CAMPAIGN
            ,WC.TEXT_BIRTH_NUMBER---05.04 ANGELA
            ,WC.text_stage_result_note--new added 18.05.10 Angela
            ,SUBSTR(WC.NAME_ANSWER, 3, LENGTH(WC.NAME_ANSWER) - 2) AS WC_ANSWER--new added 18.05.10 Angela
            ,CC.DTIME_ACTIVATION_POS
            ,CC.SKP_CREDIT_CASE_CASH
            ,CC.TEXT_CONTRACT_NUMBER_CASH 
            ,CC.DTIME_ACTIVATION_CASH
            ,CC.CASH_LOAN_TYPE
            ,CC.POSL_LOAN_TYPE
            ,CC.RNK
      FROM DM_ANTIFRAUD.F_WC_CAMPAIGN_AD WC 
      JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
      JOIN BASE_00 CC
      ON WC.SKP_CREDIT_CASE = CC.SKP_CREDIT_CASE 
      AND CC.RNK_C = 1   ------20200414 Yawen
      WHERE  1=1
            AND CC.date_decision_POS>=SYSDATE-30
            AND CC.date_decision_CASH>=SYSDATE-30
            AND WC.DTIME_REVIEW>=SYSDATE-30
            AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC')>0 
            AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-Voice Bot')=0 -------Yawen 20200110
            AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-INTEGRATE问卷')>0 ---Yawen 20200110
            AND WC.DTIME_ACTIVITY_START >= DATE '2020-01-09'
            AND TRUNC(WC.DTIME_ACTIVITY_START)-TRUNC(WC.DTIME_REVIEW)<=15--20190626
            AND TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
) 
,

--------------------------------------------------------------------------
--申请提前还款+合同已撤销 
--------------------------------------------------------------------------
BASE0_2 AS 
(
    SELECT /*+ FULL(WC) FULL(EX) NO_MERGE CARDINALITY(300000) */
             WC.TEXT_CONTRACT_NUMBER
            ,WC.DTIME_REVIEW
            ,WC.SKP_CREDIT_CASE
            ,WC.SKP_CLIENT
            ,WC.NUM_DAYS_TILL_EVENT
            ,TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS DTIME_CALL
            ,WC.NAME_QUESTION
            ,WC.NAME_ANSWER
            ,WC.NAME_RESULT 
            ,WC.text_activity_info 
            ,WC.NAME_CAMPAIGN
            ,CC.DTIME_ACTIVATION_POS
            ,CC.SKP_CREDIT_CASE_CASH
            ,CC.TEXT_CONTRACT_NUMBER_CASH
            ,CC.DTIME_ACTIVATION_CASH
            ,CC.CASH_LOAN_TYPE
            ,CC.POSL_LOAN_TYPE
      FROM DM_ANTIFRAUD.F_WC_CAMPAIGN_AD WC 
      JOIN BASE_00 CC
      ON WC.SKP_CREDIT_CASE = CC.SKP_CREDIT_CASE 
      JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
      WHERE  1=1
            AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-INTEGRATE')>0 
            AND INSTR(WC.NAME_CAMPAIGN,'CFC-WC-Voice Bot问卷')=0 --anny 2018-06-14
            AND TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT)-14 AND TRUNC(SYSDATE)-15------trigger15天前 4.23 Angela
            AND WC.DTIME_REVIEW>=SYSDATE-30
),
--------------------------------------------------------------------
---- new subquery to join BASE0_1 and f_af_credit_case_ad for data reuse
---- Added 18.12.2019, YS
--------------------------------------------------------------------
TMP_AD30 AS 
(
    SELECT ACCA.*,ACCA1.AMT_CREDIT AS AMT_CL
    FROM (SELECT DISTINCT B.SKP_CREDIT_CASE,B.SKP_CREDIT_CASE_CASH FROM BASE0_1 B) B
    JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA  ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
    JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA1 ON ACCA1.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE_CASH
    WHERE ACCA.DATE_DECISION >= SYSDATE-30
),
EXCLUDE_INSURANCE AS
(
SELECT 
PG.DATE_DECISION,
PG.SKP_CREDIT_CASE,
PG.AMT_GOODS_PRICE, 
CASE WHEN INS.AMT_GOODS_PRICE IS NULL THEN 0 ELSE INS.AMT_GOODS_PRICE END AS INSURANCE_FEE
FROM BASE0_1 B
JOIN OWNER_DWH.F_PURCHASED_GOODS_TT PG ON B.SKP_CREDIT_CASE=PG.SKP_CREDIT_CASE AND PG.AMT_GOODS_PRICE>=10000
--LEFT JOIN OWNER_DWH.F_PURCHASED_GOODS_TT INS 
LEFT JOIN (SELECT * FROM  OWNER_DWH.F_PURCHASED_GOODS_TT INS1
          JOIN  OWNER_DWH.DC_GOODS_TYPE DG
          ON INS1.SKP_GOODS_TYPE = DG.SKP_GOODS_TYPE
          AND DG.SKP_GOODS_CATEGORY = 201 )INS  -------Yawen 20200109
ON PG.SKP_CREDIT_CASE=INS.SKP_CREDIT_CASE AND INS.AMT_GOODS_PRICE<10000 AND INS.DATE_DECISION>=SYSDATE-30
WHERE PG.DATE_DECISION>=SYSDATE-30
AND INSTR(B.NAME_QUESTION,'请问它的总价是')>0 
--AND INSTR(B.NAME_CAMPAIGN,'高金额')>0  --20191218 nancy
AND TEXT_ACTIVITY_INFO!='1'
AND TEXT_ACTIVITY_INFO!=''
AND TEXT_ACTIVITY_INFO NOT LIKE '%?¤%' --20190619
AND TEXT_ACTIVITY_INFO NOT LIKE '%N%A'--20190619 
)
,COMB AS 
(
--====================================
------------客户否认申请贷款---------
--====================================
SELECT /*+FULL(ACCA) USE_HASH(B,ACCA)*/
       DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:GROUP-客户否认申请贷款' AS TRIGGER_SOURCE 
      ,'['||B.RNK||']客户否认申请贷款' || '; WC time: ' ||B.DTIME_CALL ||' POSL 激活时间:'||
      TO_CHAR(DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||B.POSL_LOAN_TYPE
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client
      AS TRIGGER_VALUE ----add calling time
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
--JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE INSTR(B.NAME_RESULT,'客户否认申请贷款')>0
AND ACCA.DATE_DECISION >= sysdate-30

UNION
SELECT /*+FULL(ACCA) USE_HASH(B,ACCA)*/
       DISTINCT 'SA' AS UNIT 
      ,CASE WHEN B.CASH_LOAN_TYPE = 'XCL' THEN ACCA.TEXT_USERNAME_EMPLOYEE_SALES
       ELSE SA.TEXT_USERNAME_EMPLOYEE END AS TEXT_USERNAME_EMPLOYEE_SALES 
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:GROUP-客户否认申请贷款' AS TRIGGER_SOURCE 
      ,'['||B.RNK||']客户否认申请贷款' || '; WC time: ' ||B.DTIME_CALL
      ||',CASH LOAN 激活时间:'||TO_CHAR(DTIME_ACTIVATION_CASH,'yyyy-MM-dd HH24:mi:ss')||',CASH LOAN TYPE:'||B.CASH_LOAN_TYPE
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client
      AS TRIGGER_VALUE ----add calling time
      ,'SOFT' AS TRIGGER_TYPE
      ,b.SKP_CREDIT_CASE_CASH
      ,B.TEXT_CONTRACT_NUMBER_CASH
FROM BASE0_1 B
JOIN OWNER_DWH.F_APPLICATION_TT FAT
ON B.SKP_CREDIT_CASE_CASH = FAT.SKP_CREDIT_CASE 
AND FAT.DATE_DECISION >= TRUNC(SYSDATE)-60
AND FAT.SKP_CREDIT_TYPE = 2
JOIN OWNER_DWH.DC_EMPLOYEE SA
ON FAT.skp_employee_consult_3rd_block = SA.SKP_EMPLOYEE
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA
ON B.SKP_CREDIT_CASE_CASH = ACCA.SKP_CREDIT_CASE 
WHERE INSTR(B.NAME_RESULT,'客户否认申请贷款')>0
AND ACCA.DATE_DECISION >= sysdate-30
/*--==============================================
--2. Suspicious Homer comments 
--==============================================
UNION
    SELECT DISTINCT UNIT,
    TEXT_USERNAME_EMPLOYEE,
    DATE_DETECT,
    WEEK_DETECT,
    CLASS,
    TRIGGER_SOURCE,
    TRIGGER_VALUE,
    TRIGGER_TYPE,
    SKP_CREDIT_CASE,
    TEXT_CONTRACT_NUMBER
    FROM 
    (
        SELECT \*+ FULL(A) FULL(DCC) USE_HASH(B A DCC) *\ 'SA' AS UNIT,
        A.TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE,
        TO_CHAR(TRUNC(SYSDATE), 'YYYY/MM/DD') AS DATE_DETECT,
        TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
        '15' AS CLASS,
        'INTEGRATE:可疑Homer评论结果' AS TRIGGER_SOURCE,
        '可疑Homer评论结果为：' || B.WC_ANSWER || ' WC time: ' ||B.DTIME_CALL||' POSL 激活时间:'||TO_CHAR(DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||B.POSL_LOAN_TYPE
      ||',CASH LOAN 激活时间:'||TO_CHAR(DTIME_ACTIVATION_CASH,'yyyy-MM-dd HH24:mi:ss')
      ||',CASH LOAN 合同号为:'||B.TEXT_CONTRACT_NUMBER_CASH ||',CASH LOAN TYPE:'||B.CASH_LOAN_TYPE
      ||',客户名字是：'||A.name_last_client||',客户手机号为：'||A.text_mobile_client
       AS TRIGGER_VALUE,
        'SOFT' AS TRIGGER_TYPE,
        A.SKP_CREDIT_CASE,
        A.TEXT_CONTRACT_NUMBER,
        B.NAME_ANSWER,
        CASE WHEN S.NAME_PRODUCT LIKE '%OPR%' AND S.NAME_PRODUCT NOT LIKE '%DXT%' THEN 'OPR'
        ELSE 'OTHERS' END AS TP
        FROM BASE0_1  B
        JOIN TMP_AD30 A    ---- Added 18.12.2019, YS 
        ON B.SKP_CREDIT_CASE = A.SKP_CREDIT_CASE
        JOIN OWNER_DWH.DC_CREDIT_CASE DCC  ON B.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE
        JOIN OWNER_DWH.DC_PRODUCT S ON DCC.SKP_PRODUCT = S.SKP_PRODUCT
        AND DCC.SKP_CREDIT_TYPE=S.SKP_CREDIT_TYPE 
        WHERE DCC.DATE_DECISION >=SYSDATE -30
        AND INSTR(B.NAME_QUESTION ,'Homer评论结果是')>0  --anny 2018-02-23 start
        AND B.NAME_ANSWER IS NOT NULL
        AND INSTR(B.NAME_ANSWER,'拒绝回访')=0
        AND INSTR(B.NAME_ANSWER,'WC-C1-1')=0  -----20201117 YW
        AND A.DATE_DECISION >=SYSDATE-30  ---- NEW ADDED, 18.12.2019, YS
    )
    WHERE (TP = 'OTHERS' AND INSTR(NAME_ANSWER,'销售/门店/其他第三方平台欺诈嫌疑')>0) --THIRD PARTY EXCLUDE OPR
    OR INSTR(NAME_ANSWER,'销售/门店/其他第三方平台欺诈嫌疑')=0

UNION*/
---------20210324 YW COMMENTED
UNION
---====================================
--ALL CAMPAIGN : 4. 错误方接听
--====================================
SELECT /*+ USE_HASH(B,ACCA)*/
       DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:错误方接听' AS TRIGGER_SOURCE 
      ,'错误方接听: '|| 
      CASE WHEN INSTR(B.NAME_RESULT,'不认识客户')>0 THEN '不认识客户' 
        WHEN  INSTR(B.NAME_RESULT, '拒绝提供客户电话')>0 THEN '拒绝提供客户电话' 
          WHEN  INSTR(B.NAME_RESULT, '错误方接听')>0 THEN '错误方接听' 
        ELSE NULL END || ' WC time: ' ||B.DTIME_CALL ||' POSL 激活时间:'||TO_CHAR(DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||B.POSL_LOAN_TYPE
      ||',CASH LOAN 激活时间:'||TO_CHAR(DTIME_ACTIVATION_CASH,'yyyy-MM-dd HH24:mi:ss')
      ||',CASH LOAN 合同号为:'||B.TEXT_CONTRACT_NUMBER_CASH ||',CASH LOAN TYPE:'||B.CASH_LOAN_TYPE
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client AS TRIGGER_VALUE ----add calling time
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
---JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE ( INSTR(B.NAME_RESULT,'不认识客户')>0 OR INSTR(B.NAME_RESULT, '拒绝提供客户电话')>0 OR INSTR(B.NAME_RESULT, '错误方接听')>0)
AND ACCA.DATE_DECISION >= SYSDATE-30

/*UNION
--==============================================
--OLD SETTINGS: --3. NOTE FOR NOTICE 20201104 YW
--==============================================
SELECT \*+  USE_HASH(A,B) *\ 
       DISTINCT 'SA' AS UNIT 
      ,A.text_username_employee_sales AS TEXT_USERNAME_EMPLOYEE
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:NOTE FOR NOTICE' AS TRIGGER_SOURCE 
      ,'NOTE FOR NOTICE: '||WC. text_activity_info ||'@'||A.TEXT_CONTRACT_NUMBER || ' WC time: ' 
      ||TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS')||' POSL 激活时间:'||TO_CHAR(DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||WC.POSL_LOAN_TYPE
      ||',CASH LOAN 激活时间:'||TO_CHAR(DTIME_ACTIVATION_CASH,'yyyy-MM-dd HH24:mi:ss')
      ||',CASH LOAN 合同号为:'||WC.TEXT_CONTRACT_NUMBER_CASH ||',CASH LOAN TYPE:'||WC.CASH_LOAN_TYPE
      ||',客户名字是：'||A.name_last_client||',客户手机号为：'||A.text_mobile_client AS TRIGGER_VALUE   
      ,'SOFT' AS TRIGGER_TYPE
      ,A.SKP_CREDIT_CASE
      ,A.TEXT_CONTRACT_NUMBER 
FROM AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX 
\*JOIN DM_ANTIFRAUD.F_WC_CAMPAIGN_AD WC *\
JOIN BASE0_1 WC ON EX.CLASS='15' \* WC.SKP_CREDIT_CASE = B.SKP_CREDIT_CASE*\
JOIN TMP_AD30 A  ON A.SKP_CREDIT_CASE=WC.SKP_CREDIT_CASE
AND A.date_decision>=TRUNC(SYSDATE)-30
AND TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
AND INSTR(WC.NAME_QUESTION,'WC-C1-1')>0
AND (INSTR(WC.text_activity_info,'套现',1,1)>0
      OR INSTR(WC.text_activity_info,'借用客户身份证',1,1)>0
      OR INSTR(WC.text_activity_info,'不认识客户',1,1)>0
      OR INSTR(WC.text_activity_info,'拒绝回访',1,1)>0
      OR INSTR(WC.text_activity_info,'帮他人贷款',1,1)>0
      OR INSTR(WC.text_activity_info,'还款金额不一致',1,1)>0
      OR INSTR(WC.text_activity_info,'商品类型不一致',1,1)>0
      OR INSTR(WC.text_activity_info,'前几期和后几期还款金额不一样',1,1)>0
      OR INSTR(WC.text_activity_info,'前三个月',1,1)>0  --2018-02-23 anny
      )
AND A.skp_employee_consultant<>5036527--'EXTREME'
\*AND INSTR(WC.NAME_CAMPAIGN ,'CFC-WC-INTEGRATE') >0 *\
AND A.skp_credit_type = 1

UNION
---=================================================
-----------工作类型异常-----------------------------
---=================================================
SELECT \*+FULL(ACCA) USE_HASH(B,ACCA)*\
       DISTINCT  'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:工作类型异常' AS TRIGGER_SOURCE 
      -----,'工作类型为: ' || NAME_ANSWER ||' WC time: ' || B.DTIME_CALL  --anny 2018-02-23
      , '疑似学生办单; WC time: ' || B.DTIME_CALL||' POSL 激活时间:'||TO_CHAR(DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||B.POSL_LOAN_TYPE
      ||',CASH LOAN 激活时间:'||TO_CHAR(DTIME_ACTIVATION_CASH,'yyyy-MM-dd HH24:mi:ss')
      ||',CASH LOAN 合同号为:'||B.TEXT_CONTRACT_NUMBER_CASH ||',CASH LOAN TYPE:'||B.CASH_LOAN_TYPE
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client AS TRIGGER_VALUE 
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
 FROM BASE0_1 B
 --JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
 JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
  ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE 1=1
AND INSTR(NAME_QUESTION,'学生')>0 AND NAME_ANSWER='学生' --20181026
AND ACCA.SKP_CREDIT_TYPE =1    --only Pos 30
AND ACCA.DATE_DECISION >= SYSDATE-30
AND acca.num_age<=23 

UNION 
--=====================================================
---------商品/品牌错误
--=====================================================
SELECT \*+FULL(ACCA) USE_HASH(B,ACCA)*\
       DISTINCT  'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:商品品牌回答错误' AS TRIGGER_SOURCE 
      ,CASE WHEN INSTR(B.NAME_ANSWER,'不正确')>0 THEN '商品品牌/类型与合同不符; ' 
            WHEN INSTR(B.NAME_ANSWER,'无法判断')>0 THEN '客户称现场拿到:'||C.TEXT_ACTIVITY_INFO END
      ||';WC time: '|| B.DTIME_CALL||' POSL 激活时间:'||TO_CHAR(B.DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||B.POSL_LOAN_TYPE
      ||',CASH LOAN 激活时间:'||TO_CHAR(B.DTIME_ACTIVATION_CASH,'yyyy-MM-dd HH24:mi:ss')
      ||',CASH LOAN 合同号为:'||B.TEXT_CONTRACT_NUMBER_CASH||',CASH LOAN TYPE:'||B.CASH_LOAN_TYPE
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client  AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE 
      ,ACCA.TEXT_CONTRACT_NUMBER
 FROM BASE0_1 B
 LEFT JOIN BASE0_1 C
 ON B.SKP_CREDIT_CASE = C.SKP_CREDIT_CASE 
 AND INSTR(C.NAME_QUESTION,'WC-Qs1.5.1 手动输入') >0
 JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
  ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE 1=1
AND INSTR(B.NAME_QUESTION,'您当时购买的商品/服务')>0 
AND (INSTR(B.NAME_ANSWER,'不正确')>0 
OR INSTR(B.NAME_ANSWER,'无法判断')>0 )
AND ACCA.SKP_CREDIT_TYPE =1    --only Pos 30
AND ACCA.DATE_DECISION >= SYSDATE-30

UNION
---=====================================================
---申请提前还款+合同已撤销trigger 15天前合同 
--======================================================
SELECT \*+FULL(ACCA) USE_HASH(BB,ACCA) NO_MERGE*\ 
        DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:可疑合同状态' AS TRIGGER_SOURCE 
      ,CASE WHEN INSTR(BB.NAME_RESULT,'提前还款')>0 THEN '客户声称已申请提前还款'
                 WHEN INSTR(BB.NAME_RESULT,'撤销或完结或签署')>0 THEN '客户声称合同已经撤销或完结, 但接听欢迎电话时合同状态为现行'  -----20201104 YW
                  ELSE NULL END|| ' WC time: ' ||BB.DTIME_CALL||' POSL 激活时间:'||TO_CHAR(BB.DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||BB.POSL_LOAN_TYPE
      ||',CASH LOAN 激活时间:'||TO_CHAR(BB.DTIME_ACTIVATION_CASH,'yyyy-MM-dd HH24:mi:ss')
      ||',CASH LOAN 合同号为:'||BB.TEXT_CONTRACT_NUMBER_CASH ||',CASH LOAN TYPE:'||BB.CASH_LOAN_TYPE 
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client
      AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_2 BB
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA  ON ACCA.SKP_CREDIT_CASE=BB.SKP_CREDIT_CASE
WHERE 1=1
AND( INSTR(BB.NAME_RESULT,'提前还款')>0 OR INSTR(BB.NAME_RESULT,'撤销或完结或签署')>0 ) ------20201104 YW
AND ACCA.code_credit_status IN ('a') ------20201104 YW
AND ACCA.DATE_DECISION >=SYSDATE-30

--=================================================
--ALL CAMPAIGN : 2. 客户声称合同已被拒绝 
--=================================================
--change on 2018-04-23 Angela
UNION
SELECT \*+FULL(ACCA) USE_HASH(B,ACCA)*\ 
      DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:可疑合同状态' AS TRIGGER_SOURCE 
      , '客户声称申请已被拒绝; WC time: ' ||B.DTIME_CALL||' POSL 激活时间:'||TO_CHAR(B.DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||B.POSL_LOAN_TYPE
      ||',CASH LOAN 激活时间:'||TO_CHAR(B.DTIME_ACTIVATION_CASH,'yyyy-MM-dd HH24:mi:ss')
      ||',CASH LOAN 合同号为:'||B.TEXT_CONTRACT_NUMBER_CASH ||',CASH LOAN TYPE:'||B.CASH_LOAN_TYPE 
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client
      AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
     ,ACCA.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
---JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
WHERE 1=1
AND INSTR(B.NAME_RESULT,'客户声称申请已被拒绝')>0 
AND ACCA.DATE_DECISION >=SYSDATE-30
UNION
---=====================================================
---未取走商品/无取货计划 
--======================================================
SELECT \*+FULL(ACCA) USE_HASH(BB,ACCA) NO_MERGE*\ 
        DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:未取走商品/未使用服务' AS TRIGGER_SOURCE 
      ,'客户称'||BB.NAME_ANSWER||';WC time: '|| BB.DTIME_CALL||' POSL 激活时间:'||TO_CHAR(DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||BB.POSL_LOAN_TYPE
      ||',CASH LOAN 激活时间:'||TO_CHAR(DTIME_ACTIVATION_CASH ,'yyyy-MM-dd HH24:mi:ss')
      ||',CASH LOAN 合同号为:'||BB.TEXT_CONTRACT_NUMBER_CASH||',CASH LOAN TYPE:'||BB.CASH_LOAN_TYPE  
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client AS TRIGGER_VALUE  ------YAWEN 2020-02-17
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER 
FROM BASE0_1 BB
JOIN TMP_AD30 ACCA
ON BB.SKP_CREDIT_CASE = ACCA.SKP_CREDIT_CASE 
AND ACCA.skp_credit_type= 1
WHERE 1=1
AND INSTR(BB.NAME_QUESTION,'取走的是这个商品吗/使用了这项服务')>0
AND BB.NAME_ANSWER IN ('未取走商品，也没有取货计划','未来不使用服务')  ------YAWEN 2020-02-17
UNION
---=====================================================
---ALDI2.0 合同 未取走商品 
--======================================================
-----20200428 Yawen-------
SELECT \*+FULL(ACCA) USE_HASH(BB,ACCA) NO_MERGE*\ 
        DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:未取走商品' AS TRIGGER_SOURCE 
      ,'ALDI2.0合同，客户称未现场取走商品，有取货计划;WC time: '|| BB.DTIME_CALL||' POSL 激活时间:'||TO_CHAR(DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||BB.POSL_LOAN_TYPE
      ||',CASH LOAN 激活时间:'||TO_CHAR(DTIME_ACTIVATION_CASH ,'yyyy-MM-dd HH24:mi:ss')
      ||',CASH LOAN 合同号为:'||BB.TEXT_CONTRACT_NUMBER_CASH||',CASH LOAN TYPE:'||BB.CASH_LOAN_TYPE  
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client AS TRIGGER_VALUE  ------YAWEN 2020-02-17
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER 
FROM BASE0_1 BB
JOIN TMP_AD30 ACCA
ON BB.SKP_CREDIT_CASE = ACCA.SKP_CREDIT_CASE 
AND ACCA.skp_credit_type= 1
AND BB.POSL_LOAN_TYPE = 'ALDI 2.0'
WHERE 1=1
AND INSTR(BB.NAME_QUESTION,'取走的是这个商品吗/使用了这项服务')>0
AND BB.NAME_ANSWER IN ('未取走商品，有取货计划') 
UNION
---=====================================================
---ALDI2.0:省市回答错误
--======================================================
------20200428 Yawen --20200525yawen --stop 20200629
\*SELECT \*+FULL(ACCA) USE_HASH(BB,ACCA) NO_MERGE*\ 
        DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:ALDI2.0:省份回答错误' AS TRIGGER_SOURCE -----20200525 Yawen 
      ,'ALDI2.0合同，客户回答合同门店'||BB.NAME_ANSWER\*20200525 Yawen *\||';WC time: '|| BB.DTIME_CALL||' POSL 激活时间:'||TO_CHAR(DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||BB.POSL_LOAN_TYPE
      ||',CASH LOAN 激活时间:'||TO_CHAR(DTIME_ACTIVATION_CASH ,'yyyy-MM-dd HH24:mi:ss')
      ||',CASH LOAN 合同号为:'||BB.TEXT_CONTRACT_NUMBER_CASH||',CASH LOAN TYPE:'||BB.CASH_LOAN_TYPE  
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client AS TRIGGER_VALUE  ------YAWEN 2020-02-17
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER 
FROM BASE0_1 BB
JOIN TMP_AD30 ACCA
ON BB.SKP_CREDIT_CASE = ACCA.SKP_CREDIT_CASE 
AND ACCA.skp_credit_type= 1
AND BB.POSL_LOAN_TYPE = 'ALDI 2.0'
WHERE 1=1
AND INSTR(BB.NAME_QUESTION,'哪个省的哪个市购买的这个商品')>0
AND (INSTR(BB.NAME_ANSWER,'省份不正确')>0 OR 
INSTR(BB.NAME_ANSWER,'省市都不正确')>0 )  -----20200525 Yawen

UNION*\
\*---=====================================================
---ALDI2.0:客户称将消费二维码截图发送给他人 --comment by yw 20200609
--======================================================
------20200428 Yawen
SELECT \*+FULL(ACCA) USE_HASH(BB,ACCA) NO_MERGE*\ 
        DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:ALDI2.0:Send QR code to others' AS TRIGGER_SOURCE 
      ,'ALDI2.0合同，客户称将消费二维码截图发送给他人;WC time: '|| BB.DTIME_CALL||' POSL 激活时间:'||TO_CHAR(DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||BB.POSL_LOAN_TYPE
      ||',CASH LOAN 激活时间:'||TO_CHAR(DTIME_ACTIVATION_CASH ,'yyyy-MM-dd HH24:mi:ss')
      ||',CASH LOAN 合同号为:'||BB.TEXT_CONTRACT_NUMBER_CASH||',CASH LOAN TYPE:'||BB.CASH_LOAN_TYPE  
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client AS TRIGGER_VALUE  ------YAWEN 2020-02-17
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER 
FROM BASE0_1 BB
JOIN TMP_AD30 ACCA
ON BB.SKP_CREDIT_CASE = ACCA.SKP_CREDIT_CASE 
AND ACCA.skp_credit_type= 1
AND BB.POSL_LOAN_TYPE = 'ALDI 2.0'
WHERE 1=1
AND INSTR(BB.NAME_QUESTION,'消费二维码')>0
AND BB.NAME_ANSWER = '是'
UNION *\
---=====================================================
---贷款类型异常:取走钱/使用钱
--======================================================
SELECT \*+FULL(ACCA) USE_HASH(BB,ACCA) NO_MERGE*\ 
        DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:贷款类型异常' AS TRIGGER_SOURCE 
      ,'客户称'||BB.NAME_RESULT||';WC time: '|| BB.DTIME_CALL||' POSL 激活时间:'||TO_CHAR(DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||BB.POSL_LOAN_TYPE
      ||',CASH LOAN 激活时间:'||TO_CHAR(DTIME_ACTIVATION_CASH ,'yyyy-MM-dd HH24:mi:ss')
      ||',CASH LOAN 合同号为:'||BB.TEXT_CONTRACT_NUMBER_CASH||',CASH LOAN TYPE:'||BB.CASH_LOAN_TYPE  
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER 
FROM BASE0_1 BB
JOIN TMP_AD30 ACCA
ON BB.SKP_CREDIT_CASE = ACCA.SKP_CREDIT_CASE 
AND ACCA.skp_credit_type= 1
WHERE 1=1
AND INSTR(BB.NAME_QUESTION,'取走的是这个商品吗/使用了这项服务')>0
AND BB.NAME_ANSWER IN ('取走钱','取走商品和钱','使用服务和钱') ------YAWEN 2020-02-17
UNION 
---=====================================================
---贷款类型异常:没有购买 ------YAWEN 2020-02-17
--======================================================
SELECT \*+FULL(ACCA) USE_HASH(BB,ACCA) NO_MERGE*\ 
        DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:贷款类型异常' AS TRIGGER_SOURCE 
      ,'客户称没有购买商品/服务;WC time: '|| BB.DTIME_CALL||' POSL 激活时间:'||TO_CHAR(DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||BB.POSL_LOAN_TYPE
      ||',CASH LOAN 激活时间:'||TO_CHAR(DTIME_ACTIVATION_CASH ,'yyyy-MM-dd HH24:mi:ss')
      ||',CASH LOAN 合同号为:'||BB.TEXT_CONTRACT_NUMBER_CASH||',CASH LOAN TYPE:'||BB.CASH_LOAN_TYPE  
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER 
FROM BASE0_1 BB
JOIN TMP_AD30 ACCA
ON BB.SKP_CREDIT_CASE = ACCA.SKP_CREDIT_CASE 
AND ACCA.skp_credit_type= 1
WHERE 1=1
AND INSTR(BB.NAME_QUESTION,'您当时购买的商品/服务是')>0
AND BB.NAME_ANSWER IN ('没有购买') ------YAWEN 2020-02-17

UNION
---=====================================================
---不准备收货
--======================================================
SELECT \*+FULL(ACCA) USE_HASH(BB,ACCA) NO_MERGE*\ 
        DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:不准备收货' AS TRIGGER_SOURCE 
      ,'客户声称不准备收货;WC time: '|| BB.DTIME_CALL||' POSL 激活时间:'||TO_CHAR(DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||BB.POSL_LOAN_TYPE
      ||',CASH LOAN 激活时间:'||TO_CHAR(DTIME_ACTIVATION_CASH ,'yyyy-MM-dd HH24:mi:ss')
      ||',CASH LOAN 合同号为:'||BB.TEXT_CONTRACT_NUMBER_CASH||',CASH LOAN TYPE:'||BB.CASH_LOAN_TYPE  
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER 
FROM BASE0_1 BB
JOIN TMP_AD30 ACCA
ON BB.SKP_CREDIT_CASE = ACCA.SKP_CREDIT_CASE 
AND ACCA.skp_credit_type= 1
WHERE 1=1
AND INSTR(BB.NAME_QUESTION,'请问您收到货了吗')>0
AND INSTR(BB.NAME_ANSWER,'不准备收货')>0 ------YAWEN 2020-02-17
UNION
---=====================================================
---INCONSISTENT DP
--======================================================
SELECT \*+FULL(ACCA) USE_HASH(BB,ACCA) NO_MERGE*\ 
        DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:首付不一致' AS TRIGGER_SOURCE 
      ,'客户称首付与合同上不一致,合同上的首付为:'||ACCA.amt_down_payment||';WC time: '|| BB.DTIME_CALL
      ||' POSL 激活时间:'||TO_CHAR(DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||BB.POSL_LOAN_TYPE
      ||',CASH LOAN 激活时间:'||TO_CHAR(DTIME_ACTIVATION_CASH ,'yyyy-MM-dd HH24:mi:ss')
      ||',CASH LOAN 合同号为:'||BB.TEXT_CONTRACT_NUMBER_CASH||',CASH LOAN TYPE:'||BB.CASH_LOAN_TYPE  
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER 
FROM BASE0_1 BB
JOIN TMP_AD30 ACCA
ON BB.SKP_CREDIT_CASE = ACCA.SKP_CREDIT_CASE 
AND ACCA.skp_credit_type= 1
--AND BB.POSL_LOAN_TYPE <> 'ALDI 2.0' ------- 20200702 Yawen --20201020 COMMENT BY YW
WHERE 1=1
AND INSTR (BB.NAME_QUESTION,'手续费')>0 
AND INSTR(BB.NAME_ANSWER, '首付')>0
UNION
---=====================================================
---EXTRA FEE
--======================================================
SELECT \*+FULL(ACCA) USE_HASH(BB,ACCA) NO_MERGE*\ 
        DISTINCT 'SA' AS UNIT 
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:GROUP-EXTRA_FEE' AS TRIGGER_SOURCE 
      ,'['||BB.RNK||']客户称办单时被他人收取手续费;WC time: '|| BB.DTIME_CALL||' POSL 激活时间:'
      ||TO_CHAR(BB.DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||BB.POSL_LOAN_TYPE
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER 
---------20200428 Yawen 手续费子问题删除
FROM BASE0_1 BB
JOIN TMP_AD30 ACCA
ON BB.SKP_CREDIT_CASE = ACCA.SKP_CREDIT_CASE 
AND INSTR (BB.NAME_QUESTION,'手续费')>0 
AND INSTR(BB.NAME_ANSWER, '有，转WC')>0
AND ACCA.skp_credit_type= 1
UNION
---=====================================================
---OTHERS REPAYMENT
--======================================================
SELECT \*+ FULL(ACCA) USE_HASH(B ACCA) *\
       DISTINCT 'SA' AS UNIT
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:GROUP-非本人还款' AS TRIGGER_SOURCE
      , '['||BB.RNK||']客户称'||
      CASE WHEN INSTR(BB.NAME_ANSWER ,'其它') =0 THEN BB.NAME_ANSWER ELSE BB.TEXT_RESULT END 
      ||'将代其还款;WC time: '|| BB.DTIME_CALL||' POSL 激活时间:'
      ||TO_CHAR(BB.DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||BB.POSL_LOAN_TYPE  
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER
 FROM BASE0_1 BB
 ---JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA
 JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
   ON ACCA.SKP_CREDIT_CASE=BB.SKP_CREDIT_CASE
   WHERE 1=1 
  AND INSTR (BB.NAME_QUESTION,'请问是谁承诺帮您还款呢')>0 
  AND INSTR(BB.NAME_ANSWER, '配偶')=0 
  AND ACCA.SKP_CREDIT_TYPE =1    --only Pos 30
  AND ACCA.DATE_DECISION >= SYSDATE-30 

UNION 
SELECT \*+ FULL(ACCA) USE_HASH(B ACCA) *\
       DISTINCT 'SA' AS UNIT
      ,CASE WHEN BB.CASH_LOAN_TYPE='XCL' THEN ACCA.TEXT_USERNAME_EMPLOYEE_SALES
       ELSE  SA.TEXT_USERNAME_EMPLOYEE END AS TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:GROUP-非本人还款' AS TRIGGER_SOURCE
      , '['||BB.RNK||']客户称'||
      CASE WHEN INSTR(BB.NAME_ANSWER ,'其它') =0 THEN BB.NAME_ANSWER ELSE BB.TEXT_RESULT END 
      ||'将代其还款;WC time: '|| BB.DTIME_CALL||',CASH LOAN 激活时间:'
      ||TO_CHAR(BB.DTIME_ACTIVATION_CASH,'yyyy-MM-dd HH24:mi:ss')||',CASH LOAN TYPE:'||BB.CASH_LOAN_TYPE  
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE
      ,ACCA.TEXT_CONTRACT_NUMBER 
 FROM BASE0_1 BB
 JOIN OWNER_DWH.F_APPLICATION_TT FAT
 ON BB.SKP_CREDIT_CASE_CASH = FAT.SKP_CREDIT_CASE 
 JOIN OWNER_DWH.DC_EMPLOYEE SA
 ON FAT.skp_employee_consult_3rd_block = SA.SKP_EMPLOYEE
 JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA    ---- Added 18.12.2019, YS
 ON ACCA.SKP_CREDIT_CASE=BB.SKP_CREDIT_CASE_CASH
 WHERE 1=1 
  AND INSTR (BB.NAME_QUESTION,'请问是谁承诺帮您还款呢')>0 
  AND INSTR(BB.NAME_ANSWER, '配偶')=0 
  AND ACCA.SKP_CREDIT_TYPE =2    --only Pos 30
  AND ACCA.DATE_DECISION >= SYSDATE-30 
  
UNION
---=====================================================
---ABNORMAL AMOUNT
--======================================================
SELECT \*+ FULL(ACCA) USE_HASH(B ACCA) *\
       DISTINCT 'SA' AS UNIT
      ,CASE WHEN B.CASH_LOAN_TYPE='XCL' THEN ACA.TEXT_USERNAME_EMPLOYEE_SALES
       ELSE  SA.TEXT_USERNAME_EMPLOYEE END AS TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:CASH LOAN贷款金额异常' AS TRIGGER_SOURCE
      , 'Cash loan amount：'||ACA.amt_credit||',客户实际收到金额'||
      CASE WHEN B.text_activity_info = 'XNA' OR regexp_replace(B.text_activity_info,'[^0-9]') IS NULL THEN '无记录' 
      ELSE regexp_replace(B.text_activity_info,'[^0-9]') END 
      ||';WC time: '|| B.DTIME_CALL||' CASH LOAN 激活时间:' ||TO_CHAR(B.DTIME_ACTIVATION_CASH,'yyyy-MM-dd HH24:mi:ss')||',CASH LOAN TYPE'||B.CASH_LOAN_TYPE
      ||',POS LOAN 激活时间:'||TO_CHAR(B.DTIME_ACTIVATION_POS ,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||B.POSL_LOAN_TYPE
      ||',POS LOAN 合同号为:'||B.TEXT_CONTRACT_NUMBER 
      ||',客户名字是：'||ACA.name_last_client||',客户手机号为：'||ACA.text_mobile_client AS TRIGGER_VALUE 
      ,'SOFT' AS TRIGGER_TYPE
      ,ACA.SKP_CREDIT_CASE 
      ,ACA.TEXT_CONTRACT_NUMBER
   FROM BASE0_1 B 
   JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACA
   ON ACA.skp_credit_case = B.SKP_CREDIT_CASE_CASH
   AND ACA.SKP_CREDIT_TYPE =2 
   AND ACA.date_decision>=SYSDATE-30
   JOIN OWNER_DWH.F_APPLICATION_TT FAT
   ON FAT.SKP_CREDIT_CASE = B.SKP_CREDIT_CASE_CASH
   AND FAT.SKP_CREDIT_TYPE =2 
   AND FAT.date_decision >=TRUNC(SYSDATE) -30
   JOIN OWNER_DWH.DC_EMPLOYEE SA
   ON SA.SKP_EMPLOYEE = FAT.skp_employee_consult_3rd_block
   WHERE 1=1 
   AND INSTR (B.NAME_QUESTION,'消费贷款本金')>0 
   AND ACA.DATE_DECISION >= SYSDATE-30
   AND ACA.amt_credit - TO_NUMBER (regexp_replace(B.text_activity_info,'[^0-9]')) <>0
   AND regexp_replace(B.text_activity_info,'[^0-9]') IS NOT NULL--20191009
   AND B.TEXT_ACTIVITY_INFO!='1'
   AND B.TEXT_ACTIVITY_INFO!=''
   AND B.TEXT_ACTIVITY_INFO NOT LIKE '%·%' 
   AND B.TEXT_ACTIVITY_INFO NOT LIKE '%N%A'
   AND B.TEXT_ACTIVITY_INFO NOT LIKE '%不清楚%' --20191104
UNION
---=====================================================
---TOTAL AMOUNT
--======================================================
SELECT \*+ FULL(ACCA) USE_HASH(B ACCA) *\
       DISTINCT 'SA' AS UNIT
      ,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'15' AS CLASS
      ,'INTEGRATE:高额商品贷价格欺诈' AS TRIGGER_SOURCE
      , 'Total Price：'||ACCA.amt_goods_price||',客户称商品贷实际总价'||
      CASE WHEN B.text_activity_info = 'XNA' OR regexp_replace(B.text_activity_info,'[^0-9]') IS NULL THEN '无记录' 
      ELSE regexp_replace(B.text_activity_info,'[^0-9]') END 
      ||';WC time: '|| B.DTIME_CALL||' POSL 激活时间:'
      ||TO_CHAR(B.DTIME_ACTIVATION_POS,'yyyy-MM-dd HH24:mi:ss')||',POSL TYPE:'||B.POSL_LOAN_TYPE
      ||',CASH LOAN 激活时间:'||TO_CHAR(B.DTIME_ACTIVATION_CASH ,'yyyy-MM-dd HH24:mi:ss')
      ||',CASH LOAN 合同号为:'||B.TEXT_CONTRACT_NUMBER_CASH||',CASH LOAN TYPE:'||B.CASH_LOAN_TYPE
      ||',客户名字是：'||ACCA.name_last_client||',客户手机号为：'||ACCA.text_mobile_client  AS TRIGGER_VALUEAS 
      ,'SOFT' AS TRIGGER_TYPE
      ,ACCA.SKP_CREDIT_CASE 
      ,ACCA.TEXT_CONTRACT_NUMBER
 FROM BASE0_1 B
 ---JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA
 JOIN TMP_AD30 ACCA    ---- Added 18.12.2019, YS
   ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
   AND ACCA.date_decision>=SYSDATE-30
 JOIN EXCLUDE_INSURANCE EI ON EI.SKP_CREDIT_CASE=ACCA.SKP_CREDIT_CASE
   WHERE 1=1 
   AND INSTR (B.NAME_QUESTION,'请问它的总价是')>0 
   AND ACCA.SKP_CREDIT_TYPE =1    --only Pos 30
   AND ACCA.DATE_DECISION >= SYSDATE-30
   AND ABS(ACCA.amt_goods_price - TO_NUMBER(regexp_replace(B.text_activity_info,'[^0-9]'))) >500  
   AND regexp_replace(B.text_activity_info,'[^0-9]') IS NOT NULL--20191009
   AND (ACCA.amt_goods_price - TO_NUMBER(regexp_replace(B.text_activity_info,'[^0-9]')) ) <>INSURANCE_FEE 
   AND B.TEXT_ACTIVITY_INFO!='1'
   AND B.TEXT_ACTIVITY_INFO!=''
   AND B.TEXT_ACTIVITY_INFO NOT LIKE '%·%' 
   AND B.TEXT_ACTIVITY_INFO NOT LIKE '%N%A'
   AND B.TEXT_ACTIVITY_INFO NOT LIKE '%不清楚%' --20191104
   --AND B.POSL_LOAN_TYPE <> 'ALDI 2.0'   ----20200420 Yawen --20200921 comment yawen*/
   -----------20210324 YW COMMENTED
)
---20200820 nancy
,ALL_TRI AS
(
SELECT /*+ dynamic_sampling(8) opt_param('optimizer_index_cost_adj',400) */
UNIT
,TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE
,DATE_DETECT
,WEEK_DETECT
,CLASS
,LISTAGG(TRIGGER_SOURCE, '| ') WITHIN GROUP (ORDER BY TRIGGER_SOURCE DESC)  AS TRIGGER_SOURCE
,LISTAGG(TRIGGER_VALUE, '| ') WITHIN GROUP (ORDER BY TRIGGER_VALUE DESC) AS TRIGGER_VALUE
,TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
FROM COMB
GROUP BY UNIT
,TEXT_USERNAME_EMPLOYEE_SALES
,DATE_DETECT
,WEEK_DETECT
,CLASS
,TRIGGER_TYPE
,SKP_CREDIT_CASE
,TEXT_CONTRACT_NUMBER
)--ADD ORBP,EXPRESS,PURCHASE ON 20200818 NANCY
,ORBP AS (
SELECT SKP_CREDIT_CASE ,  COUNT(DISTINCT SKF_CAMP_ACC_SOFFER_DETAIL)  OVER (PARTITION BY SKp_CLIENT ) AS CNT_ORBP
            ,LISTAGG (TO_CHAR(DTIME_INSERTED,'YYYY-MM-DD')||'使用号码'||TEXT_PHONE_NUMBER||'(与客户申请表填写的客户号码'||FLAG_SAME||'),结果'||CODE_SCORING_STATUS,';') WITHIN GROUP (ORDER BY DTIME_INSERTED)OVER (PARTITION BY SKp_CLIENT ) ||'。' AS ORBP_DETAILS 
FROM (
            SELECT DISTINCT RP.SKP_CREDIT_CASE,RP.SKp_CLIENT  , OB.DTIME_INSERTED, OB.CODE_SCORING_STATUS , OB.TEXT_PHONE_NUMBER,OB.SKF_CAMP_ACC_SOFFER_DETAIL,TEXT_MOBILE_CLIENT
                         ,CASE WHEN TEXT_MOBILE_CLIENT=TEXT_PHONE_NUMBER THEN '相同' ELSE '不同' END AS FLAG_SAME
            FROM BASE_00 RP
            JOIN TMP_AD30 ACCA ON ACCA.skp_credit_case=RP.SKP_CREDIT_CASE
            JOIN OWNER_DWH.f_Camp_Acc_Soffer_Detail_Tt OB
            ON RP.SKp_CLIENT =OB.SKp_CLIENT AND TRUNC(OB.DTIME_INSERTED )<= RP.DATE_DECISION_POS ---firstly ORBP then apply
            WHERE 1=1
            AND DTIME_INSERTED>=SYSDATE-360
            AND RP.POSL_LOAN_TYPE LIKE 'RPOS%'
           )
)

,EXPRESS AS  
(
SELECT EE.*,CASE WHEN TEXT_MOBILE_CLIENT=RECEIVER_PHONE THEN '一致' ELSE '不一致' END AS FLAG_SAME2
FROM (
            SELECT NN.SKP_CREDIT_CASE ,ACCA.TEXT_MOBILE_CLIENT
                        ,SS.LOGISTICS_LIST,SS.LOGISTICS_COMPANY,NVL(SS.receiver_mobile,SS.receiver_phone) AS RECEIVER_PHONE
                        
            FROM BASE_00 NN
            JOIN TMP_AD30 ACCA ON ACCA.skp_credit_case=NN.SKP_CREDIT_CASE
            JOIN OWNER_DWH.F_APPLICATION_TT PP
            ON NN.DATE_DECISION_POS =PP.DATE_DECISION AND NN.SKP_CREDIT_CASE =PP.SKP_CREDIT_CASE 
            JOIN OWNER_OPR.VH_SPX_SYSTRADE_TRADE SS
            ON /*pp.id_external_partner_order = to_char(SS.tid)*/--update 20200819 nancy
            PP.ID_external_partner_order = SS.TID||''
            WHERE PP.SKP_CREDIT_TYPE =1 AND PP.DATE_DECISION  >=SYSDATE-10
            AND NN.POSL_LOAN_TYPE LIKE 'RPOS%'
            )EE
) 
SELECT /*+ dynamic_sampling(8) opt_param('optimizer_index_cost_adj',400) */
DISTINCT AT.UNIT
,AT.TEXT_USERNAME_EMPLOYEE
,AT.DATE_DETECT
,AT.WEEK_DETECT
,AT.CLASS
, AT.TRIGGER_SOURCE
,CASE WHEN TEXT_USERNAME_EMPLOYEE='rpos' THEN TRIGGER_VALUE||'。该客户共进行ORBP '||CNT_ORBP||'次，具体记录：'||OO.ORBP_DETAILS||'收件人及电话：'||NAME_RECEIVER||RECEIVER_PHONE||'(与客户本人电话'||FLAG_SAME2||')'
           ||'。收件地址：'||NAME_RECEIVER_PROVINCE||NAME_RECEIVER_CITY||NAME_RECEIVER_DISTRICT||NAME_RECEIVER_ADDRESS
           ||'。目前交易状态：'||AD.CODE_PURCHASE_STATUS||'。快递单号'||EX.LOGISTICS_COMPANY||EX.LOGISTICS_LIST||',商品：'||SUBSTR(TT. TEXT_GOODS_DESC,1,100) ELSE AT.TRIGGER_VALUE END AS TRIGGER_VALUE
,AT.TRIGGER_TYPE
,AT.SKP_CREDIT_CASE
,AT.TEXT_CONTRACT_NUMBER
FROM ALL_TRI AT
LEFT JOIN owner_dwh.f_mp_purchase_ad AD
ON AT.SKP_CREDIT_CASE =AD.SKP_CREDIT_CASE
LEFT JOIN ORBP OO ON AT.SKP_CREDIT_CASE=OO.SKP_CREDIT_CASE
LEFT JOIN EXPRESS EX ON AT.SKP_CREDIT_CASE=EX.SKP_CREDIT_CASE
LEFT JOIN OWNER_DWH.F_PURCHASED_GOODS_TT TT ON AT.SKP_CREDIT_CASE =TT.SKP_CREDIT_CASE 
AND TT.SKP_CREDIT_TYPE =1 AND TT.DATE_DECISION  >=SYSDATE-30;

COMMIT;


               
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;




  PROCEDURE TRIGGER_17_UW_SIGNAL IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_17_UW_SIGNAL';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  

  --     execute immediate' TRUNCATE TABLE TRIGGER_DEL_SA_BASE';
--------------------------------------------------UW TRIGGER--------------------------------------------------
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT 'UW SIGNAL',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
  WITH APPRSTEP AS
   (SELECT /*+ materialize*/ 
           SKF_APPROVAL_PROCESS_STEP,DATE_DECISION,CO_VALUE,CO_DETAIL
     FROM( 
           SELECT BB.SKF_APPROVAL_PROCESS_STEP, BB.DATE_DECISION,BB.TEXT_VALUE,BB.SKP_APPRSTEP_ADD_INFO
             FROM AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX 
             JOIN OWNER_DWH.F_APPRSTEP_ADDITIONAL_INFO_TT BB ON EX.CLASS=17
              AND BB.DATE_DECISION > EX.MAX_DETECT
            --WHERE BB.DATE_DECISION > SYSDATE - 7 --DATE'2016-10-19'
              AND BB.DATE_DECISION < DATE'3000-01-01'
              AND BB.SKP_APPRSTEP_ADD_INFO IN(6215,3074)
           )BB       
      PIVOT(MAX(TEXT_VALUE) FOR SKP_APPRSTEP_ADD_INFO IN (3074 AS CO_VALUE  ,6215 AS CO_DETAIL))AA   --给予客户的拒绝解释/详细意见
      WHERE CO_VALUE='RER14'
    ),
  APPROVAL AS
   (SELECT /*+ materialize*/ 
           TT.SKP_APPLICATION,
           TT.SKP_CREDIT_CASE,
           TT.DATE_DECISION,
           TT.SKF_APPROVAL_PROCESS_STEP,
           TT.SKP_APPROVAL_STEP_RESULT
      FROM AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX 
      JOIN OWNER_DWH.F_APPROVAL_PROCESS_STEP_TT TT ON EX.CLASS=17
       AND TT.DATE_DECISION>EX.MAX_DETECT
     --WHERE TT.DATE_DECISION > SYSDATE - 7
       AND TT.DATE_DECISION < DATE '3000-01-01'
    )
  
  SELECT 'SA' AS UNIT,
         ACCA.TEXT_USERNAME_EMPLOYEE_SALES,
         TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
         TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
         17 AS CLASS,
         'UW ADDITIONAL COMMENT' AS TRIGGER_SOURCE, 
          RR.CODE_ACTIVITY || ':' || '其他'||'||详情：'||BB.CO_DETAIL AS TRIGGER_VALUE,
         'SOFT' AS TRIGGER_TYPE,
         ACCA.SKP_CREDIT_CASE,
         ACCA.TEXT_CONTRACT_NUMBER
    FROM AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
    JOIN APPROVAL TT ON EX.CLASS=17
    JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA
      ON ACCA.skp_credit_case = TT.SKP_CREDIT_CASE
     AND ACCA.date_decision>EX.MAX_DETECT
     --AND ACCA.date_decision > SYSDATE - 7
    JOIN APPRSTEP BB
      ON BB.SKF_APPROVAL_PROCESS_STEP = TT.SKF_APPROVAL_PROCESS_STEP
    JOIN OWNER_DWH.DC_APPROVAL_STEP_RESULT RR
      ON RR.SKP_APPROVAL_STEP_RESULT = TT.SKP_APPROVAL_STEP_RESULT
     AND UPPER(RR.CODE_STEP_STATUS) = 'A';
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;



PROCEDURE TRIGGER_32_SHARE_MOBILE IS
  v_stepnum      INTEGER DEFAULT 0;
  v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
  v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
  v_err_txt      VARCHAR2(70);
  v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
  -- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_32_SHARE_MOBILE';
  -- check whether the process need to run
  IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy,
                                          p_name  => v_dealprc,
                                          p_date  => trunc(SYSDATE)) IN
     ('Not Started', 'Failed') THEN
    -- procedure start
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'start');
  
    --! report robots log start
    ---------------------------------------------------------------------------------
    v_step_message := 'STEP:TRIGGER_32_SHARE_MOBILE';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
      SELECT '32 SHARE MOBILE', SYSDATE FROM DUAL;
    COMMIT;

  
    /********************1: modified mobile = SA mobile**********************/ /********************2: newly added mobile = SA mobile**********************/
    --------new by anny 20181206 ellen
    EXECUTE IMMEDIATE 'TRUNCATE TABLE  TRIGGER_32_FINAL';
    INSERT /*+ append*/
    INTO TRIGGER_32_FINAL
    
      WITH TRIGGER_32_BASE AS
       (SELECT DISTINCT FC.SKP_CONTACT,
                        FC.SKP_CLIENT,
                        FC.ID_SOURCE,
                        FC.TEXT_CONTACT,
                        FC.CODE_CONTACT_STATUS,
                        FC.NAME_CLIENT_CONTACT,
                        MO.CODE_DATA_SOURCE_MODULE,
                        FC.DTIME_MODIFIED AS DTIME_VALID_FROM,
                        FC.DTIME_VALID_TO,
                        DC.TEXT_IDENT_CARD_NUMBER,
                        DC.NAME_LAST,
                        CASE
                          WHEN UPPER(NAME_BANK_ROLE_EN) LIKE '%SALES%' THEN
                           'SALES'
                          WHEN UPPER(NAME_BANK_ROLE_EN) LIKE '%OPERATION%' THEN
                           'OPS'
                          WHEN UPPER(NAME_BANK_ROLE_EN) LIKE '%COLLECTION%' THEN
                           'COLLECTION'
                          WHEN UPPER(NAME_BANK_ROLE_EN) LIKE
                               '%CREDIT EXPERT%' THEN
                           'CREDIT EXPERT'
                          WHEN UPPER(EE.TEXT_USERNAME_EMPLOYEE) LIKE '%IVR%' THEN
                           'IVR'
                          ELSE
                           NAME_BANK_ROLE_EN
                        END AS MODIFY_DEPT
          FROM OWNER_DWH.f_Client_Contact_Tt FC
          JOIN OWNER_DWH.DC_EMPLOYEE EE
            ON FC.SKP_EMPLOYEE_MODIFIED = EE.SKP_EMPLOYEE
          JOIN OWNER_DWH.CL_BANK_ROLE CLBR
            ON EE.SKP_BANK_ROLE = CLBR.SKP_BANK_ROLE
          JOIN OWNER_DWH.DC_CREDIT_CASE AD
            ON FC.SKP_CLIENT = AD.skp_client
           AND AD.date_decision >= SYSDATE - 360
          JOIN owNER_DWH.DC_CLIENT DC
            ON AD.SKP_CLIENT = DC.SKP_CLIENT
          JOIN OWNER_DWH.CL_DATA_SOURCE_MODULE MO
            ON FC.SKP_DATA_SOURCE_MODULE = MO.SKP_DATA_SOURCE_MODULE
          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
            ON EX.CLASS = '32'
         WHERE AD.SKP_CREDIT_STATUS IN (2, 5) --'a','n'
           AND FC.SKP_CONTACT_TYPE IN (2, 4) --MOBILE PHONE
           AND MO.CODE_DATA_SOURCE_MODULE <> 'PAY'
           AND FC.SKP_CONTACT_RELATION_TYPE = 9 --CLIENT
           AND (FC.DTIME_MODIFIED >= EX.MAX_DETECT - 30 OR
               (FC.DTIME_VALID_TO >= EX.MAX_DETECT - 30 AND
               FC.DTIME_VALID_TO < SYSDATE))
           and FC.DTIME_MODIFIED < trunc(sysdate)
           AND FC.TEXT_CONTACT <> '13800138000'
           AND FC.TEXT_CONTACT <> '13530805661'
           AND FC.TEXT_CONTACT <> '10000000000' --20190927
           AND SUBSTR(FC.TEXT_CONTACT, 1, 1) = '1'
           AND LENGTH(FC.TEXT_CONTACT) = 11
           AND AD.date_decision >= SYSDATE - 180 --360 CHANGE TO 6 MONTH 20191104
           AND UPPER(FC.TEXT_CONTACT_COMMENT) NOT LIKE '%TEST%' --20181214
           AND FC.TEXT_CONTACT NOT IN
               (select DISTINCT a.qc_phone_number
                  FROM ap_coll.mystery_check_history a
                 where a.date_assigned =
                       (select max(b.date_assigned)
                          from ap_coll.mystery_check_history b)) --exclude coll ms phone from trigger 20200729
        )
      
      --CREATE TABLE TRIGGER_32_FINAL AS
      ,
      HIT_PREPARE AS
       (SELECT /*+MATERIALIZE*/
         B.*
          FROM TRIGGER_32_BASE B
          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
            ON EX.CLASS = '32'
           AND B.DTIME_VALID_FROM >= EX.MAX_DETECT)
      
      ,
      SA_PHONE AS
       (
        --EXTERNAL DATA + SA ONBOARD DATA
        SELECT /*+MATERIALIZE*/
         E.SKP_EMPLOYEE,
          E.TEXT_USERNAME_EMPLOYEE,
          P.PHONE,
          PHONE_TYPE,
          CASE
            WHEN E.SKP_BANK_ROLE = 45 THEN
             'SA'
            WHEN E.SKP_BANK_ROLE IN (601,
                                     602,
                                     603,
                                     604,
                                     605,
                                     606,
                                     607,
                                     608,
                                     609,
                                     962,
                                     963,
                                     964,
                                     965,
                                     966,
                                     967,
                                     968,
                                     969,
                                     970,
                                     971,
                                     972) THEN
             'TSO'
            WHEN E.SKP_BANK_ROLE = 33 THEN
             'RA'
            WHEN E.SKP_BANK_ROLE IN (501, 20, 9) THEN
             'DSM'
            ELSE
             CLBR.NAME_BANK_ROLE_EN
          END AS OWNER_TYPE
          FROM HIT_PREPARE B
          JOIN AP_ANTIFRAUD.F_SA_PHONE P
            ON B.TEXT_CONTACT = P.PHONE
          JOIN OWNER_DWH.DC_EMPLOYEE E
            ON P.IDENT = E.TEXT_IDENT_NUMBER
          JOIN OWNER_DWH.CL_BANK_ROLE CLBR
            ON E.SKP_BANK_ROLE = CLBR.SKP_BANK_ROLE
         WHERE (UPPER(SOURCE) IN ('IV', 'DATABASE') OR
               (UPPER(SOURCE) = 'VENDOR' AND UPPER(REMARK) = 'MATCH'))
           AND p.phone_type NOT LIKE '%COLL%' --exclude coll 20191121
           AND E.CODE_EMPLOYEE_STATUS = 'a'
           AND E.TEXT_USERNAME_EMPLOYEE NOT LIKE '10%' --20171214 ELLEN --remove 20190415
           AND E.TEXT_USERNAME_EMPLOYEE NOT LIKE '13%' --20180207 Lina
           AND E.NAME_LAST <> 'test account' --20180905 lina
           AND CLBR.NAME_BANK_ROLE_EN != 'XNA'
           AND B.TEXT_IDENT_CARD_NUMBER <> E.TEXT_IDENT_NUMBER
           AND B.NAME_LAST <> E.NAME_LAST --20190115
           AND INSTR(P.PHONE_TYPE, B.NAME_LAST) = 0 --20190326
        
        UNION
        
        --EMPLOYEE TABLE
        SELECT /*+MATERIALIZE*/
         E.SKP_EMPLOYEE,
          E.TEXT_USERNAME_EMPLOYEE,
          TEXT_CELLPHONE AS PHONE,
          'OWNER' || E.NAME_LAST AS PHONE_TYPE,
          CASE
            WHEN E.SKP_BANK_ROLE = 45 THEN
             'SA'
            WHEN E.SKP_BANK_ROLE IN (601,
                                     602,
                                     603,
                                     604,
                                     605,
                                     606,
                                     607,
                                     608,
                                     609,
                                     962,
                                     963,
                                     964,
                                     965,
                                     966,
                                     967,
                                     968,
                                     969,
                                     970,
                                     971,
                                     972) THEN
             'TSO'
            WHEN E.SKP_BANK_ROLE = 33 THEN
             'RA'
            WHEN E.SKP_BANK_ROLE IN (501, 20, 9) THEN
             'DSM'
            ELSE
             CLBR.NAME_BANK_ROLE_EN
          END AS OWNER_TYPE
          FROM HIT_PREPARE B
          JOIN OWNER_DWH.DC_EMPLOYEE E
            ON B.TEXT_CONTACT = E.TEXT_CELLPHONE
          JOIN OWNER_DWH.CL_BANK_ROLE CLBR
            ON E.SKP_BANK_ROLE = CLBR.SKP_BANK_ROLE
         WHERE E.CODE_EMPLOYEE_STATUS = 'a'
           AND E.TEXT_USERNAME_EMPLOYEE NOT LIKE '10%' --20171214 ELLEN
           AND E.TEXT_USERNAME_EMPLOYEE NOT LIKE '13%' --20180207 Lina
           AND E.NAME_LAST <> 'test account' --20180905 lina
           AND CLBR.NAME_BANK_ROLE_EN != 'XNA'
           AND B.TEXT_IDENT_CARD_NUMBER <> E.TEXT_IDENT_NUMBER
           AND B.NAME_LAST <> E.NAME_LAST --20190115
        
        UNION
        
        --POS_PHONE 
        SELECT /*+MATERIALIZE*/
         S.SKP_SALESROOM,
          S.code_salesroom,
          S.text_main_contact_cellphone AS PHONE,
          'OWNER' || S.text_main_contact_name AS PHONE_TYPE,
          'POS MAIN CONTACT' AS OWNER_TYPE
          FROM HIT_PREPARE B
          JOIN OWNER_DWH.DC_SALESROOM S
            ON B.TEXT_CONTACT = S.text_main_contact_cellphone
         WHERE S.code_salesroom_status = 'a'
           AND B.TEXT_IDENT_CARD_NUMBER <> S.text_main_contact_ident
           AND B.NAME_LAST <> S.text_main_contact_name
        
        UNION
        
        --RETAILER PHONE-BRP
        SELECT /*+MATERIALIZE*/
         SE.SKP_SELLER,
          SE.CODE_SELLER,
          SE.TEXT_BUSINESS_PERSON_CELLPHONE AS PHONE,
          'OWNER' || SE.NAME_BUSINESS_RESP_PERSON AS PHONE_TYPE,
          'RETAILER BUSINESS REPRESENTATIVE PERSON' AS OWNER_TYPE
          FROM HIT_PREPARE B
          JOIN OWNER_DWH.DC_SELLER SE
            ON B.TEXT_CONTACT = SE.TEXT_BUSINESS_PERSON_CELLPHONE
         WHERE SE.DATE_SELLER_ACT_END != DATE
         '1000-01-01'
           AND SE.DATE_SELLER_ACT_END != DATE
         '3000-01-01' --STILL ACTIVE
           AND B.TEXT_IDENT_CARD_NUMBER <> SE.ID_BUSINESS_RESP_PERSON
           AND B.NAME_LAST <> SE.NAME_BUSINESS_RESP_PERSON
        
        UNION
        
        --RETAILER PHONE- MAIN CONTACT PERSON
        SELECT /*+MATERIALIZE*/
         SE.SKP_SELLER,
          SE.CODE_SELLER,
          SE.TEXT_MAIN_CONTACT_CELLPHONE AS PHONE,
          'OWNER' || SE.NAME_MAIN_SELLER_CONTACT AS PHONE_TYPE,
          'RETAILER MAIN CONTACT PERSON' AS OWNER_TYPE
          FROM HIT_PREPARE B
          JOIN OWNER_DWH.DC_SELLER SE
            ON B.TEXT_CONTACT = SE.TEXT_MAIN_CONTACT_CELLPHONE
           AND SE.TEXT_BUSINESS_PERSON_CELLPHONE !=
               SE.TEXT_MAIN_CONTACT_CELLPHONE
         WHERE SE.DATE_SELLER_ACT_END != DATE
         '1000-01-01'
           AND SE.DATE_SELLER_ACT_END != DATE
         '3000-01-01' --STILL ACTIVE
           AND B.NAME_LAST <> SE.NAME_MAIN_SELLER_CONTACT)
      
      ,
      LIST_AGG AS
       (SELECT /*+MATERIALIZE*/
         PHONE,
         LISTAGG(OWNER_TYPE || ': ' || PHONE_TYPE || ' (CODE=' ||
                 TEXT_USERNAME_EMPLOYEE || ')',
                 ' | ') WITHIN GROUP(ORDER BY OWNER_TYPE) AS HIT_DETAIL
          FROM SA_PHONE
         GROUP BY PHONE)
      
      ,
      HIT_RESULT AS
       (SELECT DISTINCT AA.SKP_CONTACT,
                        AA.SKP_CLIENT,
                        AA.TEXT_CONTACT,
                        '新增客户手机与捷信员工相同' AS TRIGGER_SOURCE,
                        '客户手机在(' ||
                        TO_CHAR(AA.DTIME_VALID_FROM, 'YYYY-MM-DD HH24:MI:SS') ||
                        ')被(' || MODIFY_DEPT || ')新增成(' || AA.TEXT_CONTACT ||
                        ') 与捷信员工相同, 电话号分别等于[' || HIT_DETAIL || ']' AS TRIGGER_VALUE
          FROM LIST_AGG L
          JOIN HIT_PREPARE AA
            ON L.PHONE = AA.TEXT_CONTACT)
      
      /********************3: Mobile phone is shared>=2 clients**********************/
      ,
      CONTACT AS
       (SELECT /*+MATERIALIZE USE_HASH(AA,BB,EX)*/
         AA.*
          FROM TRIGGER_32_BASE AA
          JOIN TRIGGER_32_BASE BB
            ON AA.TEXT_CONTACT = BB.TEXT_CONTACT
          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
            ON EX.CLASS = '32'
           AND AA.SKP_CLIENT <> BB.SKP_CLIENT
           AND AA.DTIME_VALID_FROM >= EX.MAX_DETECT
           AND AA.DTIME_VALID_FROM > BB.DTIME_VALID_FROM
           AND AA.DTIME_VALID_FROM - BB.DTIME_VALID_FROM <= 30
           AND SUBSTR(AA.ID_SOURCE, 1, 1) = 'C'
           AND SUBSTR(BB.ID_SOURCE, 1, 1) = 'C'
           AND AA.CODE_CONTACT_STATUS = 'a'
           AND BB.CODE_CONTACT_STATUS = 'a'
           AND NOT EXISTS
         (SELECT 1
                  FROM HIT_RESULT P
                 WHERE P.SKP_CONTACT = AA.SKP_CONTACT)
        UNION
        SELECT /*+MATERIALIZE USE_HASH(AA,BB,EX)*/
         BB.*
          FROM TRIGGER_32_BASE AA
          JOIN TRIGGER_32_BASE BB
            ON AA.TEXT_CONTACT = BB.TEXT_CONTACT
          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
            ON EX.CLASS = '32'
           AND AA.SKP_CLIENT <> BB.SKP_CLIENT
           AND AA.DTIME_VALID_FROM >= EX.MAX_DETECT
           AND AA.DTIME_VALID_FROM > BB.DTIME_VALID_FROM
           AND AA.DTIME_VALID_FROM - BB.DTIME_VALID_FROM <= 30
           AND SUBSTR(AA.ID_SOURCE, 1, 1) = 'C'
           AND SUBSTR(BB.ID_SOURCE, 1, 1) = 'C'
           AND AA.CODE_CONTACT_STATUS = 'a'
           AND BB.CODE_CONTACT_STATUS = 'a'
           AND NOT EXISTS
         (SELECT 1
                  FROM HIT_RESULT P
                 WHERE P.SKP_CONTACT = AA.SKP_CONTACT))
      
      ,
      DUPLICATE AS
       (SELECT BB.SKP_CONTACT,
               BB.SKP_CLIENT,
               BB.TEXT_CONTACT,
               '手机号被不同客户使用' AS TRIGGER_SOURCE,
               '客户手机在(' ||
               TO_CHAR(BB.DTIME_VALID_FROM, 'YYYY-MM-DD HH24:MI:SS') ||
               ')被(' || MODIFY_DEPT || ')修改成(' || BB.TEXT_CONTACT ||
               ') 与其他客户现用手机相同' AS TRIGGER_VALUE
          FROM CONTACT BB
          JOIN (SELECT TEXT_CONTACT
                 FROM CONTACT
                GROUP BY TEXT_CONTACT
               HAVING COUNT(DISTINCT SKP_CLIENT) >= 3 --TEMP FOR PEAK ON 2016-04-11
               ) AA
            ON AA.TEXT_CONTACT = BB.TEXT_CONTACT)
      
      SELECT /*+MATERIALIZE USE_HASH(DD, FACC)*/
       TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
       TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT
       --,FACC.text_username_employee_sales AS ID_ENTITY
      ,
       CASE
         WHEN DCC.SKP_CREDIT_TYPE = 2 AND
              DCC.skp_credit_acquisition_chnl = 6 THEN
          E.TEXT_USERNAME_EMPLOYEE
         ELSE
          FACC.text_username_employee_sales
       END AS ID_ENTITY -- anny 20191213
      ,
       DD.TRIGGER_SOURCE,
       CAST(DD.ID_GROUP AS VARCHAR(10)) || ']' || DD.TRIGGER_VALUE AS TRIGGER_VALUE,
       FACC.skp_credit_case,
       FACC.text_contract_number,
       DD.ID_GROUP,
       DD.CNT_CLIENT,
       DD.TEXT_CONTACT,
       FACC.date_decision,
       FACC.name_channel,
       FACC.name_region,
       FACC.NAME_SALESROOM
       --,FACC.skp_employee_consultant
       --,FACC.name_last_sales
      ,
       CASE
         WHEN DCC.SKP_CREDIT_TYPE = 2 AND
              DCC.skp_credit_acquisition_chnl = 6 THEN
          TT.skp_employee_consult_3rd_block
         ELSE
          FACC.skp_employee_consultant
       END AS skp_employee_consultant,
       CASE
         WHEN DCC.SKP_CREDIT_TYPE = 2 AND
              DCC.skp_credit_acquisition_chnl = 6 THEN
          E.NAME_LAST
         ELSE
          FACC.name_last_sales
       END AS name_last_sales
      
        FROM (SELECT AA.*,
                     DENSE_RANK() OVER(ORDER BY TRIGGER_SOURCE, TEXT_CONTACT) AS ID_GROUP,
                     COUNT(SKP_CLIENT) OVER(PARTITION BY TEXT_CONTACT, TRIGGER_SOURCE) AS CNT_CLIENT
                FROM (SELECT SKP_CLIENT,
                             TEXT_CONTACT,
                             TRIGGER_SOURCE,
                             TRIGGER_VALUE
                        FROM DUPLICATE
                      UNION
                      SELECT SKP_CLIENT,
                             TEXT_CONTACT,
                             TRIGGER_SOURCE,
                             TRIGGER_VALUE
                        FROM HIT_RESULT) AA) DD
        JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC
          ON DD.SKP_CLIENT = FACC.SKP_CLIENT
        JOIN OWNER_DWH.DC_CREDIT_CASE DCC
          ON FACC.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE
         AND FACC.DATE_DECISION = DCC.DATE_DECISION
         AND FACC.SKP_CREDIT_TYPE = DCC.SKP_CREDIT_TYPE
        JOIN OWNER_DWH.F_APPLICATION_TT TT
          ON FACC.SKP_CREDIT_CASE = TT.SKP_CREDIT_CASE
         AND FACC.DATE_DECISION = TT.DATE_DECISION
         AND FACC.SKP_CREDIT_TYPE = TT.SKP_CREDIT_TYPE
        JOIN OWNER_DWH.DC_EMPLOYEE E
          ON TT.skp_employee_consult_3rd_block = E.SKP_EMPLOYEE
         AND FACC.date_decision >= SYSDATE - 180
         AND FACC.code_credit_status IN ('a', 'n')
         AND TT.DATE_DECISION >= SYSDATE - 180
         AND DCC.DATE_DECISION >= SYSDATE - 180
       WHERE FACC.date_decision >= SYSDATE - 180
         AND FACC.NAME_SALESROOM <> 'TestPOSALDI2.0_NONPILOT'; --20200729---20210122 Kate ke
    COMMIT;
  
    ----------INSERT TO TRIGGER PRESELECTION------------------
    --SELECT * FROM AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION WHERE CLASS='32'
  
    INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
      SELECT 'SA' AS UNIT,
             ID_ENTITY,
             TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
             TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
             '32' as CLASS,
             TRIGGER_SOURCE,
             TRIGGER_VALUE,
             'SOFT' AS TRIGGER_TYPE,
             skp_credit_case,
             text_contract_number
        FROM TRIGGER_32_FINAL;
    COMMIT;
  
    ----------INSERT TO TRIGGER------------------
    DELETE FROM AP_ANTIFRAUD.F_AF_FINAL_TRIGGERS
     WHERE CLASS = '32'
       AND DATE_DETECT = TRUNC(SYSDATE);
    COMMIT;
    INSERT INTO AP_ANTIFRAUD.F_AF_FINAL_TRIGGERS
      WITH FINAL_TRIGGER_BASE AS
       (SELECT DISTINCT DATE_DETECT,
                        WEEK_DETECT,
                        FACC.ID_ENTITY,
                        CAST(ID_GROUP AS VARCHAR(10)) || '](' ||
                        TEXT_CONTACT || ') 现被(' || CNT_CLIENT || ')客户使用' AS TRIGGER_VALUE,
                        CASE
                          WHEN FACC.ID_ENTITY = 'XNA' THEN
                           NULL
                          ELSE
                           name_last_sales
                        END AS name_last_sales --20200113
                       ,
                        CASE
                          WHEN FACC.ID_ENTITY = 'XNA' THEN
                           -1
                          ELSE
                           skp_employee_consultant
                        END AS skp_employee_consultant --20200113
                       ,
                        CASE
                          WHEN ((FACC.name_channel = '商品贷' AND
                               FACC.ID_ENTITY = 'extreme') OR
                               FACC.NAME_SALESROOM LIKE '%DEO%' OR
                               FACC.ID_ENTITY = 'homer_o2o') AND
                               DSAC.CODE_SALES_AREA IS NOT NULL THEN
                           DSAC.CODE_SALES_AREA
                          ELSE
                           PRO.CODE_SALES_AREA
                        END AS REGION,
                        CASE
                          WHEN ((FACC.name_channel = '商品贷' AND
                               FACC.ID_ENTITY = 'extreme') OR
                               FACC.NAME_SALESROOM LIKE '%DEO%' OR
                               FACC.ID_ENTITY = 'homer_o2o') AND
                               DSA.CODE_SALES_AREA IS NOT NULL THEN
                           DSA.CODE_SALES_AREA
                          ELSE
                           CC.CODE_SALES_AREA
                        END AS CODE_SALES_AREA
                        --,SA_TYPE
                        --,SA_ACTIVE_DAYS
                       ,
                        TRIGGER_SOURCE
                        --,TRIGGER_TYPE
                       ,
                        ID_GROUP,
                        MIN(CASE
                              WHEN FACC.name_channel = '商品贷' AND
                                   FACC.ID_ENTITY != 'extreme' AND
                                   EE.SKP_BANK_ROLE <> 1962 THEN
                               '2 POS LOAN'
                              WHEN FACC.name_channel LIKE '%无预约%' AND
                                   FACC.ID_ENTITY != 'extreme' THEN
                               '3 WALK-IN'
                              WHEN FACC.name_channel LIKE '消费贷%' AND
                                   FACC.ID_ENTITY != 'extreme' THEN
                               '1 XSELL'
                            --  WHEN FACC.name_channel='商品贷' AND FACC.ID_ENTITY='extreme' THEN '4 ELOAN' ELSE '5 MINI' END 
                              WHEN FACC.name_channel = '商品贷' AND
                                   EE.SKP_BANK_ROLE = 1962 THEN
                               '0 ELOAN'
                              ELSE
                               '5 MINI'
                            END --REMOTE SA 20190517
                            ) OVER(PARTITION BY DATE_DETECT, ID_GROUP) AS CASE_CATEGORY
          FROM TRIGGER_32_FINAL FACC
        --JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC ON PRE.SKP_CREDIT_CASE=FACC.skp_credit_case AND FACC.date_decision>=DATE'2014-01-01'and PRE.DATE_DETECT='2016/09/08'-- AND PRE.UNIT='SA'-- AND AA.CLASS=20 
          LEFT JOIN OWNER_DWH.DC_EMPLOYEE EE
            ON FACC.ID_ENTITY = EE.TEXT_USERNAME_EMPLOYEE
          LEFT JOIN OWNER_DWH.DC_SALES_AREA CC
            ON CC.NAME_SALES_AREA = FACC.name_region
           AND CC.code_sales_area_status = 'a'
           and CC.skp_sales_area_type = 1
          LEFT JOIN OWNER_DWH.DC_SALES_AREA PRO
            ON CC.SKP_SALES_AREA_SUPERIOR = PRO.SKP_SALES_AREA
           AND PRO.CODE_SALES_AREA_STATUS = 'a'
           and PRO.SKP_SALES_AREA_TYPE = 2
        /*---SA_ACTIVE_DAYS
        LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA ON FACC.skp_employee_consultant=sa.skp_employee AND PRE.UNIT='SA'
        ---POS_ACTIVE_DAYS
        LEFT JOIN DM_ANTIFRAUD.F_SALESROOM_AD FS ON FACC.skp_salesroom=FS.skp_salesroom AND PRE.UNIT='POS'
        */
          JOIN OWNER_DWH.f_Application_Client_Tt ACT
            ON ACT.SKP_CREDIT_CASE = FACC.SKP_CREDIT_CASE
           AND ACT.SKP_CLIENT_ROLE = 14
          LEFT JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR
            ON ADDR.SKP_CREDIT_CASE = FACC.SKP_CREDIT_CASE
           AND ACT.SKP_APPLICATION_CLIENT = ADDR.SKP_APPLICATION_CLIENT
           AND ADDR.SKP_ADDRESS_TYPE = 2 --CURRENT
          LEFT JOIN OWNER_DWH.DC_CITY DC
            ON DC.SKP_CITY = ADDR.SKP_CITY
          LEFT JOIN OWNER_DWH.DC_SALES_AREA DSA
            ON DSA.NAME_SALES_AREA = DC.NAME_CITY
           AND DSA.code_sales_area_status = 'a'
           and DSA.skp_sales_area_type = 1
          LEFT JOIN OWNER_DWH.DC_SALES_AREA DSAC
            ON DSA.SKP_SALES_AREA_SUPERIOR = DSAC.SKP_SALES_AREA
           AND DSAC.CODE_SALES_AREA_STATUS = 'a'
           and DSAC.SKP_SALES_AREA_TYPE = 2
        
        ),
      PROVINCE AS
       (SELECT DISTINCT ID_GROUP,
                        LISTAGG(REGION, '、') WITHIN GROUP(ORDER BY REGION) OVER(PARTITION BY ID_GROUP) AS PROVINCE
          FROM (SELECT DISTINCT ID_GROUP, REGION FROM FINAL_TRIGGER_BASE)),
      REGION AS
       (SELECT DISTINCT AA.ID_GROUP,
                        BB.PROVINCE,
                        LISTAGG(CODE_SALES_AREA, '、') WITHIN GROUP(ORDER BY CODE_SALES_AREA) OVER(PARTITION BY AA.ID_GROUP) AS CITY,
                        CASE
                          WHEN CASE_CATEGORY = '1 XSELL' THEN
                           '3 XSELL'
                          WHEN CASE_CATEGORY = '2 POS LOAN' THEN
                           '1 POS LOAN'
                          WHEN CASE_CATEGORY = '3 WALK-IN' THEN
                           '2 WALK-IN'
                          WHEN CASE_CATEGORY = '0 ELOAN' THEN
                           '4 ELOAN' --20190807
                          ELSE
                           CASE_CATEGORY
                        END AS CASE_CATEGORY ----------PRIORITY XSELL
          FROM (SELECT DISTINCT ID_GROUP, CODE_SALES_AREA, CASE_CATEGORY
                  FROM FINAL_TRIGGER_BASE) AA
          JOIN PROVINCE BB
            ON AA.ID_GROUP = BB.ID_GROUP)
      
      SELECT AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID,
             'SA' AS UNIT,
             'SA' || '_' || AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID_TRIGGER,
             TO_DATE(TRI.DATE_DETECT, 'YYYY-MM-DD') AS DATE_DETECT,
             TO_DATE(TRI.WEEK_DETECT, 'YYYY-MM-DD') AS WEEK_DETECT,
             TRI.ID_ENTITY,
             TRI.name_last_sales,
             BB.PROVINCE,
             BB.CITY,
             CASE
               WHEN SUBSTR(ID_ENTITY, 1, 1) IN ('6', 'D') THEN
                'RA'
               ELSE
                'SA'
             END AS SA_TYPE,
             CASE
               WHEN TRI.skp_employee_consultant = -1 THEN
                NULL
               ELSE
                SA.cnt_days_from_first_credit
             END AS cnt_days_from_first_credit,
             '32' AS CLASS,
             TRI.TRIGGER_SOURCE,
             'SOFT' AS TRIGGER_TYPE,
             TRI.TRIGGER_VALUE,
             NULL CHECKED_BY,
             NULL CASE_STATUS,
             NULL CASE_DECISION,
             NULL CASE_NO,
             NULL INTO_SECURITY,
             SYSDATE AS TIME_DETECT,
             BB.CASE_CATEGORY,
             NULL AS NAME_DISTRICT,
             '是' AS FLAG_SEC_ALL_CONTRACT
        FROM (SELECT DISTINCT DATE_DETECT,
                              WEEK_DETECT,
                              ID_ENTITY,
                              name_last_sales,
                              TRIGGER_SOURCE,
                              skp_employee_consultant,
                              TRIGGER_VALUE,
                              ID_GROUP
                FROM FINAL_TRIGGER_BASE) TRI
        JOIN REGION BB
          ON TRI.ID_GROUP = BB.ID_GROUP
      ---SA_ACTIVE_DAYS
        LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA
          ON TRI.skp_employee_consultant = sa.skp_employee;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL);
    COMMIT;
    -- procedure end
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'end');
  END IF;
EXCEPTION
  WHEN OTHERS THEN
    -- ROBOTS_LOG
    owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                               p_step            => v_step_message,
                                               p_additional_info => NULL);
    -- process_log  
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => SQLCODE,
                                  p_msg    => 'Error in step (' ||
                                              v_step_message || ') - ' ||
                                              substr(SQLERRM, 1, 150));
    RAISE;
END;




   PROCEDURE TRIGGER_36_37_41_FRAUD IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_36_37_41_FRAUD';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
-----------CLASS 36---------------------------------------------------------------------------------
-----------CLASS 36---------------------------------------------------------------------------------
-----------CLASS 36---------------------------------------------------------------------------------

INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '36 FAKE EMP',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH FAKE_EMP AS 
(
SELECT DISTINCT FFC.SKP_CREDIT_CASE,FFC.TEXT_CONTRACT_NUMBER
,PP.MOBILE
,FFC.DATE_DECISION,FFC.CODE_CREDIT_STATUS,FFC.SKP_CLIENT,ffc.text_username_employee_sales
FROM AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS FFC
join  AP_ANTIFRAUD.F_AF_ALL_PHONE_CHARLOTTE PP ON FFC.SKP_CREDIT_CASE=PP.SKP_CREDIT_CASE
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='36' 
AND FFC.DTIME_SUPERVISOR_CONFIRM>=EX.MAX_DETECT-10----add 20181122 kate ke (enlarge timeline in case the confirm time is delayed due to late update of AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS )
AND FFC.DTIME_SUPERVISOR_CONFIRM<DATE'3000-01-01'
WHERE FFC.TEXT_CUS_WORK_CDTN='该工作单位不存在' AND PP.MOBILE_TYPE='EMP_PHONE'
AND MOBILE NOT IN ('01060251022','02982462961' ,'02987555052','057188936673')
----时间上trigger加
)
---add 20181122 kate ke exclude dcm_complaint cases which is triggered by 515(table changed )
,DCM_COMPLAINT AS 
(
SELECT /*+ORDERED USE_HASH(AD,FF)*/DISTINCT FF.SKP_CREDIT_CASE,FF.DATE_DECISION
FROM OWNER_DWH.F_COMPLAINT_AD AD 
JOIN OWNER_DWH.Dc_Contract FF ON FF.SKP_CONTRACT=AD.SKP_CONTRACT 
WHERE AD.CODE_COMPLAINT_CASE_TYPE='FRAUD_INVESTIGATION' AND FF.SKP_CONTRACT<>-1
AND FF.DATE_DECISION>=SYSDATE-365
)

SELECT DISTINCT 'SA' AS UNIT 
,PP.TEXT_USERNAME_EMPLOYEE_SALES
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'36' AS CLASS
,'FAKE EMPLOYER' AS TRIGGER_SOURCE
/*,'has the same emp phone with fraud contract :  '||FE.TEXT_CONTRACT_NUMBER ||'confirmed not exist ' 
||'emp phone: '||fe.MOBILE  AS TRIGGER_VALUE*/
--20180209 lina
, 'has the same emp phone with fraud contract :  ' ||
           LISTAGG(FE.TEXT_CONTRACT_NUMBER ||
                   'confirmed not exist emp phone: ' || FE.MOBILE,
                   ' | ') WITHIN GROUP(ORDER BY FE.SKP_CREDIT_CASE) OVER(PARTITION BY PP.SKP_CREDIT_CASE) AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,PP.SKP_CREDIT_CASE
,PP.TEXT_CONTRACT_NUMBER  
FROM AP_ANTIFRAUD.F_AF_ALL_PHONE_CHARLOTTE PP
JOIN FAKE_EMP FE ON FE.MOBILE=PP.MOBILE AND PP.MOBILE_TYPE='EMP_PHONE'
AND FE.SKP_CLIENT!=PP.SKP_CLIENT AND FE.SKP_CREDIT_CASE!=PP.SKP_CREDIT_CASE AND PP.DATE_DECISION-FE.date_decision BETWEEN -5 AND 5
AND PP.DATE_DECISION>=SYSDATE-365 --only trigger contract in recent one year 20180627
LEFT JOIN DCM_COMPLAINT DC
ON DC.SKP_CREDIT_CASE =PP.SKP_CREDIT_CASE AND PP.DATE_DECISION= DC.DATE_DECISION 
WHERE  NOT EXISTS (SELECT 1 FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS BB WHERE BB.SKP_CREDIT_CASE=PP.SKP_CREDIT_CASE AND BB.CLASS=36)----20181122 kate ke for avioding duplicates
AND DC.SKP_CREDIT_CASE IS NULL
AND PP.TEXT_USERNAME_EMPLOYEE_SALES NOT IN ('homer_o2o','extreme','capp');
COMMIT;
--stop 37 41 20190919
/*
-----------CLASS 37---------------------------------------------------------------------------------
-----------CLASS 37---------------------------------------------------------------------------------
-----------CLASS 37---------------------------------------------------------------------------------
--change DATE_DECISION to TRUNC(DATE_DECISION) 20181025
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '37 FRAUD RELATED 9 DIGIT',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
--6'
WITH FRAUD_CONTRACT AS 
(
SELECT \*+materialize USE_HASH(FFC,PP,EX)*\  
FFC.SKP_CREDIT_CASE,FFC.NAME_SEC_FRAUD_MEANS,FFC.DATE_DECISION,FFC.TEXT_USERNAME_EMPLOYEE_SALES,FFC.TEXT_CONTRACT_NUMBER, FFC.DTIME_AF_CONFIRM_RESULT
FROM AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS FFC
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='37' 
AND FFC.DTIME_AF_CONFIRM_RESULT>=EX.MAX_DETECT
WHERE FFC.NAME_SEC_FRAUD_MEANS IN ('白马欺诈','虚假证明文件/信息','身份欺诈','套现')

UNION --added by Anny to collect ID fraud from old portal 2018-11-26
SELECT \*+MATERIALIZE USE_HASH(FF,PP,EX)*\   
DISTINCT FF.SKP_CREDIT_CASE,FF.FRAUD_TYPE,FF.DATE_DECISION,FF.TEXT_USERNAME_EMPLOYEE_SALES,FF.TEXT_CONTRACT_NUMBER, FF.IMPORT_DATE
FROM  AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FF
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='37' AND FF.IMPORT_DATE>=EX.MAX_DETECT
WHERE 1=1
AND (FF.FRAUD_TYPE LIKE '%套现%' OR FF.FRAUD_TYPE ='身份欺诈' OR FF.FRAUD_TYPE LIKE 'ID Fraud - %'   OR FF.FRAUD_TYPE ='白马欺诈' OR FF.FRAUD_TYPE LIKE   '%虚假信息%')

UNION -- anny 2018-11-26 to check and supplement whether something missing
SELECT \*+materialize USE_HASH(FFC,PP,EX)*\  
FFC.SKP_CREDIT_CASE,FFC.NAME_SEC_FRAUD_MEANS,FFC.DATE_DECISION,FFC.TEXT_USERNAME_EMPLOYEE_SALES,FFC.TEXT_CONTRACT_NUMBER,DTIME_AF_CONFIRM_RESULT
from AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS FFC
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='37' 
AND TRUNC(FFC.DTIME_AF_CONFIRM_RESULT,'IW')+6=TRUNC(EX.MAX_DETECT-30,'IW')+6
AND FFC.DTIME_AF_CONFIRM_RESULT<DATE'3000-01-01'
WHERE FFC.NAME_SEC_FRAUD_MEANS IN ('白马欺诈','虚假证明文件/信息','身份欺诈','套现')
)

,FRAUD_PHONE AS
 (
SELECT \*+MATERIALIZE USE_HASH(FFC, PP, DS, DR)*\ FFC.SKP_CREDIT_CASE,FFC.NAME_SEC_FRAUD_MEANS,FFC.DATE_DECISION,FFC.TEXT_USERNAME_EMPLOYEE_SALES
,FFC.TEXT_CONTRACT_NUMBER,PP.MOBILE,PP.MOBILE_TYPE,DR.SKP_SELLER,FFC.DTIME_AF_CONFIRM_RESULT,PP.SKP_CLIENT
FROM FRAUD_CONTRACT FFC
JOIN AP_ANTIFRAUD.F_AF_ALL_PHONE_CHARLOTTE PP ON FFC.SKP_CREDIT_CASE=PP.SKP_CREDIT_CASE AND TRUNC(FFC.DATE_DECISION)=TRUNC(PP.DATE_DECISION)
JOIN OWNER_DWH.DC_SALESROOM DS ON PP.SKP_SALESROOM=DS.SKP_SALESROOM
JOIN OWNER_DWH.DC_SELLER DR ON DS.SKP_SELLER=DR.SKP_SELLER
AND UPPER(MOBILE_TYPE) NOT LIKE '%PHONE%' 
)

,DCM_COMPLAINT AS 
( --2018-11-26 ANNY
SELECT \*+ORDERED USE_HASH(AD,FF)*\DISTINCT FF.SKP_CREDIT_CASE,FF.DATE_DECISION 
FROM OWNER_DWH.F_COMPLAINT_AD AD 
JOIN OWNER_DWH.DC_CONTRACT FF
ON FF.SKP_CONTRACT=AD.SKP_CONTRACT
WHERE AD.CODE_COMPLAINT_CASE_TYPE='FRAUD_INVESTIGATION'
AND FF.DATE_DECISION >=SYSDATE-365
)

SELECT \*+ORDERED USE_HASH(DS,PP, DR, FP, FC, APFFC, DCM)*\DISTINCT 'SA' AS UNIT 
,PP.TEXT_USERNAME_EMPLOYEE_SALES
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'37' AS CLASS
,'FRAUD RELATED-SAME-9DIGITS & SAME RETAILER' AS TRIGGER_SOURCE
,'This Contract ' || PP.TEXT_CONTRACT_NUMBER ||' 是否逾期：' ||FC.FLAG_OVERDUE||'; '|| LISTAGG(PP.MOBILE_TYPE || ':' || PP.MOBILE || '= fraud contract' ||   FP.TEXT_CONTRACT_NUMBER 
|| ' ' || FP.MOBILE_TYPE || ':' ||  FP.MOBILE,  ' | ') WITHIN GROUP(ORDER BY FP.SKP_CREDIT_CASE) OVER(PARTITION BY PP.SKP_CREDIT_CASE) AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,PP.SKP_CREDIT_CASE
,PP.TEXT_CONTRACT_NUMBER  
FROM OWNER_DWH.DC_SALESROOM DS
JOIN AP_ANTIFRAUD.F_AF_ALL_PHONE_CHARLOTTE pp  ON DS.SKP_SALESROOM=PP.SKP_SALESROOM
JOIN OWNER_DWH.DC_SELLER DR ON DS.SKP_SELLER=DR.SKP_SELLER
JOIN FRAUD_PHONE FP ON SUBSTR(FP.MOBILE,1,9)=SUBSTR(PP.MOBILE,1,9)
AND PP.SKP_CLIENT!=FP.SKP_CLIENT AND PP.SKP_CREDIT_CASE!=FP.SKP_CREDIT_CASE
AND FP.SKP_SELLER=DR.SKP_SELLER AND TRUNC(DTIME_AF_CONFIRM_RESULT)-TRUNC(PP.DATE_DECISION) BETWEEN -90 AND 90
AND UPPER(PP.TEXT_USERNAME_EMPLOYEE_SALES)!='EXTREME' AND pp.code_credit_status IN('a','k','n') AND DS.NAME_SALESROOM NOT LIKE '%DEO%' 
LEFT JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD FC --20180710
ON PP.SKP_CREDIT_CASE=FC.skp_credit_case
AND PP.SKP_CLIENT=FC.skp_client AND FC.DATE_DECISION >=SYSDATE-365
LEFT JOIN AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS APFFC ON PP.SKP_CREDIT_CASE =APFFC.SKP_CREDIT_CASE  AND  (SYSDATE-APFFC.DATE_DETECT)<=60 AND APFFC.CLASS IN (37,515)
LEFT JOIN DCM_COMPLAINT DCM ON PP.SKP_CREDIT_CASE =DCM.SKP_CREDIT_CASE 
WHERE PP.DATE_DECISION>=SYSDATE-365  --only trigger contract in recent one year 20180627
AND APFFC.SKP_CREDIT_CASE IS NULL AND DCM.SKP_CREDIT_CASE IS NULL;
COMMIT;


----------------------------------CLASS=37 FOR TSO----2017-11-03--------
--9'
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH FRAUD_CONTRACT AS 
(
SELECT \*+materialize USE_HASH(FFC,PP,EX)*\  
FFC.SKP_CREDIT_CASE,FFC.NAME_SEC_FRAUD_MEANS,FFC.DATE_DECISION,FFC.TEXT_USERNAME_EMPLOYEE_SALES,FFC.TEXT_CONTRACT_NUMBER, FFC.DTIME_AF_CONFIRM_RESULT
from AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS FFC
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='37' 
AND FFC.DTIME_AF_CONFIRM_RESULT>=SYSDATE-70   -----------最近70天结案的合同
WHERE FFC.NAME_SEC_FRAUD_MEANS IN ('白马欺诈','虚假证明文件/信息','身份欺诈','套现')

UNION --added by Anny to collect ID fraud from old portal 2018-11-26
SELECT \*+MATERIALIZE USE_HASH(FF,PP,EX)*\   
DISTINCT FF.SKP_CREDIT_CASE,FF.FRAUD_TYPE,FF.DATE_DECISION,FF.TEXT_USERNAME_EMPLOYEE_SALES,FF.TEXT_CONTRACT_NUMBER, FF.IMPORT_DATE
FROM  AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FF
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='37' AND FF.IMPORT_DATE>=SYSDATE-70   -----------最近70天结案的合同
WHERE 1=1
AND (FF.FRAUD_TYPE LIKE '%套现%' OR FF.FRAUD_TYPE ='身份欺诈' OR FF.FRAUD_TYPE LIKE 'ID Fraud - %'   OR FF.FRAUD_TYPE ='白马欺诈' OR FF.FRAUD_TYPE LIKE   '%虚假信息%')
)

,FRAUD_PHONE AS 
(
SELECT \*+MATERIALIZE USE_HASH(FFC, PP, DS, DR)*\ FFC.SKP_CREDIT_CASE,FFC.NAME_SEC_FRAUD_MEANS,FFC.DATE_DECISION,FFC.TEXT_USERNAME_EMPLOYEE_SALES
,FFC.TEXT_CONTRACT_NUMBER,PP.MOBILE,PP.MOBILE_TYPE,DR.SKP_SELLER,FFC.DTIME_AF_CONFIRM_RESULT,PP.SKP_CLIENT
FROM FRAUD_CONTRACT FFC
JOIN AP_ANTIFRAUD.F_AF_ALL_PHONE_CHARLOTTE PP ON FFC.SKP_CREDIT_CASE=PP.SKP_CREDIT_CASE AND TRUNC(FFC.DATE_DECISION)=TRUNC(PP.DATE_DECISION)
JOIN OWNER_DWH.DC_SALESROOM DS ON PP.SKP_SALESROOM=DS.SKP_SALESROOM
JOIN OWNER_DWH.DC_SELLER DR ON DS.SKP_SELLER=DR.SKP_SELLER
AND UPPER(MOBILE_TYPE) NOT LIKE '%PHONE%' 
AND DS.NAME_SALESROOM LIKE '%DEO%'
)

,DCM_COMPLAINT AS 
( --2018-11-26 ANNY
SELECT \*+ORDERED USE_HASH(AD,FF)*\DISTINCT FF.SKP_CREDIT_CASE,FF.DATE_DECISION 
FROM OWNER_DWH.F_COMPLAINT_AD AD 
JOIN OWNER_DWH.DC_CONTRACT FF
ON FF.SKP_CONTRACT=AD.SKP_CONTRACT
WHERE AD.CODE_COMPLAINT_CASE_TYPE='FRAUD_INVESTIGATION'
AND FF.DATE_DECISION >=SYSDATE-365
)

SELECT  \*+ORDERED USE_HASH(EE,PP,FP,FC, APFFC, DCM)*\ 
 DISTINCT  'SA' AS UNIT ,
PP.TEXT_USERNAME_EMPLOYEE_SALES AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'37' AS CLASS
,'FRAUD RELATED-SAME-9DIGITS & SAME EMPLOYEE' AS TRIGGER_SOURCE
,'This Contract' || PP.TEXT_CONTRACT_NUMBER ||' 是否逾期：' ||FC.FLAG_OVERDUE||'; '|| LISTAGG(PP.MOBILE_TYPE || ':' || PP.MOBILE || '= fraud contract' || FP.TEXT_CONTRACT_NUMBER 
|| ' ' || FP.MOBILE_TYPE || ':' ||  FP.MOBILE,  ' | ') WITHIN GROUP(ORDER BY FP.SKP_CREDIT_CASE) OVER(PARTITION BY PP.SKP_CREDIT_CASE) AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,PP.SKP_CREDIT_CASE
,PP.TEXT_CONTRACT_NUMBER  
FROM OWNER_DWH.DC_EMPLOYEE EE
JOIN AP_ANTIFRAUD.F_AF_ALL_PHONE_CHARLOTTE pp  ON PP.SKP_EMPLOYEE_CONSULTANT  = EE.SKP_EMPLOYEE
JOIN FRAUD_PHONE FP ON SUBSTR(FP.MOBILE,1,9)=SUBSTR(PP.MOBILE,1,9)  -------------------------------------------------------
AND PP.SKP_CLIENT!=FP.SKP_CLIENT AND PP.SKP_CREDIT_CASE!=FP.SKP_CREDIT_CASE
AND FP.TEXT_USERNAME_EMPLOYEE_SALES=PP.TEXT_USERNAME_EMPLOYEE_SALES AND TRUNC(DTIME_AF_CONFIRM_RESULT)-TRUNC(PP.DATE_DECISION) BETWEEN -90 AND 90 AND pp.code_credit_status IN('a','k','n')
LEFT JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD FC --20180710 
ON PP.SKP_CREDIT_CASE=FC.skp_credit_case AND PP.SKP_CLIENT=FC.skp_client
LEFT JOIN AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS APFFC ON PP.SKP_CREDIT_CASE =APFFC.SKP_CREDIT_CASE  AND  (SYSDATE-APFFC.DATE_DETECT)<=60 AND APFFC.CLASS IN (37, 509)
LEFT JOIN DCM_COMPLAINT DCM ON PP.SKP_CREDIT_CASE =DCM.SKP_CREDIT_CASE 
WHERE  APFFC.SKP_CREDIT_CASE IS NULL AND DCM.SKP_CREDIT_CASE IS NULL;
COMMIT;

-----------CLASS 41---------------------------------------------------------------------------------
-----------CLASS 41---------------------------------------------------------------------------------
-----------CLASS 41---------------------------------------------------------------------------------
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '41 FAKE RELATIONSHIP',SYSDATE FROM DUAL;
COMMIT;
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH FAKE_RELATION AS 
(
    SELECT \*+ use_hash(FFC,pp)*\ 
           DISTINCT FFC.SKP_CREDIT_CASE,FFC.TEXT_CONTRACT_NUMBER
           ,PP.MOBILE
           ,PP.MOBILE_TYPE
           ,FFC.DATE_DECISION,FFC.CODE_CREDIT_STATUS,FFC.SKP_CLIENT,ffc.text_username_employee_sales
           ,CASE WHEN FFC.TEXT_Spouse_Info='电话可联，关系不属实' THEN 'SPOUSE 电话可联,关系不属实'  
                 WHEN FFC.TEXT_Home_Member_Info='电话可联，关系不属实' THEN 'HOME_MEMBER 电话可联,关系不属实'  
                 WHEN FFC.TEXT_Other_Human_Info='电话可联，关系不属实'  THEN 'OHTER_HUMAN 电话可联,关系不属实'  
                 WHEN FFC.TEXT_Spouse_Info='电话可联，无法确认'  THEN 'SPOUSE 电话可联,无法确认' 
                 WHEN FFC.TEXT_Home_Member_Info='电话可联，无法确认' THEN 'HOME_MEMBER 电话可联,无法确认' 
                 WHEN FFC.TEXT_Other_Human_Info='电话可联，无法确认'  THEN 'OTHER_HUMAN 电话可联,无法确认' 
                 WHEN FFC.TEXT_Spouse_Info='无法接通' THEN 'SPOUSE_MOBILE 无法接通' 
                 WHEN FFC.TEXT_Home_Member_Info='无法接通（空号/停机等）' THEN 'HOME_MEMBER_MOBILE 无法接通' 
                 WHEN FFC.TEXT_Other_Human_Info='无法接通（空号/停机等）' THEN 'OTHER_HUMAN_MOBILE 无法接通' 
             END AS FRAUD_INFO
      FROM AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS FFC
      JOIN AP_ANTIFRAUD.F_AF_ALL_PHONE_CHARLOTTE pp ON FFC.SKP_CREDIT_CASE=PP.SKP_CREDIT_CASE 
      JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='41' 
       AND FFC.DTIME_AF_CONFIRM_RESULT>=EX.MAX_DETECT
       AND FFC.DTIME_AF_CONFIRM_RESULT<DATE'3000-01-01'
     WHERE (FFC.TEXT_SPOUSE_INFO IN ('电话可联,关系不属实','电话可联,无法确认','无法接通')
            OR FFC.TEXT_OTHER_HUMAN_INFO IN ('电话可联,关系不属实','电话可联,无法确认','无法接通','电话可联，关系不属实','无法接通（空号/停机等）')--'电话可联，无法确认',
            OR FFC.TEXT_HOME_MEMBER_INFO IN ('电话可联,关系不属实','电话可联,无法确认','无法接通','电话可联，关系不属实','无法接通（空号/停机等）')--,'电话可联，无法确认'
           ) 
       AND MOBILE_TYPE!='EMP_PHONE' and substr(pp.mobile,1,3)!='000'
)
,BASE AS
(
    SELECT  DISTINCT 'SA' AS UNIT 
            ,PP.TEXT_USERNAME_EMPLOYEE_SALES
            ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
            ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
            ,'41' AS CLASS
            ,'FAKE CLIENT RELATION TRIGGER' AS TRIGGER_SOURCE
\*            ,pp.TEXT_CONTRACT_NUMBER||' '|| PP.MOBILE_TYPE||' same as fraud contract '|| FR.TEXT_CONTRACT_NUMBER||' '|| FR.MOBILE_TYPE||' '|| FR.MOBILE||', '
            ||fr.FRAUD_INFO AS TRIGGER_VALUE*\
            --20180209 lina
             ,PP.TEXT_CONTRACT_NUMBER || ' ' ||
             LISTAGG(PP.MOBILE_TYPE || ' same as fraud contract ' ||
                     FR.TEXT_CONTRACT_NUMBER || ' ' || FR.MOBILE_TYPE || ' ' ||
                     FR.MOBILE || ', ' || FR.FRAUD_INFO,
                     ' | ') WITHIN GROUP(ORDER BY FR.SKP_CREDIT_CASE) OVER(PARTITION BY PP.SKP_CREDIT_CASE) AS TRIGGER_VALUE
            ,'SOFT' AS TRIGGER_TYPE
            ,PP.SKP_CREDIT_CASE
            ,PP.TEXT_CONTRACT_NUMBER
     FROM AP_ANTIFRAUD.F_AF_ALL_PHONE_CHARLOTTE PP
     JOIN FAKE_RELATION FR ON FR.MOBILE=PP.MOBILE 
      AND pp.SKP_CREDIT_CASE!=FR.SKP_CREDIT_CASE 
      AND PP.SKP_CLIENT!=FR.SKP_CLIENT 
      AND PP.DATE_DECISION -FR.DATE_DECISION BETWEEN -30 AND 30
      AND PP.CODE_CREDIT_STATUS IN ('a','k','n')
      AND pp.MOBILE_TYPE!='EMP_PHONE'
      AND PP.DATE_DECISION>=SYSDATE-365---only trigger contract in recent one year 20180517
)
,BASE2 AS
(
    SELECT SKP_CREDIT_CASE,TRIGGER_VALUE,Date_Detect
      FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC
     WHERE CLASS=41
       AND DATE_DETECT BETWEEN DATE '2016-01-01' --20180209 lina
       AND TRUNC(SYSDATE) - 1 
)
SELECT B.*
  FROM BASE B
  LEFT JOIN BASE2 B2 ON B2.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE
   AND B2.TRIGGER_VALUE=B.TRIGGER_VALUE
WHERE B2.SKP_CREDIT_CASE IS NULL;*/
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;

--20180521 weekly to daily
PROCEDURE TRIGGER_38_HIDDEN_POS IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_38_HIDDEN_POS';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
  
 INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '38 HIDDEN POS',SYSDATE FROM DUAL;
COMMIT;
  
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH WIFI AS
(
    SELECT DISTINCT CA.DATE_DECISION,CA.SKP_CREDIT_STATUS,
    TT.SKP_CREDIT_CASE,TT.CODE_NETWORK_TYPE,TT.NAME_WIFI,AD.SKP_EMPLOYEE_CONSULTANT,AD.SKP_SALESROOM,AD.TEXT_CONTRACT_NUMBER
    FROM OWNER_DWH.F_APPLICATION_VCT_SMARTPOS_AT TT
    JOIN OWNER_DWH.DC_CREDIT_CASE CA ON TT.SKP_CREDIT_CASE=CA.SKP_CREDIT_CASE 
          AND TT.SKP_CREDIT_TYPE=CA.SKP_CREDIT_TYPE
          AND CA.SKP_CREDIT_ACQUISITION_CHNL=7---SMART POS
          AND CA.SKP_CREDIT_TYPE=1
          AND CA.DATE_DECISION>=SYSDATE-10
          AND UPPER(TT.CODE_NETWORK_TYPE)='WIFI'
    JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD  AD ON CA.SKP_CREDIT_CASE=AD.skp_credit_case
    AND AD.DATE_DECISION>=SYSDATE-10
    AND AD.SKP_CREDIT_TYPE=1
    JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS = 38
    AND TRUNC(SYSDATE)-AD.DATE_DECISION BETWEEN 1 AND EX.DAYS--以前是weekly的，上完之后把减3去掉
    WHERE AD.DATE_DECISION>=SYSDATE-10 
    AND CA.SKP_CREDIT_ACQUISITION_CHNL=7
)
, WIFI_NUMBER AS 
( 
        SELECT DISTINCT AA.DATE_DECISION,SKP_SALESROOM,COUNT(DISTINCT NAME_WIFI)AS CNT_WIFI,COUNT(DISTINCT AA.SKP_CREDIT_CASE) AS CNT_APP 
        FROM WIFI AA
        WHERE NAME_WIFI<>'N/A'
        GROUP BY AA.DATE_DECISION,SKP_SALESROOM 
        HAVING COUNT(DISTINCT NAME_WIFI)>=5
)
  
,FINAL_APPLICATION AS 
(           
            SELECT BB.*,AA.CNT_WIFI,AA.CNT_APP
            FROM WIFI_NUMBER AA
            JOIN WIFI BB ON AA.DATE_DECISION=BB.DATE_DECISION AND AA.SKP_SALESROOM=BB.SKP_SALESROOM
)
  
SELECT 
'POS' AS UNIT
,EE.CODE_SALESROOM AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'38' AS CLASS
,'Hidden POS suspicion'||':'||'Difference  WIFI concentration in 1 day' AS TRIGGER_SOURCE
,'涉案单量'||':'||CNT_APP||','||'WIFI数量'||':'||CNT_WIFI||','||'本单WiFi名'||':'||NAME_WIFI AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,FC.SKP_CREDIT_CASE
,FC.TEXT_CONTRACT_NUMBER
FROM FINAL_APPLICATION FC
JOIN OWNER_DWH.DC_SALESROOM EE ON FC.SKP_SALESROOM=EE.SKP_SALESROOM;
/*WITH WIFI AS
(
    SELECT CA.DATE_DECISION,CA.SKP_CREDIT_STATUS,
    TT.SKP_CREDIT_CASE,TT.CODE_NETWORK_TYPE,TT.NAME_WIFI,AD.SKP_EMPLOYEE_CONSULTANT,AD.SKP_SALESROOM,AD.TEXT_CONTRACT_NUMBER,AD.amt_credit
    FROM OWNER_DWH.F_APPLICATION_VCT_SMARTPOS_AT TT
    JOIN OWNER_DWH.DC_CREDIT_CASE CA ON TT.SKP_CREDIT_CASE=CA.SKP_CREDIT_CASE 
          AND TT.SKP_CREDIT_TYPE=CA.SKP_CREDIT_TYPE
          AND CA.SKP_CREDIT_ACQUISITION_CHNL=7---SMART POS
          AND CA.SKP_CREDIT_TYPE=1
          AND CA.DATE_DECISION>=SYSDATE-10
          AND UPPER(TT.CODE_NETWORK_TYPE)='WIFI'
    JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD  AD ON CA.SKP_CREDIT_CASE=AD.skp_credit_case
    AND AD.DATE_DECISION>=SYSDATE-10
    AND AD.SKP_CREDIT_TYPE=1
    JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS = 38
    AND TRUNC(SYSDATE)-AD.DATE_DECISION BETWEEN 1 AND EX.DAYS--以前是weekly的，上完之后把减3去掉
    WHERE AD.DATE_DECISION>=SYSDATE-10 
    AND CA.SKP_CREDIT_ACQUISITION_CHNL=7
 )
, WIFI_NUMBER AS 
(
    SELECT * FROM 
    (
        SELECT DISTINCT AA.DATE_DECISION,SKP_SALESROOM,COUNT(DISTINCT NAME_WIFI)AS CNT_WIFI,COUNT(DISTINCT AA.SKP_CREDIT_CASE) AS CNT_APP,
        SUM(AMT_CREDIT)AS AMOUNT_CREDIT
        FROM WIFI AA
        WHERE NAME_WIFI<>'N/A'
        GROUP BY AA.DATE_DECISION,SKP_SALESROOM 
        HAVING COUNT(DISTINCT NAME_WIFI)>=5
        ORDER BY DATE_DECISION,COUNT(DISTINCT NAME_WIFI) DESC,SUM(AMT_CREDIT)DESC
    )
    WHERE ROWNUM<=5
)
,POS_WIFI_SUM AS
(
    SELECT NN.SKP_SALESROOM,COUNT(DISTINCT WW.NAME_WIFI)AS CNT_WIFI,COUNT(DISTINCT WW.SKP_CREDIT_CASE) AS CNT_APP
    FROM WIFI_NUMBER NN
    JOIN WIFI WW ON  NN.SKP_SALESROOM=WW.SKP_SALESROOM AND NN.DATE_DECISION=WW.DATE_DECISION
    GROUP BY NN.SKP_SALESROOM
)
,FINAL_APPLICATION AS 
(
    SELECT * FROM 
    (
            SELECT BB.*,CC.CNT_WIFI,CC.CNT_APP
            FROM WIFI_NUMBER AA
            JOIN WIFI BB 
            ON AA.DATE_DECISION=BB.DATE_DECISION AND AA.SKP_SALESROOM=BB.SKP_SALESROOM
            JOIN POS_WIFI_SUM CC ON AA.SKP_SALESROOM=CC.SKP_SALESROOM
            ORDER BY AA.CNT_WIFI DESC ,AA.CNT_APP DESC,BB.AMT_CREDIT DESC
    ) 
    WHERE ROWNUM<=70
)

SELECT 
'SA' AS UNIT
,EE.TEXT_USERNAME_EMPLOYEE AS SALES_ID
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'38' AS CLASS
,'Hidden POS suspicion'||':'||'Difference  WIFI concentration in 1 day' AS TRIGGER_SOURCE
 ,'涉案单量'||':'||CNT_APP||','||'WIFI数量'||':'||CNT_WIFI||','||'本单WiFi名'||':'||NAME_WIFI AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,FC.SKP_CREDIT_CASE
,FC.TEXT_CONTRACT_NUMBER
FROM FINAL_APPLICATION FC
JOIN OWNER_DWH.DC_EMPLOYEE EE ON FC.SKP_EMPLOYEE_CONSULTANT=EE.SKP_EMPLOYEE;
COMMIT;
*/
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;
 
  PROCEDURE TRIGGER_102_MINI_COMBINATION IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_102_MINI_COMBINATION';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '102_MINI_COMBINATION',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
with a17 as (
SELECT   /*+ materialize */  AP.DATE_DECISION,AP.SKP_CREDIT_CASE,
cl.CODE_ADDITIONAL_INFO,
dcc.TEXT_CONTRACT_NUMBER
,'bank card has no transaction in one month' as a17_info 
FROM OWNER_DWH.dc_CREDIT_CASE DCC 
JOIN OWNER_DWH.F_APPRSTEP_ADDITIONAL_INFO_TT AP ON AP.SKP_CREDIT_CASE=dcc.SKP_CREDIT_CASE
AND AP.DATE_DECISION = dcc.DATE_DECISION
JOIN OWNER_DWH.CL_APPRSTEP_ADD_INFO CL
ON CL.SKP_APPRSTEP_ADD_INFO = AP.SKP_APPRSTEP_ADD_INFO
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME tim on tim.class='102' AND dcc.DATE_DECISION>=tim.max_detect AND dcc.DATE_DECISION!=trunc(sysdate)
WHERE DCC.SKP_PRODUCT_CHANNEL = 2 AND DCC.SKP_CREDIT_ACQUISITION_CHNL=4--183066
AND DCC.DATE_DECISION> DATE '2017-03-18'
AND DCC.SKP_CREDIT_STATUS IN (2,3,5)
AND ap.DATE_DECISION > DATE '2017-03-18'
AND CL.CODE_ADDITIONAL_INFO  IN ('a17_cnt_1mon_trans')
AND ap.NUM_VALUE=0 
)


,a8_info AS (
SELECT   /*+ materialize */  
AP.DATE_DECISION,AP.SKP_CREDIT_CASE,
cl.CODE_ADDITIONAL_INFO,
dcc.TEXT_CONTRACT_NUMBER
,a17_info||' and '||ap.TEXT_VALUE as trigger_value 
FROM a17 DCC 
JOIN OWNER_DWH.F_APPRSTEP_ADDITIONAL_INFO_TT AP ON AP.SKP_CREDIT_CASE=dcc.SKP_CREDIT_CASE
AND AP.DATE_DECISION = dcc.DATE_DECISION
JOIN OWNER_DWH.CL_APPRSTEP_ADD_INFO CL
ON CL.SKP_APPRSTEP_ADD_INFO = AP.SKP_APPRSTEP_ADD_INFO
WHERE  ap.DATE_DECISION > DATE '2017-03-18'
AND CL.CODE_ADDITIONAL_INFO ='a8_ItemName'
AND INSTR(TEXT_VALUE,'黑名单',1,1)>0
)


SELECT DISTINCT 'SA' AS UNIT 
,acca.TEXT_USERNAME_EMPLOYEE_SALES
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'102' AS CLASS
,'MINI BD COMBINATION' AS TRIGGER_SOURCE
, TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,ACCA.SKP_CREDIT_CASE
,ACCA.TEXT_CONTRACT_NUMBER  
FROM a8_info FS
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA ON acca.skp_credit_case=FS.SKP_CREDIT_CASE and acca.date_decision=fs.date_decision
WHERE ACCA.date_decision>DATE '2017-03-18';
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;


PROCEDURE TRIGGER_103_HIGH_RISK_WCL IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_103_HIGH_RISK_WCL';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  

    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '103-HIGH RISK GROUP WCL',SYSDATE FROM DUAL;
COMMIT;

----------------------------------------------------------------------------HIGH RISK GROUP WCL
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
SELECT distinct 'SA' AS UNIT 
,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'103' AS CLASS
,'HIGH RISK GROUP WCL' AS TRIGGER_SOURCE
,'HIGH RISK GROUP WCL' AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,ACCA.SKP_CREDIT_CASE
,ACCA.TEXT_CONTRACT_NUMBER  
FROM OWNER_DWH.dc_CREDIT_CASE DCC
JOIN owner_dwh.f_application_vct_prelim2_at aa ON AA.skp_credit_case=DCC.SKP_CREDIT_CASE AND AA.skp_credit_type=DCC.SKP_CREDIT_TYPE
AND DCC.DATE_DECISION=AA.date_decision
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA ON ACCA.skp_credit_case=DCC.SKP_CREDIT_CASE AND ACCA.date_decision=DCC.DATE_DECISION
JOIN  AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME tim ON tim.class='103' AND aa.date_decision>=tim.max_detect AND aa.date_decision!=trunc(sysdate)
WHERE aa.date_decision > DATE '2017-03-18'  AND DCC.date_decision > DATE '2017-03-18'AND ACCA.date_decision> DATE '2017-03-18'
AND LOWER(aa.CODE_SCORE_SEGMENT)='high'
AND DCC.SKP_PRODUCT_CHANNEL = 2 AND DCC.SKP_CREDIT_ACQUISITION_CHNL!=4--183066
AND DCC.SKP_CREDIT_STATUS IN (2,3,5);
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;


PROCEDURE TRIGGER_142_OTHER_FRAUD_COLL IS
  v_stepnum      INTEGER DEFAULT 0;
  v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
  v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
  v_err_txt      VARCHAR2(70);
  v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
  l_rowcount integer;
BEGIN
  -- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_142_OTHER_FRAUD_COLL';
  -- check whether the process need to run
  IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy,
                                          p_name  => v_dealprc,
                                          p_date  => trunc(SYSDATE)) IN
     ('Not Started', 'Failed') THEN
    -- procedure start
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'start');
  
    --! report robots log start
    ---------------------------------------------------------------------------------
    v_step_message := 'STEP1';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
      with Fraud_suspicious_confirmed as
       (SELECT AD.DTIME_EXECUTION,
               AD.DTIME_REGISTRATION,
               AD.DATE_DECISION,
               AD.DATE_REGISTRATION,
               AD.SKP_CLIENT,
               AD.SKP_CREDIT_CASE,
               ID_CUID,
               CTT.NAME_CAMP_TASK_TYPE,
               CRT.NAME_CAMP_TASK_RESULT_TYPE,
               DESC_RESULT_COMMENT,
               dcs.NAME_COUNTERPARTY_SUBCAT,
               CASE
                 WHEN ED.TEXT_VALUE = '05fraud' THEN
                  'ID_FRAUD'
                 ELSE
                  'NOT_IDFRAUD'
               END AS FLAG_IDFRAUD,
               EDD.TEXT_VALUE AS PHONE_NUMBER
        --,ad.*,ed.*,dcs.*
          FROM owner_dwh.f_camp_task_executed_ad AD
          LEFT JOIN OWNER_DWH.F_CAMP_EVENTHISTORY_DATA_TT ED
            ON AD.SKF_CAMP_TASK = ED.SKF_CAMP_TASK
           AND AD.DATE_EXECUTION = ED.DATE_EXECUTION
           AND ED.TEXT_LABEL IN
               ('Default_Reason of delay', 'NoPayReason_NoPayReason')
          LEFT JOIN OWNER_DWH.F_CAMP_EVENTHISTORY_DATA_TT EDD
            ON AD.SKF_CAMP_TASK = EDD.SKF_CAMP_TASK
           AND AD.DATE_EXECUTION = EDD.DATE_EXECUTION
           AND EDD.TEXT_LABEL IN
               ('IncomingCall_PhoneNumber', 'Operation_CalledNumber')
          JOIN OWNER_DWH.DC_CLIENT CLE
            ON AD.SKP_CLIENT = CLE.SKP_CLIENT
          JOIN owner_dwh.dc_counterparty_subcat dcs
            on ad.SKP_COUNTERPARTY_SUBCAT = dcs.SKP_COUNTERPARTY_SUBCAT
          join owner_dwh.cl_camp_task_type ctt
            on ad.SKP_CAMP_TASK_TYPE = ctt.SKP_CAMP_TASK_TYPE
          join owner_dwh.cl_camp_task_result_type crt
            on ad.SKP_CAMP_TASK_RESULT_TYPE = crt.SKP_CAMP_TASK_RESULT_TYPE
          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME TIM
            ON TIM.CLASS = '142'
         where ad.DATE_EXECUTION >= TIM.MAX_DETECT ----------------------------------这个trigger的前一天
              --and ad.SKP_CAMP_TASK_TYPE=
           and ad.SKP_CAMP_TASK_RESULT_TYPE = 48 ---Fraud suspicious confirmed
           and ad.FLAG_TASK_DELETED = 'N'),
      fraud_suspicious as
       (SELECT AD.DTIME_EXECUTION,
               AD.DTIME_REGISTRATION,
               AD.SKP_CLIENT,
               ID_CUID,
               CTT.NAME_CAMP_TASK_TYPE,
               CRT.NAME_CAMP_TASK_RESULT_TYPE,
               DESC_RESULT_COMMENT,
               dcs.NAME_COUNTERPARTY_SUBCAT,
               EDD.TEXT_VALUE AS PHONE_NUMBER
          FROM owner_dwh.f_camp_task_executed_ad AD
          LEFT JOIN OWNER_DWH.F_CAMP_EVENTHISTORY_DATA_TT EDD
            ON AD.SKF_CAMP_TASK = EDD.SKF_CAMP_TASK
           AND AD.DATE_EXECUTION = EDD.DATE_EXECUTION
           AND EDD.TEXT_LABEL IN
               ('IncomingCall_PhoneNumber', 'Operation_CalledNumber')
          JOIN OWNER_DWH.DC_CLIENT CLE
            ON AD.SKP_CLIENT = CLE.SKP_CLIENT
          JOIN owner_dwh.dc_counterparty_subcat dcs
            on ad.SKP_COUNTERPARTY_SUBCAT = dcs.SKP_COUNTERPARTY_SUBCAT
          join owner_dwh.cl_camp_task_type ctt
            on ad.SKP_CAMP_TASK_TYPE = ctt.SKP_CAMP_TASK_TYPE
          join owner_dwh.cl_camp_task_result_type crt
            on ad.SKP_CAMP_TASK_RESULT_TYPE = crt.SKP_CAMP_TASK_RESULT_TYPE
          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME TIM
            ON TIM.CLASS = '142'
         where ad.DATE_EXECUTION >= TIM.MAX_DETECT ----------------------------------这个trigger的前一天
              --and ad.SKP_CAMP_TASK_TYPE=
           and ad.SKP_CAMP_TASK_RESULT_TYPE = 28 ---Fraud suspicious
           and ad.FLAG_TASK_DELETED = 'N'),
      final_result AS
       (SELECT a.SKP_CLIENT,
               A.SKP_CREDIT_CASE,
               b.ID_CUID,
               a.DTIME_EXECUTION            as confirm_dtime,
               a.NAME_CAMP_TASK_TYPE        as NAME_CAMP_TASK_confirmed,
               a.NAME_CAMP_TASK_RESULT_TYPE as NAME_RESULT_TYPE_confirmed,
               A.FLAG_IDFRAUD,
               b.DTIME_EXECUTION            as fraud_register_dtime,
               --b.DTIME_REGISTRATION,
               b.NAME_CAMP_TASK_TYPE,
               b.NAME_CAMP_TASK_RESULT_TYPE,
               b.DESC_RESULT_COMMENT,
               b.NAME_COUNTERPARTY_SUBCAT,
               CASE
                 WHEN B.phone_number IS NOT NULL THEN
                  B.phone_number
                 ELSE
                  A.phone_number
               END AS PHONE_NUMBER,
               row_number() over(partition by b.skp_client order by b.DTIME_REGISTRATION desc) as rk,
               CASE
                 WHEN (A.FLAG_IDFRAUD = 'ID_FRAUD' AND
                      (F0.num_face_recognition_score < 45 OR
                      F0.num_face_recognition_score IS NULL)) OR
                      (A.FLAG_IDFRAUD = 'NOT_IDFRAUD' AND
                      A.DATE_REGISTRATION - A.DATE_DECISION < 180) THEN
                  'Y'
                 ELSE
                  'N'
               END AS FLAG_KEEP,
               F0.num_face_recognition_score
          FROM Fraud_suspicious_confirmed a
          left join fraud_suspicious b
            on a.skp_client = b.skp_client
           and a.DTIME_REGISTRATION >= b.DTIME_REGISTRATION
          LEFT JOIN owner_dwh.f_application_vct_info_at F0
            ON f0.SKP_CREDIT_CASE = a.SKP_CREDIT_CASE
           AND F0.DATE_DECISION = A.DATE_DECISION),
      exclude_dup as
       (select skp_credit_case,
               case
                 when trigger_source = 'ID FRAUD BY COLLECTION' then
                  'ID_FRAUD'
                 else
                  'NOT_IDFRAUD'
               end as flag_idfraud
          from ap_antifraud.f_af_final_fraud_contracts fr
         where class = 142)
      
      SELECT 'SA' AS UNIT,
             EE.TEXT_USERNAME_EMPLOYEE AS ID_ENTITY,
             TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
             TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
             '142' AS CLASS,
             CASE
               WHEN f.FLAG_IDFRAUD = 'NOT_IDFRAUD' THEN
                'OTHER FRAUD BY COLLECTION'
               ELSE
                'ID FRAUD BY COLLECTION'
             END AS TRIGGER_SOURCE,
             'COMMENT: ' || DESC_RESULT_COMMENT || ', PHONE_NUMBER:' ||
             PHONE_NUMBER || ', TIME:' ||
             to_char(FRAUD_REGISTER_DTIME, 'yyyy-MM-dd HH24:mi:ss') ||
             ', FS:' || num_face_recognition_score AS TRGGER_VALUE,
             'SOFT' AS TRIGGEG_TYPE,
             F.SKP_CREDIT_CASE,
             FCC.text_contract_number
        FROM final_result f
        JOIN OWNER_DWH.f_Credit_Case_Ad FCC
          ON f.SKP_CREDIT_CASE = FCC.sKP_CREDIT_CASE
        JOIN OWNER_DWH.Dc_Employee ee
          ON fcc.SKP_EMPLOYEE_CONSULTANT = ee.SKP_EMPLOYEE
         AND EE.TEXT_USERNAME_EMPLOYEE NOT IN ('extreme') -------2020.11.11
        left join exclude_dup ex
          on f.skp_credit_case = ex.skp_credit_case
         and f.flag_idfraud = ex.flag_idfraud
       where rk = 1
         AND F.FLAG_KEEP = 'Y'
         and ex.skp_credit_case is null;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    COMMIT;
  
    -- procedure end
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'end');
  END IF;
EXCEPTION
  WHEN OTHERS THEN
    -- ROBOTS_LOG
    owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                               p_step            => v_step_message,
                                               p_additional_info => NULL);
    -- process_log  
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => SQLCODE,
                                  p_msg    => 'Error in step (' ||
                                              v_step_message || ') - ' ||
                                              substr(SQLERRM, 1, 150));
    RAISE;
END;



PROCEDURE TRIGGER_143_ANTIMONEY_LAUNDER IS
  v_stepnum      INTEGER DEFAULT 0;
  v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
  v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
  v_err_txt      VARCHAR2(70);
  v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
  -- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_143_ANTIMONEY';
  -- check whether the process need to run
  IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy,
                                          p_name  => v_dealprc,
                                          p_date  => trunc(SYSDATE)) IN
     ('Not Started', 'Failed') THEN
    -- procedure start
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'start');
  
    --! report robots log start
    ---------------------------------------------------------------------------------
    v_step_message := 'STEP:TRIGGER_143_ANTIMONEY';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
      SELECT '143 Anti-Money Laundering', SYSDATE FROM DUAL;
    COMMIT;
  
    /*Big change 20180627 lina*/
    ------------------------------SELECT ALL 90DAYS EARLY >=30000
    INSERT /*+ append*/
    INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
      WITH BASE AS
       (
        -----EARLY REPAY IN 90 DAYS
        SELECT /*+ materialize*/
         C.DATE_DECISION,
          FCA.date_last_payment,
          C.SKP_CREDIT_CASE,
          c.skp_contract,
          C.skp_client,
          C.skp_employee_consultant,
          C.text_contract_number
        --FROM OWNER_DWH.F_CONTRACT_AD C
          FROM OWNER_DWH.F_CONTRACT_BASE_AD C
          JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD FCA
            ON FCA.skp_credit_case = C.skp_credit_case
           AND FCA.skp_credit_type = C.skp_credit_type
           AND FCA.date_decision = C.date_decision
          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME TIM
            ON TIM.CLASS = '143'
           AND FCA.date_last_payment >= TIM.MAX_DETECT
           AND C.date_decision >= TIM.MAX_DETECT - 91
         WHERE C.DATE_DECISION >= TRUNC(SYSDATE) - 100
           AND C.date_decision < TRUNC(SYSDATE)
           AND FCA.DATE_LAST_PAYMENT >= TRUNC(SYSDATE) - 21 --14
           AND C.skp_credit_status = 3
           AND C.amt_credit >= 30000
           AND FCA.date_last_payment - C.date_decision BETWEEN 0 AND 90
           AND (C.flag_early_repaid_w_interest = 'Y' OR
               C.flag_early_repaid_wO_interest = 'Y'))
      
      ----------TIMES>=10 (Early Repayment Amount/Customer’s family monthly income)
      ,
      BASE2 AS
       ( ----ADD AMT_INCOME_HOUSEHOLD AND CALCULATE TIMES
        --ADD AMT_INCOME_MAIN_OCCUPATION 20180627
        SELECT /*+ materialize*/
         BB.DATE_DECISION,
          BB.date_last_payment,
          BB.SKP_CREDIT_CASE,
          BB.text_contract_number,
          BB.skp_client,
          BB.skp_employee_consultant,
          BB.AMT_PAYMENT,
          AC.AMT_INCOME_MAIN_OCCUPATION,
          BB.AMT_PAYMENT / AC.AMT_INCOME_MAIN_OCCUPATION AS TIMES
          FROM ( ----ADD AMT_PAYMENT COLUMN
                 SELECT /*+ materialize*/
                  B.DATE_DECISION,
                   B.date_last_payment,
                   B.SKP_CREDIT_CASE,
                   B.text_contract_number,
                   B.skp_client,
                   B.skp_employee_consultant,
                   IP.AMT_PAYMENT,
                   ROW_NUMBER() OVER(PARTITION BY IP.SKP_CREDIT_CASE ORDER BY IP.DTIME_PAYMENT_RECEIVED DESC) AS ORD
                   FROM BASE B
                   JOIN OWNER_DWH.F_INCOMING_PAYMENT_TT IP
                     ON IP.SKP_CREDIT_CASE = B.SKP_CREDIT_CASE
                    AND IP.SKP_CLIENT = B.SKP_CLIENT
                  WHERE IP.DATE_DECISION < TRUNC(SYSDATE)
                    AND IP.DATE_DECISION >= TRUNC(SYSDATE) - 100) BB
          JOIN OWNER_DWH.F_APPLICATION_CLIENT_TT AC
            ON AC.SKP_CREDIT_CASE = BB.SKP_CREDIT_CASE
           AND BB.SKP_CLIENT = AC.SKP_CLIENT
           AND BB.DATE_DECISION = AC.DATE_DECISION
         WHERE BB.ORD = 1
           AND AC.DATE_DECISION < TRUNC(SYSDATE)
           AND AC.DATE_DECISION >= TRUNC(SYSDATE) - 100)
      -------Fraud trigger
      ,
      BASE3 AS
       (SELECT B.DATE_DECISION,
               B.date_last_payment,
               B.SKP_CREDIT_CASE,
               B.text_contract_number,
               B.skp_client,
               B.skp_employee_consultant,
               FC.CLASS,
               FC.TRIGGER_SOURCE,
               FC.TRIGGER_VALUE,
               FC.DATE_DETECT,
               ROW_NUMBER() OVER(PARTITION BY FC.SKP_CREDIT_CASE ORDER BY DATE_DETECT DESC) AS ORD
          FROM BASE B
          JOIN AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC
            ON B.SKP_CREDIT_CASE = FC.SKP_CREDIT_CASE
           AND TRUNC(FC.DATE_DECISION) = B.DATE_DECISION
         WHERE FC.DATE_DECISION >= TRUNC(SYSDATE) - 100)
      
      -------Client Complaint
      ,
      BASE4 AS
       (SELECT BB.DATE_DECISION,
               BB.date_last_payment,
               BB.SKP_CREDIT_CASE,
               BB.text_contract_number,
               BB.skp_client,
               BB.skp_employee_consultant,
               BB.DESC_COMPLAINT
          FROM ( ----new complaint table 20191031
                SELECT B.DATE_DECISION,
                        B.date_last_payment,
                        B.SKP_CREDIT_CASE,
                        B.skp_client,
                        B.skp_employee_consultant,
                        B.text_contract_number,
                        AD.DESC_COMPLAINT,
                        AD.DTIME_CREATED,
                        ROW_NUMBER() OVER(PARTITION BY B.SKP_CREDIT_CASE ORDER BY AD.DTIME_CREATED DESC) AS ORD
                  FROM BASE B
                  JOIN OWNER_DWH.F_COMPLAINT_AD AD
                    ON B.skp_contract = AD.skp_contract
                   AND ad.skp_contract != -1
                 WHERE AD.CODE_COMPLAINT_CASE_TYPE = 'FRAUD_INVESTIGATION'
                   AND AD.DTIME_CREATED >= TRUNC(SYSDATE) - 100
                   AND AD.DTIME_CREATED >= B.DATE_DECISION
                   AND AD.DESC_COMPLAINT != 'XNA'
                ) BB
         WHERE BB.ORD = 1)
      
      ,
      BASE5 AS
       (SELECT DISTINCT SEP.SKP_CREDIT_CASE,
                        SEP.text_contract_number,
                        SEP.SKP_EMPLOYEE_CONSULTANT,
                        LISTAGG(SEP.TRIGGER_VALUE, '||') WITHIN GROUP(ORDER BY TRIGGER_VALUE) OVER(PARTITION BY SEP.SKP_CREDIT_CASE, SEP.text_contract_number, SEP.SKP_EMPLOYEE_CONSULTANT) AS TRIGGER_VALUE
          FROM (
                -------TIMES>=10
                SELECT B2.SKP_CREDIT_CASE,
                        B2.text_contract_number,
                        B2.SKP_EMPLOYEE_CONSULTANT,
                        B2.date_last_payment,
                        '(1)TIMES>=' || ROUND(B2.TIMES, 2) ||
                        ': Early Repayment Amount: ' || B2.AMT_PAYMENT ||
                        '; Customer’s family main income: ' ||
                        B2.AMT_INCOME_MAIN_OCCUPATION AS TRIGGER_VALUE
                  FROM BASE2 B2
                 WHERE B2.TIMES >= 10
                -------Fraud trigger
                UNION
                SELECT B3.SKP_CREDIT_CASE,
                        B3.text_contract_number,
                        B3.SKP_EMPLOYEE_CONSULTANT,
                        B3.date_last_payment,
                        '(2)Fraud Triggered: Class: ' || B3.CLASS ||
                        '; Trigger Source: ' || B3.TRIGGER_SOURCE ||
                        '; Detect Date: ' ||
                        TO_CHAR(B3.DATE_DETECT, 'YYYY-MM-DD') AS TRIGGER_VALUE
                  FROM BASE3 B3
                 WHERE B3.ORD = 1
                -------Client Complaint
                UNION
                SELECT B4.SKP_CREDIT_CASE,
                        B4.text_contract_number,
                        B4.SKP_EMPLOYEE_CONSULTANT,
                        B4.date_last_payment,
                        '(3)CS Complaint Details: ' ||
                        to_char(B4.DESC_COMPLAINT) AS TRIGGER_VALUE
                  FROM BASE4 B4) SEP)
      
      SELECT DISTINCT 'SA' AS UNIT,
                      E.TEXT_USERNAME_EMPLOYEE,
                      TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
                      TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
                      '143' AS CLASS,
                      'Anti-Money Laundering' AS TRIGGER_SOURCE,
                      B5.TRIGGER_VALUE,
                      'SOFT' AS TRIGGER_TYPE,
                      B5.SKP_CREDIT_CASE,
                      B5.TEXT_CONTRACT_NUMBER
        FROM BASE5 B5
        JOIN OWNER_DWH.DC_EMPLOYEE E
          ON B5.SKP_EMPLOYEE_CONSULTANT = E.SKP_EMPLOYEE;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL);
    COMMIT;
    -- procedure end
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'end');
  END IF;
EXCEPTION
  WHEN OTHERS THEN
    -- ROBOTS_LOG
    owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                               p_step            => v_step_message,
                                               p_additional_info => NULL);
    -- process_log  
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => SQLCODE,
                                  p_msg    => 'Error in step (' ||
                                              v_step_message || ') - ' ||
                                              substr(SQLERRM, 1, 150));
    RAISE;
END;

 
PROCEDURE TRIGGER_203_CLUSTER IS
  v_stepnum      INTEGER DEFAULT 0;
  v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
  v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
  v_err_txt      VARCHAR2(70);
  v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
  l_rowcount integer;
BEGIN
  -- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_203_CLUSTER';
  -- check whether the process need to run
  IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy,
                                          p_name  => v_dealprc,
                                          p_date  => trunc(SYSDATE)) IN
     ('Not Started', 'Failed') THEN
    -- procedure start
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'start');
  
    --! report robots log start
  
    INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
      SELECT '203 CLUSTER', SYSDATE FROM DUAL;
    COMMIT;
  
    --new part for 203--20201202 ashley
    execute immediate 'truncate table AP_ANTIFRAUD.TRIGGER_203_WHI';
  
    v_step_message := '203 step 1 raw';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    INSERT INTO AP_ANTIFRAUD.TRIGGER_203_WHI
      WITH BASE AS
       (SELECT aa.*
          FROM (SELECT ev.skp_credit_case,
                       ev.skp_client,
                       ev.date_decision,
                       null as device_id,
                       ev.text_ip_address,
                       ev.text_openid
                  FROM AP_ANTIFRAUD.Aldi2_MAPP_EVENT_TRANSACTION EV
                 WHERE EV.DATE_DECISION >= TRUNC(SYSDATE) - 30 --change to 30 days 20210129
                UNION ALL
                SELECT dcc.skp_credit_case,
                       dcc.skp_client,
                       dcc.date_decision,
                       ag.CAPP_code_device as device_id,
                       null                as text_ip_address,
                       null                as text_openid
                  FROM ap_antifraud.f_application_gps ag
                  join owner_DWH.dc_credit_case dcc
                    on ag.skp_credit_case = dcc.skp_credit_case
                 where ag.CAPP_code_device is not null
                   and dcc.date_decision >= TRUNC(SYSDATE) - 30) aa
          JOIN OWNER_DWH.dc_client dc
            ON dc.skp_client = aa.skp_client
          LEFT JOIN OWNER_DWH.f_Client_Undes_Ident_Tt bl
            on bl.TEXT_VALUE = dc.TEXT_IDENTIFICATION
           and (upper(bl.TEXT_SOURCE) = 'MS' or
               upper(bl.TEXT_SOURCE) = 'MSER' or bl.TEXT_SOURCE like '%11')
         WHERE bl.ID_SOURCE IS NULL),
      contract as
       (
        --1 device id
        select DISTINCT b.skp_credit_case,
                         b.skp_client,
                         b.date_decision,
                         b.device_id as role_value,
                         'DEVICE' as cluster_type
          from base b
          join base bb
            ON b.device_id = bb.device_id
           and b.skp_client != bb.skp_client
           and b.device_id is not null
           and b.device_id != 'XNA'
        union all
        --2 ip
        select DISTINCT b.skp_credit_case,
                         b.skp_client,
                         b.date_decision,
                         b.text_ip_address as role_value,
                         'IP' as cluster_type
          from base b
          join base bb
            ON b.text_ip_address = bb.text_ip_address
           and b.skp_client != bb.skp_client
           and b.text_ip_address is not null
           and b.text_ip_address != 'XNA'
              --AND b.text_ip_address!='10.67.25.1'
           AND b.text_ip_address NOT LIKE '10.%' --20201221 exclude internal network
        union all
        --3 wechat
        select DISTINCT b.skp_credit_case,
                         b.skp_client,
                         b.date_decision,
                         b.text_openid as role_value,
                         'WECHAT' as cluster_type
          from base b
          join base bb
            ON b.text_openid = bb.text_openid
           and b.skp_client != bb.skp_client
           and b.text_openid is not null
           and b.text_openid != 'XNA'
        union all
        --4 phone
        select distinct ph.skp_credit_case,
                         ph.skp_client,
                         ph.date_decision,
                         ph.mobile as role_value,
                         'PHONE' as cluster_type
          from AP_ANTIFRAUD.F_AF_ALL_PHONE_CHARLOTTE ph
          join AP_ANTIFRAUD.F_AF_ALL_PHONE_CHARLOTTE phh
            on ph.mobile = phh.mobile
           and ph.skp_client != phh.skp_client
         where ph.date_decision >= TRUNC(SYSDATE) - 30
           and phh.date_decision >= TRUNC(SYSDATE) - 30
           AND ph.skp_salesroom != -1
           AND phh.skp_salesroom != -1 --20201211 contract without city cannot send to AR
           and ph.mobile not like '%00000000%'
           AND ph.mobile_type <> 'EMP_PHONE'
           AND phh.mobile_type <> 'EMP_PHONE')
      SELECT co.*, dense_rank() OVER(ORDER BY co.SKP_CREDIT_CASE) AS NUM
        FROM contract co; --exclude triggered before
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := '203 STEP2 EDGE TABLE';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    ---2LINARUN   EDGE NODE TABLE 
    execute immediate 'truncate table  AP_ANTIFRAUD.TRIGGER_203_EDGE';
    INSERT INTO AP_ANTIFRAUD.TRIGGER_203_EDGE
      SELECT TO_CHAR(SKP_CREDIT_CASE) AS SKP_CREDIT_CASE,
             cluster_type || ROLE_VALUE AS ROLE_VALUE,
             NUM AS num_s,
             NUM AS num_t
        FROM AP_ANTIFRAUD.TRIGGER_203_WHI;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := '203 STEP3 loop EDGE NODE';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    ----3LINARUN LOOP
    DECLARE
      i INT := 1;
    BEGIN
      WHILE i > 0 LOOP
        --3.1-NODE
        execute immediate 'truncate table AP_ANTIFRAUD.TRIGGER_203_NODE';
        commit;
        INSERT INTO AP_ANTIFRAUD.TRIGGER_203_NODE
          SELECT ID, MIN(NUM) AS NUM
            FROM (SELECT SKP_CREDIT_CASE AS ID, NUM_S AS NUM
                    FROM AP_ANTIFRAUD.TRIGGER_203_EDGE
                  UNION
                  SELECT ROLE_VALUE AS ID, NUM_T AS NUM
                    FROM AP_ANTIFRAUD.TRIGGER_203_EDGE)
           GROUP BY ID;
        execute immediate 'truncate table  AP_ANTIFRAUD.TRIGGER_203_EDGE1';
        commit;
        INSERT INTO AP_ANTIFRAUD.TRIGGER_203_EDGE1
          SELECT A.SKP_CREDIT_CASE,
                 A.ROLE_VALUE,
                 B.NUM             AS NUM_S,
                 C.NUM             AS NUM_T
            FROM AP_ANTIFRAUD.TRIGGER_203_EDGE A
            LEFT JOIN AP_ANTIFRAUD.TRIGGER_203_NODE B
              ON A.SKP_CREDIT_CASE = B.ID
            LEFT JOIN AP_ANTIFRAUD.TRIGGER_203_NODE C
              ON A.ROLE_VALUE = C.ID;
      
        DECLARE
          X NUMBER;
        BEGIN
          SELECT COUNT(*)
            INTO X
            FROM AP_ANTIFRAUD.TRIGGER_203_EDGE1 e
           WHERE e.num_s <> e.num_t;
          i := X;
          IF X > 0 THEN
            execute immediate 'truncate table AP_ANTIFRAUD.TRIGGER_203_EDGE ';
            commit;
            INSERT INTO AP_ANTIFRAUD.TRIGGER_203_EDGE
              SELECT SKP_CREDIT_CASE,
                     ROLE_VALUE,
                     least(num_s, num_t) AS NUM_S,
                     LEAST(NUM_S, NUM_T) AS NUM_T
                FROM AP_ANTIFRAUD.TRIGGER_203_EDGE1;
          END IF;
        END;
      
      END LOOP;
    END;
  
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := '203 STEP4 insert pre selection';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
    ----4
    INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
      WITH hist_203 as
       (select date_effective,
               CONTRACT_NUMBER,
               max(event_id) over(partition by contract_number) as event_id,
               row_number() over(partition by CONTRACT_NUMBER order by DATE_EFFECTIVE desc) as rn
          from OWNER_OUT.O_MDT_DATA
         where event_class = '203'
           and date_effective >= trunc(sysdate) - 30),
      base_con AS
       (SELECT E.SKP_CREDIT_CASE,
               role_value,
               NUM AS GROUP_NUM,
               h.date_effective,
               h.event_id,
               CNT_ID,
               DCC.skp_client,
               CASE
                 WHEN DCC.SKP_CREDIT_STATUS IN (2, 3, 5) THEN
                  'Y'
                 ELSE
                  'N'
               END AS FLAG_ACTIVE
          FROM AP_ANTIFRAUD.TRIGGER_203_EDGE E
          JOIN (SELECT NUM, COUNT(DISTINCT ID) AS CNT_ID
                 FROM AP_ANTIFRAUD.TRIGGER_203_NODE
                GROUP BY NUM
               HAVING COUNT(DISTINCT ID) > 10) N
            ON E.NUM_S = N.NUM
          JOIN OWNER_DWH.DC_CREDIT_CASE DCC
            ON E.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE
          left join hist_203 h
            on dcc.text_contract_number = h.CONTRACT_NUMBER
           and h.rn = 1),
      base_event as
       (select GROUP_NUM,
               regexp_replace(listagg(EVENT_ID, ',') within
                              group(order by EVENT_ID),
                              '([^,]+)(,\1)+',
                              '\1') as event_id
          from base_con
         where event_id is not null
         group by GROUP_NUM),
      CNT_CON AS
       (SELECT B.GROUP_NUM,
               COUNT(DISTINCT SKP_CLIENT) AS CNT_CLIENT,
               COUNT(DISTINCT SKP_CREDIT_CASE) AS CNT_CON,
               COUNT(DISTINCT CASE
                       WHEN FLAG_ACTIVE = 'Y' THEN
                        SKP_CREDIT_CASE
                     END) AS CNT_ACTIVE_CON,
               count(distinct case
                       when event_id is not null then
                        SKP_CREDIT_CASE
                       else
                        null
                     end) as cnt_trigger
          FROM BASE_CON B
         GROUP BY B.GROUP_NUM),
      
      TRIGGER_203_TEST_CON AS
       (SELECT B.SKP_CREDIT_CASE,
               B.GROUP_NUM,
               b.date_effective,
               CNT_CON,
               CNT_ACTIVE_CON,
               CNT_CLIENT,
               CNT_TRIGGER,
               E.event_id,
               LISTAGG(B.ROLE_VALUE, ',') WITHIN GROUP(ORDER BY B.ROLE_VALUE) AS ROLE_VALUE
          FROM BASE_CON B
          JOIN CNT_CON BC
            ON B.GROUP_NUM = BC.GROUP_NUM
          left join base_event E
            ON B.GROUP_NUM = E.GROUP_NUM
         GROUP BY B.SKP_CREDIT_CASE,
                  B.GROUP_NUM,
                  b.date_effective,
                  CNT_CON,
                  CNT_ACTIVE_CON,
                  CNT_CLIENT,
                  CNT_TRIGGER,
                  E.event_id),
      AVG_AGE AS
       (SELECT TR.GROUP_NUM, ROUND(AVG(FACC.num_age)) AS AVG_AGE
          FROM TRIGGER_203_TEST_CON TR
          JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC
            ON TR.SKP_CREDIT_CASE = FACC.SKP_CREDIT_CASE
           AND FACC.DATE_DECISION >= TRUNC(SYSDATE) - 30
         GROUP BY TR.GROUP_NUM)
      
      ----5 trigger preselection----------
      SELECT 'SA' AS UNIT,
             FACC.text_username_employee_sales AS ID_ENTITY,
             TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
             TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
             '203' AS CLASS,
             'CLUSTER' AS TRIGGER_SOURCE,
             'cluster_number : ' || TR.GROUP_NUM || ' , cluster cnt_con:' ||
             tR.cnt_con || ' , cluster cnt 203 triggered con:' ||
             TR.cnt_trigger || case
               when tr.cnt_trigger > 0 then
                ', External id:' || tr.event_id
               else
                ''
             end || ' , cluster cnt active con:' || tR.cNT_ACTIVE_CON ||
             ' , avg_age : ' || A.avg_age || ', share_info : ' ||
             TR.ROLE_VALUE AS TRIGGER_VALUE,
             'SOFT' AS TRIGGER_TYPE,
             FACC.SKP_CREDIT_CASE,
             FACC.text_contract_number
        FROM TRIGGER_203_TEST_CON tr
        JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC
          ON TR.SKP_CREDIT_CASE = FACC.SKP_CREDIT_CASE
        JOIN AVG_AGE A
          ON A.GROUP_NUM = TR.GROUP_NUM
       WHERE FACC.DATE_DECISION >= TRUNC(SYSDATE) - 30
         AND TR.CNT_CLIENT >= 10
         and TR.CNT_ACTIVE_CON > 0
         and tr.date_effective is null;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := '203 STEP5 final trigger';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    ----------INSERT TO TRIGGER------------------
    INSERT INTO AP_ANTIFRAUD.F_AF_FINAL_TRIGGERS
      WITH FINAL_TRIGGER_BASE AS
       (SELECT /*+  use_hash(facc) */
        DISTINCT PRE.ID_ENTITY,
                 facc.skp_employee_consultant,
                 SUBSTR(PRE.TRIGGER_VALUE,
                        0,
                        INSTR(PRE.TRIGGER_VALUE, ',', 1, 1) - 1) AS TRIGGER_VALUE,
                 FACC.name_last_sales,
                 PRE.DATE_DETECT,
                 PRE.WEEK_DETECT,
                 CASE
                   WHEN ((FACC.name_channel = '商品贷' AND
                        FACC.TEXT_USERNAME_EMPLOYEE_SALES = 'extreme') OR
                        FACC.NAME_SALESROOM LIKE '%DEO%' OR
                        facc.code_salesroom = '160212' OR
                        PRE.ID_ENTITY = 'homer_o2o' OR
                        (DCC.skp_product_channel = 804 AND
                        DCC.code_rpos_type <> '2') OR
                        FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%' OR
                        FACC.name_product LIKE '%MINI%') AND
                        DSAC.CODE_SALES_AREA IS NOT NULL THEN
                    DSAC.CODE_SALES_AREA
                   ELSE
                    PRO.CODE_SALES_AREA
                 END AS REGION,
                 CASE
                   WHEN ((FACC.name_channel = '商品贷' AND
                        FACC.TEXT_USERNAME_EMPLOYEE_SALES = 'extreme') OR
                        FACC.NAME_SALESROOM LIKE '%DEO%' OR
                        facc.code_salesroom = '160212' OR
                        PRE.ID_ENTITY = 'homer_o2o' OR
                        (DCC.skp_product_channel = 804 AND
                        DCC.code_rpos_type <> '2') OR
                        FACC.NAME_SALESROOM LIKE 'Test Retail Outlet%' OR
                        FACC.name_product LIKE '%MINI%') AND
                        DSA.CODE_SALES_AREA IS NOT NULL THEN
                    DSA.CODE_SALES_AREA
                   ELSE
                    CC.CODE_SALES_AREA
                 END AS CODE_SALES_AREA,
                 TRIGGER_SOURCE,
                 TRIGGER_TYPE,
                 MIN(CASE
                       WHEN FACC.name_channel = '商品贷' AND
                            FACC.TEXT_USERNAME_EMPLOYEE_SALES != 'extreme' AND
                            EE.SKP_BANK_ROLE <> 1962 THEN
                        '2 POS LOAN'
                       WHEN FACC.name_channel LIKE '%无预约%' AND
                            FACC.TEXT_USERNAME_EMPLOYEE_SALES != 'extreme' THEN
                        '3 WALK-IN'
                       WHEN FACC.name_channel LIKE '消费贷%' AND
                            FACC.TEXT_USERNAME_EMPLOYEE_SALES != 'extreme' THEN
                        '1 XSELL'
                     --    WHEN FACC.name_channel='商品贷' AND FACC.TEXT_USERNAME_EMPLOYEE_SALES='extreme' THEN '4 ELOAN' ELSE '5 MINI' END 
                       WHEN FACC.name_channel = '商品贷' AND EE.SKP_BANK_ROLE = 1962 THEN
                        '0 ELOAN'
                       ELSE
                        '5 MINI'
                     END --REMOTE SA 20190517 --20190807 '0 ELOAN'
                     ) OVER(PARTITION BY DATE_DETECT, SUBSTR(PRE.TRIGGER_VALUE, 0, INSTR(PRE.TRIGGER_VALUE, ',', 1, 1) - 1) --trigger_value
                 ) AS CASE_CATEGORY
        
          FROM AP_ANTIFRAUD.f_Trcontracts_Preselection PRE
          JOIN OWNER_DWH.DC_CREDIT_CASE DCC
            ON DCC.SKP_CREDIT_CASE = PRE.SKP_CREDIT_CASE
           AND PRE.DATE_DETECT = TO_CHAR(SYSDATE, 'yyyy/mm/dd')
           and PRE.CLASS = '203'
          JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC
            ON DCC.id_source = facc.id_source
           AND FACC.date_decision = DCC.DATE_DECISION
           AND DCC.skp_credit_type = facc.skp_credit_type --AND PRE.UNIT='SA'-- AND AA.CLASS=20
          LEFT JOIN OWNER_DWH.DC_EMPLOYEE EE
            ON PRE.ID_ENTITY = EE.TEXT_USERNAME_EMPLOYEE
          LEFT JOIN OWNER_DWH.DC_SALES_AREA CC
            ON CC.NAME_SALES_AREA = FACC.name_region
           AND CC.code_sales_area_status = 'a'
           and CC.skp_sales_area_type = 1
          LEFT JOIN OWNER_DWH.DC_SALES_AREA PRO
            ON CC.SKP_SALES_AREA_SUPERIOR = PRO.SKP_SALES_AREA
           AND PRO.CODE_SALES_AREA_STATUS = 'a'
           and PRO.SKP_SALES_AREA_TYPE = 2
          JOIN OWNER_DWH.f_Application_Client_Tt ACT
            ON ACT.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE
           AND ACT.SKP_CREDIT_TYPE = DCC.SKP_CREDIT_TYPE
           AND ACT.SKP_CLIENT_ROLE = 14
          LEFT JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR
            ON ADDR.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE
           AND ACT.SKP_APPLICATION_CLIENT = ADDR.SKP_APPLICATION_CLIENT
           AND ADDR.SKP_ADDRESS_TYPE = 2 --CURRENT
          LEFT JOIN OWNER_DWH.DC_CITY DC
            ON DC.SKP_CITY = ADDR.SKP_CITY
          LEFT JOIN OWNER_DWH.DC_SALES_AREA DSA
            ON DSA.NAME_SALES_AREA = DC.NAME_CITY
           AND DSA.code_sales_area_status = 'a'
           and DSA.skp_sales_area_type = 1
          LEFT JOIN OWNER_DWH.DC_SALES_AREA DSAC
            ON DSA.SKP_SALES_AREA_SUPERIOR = DSAC.SKP_SALES_AREA
           AND DSAC.CODE_SALES_AREA_STATUS = 'a'
           and DSAC.SKP_SALES_AREA_TYPE = 2),
      PROVINCE AS
       (SELECT DISTINCT TRIGGER_VALUE,
                        LISTAGG(REGION, '、') WITHIN GROUP(ORDER BY REGION) OVER(PARTITION BY TRIGGER_VALUE) AS PROVINCE
          FROM (SELECT DISTINCT TRIGGER_VALUE, REGION FROM FINAL_TRIGGER_BASE)),
      REGION AS
       (SELECT DISTINCT AA.TRIGGER_VALUE,
                        BB.PROVINCE,
                        LISTAGG(CODE_SALES_AREA, '、') WITHIN GROUP(ORDER BY CODE_SALES_AREA) OVER(PARTITION BY AA.TRIGGER_VALUE) AS CITY,
                        CASE
                          WHEN CASE_CATEGORY = '1 XSELL' THEN
                           '3 XSELL'
                          WHEN CASE_CATEGORY = '2 POS LOAN' THEN
                           '1 POS LOAN'
                          WHEN CASE_CATEGORY = '3 WALK-IN' THEN
                           '2 WALK-IN'
                          WHEN CASE_CATEGORY = '0 ELOAN' THEN
                           '4 ELOAN'
                          ELSE
                           CASE_CATEGORY
                        END AS CASE_CATEGORY ----------PRIORITY XSELL
          FROM (SELECT DISTINCT TRIGGER_VALUE, CODE_SALES_AREA, CASE_CATEGORY
                  FROM FINAL_TRIGGER_BASE) AA
          JOIN PROVINCE BB
            ON AA.TRIGGER_VALUE = BB.TRIGGER_VALUE)
      
      SELECT AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID,
             'SA' AS UNIT,
             'SA' || '_' || AF_FINAL_TRIGGERS_SEQ.NEXTVAL AS ID_TRIGGER,
             TO_DATE(TRI.DATE_DETECT, 'YYYY-MM-DD') AS DATE_DETECT,
             TO_DATE(TRI.WEEK_DETECT, 'YYYY-MM-DD') AS WEEK_DETECT,
             TRI.ID_ENTITY,
             TRI.name_last_sales,
             BB.PROVINCE,
             BB.CITY,
             CASE
               WHEN SUBSTR(ID_ENTITY, 1, 1) IN ('6', 'D') THEN
                'RA'
               ELSE
                'SA'
             END AS SA_TYPE,
             SA.cnt_days_from_first_credit,
             '203' AS CLASS ------
            ,
             'CLUSTER' AS TRIGGER_SOURCE,
             'SOFT' AS TRIGGER_TYPE,
             TRI.TRIGGER_VALUE,
             NULL CHECKED_BY,
             NULL CASE_STATUS,
             NULL CASE_DECISION,
             NULL CASE_NO,
             NULL INTO_SECURITY,
             SYSDATE AS TIME_DETECT,
             BB.CASE_CATEGORY,
             NULL AS NAME_DISTRICT,
             '是' AS FLAG_SEC_ALL_CONTRACT
        FROM (SELECT DISTINCT DATE_DETECT,
                              WEEK_DETECT,
                              ID_ENTITY,
                              name_last_sales,
                              skp_employee_consultant,
                              TRIGGER_SOURCE,
                              TRIGGER_VALUE
                FROM FINAL_TRIGGER_BASE) TRI
        JOIN REGION BB
          ON TRI.TRIGGER_VALUE = BB.TRIGGER_VALUE
      ---SA_ACTIVE_DAYS
        LEFT JOIN DM_ANTIFRAUD.F_EMPLOYEE_AD SA
          ON TRI.skp_employee_consultant = sa.skp_employee
       WHERE lengthB(BB.CITY) < 150;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    -- procedure end
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'end');
  END IF;
EXCEPTION
  WHEN OTHERS THEN
    -- ROBOTS_LOG
    owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                               p_step            => v_step_message,
                                               p_additional_info => NULL);
    -- process_log  
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => SQLCODE,
                                  p_msg    => 'Error in step (' ||
                                              v_step_message || ') - ' ||
                                              substr(SQLERRM, 1, 150));
    RAISE;
END;



PROCEDURE  TRIGGER_222_DIFF_CITY IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_222_DIFF_CITY';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '222 APPLY WITH DIFF CITY',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH CITY_1 AS
(
    SELECT B.skp_credit_case,B.SKP_CREDIT_TYPE,B.DATE_DECISION,
    CASE --WHEN A.CODE_ADDITIONAL_INFO='a21_city' THEN 'IP_CITY'
    WHEN A.CODE_ADDITIONAL_INFO='a5_bank_acc_city' THEN 'BANK_CITY'
    WHEN A.CODE_ADDITIONAL_INFO='a15_areaInfoStatus' THEN 'PHONE_CITY' END AS CITY_TYPE,

    CASE WHEN INSTR(B.TEXT_VALUE,'省')>0 AND INSTR(B.TEXT_VALUE,'市')>0 AND INSTR(B.TEXT_VALUE,'自治区')=0 THEN SUBSTR(B.TEXT_VALUE,INSTR(B.TEXT_VALUE,'省')+1，INSTR(B.TEXT_VALUE,'市')-INSTR(B.TEXT_VALUE,'省')-1)
    WHEN INSTR(B.TEXT_VALUE,'省')=0 AND INSTR(B.TEXT_VALUE,'市')>0 AND INSTR(B.TEXT_VALUE,'自治区')=0 THEN SUBSTR(B.TEXT_VALUE,1，INSTR(B.TEXT_VALUE,'市')-1)
    WHEN  INSTR(B.TEXT_VALUE,'兴安盟')>0 THEN '兴安'
    WHEN INSTR(B.TEXT_VALUE,'自治区')>0 AND INSTR(B.TEXT_VALUE,'市')>0 THEN SUBSTR(B.TEXT_VALUE,INSTR(B.TEXT_VALUE,'区')+1,INSTR(B.TEXT_VALUE,'市')-INSTR(B.TEXT_VALUE,'区')-1) 
    WHEN INSTR(B.TEXT_VALUE,'自治区')>0 AND INSTR(B.TEXT_VALUE,'地区')>0 THEN SUBSTR(B.TEXT_VALUE,INSTR(B.TEXT_VALUE,'自治区')+3,INSTR(B.TEXT_VALUE,'地区')-INSTR(B.TEXT_VALUE,'自治区')-3) 
    WHEN INSTR(B.TEXT_VALUE,'省')>0 AND INSTR(B.TEXT_VALUE,'地区')>0 THEN SUBSTR(B.TEXT_VALUE,INSTR(B.TEXT_VALUE,'省')+1,INSTR(B.TEXT_VALUE,'地区')-INSTR(B.TEXT_VALUE,'省')-1) 
    WHEN  INSTR(B.TEXT_VALUE,'巴音郭楞')>0 THEN '巴音郭楞'
    WHEN INSTR(B.TEXT_VALUE,'博尔塔拉')>0 THEN '博尔塔拉'
    WHEN  INSTR(B.TEXT_VALUE,'昌吉')>0 THEN '昌吉'
    WHEN INSTR(B.TEXT_VALUE,'克孜勒苏')>0 THEN '克孜勒苏'      
    WHEN  INSTR(B.TEXT_VALUE,'伊犁')>0 THEN '伊犁'                                       
    WHEN INSTR(B.TEXT_VALUE,'自治区')>0 THEN SUBSTR(B.TEXT_VALUE,INSTR(B.TEXT_VALUE,'区')+1) 
    WHEN INSTR(B.TEXT_VALUE,'省')=0 AND INSTR(B.TEXT_VALUE,'自治州')>0 AND (INSTR(B.TEXT_VALUE,'哈尼族')>0 OR INSTR(B.TEXT_VALUE,'朝鲜族')>0 OR INSTR(B.TEXT_VALUE,'土家族')>0 
    OR INSTR(B.TEXT_VALUE,'布依族')>0 OR INSTR(B.TEXT_VALUE,'蒙古族')>0 OR INSTR(B.TEXT_VALUE,'傈僳族')>0) 
        THEN SUBSTR(B.TEXT_VALUE,1,INSTR(B.TEXT_VALUE,'族')-3)
    WHEN INSTR(B.TEXT_VALUE,'省')=0 AND INSTR(B.TEXT_VALUE,'区')=0 AND INSTR(B.TEXT_VALUE,'自治州')>0 AND  INSTR(B.TEXT_VALUE,'市')=0 AND INSTR(B.TEXT_VALUE,'族')>0
          THEN SUBSTR(B.TEXT_VALUE,1,INSTR(B.TEXT_VALUE,'族')-2)            
    WHEN INSTR(B.TEXT_VALUE,'省')>0 AND INSTR(B.TEXT_VALUE,'自治州')>0 AND (INSTR(B.TEXT_VALUE,'哈尼族')>0 OR INSTR(B.TEXT_VALUE,'朝鲜族')>0 OR INSTR(B.TEXT_VALUE,'土家族')>0 
    OR INSTR(B.TEXT_VALUE,'布依族')>0 OR INSTR(B.TEXT_VALUE,'蒙古族')>0 OR INSTR(B.TEXT_VALUE,'傈僳族')>0) 
        THEN SUBSTR(B.TEXT_VALUE,INSTR(B.TEXT_VALUE,'省')+1,INSTR(B.TEXT_VALUE,'族')-2-INSTR(B.TEXT_VALUE,'省')-1)
    WHEN INSTR(B.TEXT_VALUE,'省')>0 AND INSTR(B.TEXT_VALUE,'区')=0 AND INSTR(B.TEXT_VALUE,'自治州')>0 AND  INSTR(B.TEXT_VALUE,'市')=0 AND INSTR(B.TEXT_VALUE,'族')>0
          THEN SUBSTR(B.TEXT_VALUE,INSTR(B.TEXT_VALUE,'省')+1,INSTR(B.TEXT_VALUE,'族')-1-INSTR(B.TEXT_VALUE,'省')-1)
    WHEN INSTR(B.TEXT_VALUE,'地区')>0 THEN SUBSTR(B.TEXT_VALUE,1，INSTR(B.TEXT_VALUE,'地区')-1)  ELSE B.TEXT_VALUE  END AS CITY
    from OWNER_DWH.F_APPRSTEP_ADDITIONAL_INFO_TT B
    JOIN OWNER_DWH.CL_APPRSTEP_ADD_INFO A ON A.SKP_APPRSTEP_ADD_INFO = B.SKP_APPRSTEP_ADD_INFO
   JOIN DM_ANTIFRAUD.FT_AF_CREDIT_CASE_AD ACCA ON ACCA.SKP_CREDIT_CASE=B.SKP_CREDIT_CASE AND ACCA.SKP_CREDIT_TYPE=B.SKP_CREDIT_TYPE AND ACCA.DATE_DECISION=B.DATE_DECISION
    JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='222' AND  ACCA.DATE_DECISION>=EX.MAX_DETECT
    AND ACCA.DATE_DECISION>SYSDATE-10--DETETE AT 2017-09-18
    where a.CODE_ADDITIONAL_INFO IN (/*'a21_city',*/'a5_bank_acc_city','a15_areaInfoStatus')
   AND (INSTR(ACCA.NAME_SALESROOM,'福贷')>0 OR INSTR(ACCA.NAME_SALESROOM,'超贷')>0)
    AND B.TEXT_VALUE<>'无法获取手机归属地'
    AND INSTR(B.TEXT_VALUE,'直辖县级行政区划')=0
    AND ACCA.CODE_CREDIT_STATUS IN ('a','k','n')
),
CITY_2 AS 
(
SELECT  /*+ materialize */ * FROM CITY_1
UNION
SELECT  /*+ materialize */ 
ADDR.SKP_CREDIT_CASE,ADDR.SKP_CREDIT_TYPE,ADDR.DATE_DECISION,'CURRENT_CITY' AS CITY_TYPE,CITY.NAME_CITY AS CITY
FROM CITY_1 CI
JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADDR ON CI.SKP_CREDIT_CASE=ADDR.SKP_CREDIT_CASE AND ADDR.SKP_CREDIT_TYPE=CI.SKP_CREDIT_TYPE AND ADDR.DATE_DECISION=CI.DATE_DECISION
JOIN OWNER_DWH.DC_CITY CITY ON ADDR.SKP_CITY=CITY.SKP_CITY
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='222' AND ADDR.DATE_DECISION>=EX.MAX_DETECT
AND ADDR.DATE_DECISION>SYSDATE-10--DETETE AT 2017-09-18
WHERE ADDR.SKP_ADDRESS_TYPE=2
),
CITY_PIVOT AS 
(
SELECT  /*+ materialize */ * FROM CITY_2
PIVOT(MAX(CITY) FOR CITY_TYPE IN (/*'IP_CITY' AS IP_CITY,*/'BANK_CITY' AS BANK_CITY, 'CURRENT_CITY' AS CURRENT_CITY, 'PHONE_CITY' AS PHONE_CITY))
),
DIFF_CITY AS
(
SELECT  /*+ materialize */ SKP_CREDIT_CASE,COUNT(DISTINCT CITY) AS DIFF_CITY
 FROM CITY_2 
 HAVING COUNT (DISTINCT CITY)>=3
GROUP BY SKP_CREDIT_CASE
)
SELECT
 DISTINCT  'SA' AS UNIT
,'extreme' AS TEXT_USERNAME_EMPLOYEE_SALES
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'222' AS CLASS
,'APPLY WITH DIFF CITY' AS TRIGGER_SOURCE
,'CLIENT APPLY WITH '|| DIFF_CITY||' DIFF_CITY: '||' BANK_CITY '||CASE WHEN CP.BANK_CITY IS NOT NULL THEN CP.BANK_CITY ELSE 'NULL' END
||'; PHONE_CITY '||CASE WHEN CP.PHONE_CITY IS NOT NULL THEN CP.PHONE_CITY ELSE 'NULL' END||'; CURRENT_CITY '||CASE WHEN CP.CURRENT_CITY IS NOT NULL THEN CP.CURRENT_CITY ELSE 'NULL' END AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,ACCA.SKP_CREDIT_CASE
,ACCA.text_contract_number
--,ACCA.CODE_CREDIT_STATUS
--,ACCA.DATE_DECISION
FROM DIFF_CITY DC
JOIN CITY_2 CI ON DC.SKP_CREDIT_CASE=CI.SKP_CREDIT_CASE 
JOIN CITY_PIVOT CP ON CI.SKP_CREDIT_CASE=CP.SKP_CREDIT_CASE AND CI.SKP_CREDIT_TYPE=CP.SKP_CREDIT_TYPE AND CI.DATE_DECISION=CP.DATE_DECISION
JOIN DM_ANTIFRAUD.FT_AF_CREDIT_CASE_AD ACCA  ON ACCA.SKP_CREDIT_CASE=CP.SKP_CREDIT_CASE AND ACCA.SKP_CREDIT_TYPE=CP.SKP_CREDIT_TYPE AND ACCA.DATE_DECISION=CP.DATE_DECISION
 WHERE ACCA.SKP_CREDIT_TYPE=2 
AND ACCA.CODE_CREDIT_STATUS IN ('a','k','n');

owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;

/*PROCEDURE  TRIGGER_242_IMEI_DAILY IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_242_IMEI_DAILY';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '242 IMEI DAILY MONITORING',SYSDATE FROM DUAL;
COMMIT;
--change 20190319
INSERT INTO ap_antifraud.f_trcontracts_preselection
--3,15s
WITH base_a AS
(     
  SELECT DISTINCT ttt.skp_credit_case, 
                  ttt.TEXT_IMEI, 
                  ttt.date_decision, 
                  aaa.dtime_review, 
                  aaa.code_salesroom, 
                  aaa.text_contract_number, 
                  aaa.name_last_sales,  
                  aaa.text_username_employee_sales,
                  ggg.skp_credit_case AS last_skp_credit_case,
                  ggg.date_decision AS last_date_decision,
                  bbb.dtime_review AS last_dtime_review, 
                  bbb.code_salesroom AS last_code_salesroom, 
                  bbb.text_contract_number AS last_text_contract_number, 
                  bbb.name_last_sales AS last_name_last_sales,  
                  bbb.text_username_employee_sales AS last_username_employee_sales,
                  to_char(ttt.date_decision,'yyyy-mm-dd')||' 销售-'||aaa.text_username_employee_sales||aaa.name_last_sales||'在门店('||
                  aaa.code_salesroom||')'||'与'||to_char(ggg.date_decision,'yyyy-mm-dd')||' 销售-'||bbb.text_username_employee_sales||
                  bbb.name_last_sales||'在门店('||bbb.code_salesroom||')和合同：'||bbb.text_contract_number||' used dup IMEI: '||
                  ttt.text_imei||', '||'Tac: '||tac.STANDARDISED_DEVICE_VENDOR||' '||tac.STANDARDISED_MARKETING_NAME||'.' AS trigger_value,
                  'Use duplicate IMEI code' AS trigger_source,
                  row_number()OVER(PARTITION BY  ttt.TEXT_IMEI ORDER BY ggg.date_decision DESC) AS ord,
                  tac.STANDARDISED_DEVICE_VENDOR,
                  tac.STANDARDISED_MARKETING_NAME
  FROM owner_dwh.f_purchased_goods_tt ttt
  JOIN owner_dwh.f_purchased_goods_tt ggg ON ttt.text_imei=ggg.text_imei
   AND ttt.skp_client!=ggg.skp_client
  JOIN ap_antifraud.cl_trigger_excute_time ex ON ex.class = 242
  JOIN dm_antifraud.ft_af_credit_case_ad  aaa  ON aaa.skp_credit_case = ttt.skp_credit_case
  JOIN dm_antifraud.ft_af_credit_case_ad  bbb  ON bbb.skp_credit_case = ggg.skp_credit_case 
  LEFT JOIN HCCN_wangn1.imei_verify_db tac ON tac.TAC = SUBSTR(ttt.TEXT_IMEI,0,8)
  LEFT JOIN owner_dwh.f_opt_service_imei_ad ei   on ttt.SKP_CONTRACT=ei.SKP_CONTRACT 
                                                  and ttt.SKP_CLIENT=ei.SKP_CLIENT 
                                                  and EI.CODE_IMEI_ORIGINAL=TTT.TEXT_IMEI
  LEFT JOIN owner_dwh.f_opt_service_imei_ad eii   on ggg.SKP_CONTRACT=eii.SKP_CONTRACT 
                                                  and ggg.SKP_CLIENT=eii.SKP_CLIENT 
                                                  and eii.CODE_IMEI_ORIGINAL=ggg.TEXT_IMEI                                                
  WHERE bbb.date_decision >= TRUNC(SYSDATE) - 181
   AND ggg.date_decision >= TRUNC(SYSDATE) - 181
   AND ttt.date_decision BETWEEN ex.max_detect AND TRUNC(SYSDATE) - 1
   AND aaa.date_decision BETWEEN ex.max_detect AND TRUNC(SYSDATE) - 1
   AND ttt.text_imei!= '352063062747003'
   AND ttt.text_imei!= '000000000000000'
   AND ttt.text_imei!= '123456789876543' 
   AND ttt.text_imei!= '123456789987654' 
   AND ttt.text_imei IS NOT NULL
   AND ttt.text_IMEI != 'XNA' 
   AND aaa.code_credit_status IN ('a','k','n')
   AND bbb.code_credit_status IN ('a','k','n')
   AND ggg.text_imei!= '352063062747003'
   AND ggg.text_imei!= '000000000000000'
   AND ggg.text_imei!= '123456789876543' 
   AND ggg.text_imei!= '123456789987654'
   AND ggg.text_imei IS NOT NULL
   AND ggg.text_IMEI != 'XNA'
   AND EI.SKP_CONTRACT IS NULL 
   AND EII.SKP_CONTRACT IS NULL 
),
LLL AS
(  
  SELECT TEXT_IMEI, 
         CASE WHEN MAX(ord)<5 THEN RANK()OVER(ORDER BY TEXT_IMEI) ELSE NULL END  AS  group_number, 
         CASE WHEN MAX(ord)=1  THEN 'REPEAT_TWO'
                   WHEN MAX(ord)> 1 AND MAX(ord)<=4  THEN 'REPEAT_MORE'        
                   WHEN MAX(ord)> =5  THEN 'REPEAT_MOST'    END AS FLAG_REPEAT 
  FROM BASE_A
  GROUP BY TEXT_IMEI
),  
 IMEI_CON AS
(
    SELECT DISTINCT LLL.TEXT_IMEI, skp_credit_case, code_salesroom, text_contract_number, text_username_employee_sales, group_number,
            group_number||'#'||to_char(date_decision,'yyyy-mm-dd')||' 销售-'||text_username_employee_sales||name_last_sales||'在门店('
           ||code_salesroom||')'||'与'||to_char(last_date_decision,'yyyy-mm-dd')||' 销售-'||last_username_employee_sales||last_name_last_sales
           ||'在门店('||last_code_salesroom||')和合同：'||last_text_contract_number||' used dup IMEI: '||LLL.text_imei||', '||'Tac: '
           ||STANDARDISED_DEVICE_VENDOR||' '||STANDARDISED_MARKETING_NAME||'.' AS trigger_value, trigger_source
    FROM base_a
    JOIN LLL ON LLL.TEXT_IMEI = base_a.TEXT_IMEI
    WHERE LLL.FLAG_REPEAT='REPEAT_TWO'
  
    UNION ALL
    SELECT DISTINCT LLL.TEXT_IMEI, last_skp_credit_case AS skp_credit_case,last_code_salesroom AS code_salesroom, last_text_contract_number AS text_contract_number,
           last_username_employee_sales AS text_username_employee_sales, group_number,
           group_number||'#'||to_char(last_date_decision,'yyyy-mm-dd')||' 销售-'||last_username_employee_sales||last_name_last_sales||'在门店('||last_code_salesroom
           ||')'||'与'||to_char(date_decision,'yyyy-mm-dd')||' 销售-'||text_username_employee_sales||name_last_sales||'在门店('||code_salesroom||
           ')和合同：'||text_contract_number||' used dup IMEI: '||LLL.text_imei||', '||'Tac: '||STANDARDISED_DEVICE_VENDOR||' '||STANDARDISED_MARKETING_NAME||'.' AS trigger_value, 
           trigger_source
    FROM base_a
    JOIN LLL ON LLL.TEXT_IMEI = base_a.TEXT_IMEI
    WHERE LLL.FLAG_REPEAT='REPEAT_TWO'
    
    UNION ALL
    SELECT DISTINCT LLL.TEXT_IMEI, skp_credit_case, code_salesroom, text_contract_number, text_username_employee_sales, group_number,
           group_number||'#'||LISTAGG ( trigger_value, ' #' ) WITHIN GROUP( ORDER BY trigger_value )  AS  trigger_value,
           trigger_source
    FROM base_a
    JOIN LLL ON LLL.TEXT_IMEI = base_a.TEXT_IMEI
    WHERE LLL.FLAG_REPEAT='REPEAT_MORE'             
    GROUP BY LLL.TEXT_IMEI,skp_credit_case, code_salesroom, text_contract_number, text_username_employee_sales, group_number, trigger_source
    
    UNION ALL
    SELECT DISTINCT LLL.TEXT_IMEI, skp_credit_case, code_salesroom, text_contract_number, text_username_employee_sales, 0 AS group_number,
          '0#'||'This IMEI '||LLL.text_imei||' used more than 5 times within 180D, '||'Tac: '||STANDARDISED_DEVICE_VENDOR||' '||STANDARDISED_MARKETING_NAME||'.' AS trigger_value, trigger_source
    FROM base_a
    JOIN LLL ON LLL.TEXT_IMEI = base_a.TEXT_IMEI
    WHERE LLL.FLAG_REPEAT='REPEAT_MOST'
),
IMEI_CASE AS
(
    SELECT DISTINCT TEXT_IMEI,
           skp_credit_case,  
           code_salesroom, 
           text_contract_number, 
           text_username_employee_sales,
           trigger_value,
           trigger_source                     
    FROM IMEI_CON
    
    UNION ALL
    SELECT DISTINCT tt.TEXT_IMEI,
           tt.skp_credit_case,  
           bb.code_salesroom, 
           bb.text_contract_number, 
           bb.text_username_employee_sales,
           bb.text_username_employee_sales||':'||bb.name_last_sales||'在'||to_char(tt.date_decision,'yyyy-mm-dd')||' used invalid IMEI: '||tt.text_imei||'.' AS trigger_value,
           'Use invalid IMEI code' AS trigger_source
    FROM owner_dwh.f_purchased_goods_tt tt 
    JOIN ap_antifraud.cl_trigger_excute_time ex  ON ex.class = 242
    JOIN dm_antifraud.ft_af_credit_case_ad  bb ON bb.skp_credit_case = tt.skp_credit_case
    LEFT JOIN owner_dwh.f_opt_service_imei_ad ei   on TT.SKP_CONTRACT=ei.SKP_CONTRACT 
                                                  and TT.SKP_CLIENT=ei.SKP_CLIENT 
                                                  and ei.CODE_IMEI_ORIGINAL=TT.TEXT_IMEI
    WHERE BB.DATE_DECISION>SYSDATE-30
     AND tt.date_decision BETWEEN ex.max_detect-6 AND TRUNC(SYSDATE) - 7
     AND bb.code_credit_status IN ('a','k','n') 
     AND ( tt.text_imei = '000000000000000' OR tt.text_imei = '123456789876543' OR tt.text_imei = '123456789987654'  OR LENGTH(tt.text_imei) != 15 )
     AND tt.text_imei IS NOT NULL
     AND tt.text_IMEI != 'XNA'
     AND EI.SKP_CONTRACT IS NULL

    UNION ALL
    SELECT DISTINCT TEXT_IMEI,
           skp_credit_case,  
           code_salesroom, 
           text_contract_number, 
           text_username_employee_sales,
           trigger_value,
          'IMEI use dummy code' AS trigger_source
    FROM
    (
       SELECT DISTINCT tt.TEXT_IMEI,
               tt.skp_credit_case,  
               bb.code_salesroom, 
               bb.text_contract_number, 
               bb.text_username_employee_sales,
               bb.text_username_employee_sales||':'||bb.name_last_sales||'在'||to_char(tt.date_decision,'yyyy-mm-dd')||' used dummy IMEI: '||tt.text_imei||'.' AS trigger_value,
               row_number()OVER(PARTITION BY  tt.TEXT_IMEI ORDER BY bb.AMT_CREDIT DESC) AS ord
        FROM owner_dwh.f_purchased_goods_tt tt 
        JOIN ap_antifraud.cl_trigger_excute_time ex  ON ex.class = 242
        JOIN dm_antifraud.ft_af_credit_case_ad  bb ON bb.skp_credit_case = tt.skp_credit_case
         LEFT JOIN owner_dwh.f_opt_service_imei_ad ei   on TT.SKP_CONTRACT=ei.SKP_CONTRACT 
                                                  and TT.SKP_CLIENT=ei.SKP_CLIENT 
                                                  and ei.CODE_IMEI_ORIGINAL=TT.TEXT_IMEI
        WHERE BB.DATE_DECISION>SYSDATE-30
         AND tt.date_decision  BETWEEN ex.max_detect-6 AND TRUNC(SYSDATE) - 7
         AND bb.code_credit_status IN ('a','k','n') 
         AND tt.text_imei = '352063062747003'    
         AND EI.SKP_CONTRACT IS NULL 
     )
    WHERE ord <= 30
)

SELECT  'SA' AS unit,
         text_username_employee_sales,
         to_char(SYSDATE, 'yyyy/mm/dd') AS date_detect,
         TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
         '242' AS CLASS,
         trigger_source,
         trigger_value,
         'SOFT' AS trigger_type,
         skp_credit_case,
         text_contract_number
FROM imei_case;
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;*/


PROCEDURE  TRIGGER_302_XSELL_TTF IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_302_XSELL_TTF';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '302 XSELL SHORT TTF',SYSDATE FROM DUAL;
COMMIT;

INSERT INTO ap_antifraud.f_trcontracts_preselection
WITH BASE AS 
(
SELECT * FROM 
(
    SELECT  DCC.SKP_CREDIT_CASE  ,DCC.text_contract_number,DCC.SKP_CLIENT,
    FCC.DATE_DECISION,
    FACC.TEXT_USERNAME_EMPLOYEE_SALES,
    DCC.SKP_CREDIT_STATUS ,FACC.CODE_CREDIT_STATUS
    ,FACC.SKP_EMPLOYEE_CONSULTANT,FACC.TEXT_MOBILE_CLIENT,FCC.DTIME_WEB_FORM_OPEN,
    FCC.DTIME_REVIEW ,
    CASE WHEN TRUNC(FCC.DTIME_REVIEW) = TO_DATE('30000101', 'YYYYMMDD') OR TRUNC(FCC.DTIME_WEB_FORM_OPEN) =  TO_DATE('30000101', 'YYYYMMDD') THEN  0
    ELSE   (FCC.DTIME_REVIEW - FCC.DTIME_WEB_FORM_OPEN) * 24 * 60   END AS TTF1,
    CASE WHEN FACC.CODE_CREDIT_STATUS='d'  THEN 'HCR03 or HCR04' END AS   CODE_KO_LIST
    FROM  OWNER_DWH.F_CREDIT_CASE_AD FCC
    JOIN OWNER_DWH.DC_CREDIT_CASE DCC
    ON DCC.SKP_CREDIT_CASE = FCC.SKP_CREDIT_CASE
    AND DCC.SKP_CREDIT_TYPE = FCC.SKP_CREDIT_TYPE
    AND DCC.DATE_DECISION = FCC.DATE_DECISION
    JOIN DM_ANTIFRAUD.FT_AF_CREDIT_CASE_AD FACC
    ON    FACC.SKP_CREDIT_CASE = FCC.SKP_CREDIT_CASE
    AND FACC.SKP_CREDIT_TYPE = FCC.SKP_CREDIT_TYPE
    AND FACC.DATE_DECISION = FCC.DATE_DECISION
    JOIN OWNER_DWH.DC_EMPLOYEE EE
    ON FCC.SKP_EMPLOYEE_CONSULTANT=EE.SKP_EMPLOYEE
    WHERE DCC.SKP_CREDIT_ACQUISITION_CHNL=2--183060     
    AND  dcc.DATE_DECISION>SYSDATE-15
    AND DCC.DATE_DECISION BETWEEN (SELECT EX.MAX_DETECT FROM AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX WHERE EX.CLASS=302) AND TRUNC(SYSDATE)-1
    AND (FACC.CODE_CREDIT_STATUS  IN ('a','k','n') OR (FACC.CODE_CREDIT_STATUS='d' AND FACC.CODE_KO_LIST LIKE '%INTCODE%') )
  )AA
  WHERE AA.TTF1<5 AND AA.TTF1>0 --20180308
)
,BASE1 AS 
(
       SELECT  SKP_EMPLOYEE_CONSULTANT ,TEXT_USERNAME_EMPLOYEE_SALES, DATE_DECISION , avg(ttf1) as agv_ttf1, count(*) as cnt_con FROM BASE
       GROUP BY  SKP_EMPLOYEE_CONSULTANT,TEXT_USERNAME_EMPLOYEE_SALES,DATE_DECISION 
 )
,BASE2 AS 
(       
        SELECT  SKP_EMPLOYEE_CONSULTANT ,TEXT_USERNAME_EMPLOYEE_SALES, DATE_DECISION , count(*) as cnt_con FROM BASE WHERE TTF1<1
        GROUP  BY  SKP_EMPLOYEE_CONSULTANT,TEXT_USERNAME_EMPLOYEE_SALES,DATE_DECISION
)
SELECT 
'SA' AS UNIT,
AA.TEXT_USERNAME_EMPLOYEE_SALES AS ID_ENTITY,
to_char(SYSDATE, 'yyyy/mm/dd') AS date_detect,
to_char((7-(to_char(SYSDATE,'d')-1))+SYSDATE,'yyyy-mm-dd') AS week_detect,
'302' AS CLASS,
'SHORT TTF1' AS TRIGGER_SOURCE,
'TSO:'||AA.TEXT_USERNAME_EMPLOYEE_SALES||'('||TO_CHAR(AA.DATE_DECISION ,'YYYY-MM-DD')||')CNT_CON('|| BB.CNT_CON || ')   '||' TTF1:  '||ROUND(AA.TTF1,3)|| '(FROM '||TO_CHAR (AA.DTIME_WEB_FORM_OPEN,'YYYY-MM-DD HH24:MI:SS')||' TO '|| TO_CHAR (AA.DTIME_REVIEW,'YYYY-MM-DD HH24:MI:SS')|| ')   '||AA.CODE_KO_LIST AS TRIGGER_VALUE,
'SOFT' AS TRIGGER_TYPE,
AA.SKP_CREDIT_CASE,
AA.TEXT_CONTRACT_NUMBER
FROM BASE AA JOIN BASE1 BB 
ON AA.SKP_EMPLOYEE_CONSULTANT=BB.SKP_EMPLOYEE_CONSULTANT 
AND AA.DATE_DECISION =BB.DATE_DECISION 
AND BB.CNT_CON>=4
AND BB.AGV_TTF1<1
UNION ALL
SELECT ---add new segment 20180119
'SA' AS UNIT,
AA.TEXT_USERNAME_EMPLOYEE_SALES AS ID_ENTITY,
to_char(SYSDATE, 'yyyy/mm/dd') AS date_detect,
to_char((7-(to_char(SYSDATE,'d')-1))+SYSDATE,'yyyy-mm-dd') AS week_detect,
'302' AS CLASS,
'SHORT TTF1' AS TRIGGER_SOURCE,
'TSO:'||AA.TEXT_USERNAME_EMPLOYEE_SALES||'('||TO_CHAR(AA.DATE_DECISION ,'YYYY-MM-DD')||')CNT_CON('|| BB.CNT_CON || ')   '||' TTF1:  '||ROUND(AA.TTF1,3)|| '(FROM '||TO_CHAR (AA.DTIME_WEB_FORM_OPEN,'YYYY-MM-DD HH24:MI:SS')||' TO '|| TO_CHAR (AA.DTIME_REVIEW,'YYYY-MM-DD HH24:MI:SS')|| ')   '||AA.CODE_KO_LIST AS TRIGGER_VALUE,
'SOFT' AS TRIGGER_TYPE,
AA.SKP_CREDIT_CASE,
AA.TEXT_CONTRACT_NUMBER
FROM BASE AA JOIN BASE2 BB 
ON AA.SKP_EMPLOYEE_CONSULTANT=BB.SKP_EMPLOYEE_CONSULTANT 
AND AA.DATE_DECISION =BB.DATE_DECISION 
AND BB.CNT_CON>=3
LEFT JOIN (SELECT * FROM BASE1 B WHERE 1=1 AND B.CNT_CON>=4  AND B.AGV_TTF1<1) C
ON C.SKP_EMPLOYEE_CONSULTANT=AA.SKP_EMPLOYEE_CONSULTANT
AND C.DATE_DECISION =AA.DATE_DECISION 
WHERE 1=1 
AND C.SKP_EMPLOYEE_CONSULTANT IS NULL;
COMMIT;
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;

PROCEDURE  TRIGGER_382_ACL_DAILY IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_382_ACL_DAILY';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
    


 INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '382_SA_INVOLVED_SERIOUS_FRAUD',SYSDATE FROM DUAL;
COMMIT;
--========================================================================
--========================================================================
--   
--      ACL 7:    SA INVOLVED IN SERIOUS FRAUD
--
--========================================================================  
--======================================================================== 
INSERT /*+append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH ACL AS
(
    SELECT /*+MATERIALIZE USE_HASH(DCC,AD)*/ DCC.SKP_CREDIT_CASE ,DCC.TEXT_CONTRACT_NUMBER, DCC.DATE_DECISION , DCC.SKP_CREDIT_TYPE  , DCC.SKP_CLIENT, DCC.SKP_CONTRACT
    --, EE.TEXT_USERNAME_EMPLOYEE--AD.text_username_employee_sales
               ,CASE WHEN EE.TEXT_IDENT_NUMBER='XNA' THEN 'Homer_o2o' ELSE EE.TEXT_USERNAME_EMPLOYEE END AS TEXT_USERNAME_EMPLOYEE----kate ke 20191127
    FROM OWNER_DWH.DC_CREDIT_CASE DCC
    JOIN OWNER_DWH.F_APPLICATION_TT AD--DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD--2018/05/04 KATE
    ON DCC.SKP_CREDIT_CASE =AD.SKP_CREDIT_CASE AND DCC.DATE_DECISION =AD.DATE_DECISION AND DCC.SKP_CREDIT_TYPE =AD.SKP_CREDIT_TYPE 
    JOIN OWNER_DWH.DC_EMPLOYEE EE
    ON AD.SKP_EMPLOYEE_CONSULT_3RD_BLOCK=EE.SKP_EMPLOYEE
    JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=382--2020/01/10 NANCY
    WHERE 1=1
    AND DCC.DATE_DECISION>=TRUNC(SYSDATE)-EX.DAYS --2020/01/10 NANCY
    AND DCC.SKP_CREDIT_ACQUISITION_CHNL=6--207247
    AND DCC.SKP_CREDIT_STATUS IN (2,3,5)
    AND DCC.SKP_CREDIT_TYPE =2
    AND AD.SKP_CREDIT_TYPE =2
)

,ALL_CON AS
(
--ID FRAUD, ENCASHMENT  NEW
    SELECT /*+MATERIALIZE USE_HASH(A,AD)*/ A.* , AD.TEXT_CONTRACT_NUMBER  AS FRAUD_CONTRACT,AD.DATE_DETECT, AD.CLASS, AD.TRIGGER_SOURCE, AD.NAME_SEC_FRAUD_MEANS
    FROM   ACL A
    JOIN AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS AD
    ON a.TEXT_USERNAME_EMPLOYEE=ad.TEXT_USERNAME_EMPLOYEE_SALES
    WHERE AD.DATE_DETECT >=SYSDATE-180 -- AND AD.DATE_DECISION <=SYSDATE-60
    AND  NAME_SEC_FRAUD_MEANS IN ('身份欺诈','套现')
    AND AD.DATE_DETECT<=A.DATE_DECISION 
    UNION 
    --ID FRAUD OLD
    SELECT /*+MATERIALIZE*/   A.* , AD.TEXT_CONTRACT_NUMBER  AS FRAUD_CONTRACT,AD.DATE_DETECT,AD.CLASS, AD.TRIGGER_SOURCE, AD.FRAUD_TYPE
    FROM   ACL A
    JOIN AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS AD
    ON A.TEXT_USERNAME_EMPLOYEE =AD.TEXT_USERNAME_EMPLOYEE_SALES 
    WHERE AD.DATE_DECISION >=SYSDATE-180
    AND  FRAUD_TYPE ='身份欺诈（确定）'
    AND AD.DATE_DETECT<=A.DATE_DECISION 
)
,FRAUD_CONTRACT AS--20200110 nancy
(
    SELECT   AD.TEXT_CONTRACT_NUMBER  AS FRAUD_CONTRACT,AD.DATE_DETECT, AD.CLASS, AD.TRIGGER_SOURCE, AD.NAME_SEC_FRAUD_MEANS,A.TEXT_USERNAME_EMPLOYEE
    FROM ALL_CON A
    JOIN  AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS AD 
    ON A.TEXT_USERNAME_EMPLOYEE=AD.TEXT_USERNAME_EMPLOYEE_SALES
    WHERE AD.DATE_DETECT >=SYSDATE-180 -- AND AD.DATE_DECISION <=SYSDATE-60
            
    UNION 
    --ID FRAUD OLD
    SELECT /*+MATERIALIZE*/    AD.TEXT_CONTRACT_NUMBER  AS FRAUD_CONTRACT,AD.DATE_DETECT,AD.CLASS, AD.TRIGGER_SOURCE, AD.FRAUD_TYPE AS NAME_SEC_FRAUD_MEANS,A.TEXT_USERNAME_EMPLOYEE
    FROM   ALL_CON  A
    JOIN AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS AD
    ON A.TEXT_USERNAME_EMPLOYEE =AD.TEXT_USERNAME_EMPLOYEE_SALES 
    WHERE AD.DATE_DECISION >=SYSDATE-180
    )
,CNT_FRAUD AS --20191107 nancy
(
SELECT 
F.TEXT_USERNAME_EMPLOYEE,COUNT(DISTINCT F.NAME_SEC_FRAUD_MEANS) AS CNT_FRAUD
FROM FRAUD_CONTRACT f--20200109 nancy
GROUP BY F.TEXT_USERNAME_EMPLOYEE
)

SELECT /*+MATERIALIZE*/  'SA' AS UNIT 
,A.TEXT_USERNAME_EMPLOYEE--A.text_username_employee_sales
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'382' AS CLASS
,'ACL online2offline - SA INVOLVED IN SERIOUS FRAUD' AS TRIGGER_SOURCE 
, LISTAGG('Contract ' || a.FRAUD_CONTRACT || ' was triggered by '|| A.TRIGGER_SOURCE|| ', on '|| TO_CHAR(a.date_detect, 'YYYY-MM-DD') ||', and confirmed as ' ||NAME_SEC_FRAUD_MEANS, '; ')
WITHIN GROUP ( ORDER BY A.DATE_DETECT) AS TRIGGER_VALUE   
,'SOFT' AS TRIGGER_TYPE
,A.SKP_CREDIT_CASE
,A.TEXT_CONTRACT_NUMBER 
FROM ALL_CON A
JOIN CNT_FRAUD CF ON A.TEXT_USERNAME_EMPLOYEE=CF.TEXT_USERNAME_EMPLOYEE
WHERE NOT EXISTS(SELECT * FROM AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION PRE WHERE PRE.SKP_CREDIT_CASE=A.SKP_CREDIT_CASE AND PRE.CLASS=382) AND CF.CNT_FRAUD>2
GROUP BY a.SKP_CREDIT_CASE , A.TEXT_CONTRACT_NUMBER, a.TEXT_USERNAME_EMPLOYEE;
COMMIT;

 INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '382_ACL_REGISTRATION',SYSDATE FROM DUAL;
COMMIT;

--========================================================================
--========================================================================

-- ACL 8  NANCY: ACL REGISTRATION 20181204--20190705--20190814--20190902--20191122
--========================================================================  
--======================================================================== 
INSERT /*+append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH FRAUD AS
(
SELECT DISTINCT CFST.SKP_CREDIT_CASE,ACCA.DATE_DECISION
--,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
,CASE WHEN EE.TEXT_IDENT_NUMBER ='XNA' THEN 'homer_o2o' ELSE EE.TEXT_USERNAME_EMPLOYEE END AS TEXT_USERNAME_EMPLOYEE_SALES---kate ke 20191127
,ACCA.TEXT_CONTRACT_NUMBER 
,TYP.NAME_FRAUD_SUSP_TYPE||' - '||
---nancy 20191213
CASE WHEN EE.SKP_BANK_ROLE=1962 THEN 'remote SA' WHEN EE.TEXT_IDENT_NUMBER<>'XNA' THEN 'online_to_offline' 
         WHEN AA.DTIME_3RD_BLOCK_SUBMIT<=TRUNC(SYSDATE) THEN 'online_to_online' 
           WHEN AA.DTIME_3RD_BLOCK_SUBMIT =DATE'3000-01-01'  THEN 'UNREACH_3BOD' ELSE NULL  END AS TRIGGER_SOURCE  
,DES.NAME_FRAUD_SUSP_DESC||CASE WHEN CFST.TEXT_FRAUD_SUSP_DESCRIPTION='0'THEN ''ELSE ': '||CFST.TEXT_FRAUD_SUSP_DESCRIPTION END AS TRIGGER_VALUE
,EE.TEXT_IDENT_NUMBER
,ROW_NUMBER()OVER(PARTITION BY CFST.SKP_CREDIT_CASE ORDER BY CFST.DTIME_VALID_FROM DESC ) AS ORD
FROM OWNER_DWH.F_CCASE_FRAUD_SUSP_TT CFST
JOIN OWNER_DWH.CL_FRAUD_SUSPICIOUS_STATUS STA ON STA.SKP_FRAUD_SUSPICIOUS_STATUS=CFST.SKP_FRAUD_SUSPICIOUS_STATUS 
AND STA.CODE_FRAUD_SUSP_STATUS='e' --ADD 'e' 20190103 ellen
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='382'
AND TRUNC(SYSDATE)-TRUNC(CFST.DTIME_VALID_FROM) <= EX.DAYS
JOIN OWNER_DWH.CL_FRAUD_SUSPICIOUS_DESC DES ON DES.SKP_FRAUD_SUSPICIOUS_DESC=CFST.SKP_FRAUD_SUSPICIOUS_DESC
JOIN OWNER_DWH.CL_FRAUD_SUSPICIOUS_TYPE TYP ON TYP.SKP_FRAUD_SUSPICIOUS_TYPE=CFST.SKP_FRAUD_SUSPICIOUS_TYPE
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA ON ACCA.SKP_CREDIT_CASE =CFST.SKP_CREDIT_CASE AND ACCA.DATE_DECISION >=SYSDATE-180
JOIN OWNER_DWH.DC_CREDIT_CASE DCC ON ACCA.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE AND ACCA.DATE_DECISION =DCC.DATE_DECISION AND ACCA.SKP_CREDIT_TYPE =DCC.SKP_CREDIT_TYPE 
--LEFT JOIN OWNER_DWH.F_APPLICATION_VCT_PROC_EX_AT AA ON ACCA.SKP_CREDIT_CASE =AA.SKP_CREDIT_CASE AND ACCA.DATE_DECISION =AA.DATE_DECISION ---Kate 20191127
JOIN OWNER_DWH.F_APPLICATION_TT AA ON ACCA.SKP_CREDIT_CASE =AA.SKP_CREDIT_CASE AND ACCA.DATE_DECISION =AA.DATE_DECISION AND AA.DATE_DECISION >=SYSDATE-180
JOIN OWNER_DWH.DC_EMPLOYEE EE
ON EE.SKP_EMPLOYEE=AA.SKP_EMPLOYEE_CONSULT_3RD_BLOCK
AND AA.SKP_CREDIT_TYPE =ACCA.SKP_CREDIT_TYPE AND AA.DATE_DECISION >= SYSDATE-180 AND AA.SKP_CREDIT_TYPE =2
WHERE DCC.SKP_CREDIT_TYPE =2 AND DCC.SKP_CREDIT_ACQUISITION_CHNL=6
AND CFST.TEXT_FRAUD_SUSP_DESCRIPTION!='用于后期分析'
AND ACCA.TEXT_USERNAME_EMPLOYEE_SALES NOT LIKE '1%'
)
,QUALITY_ERROR AS 
(
SELECT DISTINCT Q.SKP_CREDIT_CASE, Q.DATE_DECISION
--ACCA.TEXT_USERNAME_EMPLOYEE_SALES
,CASE WHEN EE.TEXT_IDENT_NUMBER ='XNA' THEN 'homer_o2o'ELSE EE.TEXT_USERNAME_EMPLOYEE END AS TEXT_USERNAME_EMPLOYEE_SALES---kate ke 20191127
, ACCA.TEXT_CONTRACT_NUMBER,TY.NAME_DOC_QUALITY_ERROR_TYPE||' - '||
---nancy 20191213
CASE WHEN EE.SKP_BANK_ROLE=1962 THEN 'remote SA' WHEN EE.TEXT_IDENT_NUMBER<>'XNA' THEN 'online_to_offline' 
         WHEN AA.DTIME_3RD_BLOCK_SUBMIT<=TRUNC(SYSDATE) THEN 'online_to_online' 
           WHEN AA.DTIME_3RD_BLOCK_SUBMIT =DATE'3000-01-01'  THEN 'UNREACH_3BOD' ELSE NULL  END AS TRIGGER_SOURCE,
DE.NAME_DOC_QUALITY_ERROR_DESC||': '||CO.NAME_DOC_QUALITY_ERROR_COMM AS TRIGGER_VALUE
,EE.TEXT_IDENT_NUMBER,
ROW_NUMBER()OVER(PARTITION BY Q.SKP_CREDIT_CASE ORDER BY CQ.DTIME_VALID_FROM DESC) AS ORD
FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD ACCA 
JOIN OWNER_DWH.DC_CREDIT_CASE DCC ON DCC.SKP_CREDIT_CASE=ACCA.SKP_CREDIT_CASE 
AND DCC.SKP_CREDIT_TYPE =ACCA.SKP_CREDIT_TYPE AND ACCA.DATE_DECISION >= SYSDATE-180
JOIN OWNER_DWH.F_CONTR_DOC_QUALITY_INFO_AT Q ON ACCA.SKP_CREDIT_CASE=Q.SKP_CREDIT_CASE
                                               AND ACCA.SKP_CREDIT_TYPE = Q.SKP_CREDIT_TYPE
                                               AND ACCA.DATE_DECISION >= SYSDATE-180
JOIN OWNER_DWH.F_CONTRACT_DOC_QUALITY_AT CQ ON  Q.SKP_CREDIT_CASE=CQ.SKP_CREDIT_CASE  
                                              AND Q.SKF_CONTRACT_DOC_QUALITY=CQ.SKF_CONTRACT_DOC_QUALITY
                                              AND Q.DATE_DECISION >= SYSDATE-180
                                              AND CQ.DTIME_VALID_TO>SYSDATE----freya 20191231
JOIN OWNER_DWH.CL_DOC_QUALITY_ERROR_TYPE TY ON Q.SKP_DOC_QUALITY_ERROR_TYPE=TY.SKP_DOC_QUALITY_ERROR_TYPE 
                                              AND Q.DATE_DECISION  >= SYSDATE-180
JOIN OWNER_DWH.CL_DOC_QUALITY_ERROR_DESC DE ON Q.SKP_DOC_QUALITY_ERROR_DESC=DE.SKP_DOC_QUALITY_ERROR_DESC
JOIN OWNER_DWH.CL_DOC_QUALITY_ERROR_COMM CO ON CO.SKP_DOC_QUALITY_ERROR_COMM=Q.SKP_DOC_QUALITY_ERROR_COMM
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='382'
AND TRUNC(SYSDATE)-TRUNC(CQ.DTIME_VALID_FROM) <= EX.DAYS
----kate ke 20191127
--LEFT JOIN OWNER_DWH.F_APPLICATION_VCT_PROC_EX_AT AA ON ACCA.SKP_CREDIT_CASE =AA.SKP_CREDIT_CASE AND ACCA.DATE_DECISION =AA.DATE_DECISION AND AA.SKP_CREDIT_TYPE =ACCA.SKP_CREDIT_TYPE
JOIN OWNER_DWH.F_APPLICATION_TT AA ON ACCA.SKP_CREDIT_CASE =AA.SKP_CREDIT_CASE AND ACCA.DATE_DECISION =AA.DATE_DECISION 
JOIN OWNER_DWH.DC_EMPLOYEE EE
ON AA.SKP_EMPLOYEE_CONSULT_3RD_BLOCK=EE.SKP_EMPLOYEE
WHERE DCC.SKP_CREDIT_TYPE =2 AND DCC.SKP_CREDIT_ACQUISITION_CHNL =6
AND (DE.NAME_DOC_QUALITY_ERROR_DESC IN ('整体缺失','客户面部照片') 
OR (DE.NAME_DOC_QUALITY_ERROR_DESC='面部照片' AND CO.NAME_DOC_QUALITY_ERROR_COMM!='无法识别')
OR CO.NAME_DOC_QUALITY_ERROR_COMM IN ('无','过期','非原件'))----freya 20200119
AND ACCA.TEXT_USERNAME_EMPLOYEE_SALES NOT LIKE '1%'
)
,OVERALL AS
(
SELECT * FROM FRAUD WHERE ORD=1
UNION 
SELECT * FROM QUALITY_ERROR WHERE ORD=1
)
,FINAL_RESULT AS
(
SELECT SKP_CREDIT_CASE, DATE_DECISION, TEXT_USERNAME_EMPLOYEE_SALES, TEXT_CONTRACT_NUMBER,
LISTAGG(TRIGGER_SOURCE, ';') WITHIN GROUP (ORDER BY TRIGGER_SOURCE) AS TRIGGER_SOURCE,
LISTAGG(TRIGGER_VALUE, ';') WITHIN GROUP (ORDER BY TRIGGER_VALUE) AS TRIGGER_VALUE
FROM OVERALL 
GROUP BY SKP_CREDIT_CASE, DATE_DECISION, TEXT_USERNAME_EMPLOYEE_SALES, TEXT_CONTRACT_NUMBER
)

SELECT 
'SA' AS UNIT
,TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'382' AS CLASS
,TRIGGER_SOURCE
,TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,SKP_CREDIT_CASE 
,TEXT_CONTRACT_NUMBER
FROM FINAL_RESULT;
COMMIT;
--========================================================================
--========================================================================

-- ACL 9 KATE -- One time high repayment amount  20190904 
--========================================================================  
--======================================================================== 
 INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '382_ACL-One time high repayment amount',SYSDATE FROM DUAL;
COMMIT;
--add function 20190910
 INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
  WITH BASE AS
(
SELECT /*+ no_merge */ CC.SKP_CREDIT_CASE , CC.DATE_DECISION , CC.SKP_CREDIT_TYPE ,CC.TEXT_CONTRACT_NUMBER,CC.SKP_CONTRACT
FROM OWNER_DWH.DC_CREDIT_CASE CC  
WHERE 1=1
AND CC.SKP_CREDIT_ACQUISITION_CHNL =6
AND CC.SKP_CREDIT_STATUS IN (2,5)--ACTIVE, SIGN
AND CC.SKP_CREDIT_TYPE =2
AND CC.DATE_DECISION >=TRUNC(SYSDATE)-360
)
,ACL AS 
(
SELECT /*+ no_merge */ DISTINCT CC.SKP_CREDIT_CASE , CC.DATE_DECISION , CC.SKP_CREDIT_TYPE ,CC.TEXT_CONTRACT_NUMBER , EX.MAX_DETECT
FROM BASE CC  
LEFT JOIN OWNER_DWH.F_COMPLAINT_AD CO
ON CC.SKP_CONTRACT=CO.SKP_CONTRACT AND CO.CODE_COMPLAINT_CASE_TYPE='FRAUD_INVESTIGATION' AND CO.DTIME_CREATED>=TRUNC(SYSDATE)-60 AND CO.SKP_CONTRACT<>-1
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='382'
WHERE 1=1
AND CO.SKp_CLIENT IS NULL
)-----Exclude complaint

,ACL_PAID AS 
(
SELECT /*+ USE_HASH(CC,PP,EE,FF,II,TT)*/  DISTINCT CC.SKP_CREDIT_CASE , CC.DATE_DECISION , CC.SKP_CREDIT_TYPE ,CC.TEXT_CONTRACT_NUMBER ,CC.MAX_DETECT
           ---,EE.TEXT_USERNAME_EMPLOYEE
           ---kate ke 20191127
           --,ACCA.TEXT_USERNAME_EMPLOYEE_SALES
           ,CASE WHEN EE.TEXT_IDENT_NUMBER ='XNA' THEN 'homer_o2o'ELSE EE.TEXT_USERNAME_EMPLOYEE END AS TEXT_USERNAME_EMPLOYEE_SALES
           ,FF.AMT_CREDIT ,FF.AMT_ANNUITY,FF.NAME_LAST_CLIENT
           ,II.AMT_OUTSTANDING_TOTAL,II.AMT_INSTALMENT_TOTAL
           ,FF.AMT_ANNUITY*NVL(FF.NUM_OBSERV_DEF0_MAXINST,0) AS SUM_SHOULD_PAY-----agr is null then regard it as 0
           ,CASE WHEN TT.FLAG_ER_W_INTEREST_APPLY_CURR= 'Y' OR TT.FLAG_ER_WO_INTEREST_APPLY_CURR = 'Y' THEN '提前还款'
                      END AS FLAG_ER
FROM ACL CC  
JOIN OWNER_DWH.F_APPLICATION_TT PP
ON CC.SKP_CREDIT_TYPE =PP.SKP_CREDIT_TYPE AND CC.DATE_DECISION =PP.DATE_DECISION AND PP.SKP_CREDIT_CASE =CC.SKP_CREDIT_CASE 
JOIN OWNER_DWH.DC_EMPLOYEE EE
ON PP.SKP_EMPLOYEE_CONSULT_3RD_BLOCK=EE.SKP_EMPLOYEE
JOIN DM_ANTIFRAUD.FT_AF_CREDIT_CASE_AD FF
ON FF.DATE_DECISION =CC.DATE_DECISION AND CC.SKP_CREDIT_TYPE =FF.SKP_CREDIT_TYPE AND FF.SKP_CREDIT_CASE =CC.SKP_CREDIT_CASE 
JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD II
ON CC.DATE_DECISION =II.DATE_DECISION AND CC.SKP_CREDIT_TYPE =II.SKP_CREDIT_TYPE AND CC.SKP_CREDIT_CASE =II.SKP_CREDIT_CASE 
JOIN OWNER_DWH.F_CONTRACT_BASE_AD TT
ON TT.DATE_DECISION =CC.DATE_DECISION AND CC.SKP_CREDIT_TYPE =TT.SKP_CREDIT_TYPE AND TT.SKP_CREDIT_CASE =CC.SKP_CREDIT_CASE 
WHERE 1=1
AND PP.SKP_CREDIT_TYPE =2
AND PP.DATE_DECISION >=TRUNC(SYSDATE)-360
AND TT.SKP_CREDIT_TYPE =2
AND TT.DATE_DECISION >=TRUNC(SYSDATE)-360
AND FF.SKP_CREDIT_TYPE =2
AND FF.DATE_DECISION >=TRUNC(SYSDATE)-360
AND II.SKP_CREDIT_TYPE =2
AND II.DATE_DECISION >=TRUNC(SYSDATE)-360
AND AMT_OUTSTANDING_TOTAL/AMT_INSTALMENT_TOTAL>=0.05
AND II.AMT_OUTSTANDING_TOTAL>1000
AND II.SKP_CREDIT_STATUS IN (2,5)
AND TT.SKP_CREDIT_STATUS IN (2,5)
AND FF.AMT_ANNUITY*NVL(FF.NUM_OBSERV_DEF0_MAXINST,0) <AMT_INSTALMENT_TOTAL-------exclude collection 
AND (II.FLAG_OVERDUE='N' OR II.FLAG_OVERDUE='Y' AND TRUNC(SYSDATE)-II.DATE_LAST_PAYMENT<90)
)

,RECENT_PAY AS 
(
SELECT /*+ HASH(CC,INC,PAY)*/  DISTINCT CC.*
           ,PAY.TEXT_SENDER_ACC_NUMBER,PAY.AMT_PAYMENT
           ,TRUNC(INC.DTIME_PAYMENT_RECEIVED) AS DATE_PAYMENT_RECEIVED
           ,PAY.NAME_SENDER AS NAME_SENDER 
           ,PAY.TEXT_SENDER_ACC_NUMBER AS BANK_ACC
           ,INC.DTIME_PAYMENT_RECEIVED
FROM ACL_PAID CC
    JOIN OWNER_DWH.F_INCOMING_PAYMENT_TT INC 
      ON INC.DATE_DECISION = CC.DATE_DECISION
     AND INC.SKP_CREDIT_TYPE = CC.SKP_CREDIT_TYPE
     AND CC.SKP_CREDIT_CASE = INC.SKP_CREDIT_CASE
     AND INC.DATE_PAYMENT_INCOMING >= AP_ANTIFRAUD.F_DATE_DETECT_382 - 3 -- NEW 20200110 fraya
     AND INC.DATE_PAYMENT_INCOMING < TRUNC(SYSDATE)-3
     AND INC.DATE_PAYMENT_INCOMING>=MAX_DETECT-3
    JOIN OWNER_DWH.F_INCOMING_PAYMENT_IMPORT_TT PAY 
      ON PAY.SKF_INCOMING_PAYMENT_IMPORT = INC.SKF_INCOMING_PAYMENT_IMPORT
     AND PAY.DATE_INSERTED >= F_DATE_DETECT_382 -3         -- NEW
     AND PAY.DATE_INSERTED < TRUNC(SYSDATE)-3
     AND PAY.DATE_INSERTED>=MAX_DETECT-3
   WHERE 1 = 1
     AND INC.SKP_CREDIT_TYPE = 2
     AND INC.DATE_DECISION >= TRUNC(SYSDATE) - 360
     AND PAY.CODE_STATUS = 'a' 
     AND CC.NAME_LAST_CLIENT<>PAY.NAME_SENDER   --20191107 kate
)
,CUT AS 
(
SELECT  --+ no_merge
              DISTINCT AA.DATE_PAYMENT_RECEIVED, AA.SKP_CREDIT_CASE , FLAG_ER, TEXT_USERNAME_EMPLOYEE_SALES AS TEXT_USERNAME_EMPLOYEE,TEXT_CONTRACT_NUMBER ,SUM_PAY,MAX_DETECT,SKP_CREDIT_TYPE ,DATE_DECISION 
              ,ROUND(SUM_PAY/AMT_CREDIT,2) AS SSHARE , ROUND(SUM_PAY/AMT_ANNUITY,2) AS RATE
              ,LISTAGG (TO_CHAR(DTIME_PAYMENT_RECEIVED,'YYYY-MM-DD HH:MM:SS')||'用'||BANK_ACC||'('||NAME_SENDER||')还款'||AMT_PAYMENT||'元',';') WITHIN GROUP (ORDER BY DTIME_PAYMENT_RECEIVED ASC)OVER (PARTITION BY SKP_CREDIT_CASE ) AS PAY_HIS
FROM (SELECT  SUM(FF.AMT_PAYMENT) OVER (PARTITION BY FF.SKP_CREDIT_CASE , FF.DATE_PAYMENT_RECEIVED) AS SUM_PAY
                         ,FF.*
            FROM RECENT_PAY  FF
            LEFT JOIN AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS FR
            ON FF.SKP_CREDIT_CASE =FR.SKP_CREDIT_CASE AND FR.CLASS='382' AND FR.TRIGGER_SOURCE='ACL - One time high repayment amount' AND FR.DATE_DETECT>DATE'2019-08-01' 
            WHERE FR.SKP_CREDIT_CASE IS NULL 
           )AA
WHERE 1=1
AND ROUND(SUM_PAY/AMT_CREDIT,2) >=0.2
AND ROUND(SUM_PAY/AMT_ANNUITY,1)>=4
)

,WECHAT AS  ------20200218 Kate
(
SELECT NN.*, LISTAGG (TO_CHAR(TRADE_DATE,'YYYY-MM-DD')||'通过'||REPAY_CHNL||'(' ||pay_phone||')还款'||total_repay_amount||'元',';') WITHIN GROUP (ORDER BY TRADE_DATE ASC )OVER (PARTITION BY SKP_CREDIT_CASE ) AS WECHAT_HIST
FROM (
SELECT TT.*, d.NAME_DIRECT_DEBIT_CHANNEL/*provider_name */AS REPAY_CHNL
            ,TEXT_LOGIN_MOBILE AS LOGIN_MOBILE_NUM
            ,CASE WHEN S.TEXT_LOGIN_MOBILE != S.TEXT_MOBILE OR  TEXT_LOGIN_MOBILE  IS NULL THEN '是' else '不是' end as payer_type
            ,T.DATE_WAPP_PAY_ORDER_COMPLETED AS TRADE_DATE,S.AMT_REPAYMENT_TOTAL AS total_repay_amount
            ,CASE WHEN S.TEXT_LOGIN_MOBILE IS NOT NULL THEN S.TEXT_LOGIN_MOBILE ELSE S.TEXT_MOBILE end as pay_phone
FROM CUT TT
JOIN OWNER_DWH.F_H5_PAYMENT_ORDER_DETAIL_TT T--OWNER_OPR.VH_BDB_T_TRADE_LIST T
ON TT.SKP_CREDIT_CASE =T.SKP_CREDIT_CASE AND TT.DATE_PAYMENT_RECEIVED=TRUNC(T.DATE_WAPP_PAY_ORDER_COMPLETED)--TRUNC(T.DTRADE_DATE)
JOIN OWNER_DWH.F_H5_PAYMENT_ORDER_HEAD_TT s--OWNER_OPR.VH_BDB_T_TRADE_SUM S
ON  S.SKF_H5_PAYMENT_ORDER_HEAD=T.SKF_H5_PAYMENT_ORDER_HEAD--t.id_trade_sum=s.id
JOIN  OWNER_DWH.Cl_Direct_Debit_Channel D --OWNER_OPR.VD_BDB_T_DD_PROVIDER D
ON  s.SKP_DIRECT_DEBIT_CHANNEL=d.SKP_DIRECT_DEBIT_CHANNEL--d.id=s.id_provider
WHERE T.NUM_WAPP_PAY_ORDER_STATUS=0 
AND S.TEXT_LOGIN_MOBILE!='XNA'--t.trade_status='0'--success
AND s.DTIME_INSERTED>=MAX_DETECT-3 --20200110 freya
AND t.DATE_WAPP_PAY_ORDER_COMPLETED>=MAX_DETECT-3) NN
)

SELECT DISTINCT 'SA' AS UNIT,
             CASE WHEN TT.TEXT_USERNAME_EMPLOYEE <> 'XNA' THEN TT.TEXT_USERNAME_EMPLOYEE ELSE 'homer_o2o' END as ID_ENTITY,
             TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT,
             TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD') AS WEEK_DETECT,
             '382' AS CLASS,
             'ACL - One time high repayment amount' AS TRIGGER_SOURCE,
             '本单合同客户一次性还款金额过高，在'||TO_CHAR(TT.DATE_PAYMENT_RECEIVED,'YYYY/MM/DD')||'一天内还款'||TT.SUM_PAY||'元，是每月应还款数额的'||TT.RATE||'倍，占贷款本金的'||TT.SSHARE*100||'%。'||'本单合同当前' 
             ||CASE WHEN TT.FLAG_ER IS NULL THEN '没有申请提前还款' ELSE '申请了' END ||TT.FLAG_ER||'。本次还款通过银行卡完成，'||TT.PAY_HIS ||'。'
             AS TRIGGER_VALUE        
             ,'SOFT' AS TRIGGER_TYPE
             ,TT.SKP_CREDIT_CASE
             ,TT.TEXT_CONTRACT_NUMBER
FROM CUT TT
LEFT JOIN WECHAT WE
ON TT.SKP_CREDIT_CASE =WE.SKP_CREDIT_CASE AND TT.DATE_DECISION =WE.DATE_DECISION AND TT.SKP_CREDIT_TYPE =WE.SKP_CREDIT_TYPE
WHERE WE.SKP_CREDIT_CASE IS NULL
UNION
SELECT DISTINCT 'SA' AS UNIT,
             CASE WHEN TT.TEXT_USERNAME_EMPLOYEE <> 'XNA' THEN TT.TEXT_USERNAME_EMPLOYEE ELSE 'homer_o2o' END as ID_ENTITY,
             TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT,
             TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD') AS WEEK_DETECT,
             '382' AS CLASS,
             'ACL - One time high repayment amount' AS TRIGGER_SOURCE,
             '本单合同客户一次性还款金额过高，在'||TO_CHAR(TT.DATE_PAYMENT_RECEIVED,'YYYY/MM/DD')||'一天内还款'||TT.SUM_PAY||'元，是每月应还款数额的'||TT.RATE||'倍，占贷款本金的'||TT.SSHARE*100||'%。'||'本单合同当前' 
             ||CASE WHEN TT.FLAG_ER IS NULL THEN '没有申请提前还款' ELSE '申请了' END ||TT.FLAG_ER||'。本次交易通过微信/支付宝/CAPP完成，相关号码'||LOGIN_MOBILE_NUM||payer_type||'客户本人号码，在' ||CASE WHEN TT.WECHAT_HIST IS NULL THEN TT.PAY_HIS ELSE TT.WECHAT_HIST END||'。'
             AS TRIGGER_VALUE        
             ,'SOFT' AS TRIGGER_TYPE
             ,TT.SKP_CREDIT_CASE
             ,TT.TEXT_CONTRACT_NUMBER
FROM WECHAT TT;
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;

PROCEDURE TRIGGER_402_INBOUNDING_CALL IS
  v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
  BEGIN
    -- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_402_INBOUNDING_CALL';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
                                            
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '402 INBOUNDING CALL',SYSDATE FROM DUAL;
COMMIT;

--20181204--20190614
INSERT /*+append*/INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH CALL AS
(
  SELECT /*+materialize*/
  SKP_CLIENT,
  CASE WHEN LENGTH(TEXT_REMOTE_PARTY) = 12 AND TEXT_REMOTE_PARTY LIKE '01%' AND TEXT_REMOTE_PARTY NOT LIKE '010%' THEN
  SUBSTR(TEXT_REMOTE_PARTY, 2) ELSE TEXT_REMOTE_PARTY END AS TEXT_REMOTE_PARTY,
  DTIME_CALL_START,
  SKP_CALL_AGENT
  FROM OWNER_DWH.F_CALL_DETAIL_TT TT
  JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS='402' AND TT.DATE_INSERTED>=EX.MAX_DETECT--20180607
  WHERE DATE_INSERTED >= TRUNC(SYSDATE) - 10
  AND SKP_CLIENT != -1
  AND SKP_CALL_EVENT_TYPE IN (35, 42, 53706)
  AND SKP_CALL_DIRECTION = 5
),

NOTE AS
(
SELECT /*+ordered use_hash(L,BU,CL)*/
DISTINCT BU.SKP_CREDIT_CASE,
BU.SKP_CREDIT_TYPE,
BU.DATE_DECISION,
BU.DATE_NOTE_CREATED,
LISTAGG(CL.NAME_NOTE_TYPE, ' | ') WITHIN GROUP(ORDER BY BU.DATE_NOTE_CREATED) OVER(PARTITION BY BU.SKP_CREDIT_CASE, L.TEXT_REMOTE_PARTY) AS NOTE_TYPE,
CASE WHEN L.TEXT_REMOTE_PARTY LIKE '%Switch%' THEN SUBSTR(L.TEXT_REMOTE_PARTY,INSTR(L.TEXT_REMOTE_PARTY, '::', 1, 1) + 2)
  ELSE L.TEXT_REMOTE_PARTY END AS TEXT_REMOTE_PARTY,
L.DTIME_CALL_START
FROM CALL L
JOIN OWNER_DWH.F_BUSINESS_NOTE_TT BU ON L.SKP_CLIENT = BU.SKP_CLIENT
AND TRUNC(L.DTIME_CALL_START) = BU.DATE_NOTE_CREATED
AND L.DTIME_CALL_START <= BU.DTIME_NOTE_CREATED
JOIN OWNER_DWH.CL_NOTE_TYPE CL ON BU.SKP_NOTE_TYPE = CL.SKP_NOTE_TYPE
WHERE BU.DATE_NOTE_CREATED >= TRUNC(SYSDATE) - 1
--AND BU.SKP_CREDIT_TYPE IN (1, 2)  ANNY 
AND (CL.NAME_NOTE_TYPE LIKE '%修改%' OR CL.NAME_NOTE_TYPE LIKE '%取消%' OR
CL.NAME_NOTE_TYPE LIKE '%申请%' OR CL.NAME_NOTE_TYPE LIKE '%恢复%' OR
CL.NAME_NOTE_TYPE LIKE '%确认%')
AND CL.NAME_NOTE_TYPE != '存折状态修改'
AND CL.NAME_NOTE_TYPE != '二次申请咨询'
AND CL.NAME_NOTE_TYPE NOT LIKE '原因%'
)

,DCC AS 
(
SELECT /*+ordered use_hash(N,DCC,DM,SAL,EM)*/
DISTINCT N.DATE_DECISION,
N.SKP_CREDIT_CASE,
N.SKP_CREDIT_TYPE,
N.NOTE_TYPE,
DCC.SKP_CLIENT,
DM.text_identity_card_number,
CASE WHEN DCC.SKP_PRODUCT_CHANNEL = 3 AND CHNL.CODE_CREDIT_ACQUISITION_CHNL IN ('POS', 'SMARTPOS') THEN    'POS_LOAN'
WHEN DCC.SKP_CREDIT_TYPE = 2 AND CHA.CODE_CHANNEL = 'SC002' AND CHNL.CODE_CREDIT_ACQUISITION_CHNL = 'O2O' THEN  'ACL'
WHEN CHA.CODE_CHANNEL = 'SC002' AND CHNL.CODE_CREDIT_ACQUISITION_CHNL IN ('POS', 'SMARTPOS')  THEN   'WALK_IN'
WHEN CHA.CODE_CHANNEL = 'SC001' AND CHNL.CODE_CREDIT_ACQUISITION_CHNL IN ('POS', 'SMARTPOS') THEN 'XSELL_POS'
WHEN CHA.CODE_CHANNEL = 'SC001' AND CHNL.CODE_CREDIT_ACQUISITION_CHNL = 'PHONE' THEN 'DEO'
WHEN CHA.CODE_CHANNEL = 'HP001' THEN 'HC_PAY'
WHEN CHNL.CODE_CREDIT_ACQUISITION_CHNL = 'CAPP' THEN 'CAPP'
WHEN CHA.CODE_CHANNEL = 'SC003' AND CHNL.CODE_CREDIT_ACQUISITION_CHNL = 'PHONE' THEN 'XSELL_TOP_UP' END AS CHANNEL, --ANNY 2018-11-30
SAL.TEXT_MAIN_CONTACT_CELLPHONE AS POS_PHONE,
SAL.NAME_SALESROOM AS POS_NAME,
SAL.CODE_SALESROOM AS POS_CODE,
DM.SKP_SALESROOM,
EM.TEXT_CELLPHONE AS SA_PHONE,
EM.NAME_LAST AS SA_NAME,
EM.TEXT_USERNAME_EMPLOYEE AS SA_ID,
DM.SKP_EMPLOYEE_CONSULTANT,
DM.TEXT_MOBILE_CLIENT AS CLIENT_PHONE,
DM.NAME_LAST_CLIENT AS CLIENT_NAME,
DM.TEXT_MOBILE_SPOUSE AS SPOUSE_PHONE,
DM.TEXT_MOBILE_PARENT AS PARENT_PHONE,
DM.TEXT_MOBILE_SUPPLY AS SUPPLY_PHONE,
DM.TEXT_PHONE_AREA_CODE_EMPLOYER || DM.TEXT_EMPLOYER_PHONE AS EMP_PHONE,
DT.SKP_TIPPER,DT.TEXT_IDENT_CARD_NUMBER,DT.NAME_TIPPER,
DT.TEXT_PHONE_NUMBER AS TIPPER_PHONE,
N.TEXT_REMOTE_PARTY,
LISTAGG(TO_CHAR(N.DTIME_CALL_START, 'YYYY/MM/DD HH24:MI:SS'),
' | ') WITHIN GROUP(ORDER BY N.DTIME_CALL_START) OVER(PARTITION BY N.SKP_CREDIT_CASE, N.TEXT_REMOTE_PARTY) AS DTIME_CALL
FROM NOTE N
JOIN OWNER_DWH.DC_CREDIT_CASE DCC
ON N.DATE_DECISION = DCC.DATE_DECISION
AND N.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE
AND N.SKP_CREDIT_TYPE = DCC.SKP_CREDIT_TYPE
JOIN OWNER_DWH.CL_CREDIT_ACQUISITION_CHNL CHNL
ON CHNL.SKP_CREDIT_ACQUISITION_CHNL = DCC.SKP_CREDIT_ACQUISITION_CHNL
JOIN OWNER_DWH.CL_PRODUCT_CHANNEL CHA
ON CHA.SKP_PRODUCT_CHANNEL = DCC.SKP_PRODUCT_CHANNEL
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD DM
ON N.DATE_DECISION = DM.DATE_DECISION
AND N.SKP_CREDIT_CASE = DM.SKP_CREDIT_CASE
AND N.SKP_CREDIT_TYPE = DM.SKP_CREDIT_TYPE
JOIN OWNER_DWH.DC_SALESROOM SAL
ON DM.SKP_SALESROOM = SAL.SKP_SALESROOM
JOIN OWNER_DWH.DC_EMPLOYEE EM
ON DM.SKP_EMPLOYEE_CONSULTANT = EM.SKP_EMPLOYEE
LEFT JOIN OWNER_DWH.F_TIPPER_COMMISSION_TT TCO
ON DCC.skp_contract=TCO.SKP_CONTRACT
AND DCC.skp_contract<>-1 --20200512
LEFT JOIN OWNER_DWH.F_TIPPER_CLIENT_TT TCL
ON TCO.SKF_TIPPER_CLIENT=TCL.SKF_TIPPER_CLIENT
LEFT JOIN OWNER_DWH.DC_TIPPER DT
ON DT.SKP_TIPPER=TCL.SKP_TIPPER
WHERE DCC.DATE_DECISION >= TRUNC(SYSDATE) - 90
AND DM.DATE_DECISION >= TRUNC(SYSDATE) - 90
),

--=========================================================
MATCH AS
(
SELECT /*+materialize*/
DCC.*,
CASE WHEN DCC.CLIENT_PHONE = DCC.TEXT_REMOTE_PARTY THEN 'CLIENT'
WHEN DCC.SPOUSE_PHONE = DCC.TEXT_REMOTE_PARTY THEN 'SPOUSE'
WHEN DCC.PARENT_PHONE = DCC.TEXT_REMOTE_PARTY THEN 'PARENT'
WHEN DCC.SUPPLY_PHONE = DCC.TEXT_REMOTE_PARTY THEN 'SUPPLY'
WHEN DCC.EMP_PHONE = DCC.TEXT_REMOTE_PARTY THEN 'EMPLOYER'
WHEN DCC.POS_PHONE = DCC.TEXT_REMOTE_PARTY THEN 'POS'
WHEN DCC.SA_PHONE = DCC.TEXT_REMOTE_PARTY THEN 'SA'
WHEN DCC.TIPPER_PHONE = DCC.TEXT_REMOTE_PARTY THEN 'TIPPER'
ELSE 'NO MATCH' END AS PHONE_MATCH
FROM DCC
WHERE CASE
WHEN DCC.CLIENT_PHONE = DCC.TEXT_REMOTE_PARTY THEN
'CLIENT'
WHEN DCC.SPOUSE_PHONE = DCC.TEXT_REMOTE_PARTY THEN
'SPOUSE'
WHEN DCC.PARENT_PHONE = DCC.TEXT_REMOTE_PARTY THEN
'PARENT'
WHEN DCC.SUPPLY_PHONE = DCC.TEXT_REMOTE_PARTY THEN
'SUPPLY'
WHEN DCC.EMP_PHONE = DCC.TEXT_REMOTE_PARTY THEN
'EMPLOYER'
WHEN DCC.POS_PHONE = DCC.TEXT_REMOTE_PARTY THEN
'POS'
WHEN DCC.SA_PHONE = DCC.TEXT_REMOTE_PARTY THEN
'SA'
WHEN DCC.TIPPER_PHONE = DCC.TEXT_REMOTE_PARTY THEN 'TIPPER'
ELSE
'NO MATCH'
END IN ('POS', 'SA', 'NO MATCH','TIPPER')
)

,MATCH2 AS
 (
SELECT /*+materialize use_hash(M1,DM)*/
M1.DATE_DECISION,
M1.SKP_CREDIT_CASE,
M1.SKP_CREDIT_TYPE,
M1.CHANNEL,
M1.TEXT_REMOTE_PARTY,
M1.DTIME_CALL,
'其它合同: ' || DM.TEXT_CONTRACT_NUMBER || ' client ' || DM.NAME_LAST_CLIENT AS MATCH_TYPE,
M1.NOTE_TYPE
FROM MATCH M1
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD DM
ON M1.TEXT_REMOTE_PARTY = DM.TEXT_MOBILE_CLIENT
AND M1.SKP_CREDIT_CASE != DM.SKP_CREDIT_CASE
AND M1.SKP_CLIENT != DM.SKP_CLIENT
AND M1.CLIENT_NAME != DM.NAME_LAST_CLIENT
WHERE DM.DATE_DECISION >= TRUNC(SYSDATE) - 90
AND DM.DATE_DECISION < TRUNC(SYSDATE)
AND DM.SKP_CREDIT_TYPE IN (1, 2)
    
UNION
    
SELECT /*+materialize use_hash(M1,DM)*/
M1.DATE_DECISION,
M1.SKP_CREDIT_CASE,
M1.SKP_CREDIT_TYPE,
M1.CHANNEL,
M1.TEXT_REMOTE_PARTY,
M1.DTIME_CALL,
'其它合同: ' || DM.TEXT_CONTRACT_NUMBER || ' spouse ' || DM.NAME_LAST_SPOUSE AS MATCH_TYPE,
M1.NOTE_TYPE
FROM MATCH M1
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD DM
ON M1.TEXT_REMOTE_PARTY = DM.TEXT_MOBILE_SPOUSE
AND M1.SKP_CREDIT_CASE != DM.SKP_CREDIT_CASE
AND M1.SKP_CLIENT != DM.SKP_CLIENT
AND M1.CLIENT_NAME != DM.NAME_LAST_SPOUSE
WHERE DM.DATE_DECISION >= TRUNC(SYSDATE) - 90
AND DM.DATE_DECISION < TRUNC(SYSDATE)
AND DM.SKP_CREDIT_TYPE IN (1, 2)
AND DM.TEXT_MOBILE_SPOUSE IS NOT NULL
    
UNION
    
SELECT /*+materialize use_hash(M1,DM)*/
M1.DATE_DECISION,
M1.SKP_CREDIT_CASE,
M1.SKP_CREDIT_TYPE,
M1.CHANNEL,
M1.TEXT_REMOTE_PARTY,
M1.DTIME_CALL,
'其它合同: ' || DM.TEXT_CONTRACT_NUMBER || ' parent ' || DM.NAME_LAST_PARENT AS MATCH_TYPE,
M1.NOTE_TYPE
FROM MATCH M1
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD DM
ON M1.TEXT_REMOTE_PARTY = DM.TEXT_MOBILE_PARENT
AND M1.SKP_CREDIT_CASE != DM.SKP_CREDIT_CASE
AND M1.SKP_CLIENT != DM.SKP_CLIENT
AND M1.CLIENT_NAME != DM.NAME_LAST_PARENT
WHERE DM.DATE_DECISION >= TRUNC(SYSDATE) - 90
AND DM.DATE_DECISION < TRUNC(SYSDATE)
AND DM.SKP_CREDIT_TYPE IN (1, 2)
AND DM.TEXT_MOBILE_PARENT IS NOT NULL
    
UNION
    
SELECT /*+materialize use_hash(M1,DM)*/
M1.DATE_DECISION,
M1.SKP_CREDIT_CASE,
M1.SKP_CREDIT_TYPE,
M1.CHANNEL,
M1.TEXT_REMOTE_PARTY,
M1.DTIME_CALL,
'其它合同: ' || DM.TEXT_CONTRACT_NUMBER || ' supply ' || DM.NAME_LAST_SUPPLY AS MATCH_TYPE,
M1.NOTE_TYPE
FROM MATCH M1
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD DM
ON M1.TEXT_REMOTE_PARTY = DM.TEXT_MOBILE_SUPPLY
AND M1.SKP_CREDIT_CASE != DM.SKP_CREDIT_CASE
AND M1.SKP_CLIENT != DM.SKP_CLIENT
AND M1.CLIENT_NAME != DM.NAME_LAST_SUPPLY
WHERE DM.DATE_DECISION >= TRUNC(SYSDATE) - 90
AND DM.DATE_DECISION < TRUNC(SYSDATE)
AND DM.SKP_CREDIT_TYPE IN (1, 2)
AND DM.TEXT_MOBILE_SUPPLY IS NOT NULL
    
UNION
    
SELECT /*+materialize use_hash(M1,DM)*/
M1.DATE_DECISION,
M1.SKP_CREDIT_CASE,
M1.SKP_CREDIT_TYPE,
M1.CHANNEL,
M1.TEXT_REMOTE_PARTY,
M1.DTIME_CALL,
'其它合同: ' || DM.TEXT_CONTRACT_NUMBER || ' employer ' || DM.NAME_EMPLOYER AS MATCH_TYPE,
M1.NOTE_TYPE
FROM MATCH M1
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD DM
ON M1.TEXT_REMOTE_PARTY =
(DM.TEXT_PHONE_AREA_CODE_EMPLOYER || DM.TEXT_EMPLOYER_PHONE)
AND M1.SKP_CREDIT_CASE != DM.SKP_CREDIT_CASE
AND M1.SKP_CLIENT != DM.SKP_CLIENT
AND M1.CLIENT_NAME != DM.NAME_EMPLOYER
WHERE DM.DATE_DECISION >= TRUNC(SYSDATE) - 90
AND DM.DATE_DECISION < TRUNC(SYSDATE)
AND DM.SKP_CREDIT_TYPE IN (1, 2)
AND DM.TEXT_PHONE_AREA_CODE_EMPLOYER || DM.TEXT_EMPLOYER_PHONE IS NOT NULL
    
UNION
    
SELECT /*+materialize use_hash(M1,EM)*/
M1.DATE_DECISION,
M1.SKP_CREDIT_CASE,
M1.SKP_CREDIT_TYPE,
M1.CHANNEL,
M1.TEXT_REMOTE_PARTY,
M1.DTIME_CALL,
CASE WHEN  M1.SKP_EMPLOYEE_CONSULTANT = EM.SKP_EMPLOYEE THEN '本单'  ELSE '其它' END || 
CASE WHEN EM.SKP_BANK_ROLE =45 THEN 'SA' 
WHEN  EM.SKP_BANK_ROLE IN (601,602,603,604,605,606,607,608,609,962,963,964,965,966,967,968,969,970,971,972)THEN 'TSO'
WHEN EM.SKP_BANK_ROLE =33 THEN 'RA' 
WHEN EM.SKP_BANK_ROLE IN (501,20,9) THEN 'DSM' 
ELSE CLBR.NAME_BANK_ROLE_EN  END 
 ||' OWNER' || EM.NAME_LAST || ' HOMER_ID: ' ||TO_CHAR(EM.TEXT_USERNAME_EMPLOYEE) AS MATCH_TYPE,
M1.NOTE_TYPE
FROM MATCH M1
JOIN OWNER_DWH.DC_EMPLOYEE EM
ON M1.TEXT_REMOTE_PARTY = EM.TEXT_CELLPHONE
--AND M1.SKP_EMPLOYEE_CONSULTANT != EM.SKP_EMPLOYEE
AND EM.CODE_EMPLOYEE_STATUS = 'a'
JOIN  OWNER_DWH.CL_BANK_ROLE CLBR ON EM.SKP_BANK_ROLE=CLBR.SKP_BANK_ROLE
WHERE 1=1
AND EM.TEXT_USERNAME_EMPLOYEE NOT LIKE '10%' 
AND EM.TEXT_USERNAME_EMPLOYEE NOT LIKE '13%' 
AND EM.NAME_LAST<>'test account' 
AND CLBR.NAME_BANK_ROLE_EN!='XNA'
AND M1.text_identity_card_number<>EM.TEXT_IDENT_NUMBER
AND CLBR.NAME_BANK_ROLE_EN!='XNA'

UNION

SELECT /*+materialize use_hash(M1,EM)*/
M1.DATE_DECISION,
M1.SKP_CREDIT_CASE,
M1.SKP_CREDIT_TYPE,
M1.CHANNEL,
M1.TEXT_REMOTE_PARTY,
M1.DTIME_CALL,
CASE WHEN  M1.SKP_EMPLOYEE_CONSULTANT = EM.SKP_EMPLOYEE THEN '本单'  ELSE '其它' END || 
CASE WHEN EM.SKP_BANK_ROLE =45 THEN 'SA' 
WHEN  EM.SKP_BANK_ROLE IN (601,602,603,604,605,606,607,608,609,962,963,964,965,966,967,968,969,970,971,972)THEN 'TSO'
WHEN EM.SKP_BANK_ROLE =33 THEN 'RA' 
WHEN EM.SKP_BANK_ROLE IN (501,20,9) THEN 'DSM' 
ELSE CLBR.NAME_BANK_ROLE_EN  END 
 ||' ' || P.PHONE_TYPE || ' HOMER_ID: ' ||TO_CHAR(EM.TEXT_USERNAME_EMPLOYEE) AS MATCH_TYPE,
M1.NOTE_TYPE
FROM MATCH M1
JOIN AP_ANTIFRAUD.F_SA_PHONE  P ON M1.TEXT_REMOTE_PARTY=P.PHONE
JOIN OWNER_DWH.DC_EMPLOYEE EM ON P.IDENT=EM.TEXT_IDENT_NUMBER
JOIN OWNER_DWH.CL_BANK_ROLE CLBR ON EM.SKP_BANK_ROLE=CLBR.SKP_BANK_ROLE
WHERE 1=1
AND EM.CODE_EMPLOYEE_STATUS = 'a'
AND (UPPER(SOURCE) IN ('IV', 'DATABASE') OR (UPPER(SOURCE)='VENDOR' AND UPPER(REMARK)='MATCH'))
AND EM.TEXT_USERNAME_EMPLOYEE NOT LIKE '10%' 
AND EM.TEXT_USERNAME_EMPLOYEE NOT LIKE '13%' 
AND EM.NAME_LAST<>'test account' 
AND CLBR.NAME_BANK_ROLE_EN!='XNA'
AND M1.text_identity_card_number<>EM.TEXT_IDENT_NUMBER
AND CLBR.NAME_BANK_ROLE_EN!='XNA'

UNION

SELECT /*+materialize use_hash(M1,SAL)*/
M1.DATE_DECISION,
M1.SKP_CREDIT_CASE,
M1.SKP_CREDIT_TYPE,
M1.CHANNEL,
M1.TEXT_REMOTE_PARTY,
M1.DTIME_CALL,
CASE WHEN  M1.SKP_SALESROOM = SAL.SKP_SALESROOM THEN '本单'  ELSE '其它' END || 'POS: ' || SAL.NAME_SALESROOM || ' POS_code ' ||
TO_CHAR(SAL.CODE_SALESROOM) AS MATCH_TYPE,
M1.NOTE_TYPE
FROM MATCH M1
JOIN OWNER_DWH.DC_SALESROOM SAL
ON M1.TEXT_REMOTE_PARTY = SAL.TEXT_MAIN_CONTACT_CELLPHONE
AND SAL.CODE_SALESROOM_STATUS = 'a'
AND M1.text_identity_card_number<>SAL.text_main_contact_ident --ANNY


UNION

SELECT /*+materialize use_hash(M1,SAL)*/
M1.DATE_DECISION,
M1.SKP_CREDIT_CASE,
M1.SKP_CREDIT_TYPE,
M1.CHANNEL,
M1.TEXT_REMOTE_PARTY,
M1.DTIME_CALL,
CASE WHEN SAL_SE.SKP_SELLER = SE.SKP_SELLER THEN '本单'  ELSE '其它' END || 'RETAILER BRP: ' || SE.NAME_BUSINESS_RESP_PERSON || ' RETAILER_code ' ||
TO_CHAR(SE.CODE_SELLER) AS MATCH_TYPE,
M1.NOTE_TYPE
FROM MATCH M1
JOIN OWNER_DWH.DC_SALESROOM SAL ON M1.SKP_SALESROOM=SAL.skp_salesroom
JOIN OWNER_DWH.DC_SELLER SAL_SE ON SAL.skp_seller=SAL_SE.SKP_SELLER 
JOIN OWNER_DWH.DC_SELLER SE ON M1.TEXT_REMOTE_PARTY=SE.TEXT_BUSINESS_PERSON_CELLPHONE
WHERE  SE.DATE_SELLER_ACT_END!=DATE'1000-01-01' AND SE.DATE_SELLER_ACT_END!=DATE'3000-01-01' --STILL ACTIVE
AND M1.text_identity_card_number<>SE.ID_BUSINESS_RESP_PERSON
AND SE.ID_BUSINESS_RESP_PERSON!='XNA'

UNION

SELECT /*+materialize use_hash(M1,SAL)*/
M1.DATE_DECISION,
M1.SKP_CREDIT_CASE,
M1.SKP_CREDIT_TYPE,
M1.CHANNEL,
M1.TEXT_REMOTE_PARTY,
M1.DTIME_CALL,
CASE WHEN SAL_SE.SKP_SELLER = SE.SKP_SELLER THEN '本单'  ELSE '其它' END || 'RETAILER main contact person: ' || SE.NAME_MAIN_SELLER_CONTACT || ' RETAILER_code ' ||
TO_CHAR(SE.CODE_SELLER) AS MATCH_TYPE,
M1.NOTE_TYPE
FROM MATCH M1
JOIN OWNER_DWH.DC_SALESROOM SAL ON M1.SKP_SALESROOM=SAL.skp_salesroom
JOIN OWNER_DWH.DC_SELLER SAL_SE ON SAL.skp_seller=SAL_SE.SKP_SELLER 
JOIN OWNER_DWH.DC_SELLER SE ON M1.TEXT_REMOTE_PARTY=SE.TEXT_MAIN_CONTACT_CELLPHONE AND SE.TEXT_BUSINESS_PERSON_CELLPHONE!=SE.TEXT_MAIN_CONTACT_CELLPHONE
WHERE  SE.DATE_SELLER_ACT_END!=DATE'1000-01-01' AND SE.DATE_SELLER_ACT_END!=DATE'3000-01-01' --STILL ACTIVE


UNION

SELECT /*+materialize use_hash(M1,DTI)*/
M1.DATE_DECISION,
M1.SKP_CREDIT_CASE,
M1.SKP_CREDIT_TYPE,
M1.CHANNEL,
M1.TEXT_REMOTE_PARTY,
M1.DTIME_CALL,
CASE WHEN DTI.SKP_TIPPER=M1.SKP_TIPPER THEN '本单'  ELSE '其它' END || 'TIPPER PHONE: ' || DTI.TEXT_PHONE_NUMBER || ' TIPPER_NAME: ' || DTI.NAME_TIPPER || ' TIPPER_ID: ' ||
TO_CHAR(DTI.TEXT_IDENT_CARD_NUMBER) AS MATCH_TYPE,
M1.NOTE_TYPE
FROM MATCH M1
JOIN OWNER_DWH.DC_TIPPER DTI ON M1.TEXT_REMOTE_PARTY=DTI.TEXT_PHONE_NUMBER
WHERE  DTI.SKP_TIPPER_STATUS=1
AND DTI.TEXT_IDENT_CARD_NUMBER<>M1.text_identity_card_number )

,

MATCH_FINAL AS
(SELECT /*+materialize*/
DISTINCT M2.DATE_DECISION,
M2.SKP_CREDIT_CASE,
M2.SKP_CREDIT_TYPE,
M2.CHANNEL,
M2.TEXT_REMOTE_PARTY,
' (' || M2.DTIME_CALL || ') ' || ' inbounding call to ' ||
M2.NOTE_TYPE || '  ==  ' AS TEXT,
LISTAGG(M2.MATCH_TYPE, ' / ') WITHIN GROUP(ORDER BY M2.SKP_CREDIT_CASE) OVER(PARTITION BY M2.SKP_CREDIT_CASE) AS TRIGGER_VALUE
FROM MATCH2 M2
)
  
SELECT DISTINCT
 'SA' AS UNIT,
TO_CHAR(A.TEXT_USERNAME_EMPLOYEE_SALES) AS TEXT_USERNAME_EMPLOYEE,
TO_CHAR(TRUNC(SYSDATE), 'YYYY/MM/DD') AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
'402' AS CLASS,
'INBOUNDING CALL MATCH NON-APPLICATION CONTACTS' AS TRIGGER_SOURCE,
F.CHANNEL || ': ' || TO_CHAR(F.TEXT_REMOTE_PARTY) ||
F.TEXT || F.TRIGGER_VALUE AS TRIGGER_VALUE,
'SOFT' AS TRIGGER_TYPE,
A.SKP_CREDIT_CASE,
A.TEXT_CONTRACT_NUMBER
FROM MATCH_FINAL F
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD A
ON F.DATE_DECISION = A.DATE_DECISION
AND F.SKP_CREDIT_CASE = A.SKP_CREDIT_CASE
AND F.SKP_CREDIT_TYPE = A.SKP_CREDIT_TYPE
WHERE A.SKP_CREDIT_CASE NOT IN
(
SELECT SKP_CREDIT_CASE
FROM AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WHERE DATE_DETECT != TO_CHAR(TRUNC(SYSDATE), 'YYYY/MM/DD')
AND CLASS = '402'
);
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;

-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;

--FR Results Not Same Person-ID fraud 503
--CLWC pay for others 483

PROCEDURE  TRIGGER_483_CLWC_PAY_OTHERS IS 

v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_483_CLWC_PAY_OTHERS';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '483 CLWC PAY FOR OTHERS',SYSDATE FROM DUAL;
COMMIT;
  --UPDATE CODE 20171211 ELLEN--20190709
INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH BASE AS 
(
SELECT  /*+ORDERED USE_HASH(CAMP,ACCA,TT,AA,EE,DCRA,EX) */  
              ACCA.DATE_DECISION
              ,ACCA.SKP_CONTRACT
              ,CAMP.DTIME_ACTIVITY_START
              ,CASE WHEN DCRA.SKP_CREDIT_ACQUISITION_CHNL =6 AND EE.TEXT_IDENT_NUMBER<>'XNA' THEN EE.TEXT_USERNAME_EMPLOYEE 
                        WHEN DCRA.SKP_CREDIT_ACQUISITION_CHNL =6 AND EE.TEXT_IDENT_NUMBER='XNA' THEN 'Homer_o2o'-----kate ke 20191127
                       ELSE ACCA.TEXT_USERNAME_EMPLOYEE_SALES END AS TEXT_USERNAME_EMPLOYEE
              ,CAMP.NAME_RESULT
              ,CAMP.NAME_RESULT_REASON
              ----kate k e20191201
              /*CASE WHEN DCRA.SKP_CREDIT_ACQUISITION_CHNL = 6 AND AA.flag_3rd_block_eligible <>'Y'  THEN 'CHAODAI'  */
              ,CASE WHEN DCRA.SKP_CREDIT_ACQUISITION_CHNL = 6 AND EE.TEXT_IDENT_NUMBER='XNA' THEN 'CHAODAI'
                        WHEN DCRA.SKP_PRODUCT_CHANNEL=2 AND DCRA.SKP_CREDIT_ACQUISITION_CHNL<>4 THEN 'WALK-IN'        
                        WHEN DCRA.SKP_CREDIT_ACQUISITION_CHNL=2 THEN 'TELE-SELL'
                        WHEN DCRA.SKP_PRODUCT_CHANNEL=1 THEN 'X-SELL' END AS LOAN_TYPE
              ,ACCA.SKP_CREDIT_CASE
              ,ACCA.TEXT_CONTRACT_NUMBER
              ,ACCA.TEXT_MOBILE_CLIENT
              ,ACCA.SKP_CLIENT
              --,AA.flag_3rd_block_eligible
              ,ROW_NUMBER()OVER(PARTITION BY CAMP.SKP_CREDIT_CASE  ORDER BY CAMP.DTIME_ACTIVITY_START DESC) AS RNK
FROM AP_ANTIFRAUD.WC_CASHLOAN CAMP
JOIN DM_ANTIFRAUD.FT_AF_CREDIT_CASE_AD ACCA ON  CAMP.SKP_CREDIT_CASE =ACCA.SKP_CREDIT_CASE 
JOIN OWNER_DWH.F_APPLICATION_TT TT ON acca.SKP_CREDIT_CASE =TT.SKP_CREDIT_CASE  AND ACCA.DATE_DECISION =TT.DATE_DECISION AND ACCA.SKP_CREDIT_TYPE =TT.SKP_CREDIT_TYPE 
-----kate ke 20191201
---LEFT JOIN owner_dwh.f_application_vct_proc_ex_at AA ON ACCA.SKP_CREDIT_CASE =AA.SKP_CREDIT_CASE AND ACCA.DATE_DECISION =AA.DATE_DECISION  AND AA.SKP_CREDIT_TYPE =ACCA.SKP_CREDIT_TYPE 
JOIN OWNER_DWH.DC_EMPLOYEE EE ON EE.SKP_EMPLOYEE=TT.SKP_EMPLOYEE_CONSULT_3RD_BLOCK
JOIN OWNER_DWH.DC_CREDIT_CASE DCRA ON ACCA.SKP_CREDIT_CASE=DCRA.SKP_CREDIT_CASE AND ACCA.SKP_CREDIT_TYPE=DCRA.SKP_CREDIT_TYPE AND ACCA.DATE_DECISION=DCRA.DATE_DECISION
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON  EX.CLASS=483
WHERE 
ACCA.DATE_DECISION>=TRUNC(SYSDATE)-30
AND CAMP.DTIME_ACTIVITY_START>=TRUNC(SYSDATE)-30
/*AND TRUNC(SYSDATE)-TRUNC(CAMP.DTIME_ACTIVITY_START)-3 BETWEEN 1 AND EX.DAYS*/--避免和投诉trigger重复，向前推三天 20181011
AND TRUNC(CAMP.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1   -------改为trigger前一天的数据 20200103 Yawen
AND DCRA.SKP_CREDIT_STATUS IN (2,3,5)
AND ACCA.SKP_CREDIT_TYPE=2
AND CAMP.NAME_RESULT_REASON='客户付款给他人'
)

SELECT  /*+ ORDERED USE_HASH(BB,DC,FF) */ 
'SA' AS UNIT
,BB.TEXT_USERNAME_EMPLOYEE
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'483' AS CLASS
,'CLWC-PAY FOR OTHERS' AS TRIGGER_SOURCE
,BB.NAME_RESULT||': '||BB.NAME_RESULT_REASON||'; WC time: '||TO_CHAR(BB.DTIME_ACTIVITY_START,'YYYY-MM-DD HH:MM:SS') ||'; LOAN_TYPE: '||BB.LOAN_TYPE AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,BB.SKP_CREDIT_CASE
,BB.TEXT_CONTRACT_NUMBER
FROM BASE BB
LEFT JOIN OWNER_DWH.F_COMPLAINT_AD DC ON DC.SKP_CONTRACT=BB.SKP_CONTRACT AND DC.CODE_COMPLAINT_CASE_TYPE='FRAUD_INVESTIGATION' AND DC.SKP_CONTRACT!=-1
LEFT JOIN AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FF ON BB.SKP_CREDIT_CASE =FF.SKP_CREDIT_CASE AND FF.DATE_DETECT>=TRUNC(SYSDATE)-3 AND CLASS=483
WHERE  RNK=1
AND TEXT_USERNAME_EMPLOYEE<>'Homer_o2o'
--AND flag_3rd_block_eligible<>'Y'
--AND DC.SKP_CONTRACT IS NULL  --20200103 Yawen Comment
AND FF.SKP_CREDIT_CASE IS NULL;
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;


PROCEDURE  TRIGGER_508_DSM_DEL IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_508_DSM_DEL';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '508 DSM DEL BASE',SYSDATE FROM DUAL;
COMMIT;

--20180608 ADD NEW TRIGGER
EXECUTE IMMEDIATE 'TRUNCATE TABLE AP_ANTIFRAUD.TRIGGER_DEL_DSM_BASE_CONTR' ;
INSERT INTO AP_ANTIFRAUD.TRIGGER_DEL_DSM_BASE_CONTR
------------pre   --25min  19min 10min
/*WITH TRIGGER_DEL_DSM_BASE_CONTR AS
(*/
    SELECT /*+ FULL(facc) FULL(CONTR) FULL(EE) USE_HASH(FACC CONTR EE) parallel(2) */   --YS MAO 20200120
    FACC.TEXT_USERNAME_SUPERIOR,ee.SKP_EMPLOYEE,ee.TEXT_USERNAME_EMPLOYEE,
    SUM( CASE WHEN TRUNC(SYSDATE) -CONTR.date_first_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=1 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN 1 ELSE 0 END) AS   cnt_contr_def_fpd10_l30d_pos,
    SUM( CASE WHEN TRUNC(SYSDATE) -CONTR.date_first_due BETWEEN 11 AND 26 AND CONTR.num_observ_def10_maxinst>=1 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN 1 ELSE 0 END) AS    cnt_contr_obs_fpd10_l30d_pos,
    SUM( CASE WHEN TRUNC(SYSDATE)-CONTR.date_second_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=2 AND CONTR.SKP_PRODUCT_CHANNEL=3THEN 1 ELSE 0 END ) AS cnt_contr_def_spd10_l30d_pos,
    SUM( CASE WHEN TRUNC(SYSDATE)-CONTR.date_second_due BETWEEN 11 AND 26 AND CONTR.num_observ_def0_maxinst>=2 AND CONTR.SKP_PRODUCT_CHANNEL=3THEN 1 ELSE 0 END ) AS cnt_contr_obs_spd10_l30d_pos,
    SUM( CASE WHEN TRUNC(SYSDATE)-CONTR.date_third_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=3 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN   1 ELSE 0 END) AS cnt_contr_def_tpd10_l30d_pos,
    SUM( CASE WHEN TRUNC(SYSDATE)-CONTR.date_third_due BETWEEN 11 AND 26 AND CONTR.num_observ_def10_maxinst>=3 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN   1 ELSE 0 END) AS cnt_contr_obs_tpd10_l30d_pos,
    SUM(  CASE WHEN TRUNC(SYSDATE)-CONTR.date_fourth_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=4 AND CONTR.SKP_PRODUCT_CHANNEL=3THEN  1 ELSE 0 END) as cnt_contr_def_qpd10_l30d_pos,
    SUM(  CASE WHEN TRUNC(SYSDATE)-CONTR.date_fourth_due BETWEEN 11 AND 26 AND CONTR.num_observ_def10_maxinst>=4 AND CONTR.SKP_PRODUCT_CHANNEL=3THEN  1 ELSE 0 END) as cnt_contr_obs_qpd10_l30d_pos,  
    SUM(  CASE WHEN TRUNC(SYSDATE)-CONTR.date_fifth_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=5 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN   1 ELSE 0 END) as cnt_contr_def_5pd10_l30d_pos,
    SUM(  CASE WHEN TRUNC(SYSDATE)-CONTR.date_fifth_due BETWEEN 11 AND 26 AND CONTR.num_observ_def10_maxinst>=5 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN   1 ELSE 0 END) as cnt_contr_obs_5pd10_l30d_pos,
    --DELETE XSELL
    SUM(CASE WHEN TRUNC(SYSDATE) -CONTR.date_first_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=1 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN  1 ELSE 0 END) AS cnt_contr_def_fpd10_l30d_wcl,
    SUM(CASE WHEN TRUNC(SYSDATE) -CONTR.date_first_due BETWEEN 11 AND 26 AND CONTR.num_observ_def10_maxinst>=1 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN  1 ELSE 0 END) AS cnt_contr_obs_fpd10_l30d_wcl,
    SUM( CASE WHEN TRUNC(SYSDATE)-CONTR.date_second_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=2 AND CONTR.SKP_PRODUCT_CHANNEL=2THEN 1 ELSE 0 END) AS cnt_contr_def_spd10_l30d_wcl,
    SUM( CASE WHEN TRUNC(SYSDATE)-CONTR.date_second_due BETWEEN 11 AND 26 AND CONTR.num_observ_def10_maxinst>=2 AND CONTR.SKP_PRODUCT_CHANNEL=2THEN 1 ELSE 0 END) AS cnt_contr_obs_spd10_l30d_wcl,
    SUM( CASE WHEN TRUNC(SYSDATE)-CONTR.date_third_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=3 AND CONTR.SKP_PRODUCT_CHANNEL=2THEN  1 ELSE 0 END) AS cnt_contr_def_tpd10_l30d_wcl,
    SUM( CASE WHEN TRUNC(SYSDATE)-CONTR.date_third_due BETWEEN 11 AND 26 AND CONTR.num_observ_def10_maxinst>=3 AND CONTR.SKP_PRODUCT_CHANNEL=2THEN  1 ELSE 0 END) AS cnt_contr_obs_tpd10_l30d_wcl,
    SUM( CASE WHEN TRUNC(SYSDATE)-CONTR.date_fourth_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=4 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN   1 ELSE 0 END) AS cnt_contr_def_qpd10_l30d_wcl,
    SUM( CASE WHEN TRUNC(SYSDATE)-CONTR.date_fourth_due BETWEEN 11 AND 26 AND CONTR.num_observ_def10_maxinst>=4 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN   1 ELSE 0 END) AS cnt_contr_obs_qpd10_l30d_wcl,
    SUM( CASE WHEN TRUNC(SYSDATE)-CONTR.date_fifth_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=5 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN  1 ELSE 0 END) AS cnt_contr_def_5pd10_l30d_wcl,
    SUM( CASE WHEN TRUNC(SYSDATE)-CONTR.date_fifth_due BETWEEN 11 AND 26 AND CONTR.num_observ_def10_maxinst>=5 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN  1 ELSE 0 END) AS cnt_contr_obs_5pd10_l30d_wcl,
         ---FPD30_L30D
    SUM( CASE WHEN  TRUNC(SYSDATE) -CONTR.date_first_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=1 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN    1 ELSE 0 END) AS cnt_contr_def_fpd30_l30d_pos,
    SUM( CASE WHEN  TRUNC(SYSDATE) -CONTR.date_first_due BETWEEN 31 AND 46 AND CONTR.num_observ_def30_maxinst>=1 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN    1 ELSE 0 END) AS cnt_contr_obs_fpd30_l30d_pos,
    SUM( CASE WHEN  TRUNC(SYSDATE)-CONTR.date_second_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=2 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN    1 ELSE 0 END) AS cnt_contr_def_spd30_l30d_pos,
    SUM( CASE WHEN  TRUNC(SYSDATE)-CONTR.date_second_due BETWEEN 31 AND 46 AND CONTR.num_observ_def30_maxinst>=2 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN    1 ELSE 0 END) AS cnt_contr_obs_spd30_l30d_pos,
    SUM(CASE WHEN TRUNC(SYSDATE)-CONTR.date_third_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=3 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN   1 ELSE 0 END) AS cnt_contr_def_tpd30_l30d_pos,
    SUM(CASE WHEN TRUNC(SYSDATE)-CONTR.date_third_due BETWEEN 31 AND 46 AND CONTR.num_observ_def30_maxinst>=3 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN   1 ELSE 0 END) AS cnt_contr_obs_tpd30_l30d_pos,
    SUM(CASE WHEN  TRUNC(SYSDATE)-CONTR.date_fourth_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=4 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN   1 ELSE 0 END) AS cnt_contr_def_qpd30_l30d_pos,
    SUM(CASE WHEN  TRUNC(SYSDATE)-CONTR.date_fourth_due BETWEEN 31 AND 46 AND CONTR.num_observ_def30_maxinst>=4 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN   1 ELSE 0 END) AS cnt_contr_obs_qpd30_l30d_pos,
    SUM(CASE WHEN  TRUNC(SYSDATE)-CONTR.date_fifth_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=5 AND CONTR.SKP_PRODUCT_CHANNEL=3THEN    1 ELSE 0 END) AS cnt_contr_def_5pd30_l30d_pos,
    SUM(CASE WHEN  TRUNC(SYSDATE)-CONTR.date_fifth_due BETWEEN 31 AND 46 AND CONTR.num_observ_def30_maxinst>=5 AND CONTR.SKP_PRODUCT_CHANNEL=3THEN    1 ELSE 0 END) AS cnt_contr_obs_5pd30_l30d_pos,
    --DELETE XSELL
    SUM( CASE WHEN  TRUNC(SYSDATE) -CONTR.date_first_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=1 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN    1 ELSE 0 END) AS cnt_contr_def_fpd30_l30d_wcl,
    SUM( CASE WHEN  TRUNC(SYSDATE) -CONTR.date_first_due BETWEEN 31 AND 46 AND CONTR.num_observ_def30_maxinst>=1 AND CONTR.SKP_PRODUCT_CHANNEL=2THEN    1 ELSE 0 END) AS cnt_contr_obs_fpd30_l30d_wcl,
    SUM( CASE WHEN  TRUNC(SYSDATE)-CONTR.date_second_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=2 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN    1 ELSE 0 END) AS cnt_contr_def_spd30_l30d_wcl,
    SUM( CASE WHEN  TRUNC(SYSDATE)-CONTR.date_second_due BETWEEN 31 AND 46 AND CONTR.num_observ_def30_maxinst>=2 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN    1 ELSE 0 END) AS cnt_contr_obs_spd30_l30d_wcl,
    SUM(CASE WHEN TRUNC(SYSDATE)-CONTR.date_third_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=3 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN   1 ELSE 0 END) AS cnt_contr_def_tpd30_l30d_wcl,
    SUM(CASE WHEN TRUNC(SYSDATE)-CONTR.date_third_due BETWEEN 31 AND 46 AND CONTR.num_observ_def30_maxinst>=3 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN   1 ELSE 0 END) AS cnt_contr_obs_tpd30_l30d_wcl,
    SUM(CASE WHEN  TRUNC(SYSDATE)-CONTR.date_fourth_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=4 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN   1 ELSE 0 END) AS cnt_contr_def_qpd30_l30d_wcl,
    SUM(CASE WHEN  TRUNC(SYSDATE)-CONTR.date_fourth_due BETWEEN 31 AND 46 AND CONTR.num_observ_def30_maxinst>=4 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN   1 ELSE 0 END) AS cnt_contr_obs_qpd30_l30d_wcl,
    SUM(CASE WHEN  TRUNC(SYSDATE)-CONTR.date_fifth_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=5 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN    1 ELSE 0 END) AS cnt_contr_def_5pd30_l30d_wcl,
    SUM(CASE WHEN  TRUNC(SYSDATE)-CONTR.date_fifth_due BETWEEN 31 AND 46 AND CONTR.num_observ_def30_maxinst>=5 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN    1 ELSE 0 END) AS cnt_contr_obs_5pd30_l30d_wcl

    FROM DM_ANTIFRAUD.F_Af_Credit_Case_Ad facc
    JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD CONTR ON FACC.skp_credit_case=CONTR.skp_credit_case
      AND FACC.SKP_CREDIT_TYPE=CONTR.skp_credit_type
      AND FACC.DATE_DECISION=CONTR.DATE_DECISION
      AND FACC.DATE_DECISION>=TRUNC(SYSDATE) -300 
      AND CONTR.DATE_DECISION>=TRUNC(SYSDATE) -300 
      AND FACC.date_first_instalment>=TRUNC(SYSDATE) -250
    JOIN OWNER_DWH.DC_EMPLOYEE EE ON  facc.text_username_superior=ee.TEXT_USERNAME_EMPLOYEE
    WHERE FACC.DATE_DECISION>=TRUNC(SYSDATE) -300
    AND FACC.text_username_employee_sales!='extreme' AND EE.CODE_EMPLOYEE_STATUS='a'
    AND FACC.text_username_employee_sales<>'rpos' --20200113
    AND FACC.text_username_employee_sales<>'XNA'
    AND ee.TEXT_USERNAME_EMPLOYEE<>'XNA'
      AND EE.TEXT_USERNAME_EMPLOYEE<>'5100017' --ONLINE_VIRTUAL_DSM_1
      AND EE.SKP_EMPLOYEE<>'36293114'--DXT Virtual DSM 20180627
      AND ee.SKP_BANK_ROLE NOT IN (1565,1962)--SALES_ALDI组长,Remote SA
    GROUP BY  FACC.TEXT_USERNAME_SUPERIOR,ee.SKP_EMPLOYEE,ee.TEXT_USERNAME_EMPLOYEE;
-- ),
 
-------1BASE    2PIVOT   3FRAUD CONTRACT
--------------1
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '508 DSM DEL',SYSDATE FROM DUAL;
COMMIT;
EXECUTE IMMEDIATE 'TRUNCATE TABLE AP_ANTIFRAUD.TRIGGER_DEL_DSM_CON' ;
INSERT INTO AP_ANTIFRAUD.TRIGGER_DEL_DSM_CON
WITH TRIGGER_DEL_DSM_BASE AS 
(
    SELECT  TSA.*,
    -------pos
    CASE WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_fpd10_l30d_pos,TSA.cnt_contr_obs_fpd10_l30d_pos,0.033)<0.0005*PARAMETER AND TSA.cnt_contr_def_fpd10_l30d_pos >=3 THEN 'SOFT' ELSE '' END  AS FPD10_L30D_TRIGGER_P,
    CASE  WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_fpd30_l30d_pos,TSA.cnt_contr_obs_fpd30_l30d_pos,0.022)<0.005*PARAMETER AND TSA.cnt_contr_def_fpd30_l30d_pos>=3 THEN 'SOFT' ELSE ''END  AS FPD30_L30D_TRIGGER_P,
    CASE WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_spd10_l30d_pos,TSA.cnt_contr_obs_spd10_l30d_pos,0.024)<0.0005*PARAMETER  AND TSA.cnt_contr_def_spd10_l30d_pos>=3 THEN 'SOFT'   ELSE '' END  AS SPD10_L30D_TRIGGER_P, 
    CASE WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_spd30_l30d_pos,TSA.cnt_contr_obs_spd30_l30d_pos,0.015)<0.005*PARAMETER  AND TSA.cnt_contr_def_spd30_l30d_pos>=3 THEN 'SOFT'   ELSE '' END  AS SPD30_L30D_TRIGGER_P,
    CASE WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_tpd10_l30d_pos,TSA.cnt_contr_obs_tpd10_l30d_pos,0.022)<0.0005*PARAMETER AND TSA.cnt_contr_def_tpd10_l30d_pos >=3 THEN 'SOFT' ELSE '' END AS TPD10_L30D_TRIGGER_P,
    CASE WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_tpd30_l30d_pos,TSA.cnt_contr_obs_tpd30_l30d_pos,0.014)<0.005*PARAMETER AND TSA.cnt_contr_def_tpd30_l30d_pos>=3 THEN 'SOFT' ELSE ''END   AS TPD30_L30D_TRIGGER_P,
    CASE WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_qpd10_l30d_pos,TSA.cnt_contr_obs_qpd10_l30d_pos,0.022)<0.0005*PARAMETER  AND TSA.cnt_contr_def_qpd10_l30d_pos >=3 THEN 'SOFT' ELSE '' END  AS QPD10_L30D_TRIGGER_P,
    CASE WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_qpd30_l30d_pos,TSA.cnt_contr_obs_qpd30_l30d_pos,0.015)<0.005*PARAMETER AND TSA.cnt_contr_def_qpd30_l30d_pos>=3 THEN 'SOFT' ELSE ''END AS QPD30_L30D_TRIGGER_P,
    CASE-- WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_5pd10_l30d_pos,TSA.cnt_contr_obs_5pd10_l30d_pos,0.030) <0.0001*0.2 AND TSA.cnt_contr_def_5pd10_l30d_pos>=4 THEN 'HARD'
        WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_5pd10_l30d_pos,TSA.cnt_contr_obs_5pd10_l30d_pos,0.02)<0.0005*PARAMETER AND TSA.cnt_contr_def_5pd10_l30d_pos>=3 THEN 'SOFT' ELSE '' END 
        AS F5PD10_L30D_TRIGGER_P,
    CASE --WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_5pd30_l30d_pos,TSA.cnt_contr_obs_5pd30_l30d_pos,0.02)<0.001*0.2 AND TSA.cnt_contr_def_5pd30_l30d_pos>4 THEN 'HARD' 
       WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_5pd30_l30d_pos,TSA.cnt_contr_obs_5pd30_l30d_pos,0.014)<0.005*PARAMETER AND TSA.cnt_contr_def_5pd30_l30d_pos>3 THEN 'SOFT'  ELSE'' END 
       AS F5PD30_L30D_TRIGGER_P,
    ---delete xcl
    ---wcl
    CASE WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_fpd10_l30d_wcl,TSA.cnt_contr_obs_fpd10_l30d_wcl,0.033)<0.0005*PARAMETER AND TSA.cnt_contr_def_fpd10_l30d_wcl >=3 THEN 'SOFT' ELSE '' END  AS FPD10_L30D_TRIGGER_W,
    CASE  WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_fpd30_l30d_wcl,TSA.cnt_contr_obs_fpd30_l30d_wcl,0.022)<0.005*PARAMETER AND TSA.cnt_contr_def_fpd30_l30d_wcl>=3 THEN 'SOFT' ELSE ''END  AS FPD30_L30D_TRIGGER_W,
    CASE WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_spd10_l30d_wcl,TSA.cnt_contr_obs_spd10_l30d_wcl,0.024)<0.0005*PARAMETER  AND TSA.cnt_contr_def_spd10_l30d_wcl>=3 THEN 'SOFT'   ELSE '' END  AS SPD10_L30D_TRIGGER_W, 
    CASE WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_spd30_l30d_wcl,TSA.cnt_contr_obs_spd30_l30d_wcl,0.015)<0.005*PARAMETER  AND TSA.cnt_contr_def_spd30_l30d_wcl>=3 THEN 'SOFT'   ELSE '' END  AS SPD30_L30D_TRIGGER_W,
    CASE WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_tpd10_l30d_wcl,TSA.cnt_contr_obs_tpd10_l30d_wcl,0.022)<0.0005*PARAMETER AND TSA.cnt_contr_def_tpd10_l30d_wcl >=3 THEN 'SOFT' ELSE '' END AS TPD10_L30D_TRIGGER_W,
    CASE WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_tpd30_l30d_wcl,TSA.cnt_contr_obs_tpd30_l30d_wcl,0.014)<0.005*PARAMETER AND TSA.cnt_contr_def_tpd30_l30d_wcl>=3 THEN 'SOFT' ELSE ''END   AS TPD30_L30D_TRIGGER_W,
    CASE WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_qpd10_l30d_wcl,TSA.cnt_contr_obs_qpd10_l30d_wcl,0.022)<0.0005*PARAMETER  AND TSA.cnt_contr_def_qpd10_l30d_wcl >=3 THEN 'SOFT' ELSE '' END  AS QPD10_L30D_TRIGGER_W,
    CASE WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_qpd30_l30d_wcl,TSA.cnt_contr_obs_qpd30_l30d_wcl,0.015)<0.005*PARAMETER AND TSA.cnt_contr_def_qpd30_l30d_wcl>=3 THEN 'SOFT' ELSE ''END   AS QPD30_L30D_TRIGGER_W,
    CASE WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_5pd10_l30d_wcl,TSA.cnt_contr_obs_5pd10_l30d_wcl,0.030) <0.0001*0.2 AND TSA.cnt_contr_def_5pd10_l30d_wcl>=4 THEN 'HARD'
        WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_5pd10_l30d_wcl,TSA.cnt_contr_obs_5pd10_l30d_wcl,0.02)<0.0005*PARAMETER AND TSA.cnt_contr_def_5pd10_l30d_wcl>=3 THEN 'SOFT' ELSE '' END 
        AS F5PD10_L30D_TRIGGER_W,
    CASE WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_5pd30_l30d_wcl,TSA.cnt_contr_obs_5pd30_l30d_wcl,0.02)<0.001*0.2 AND TSA.cnt_contr_def_5pd30_l30d_wcl>4 THEN 'HARD' 
       WHEN AP_ANTIFRAUD.P_VALUE(TSA.cnt_contr_def_5pd30_l30d_wcl,TSA.cnt_contr_obs_5pd30_l30d_wcl,0.014)<0.005*PARAMETER AND TSA.cnt_contr_def_5pd30_l30d_wcl>3 THEN 'SOFT'  ELSE'' END 
       AS F5PD30_L30D_TRIGGER_W                 
    FROM
    (
        SELECT    TSA.SKP_EMPLOYEE,  TSA.TEXT_USERNAME_SUPERIOR,TSA.TEXT_USERNAME_EMPLOYEE,
        SUM(TSA.cnt_contr_def_fpd10_l30d_pos) AS cnt_contr_def_fpd10_l30d_pos,
        SUM(TSA.cnt_contr_obs_fpd10_l30d_pos) AS  cnt_contr_obs_fpd10_l30d_pos,
        SUM(TSA.cnt_contr_def_fpd30_l30d_pos) AS  cnt_contr_def_fpd30_l30d_pos,
        SUM(TSA.cnt_contr_obs_fpd30_l30d_pos) AS cnt_contr_obs_fpd30_l30d_pos,
        SUM(TSA.cnt_contr_def_spd10_l30d_pos) AS cnt_contr_def_spd10_l30d_pos,
        SUM(TSA.cnt_contr_obs_spd10_l30d_pos) AS cnt_contr_obs_spd10_l30d_pos,
        SUM(TSA.cnt_contr_def_spd30_l30d_pos) AS cnt_contr_def_spd30_l30d_pos,
        SUM(TSA.cnt_contr_obs_spd30_l30d_pos) AS cnt_contr_obs_spd30_l30d_pos,
        SUM(TSA.cnt_contr_def_tpd10_l30d_pos) AS cnt_contr_def_tpd10_l30d_pos,
        SUM(TSA.cnt_contr_obs_tpd10_l30d_pos) AS cnt_contr_obs_tpd10_l30d_pos,
        SUM(TSA.cnt_contr_def_tpd30_l30d_pos) AS cnt_contr_def_tpd30_l30d_pos,
        SUM(TSA.cnt_contr_obs_tpd30_l30d_pos) AS cnt_contr_obs_tpd30_l30d_pos,
        SUM(TSA.cnt_contr_def_qpd10_l30d_pos) AS cnt_contr_def_qpd10_l30d_pos,
        SUM(TSA.cnt_contr_obs_qpd10_l30d_pos) AS cnt_contr_obs_qpd10_l30d_pos,
        SUM(TSA.cnt_contr_def_qpd30_l30d_pos) AS cnt_contr_def_qpd30_l30d_pos,
        SUM(TSA.cnt_contr_obs_qpd30_l30d_pos) AS cnt_contr_obs_qpd30_l30d_pos,
        SUM(TSA.cnt_contr_def_5pd10_l30d_pos) AS cnt_contr_def_5pd10_l30d_pos,
        SUM(TSA.cnt_contr_obs_5pd10_l30d_pos) AS cnt_contr_obs_5pd10_l30d_pos,
        SUM(TSA.cnt_contr_def_5pd30_l30d_pos) AS cnt_contr_def_5pd30_l30d_pos,
        SUM(TSA.cnt_contr_obs_5pd30_l30d_pos) AS cnt_contr_obs_5pd30_l30d_pos,
        --delete XSELL
        SUM(TSA.cnt_contr_def_fpd10_l30d_wcl) AS cnt_contr_def_fpd10_l30d_wcl,
        SUM(TSA.cnt_contr_obs_fpd10_l30d_wcl) AS  cnt_contr_obs_fpd10_l30d_wcl,
        SUM(TSA.cnt_contr_def_fpd30_l30d_wcl) AS  cnt_contr_def_fpd30_l30d_wcl,
        SUM(TSA.cnt_contr_obs_fpd30_l30d_wcl) AS cnt_contr_obs_fpd30_l30d_wcl,
        SUM(TSA.cnt_contr_def_spd10_l30d_wcl) AS cnt_contr_def_spd10_l30d_wcl,
        SUM(TSA.cnt_contr_obs_spd10_l30d_wcl) AS cnt_contr_obs_spd10_l30d_wcl,
        SUM(TSA.cnt_contr_def_spd30_l30d_wcl) AS cnt_contr_def_spd30_l30d_wcl,
        SUM(TSA.cnt_contr_obs_spd30_l30d_wcl) AS cnt_contr_obs_spd30_l30d_wcl,
        SUM(TSA.cnt_contr_def_tpd10_l30d_wcl) AS cnt_contr_def_tpd10_l30d_wcl,
        SUM(TSA.cnt_contr_obs_tpd10_l30d_wcl) AS cnt_contr_obs_tpd10_l30d_wcl,
        SUM(TSA.cnt_contr_def_tpd30_l30d_wcl) AS cnt_contr_def_tpd30_l30d_wcl,
        SUM(TSA.cnt_contr_obs_tpd30_l30d_wcl) AS cnt_contr_obs_tpd30_l30d_wcl,
        SUM(TSA.cnt_contr_def_qpd10_l30d_wcl) AS cnt_contr_def_qpd10_l30d_wcl,
        SUM(TSA.cnt_contr_obs_qpd10_l30d_wcl) AS cnt_contr_obs_qpd10_l30d_wcl,
        SUM(TSA.cnt_contr_def_qpd30_l30d_wcl) AS cnt_contr_def_qpd30_l30d_wcl,
        SUM(TSA.cnt_contr_obs_qpd30_l30d_wcl) AS cnt_contr_obs_qpd30_l30d_wcl,
        SUM(TSA.cnt_contr_def_5pd10_l30d_wcl) AS cnt_contr_def_5pd10_l30d_wcl,
        SUM(TSA.cnt_contr_obs_5pd10_l30d_wcl) AS cnt_contr_obs_5pd10_l30d_wcl,
        SUM(TSA.cnt_contr_def_5pd30_l30d_wcl) AS cnt_contr_def_5pd30_l30d_wcl,
        SUM(TSA.cnt_contr_obs_5pd30_l30d_wcl) AS cnt_contr_obs_5pd30_l30d_wcl,
        1 AS PARAMETER
        FROM TRIGGER_DEL_DSM_BASE_CONTR TSA 
        GROUP BY  TSA.SKP_EMPLOYEE,TSA.TEXT_USERNAME_SUPERIOR,TSA.TEXT_USERNAME_EMPLOYEE
    )TSA
),
 -----------2---------------
TRIGGER_DEL_DSM_PIVOT AS 
(
    SELECT  SKP_EMPLOYEE,TRIGGER_TYPE,TRIGGER_SOURCE
    FROM TRIGGER_DEL_DSM_BASE DEL
    UNPIVOT ( TRIGGER_TYPE FOR TRIGGER_SOURCE IN 
        ( FPD10_L30D_TRIGGER_P,
        FPD30_L30D_TRIGGER_P,
        SPD10_L30D_TRIGGER_P,
        SPD30_L30D_TRIGGER_P,
        TPD10_L30D_TRIGGER_P,
        TPD30_L30D_TRIGGER_P,
        QPD10_L30D_TRIGGER_P,
        QPD30_L30D_TRIGGER_P,
        F5PD10_L30D_TRIGGER_P,
        F5PD30_L30D_TRIGGER_P,
        FPD10_L30D_TRIGGER_W,
        FPD30_L30D_TRIGGER_W,
        SPD10_L30D_TRIGGER_W,
        SPD30_L30D_TRIGGER_W,
        TPD10_L30D_TRIGGER_W,
        TPD30_L30D_TRIGGER_W,
        QPD10_L30D_TRIGGER_W,
        QPD30_L30D_TRIGGER_W,
        F5PD10_L30D_TRIGGER_W,
        F5PD30_L30D_TRIGGER_W--XSELL
        ))
),
    
TRIGGER_DEL_DSM_CROSS_APPLY AS 
(
  SELECT * FROM 
  (
        SELECT 
        sou.SKP_EMPLOYEE AS DSM_SKP_EMPLOYEE, BB.TEXT_USERNAME_SUPERIOR AS DSM_TEXT_USERNAME ,BB.TEXT_USERNAME_EMPLOYEE AS DSM_CODE_EMPLOYEE,
        PRI.PRIORITY, PRI.TRIGGER_NAME AS TRIGGER_SOURCE,SOU.TRIGGER_TYPE,
        ROW_NUMBER()OVER(PARTITION BY sou.SKP_EMPLOYEE ORDER BY SOU.Trigger_Type,pri.priority)  AS seq,
        CASE
        WHEN PRI.TRIGGER_NAME='FPD10_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_FPD10_L30D_POS
        WHEN PRI.TRIGGER_NAME='FPD30_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_FPD30_L30D_POS
        WHEN PRI.TRIGGER_NAME='SPD10_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_SPD10_L30D_POS
        WHEN PRI.TRIGGER_NAME='SPD30_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_SPD30_L30D_POS
        WHEN PRI.TRIGGER_NAME='TPD10_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_TPD10_L30D_POS
        WHEN PRI.TRIGGER_NAME='TPD30_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_TPD30_L30D_POS
        WHEN PRI.TRIGGER_NAME='QPD10_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_QPD10_L30D_POS
        WHEN PRI.TRIGGER_NAME='QPD30_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_QPD30_L30D_POS
        WHEN PRI.TRIGGER_NAME='F5PD10_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_5PD10_L30D_POS
        WHEN PRI.TRIGGER_NAME='F5PD30_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_5PD30_L30D_POS
        WHEN PRI.TRIGGER_NAME='FPD10_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_FPD10_L30D_WCL
        WHEN PRI.TRIGGER_NAME='FPD30_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_FPD30_L30D_WCL
        WHEN PRI.TRIGGER_NAME='SPD10_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_SPD10_L30D_WCL
        WHEN PRI.TRIGGER_NAME='SPD30_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_SPD30_L30D_WCL
        WHEN PRI.TRIGGER_NAME='TPD10_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_TPD10_L30D_WCL
        WHEN PRI.TRIGGER_NAME='TPD30_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_TPD30_L30D_WCL
        WHEN PRI.TRIGGER_NAME='QPD10_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_QPD10_L30D_WCL
        WHEN PRI.TRIGGER_NAME='QPD30_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_QPD30_L30D_WCL
        WHEN PRI.TRIGGER_NAME='F5PD10_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_5PD10_L30D_WCL
        WHEN PRI.TRIGGER_NAME='F5PD30_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_5PD30_L30D_WCL
        --XSELL
        ELSE NULL
        END AS TRIGGER_DEL,

        CASE 
        WHEN PRI.TRIGGER_NAME='FPD10_L30D_TRIGGER_P'  THEN  CNT_CONTR_OBS_FPD10_L30D_POS
        WHEN PRI.TRIGGER_NAME='FPD30_L30D_TRIGGER_P'  THEN  CNT_CONTR_OBS_FPD30_L30D_POS
        WHEN PRI.TRIGGER_NAME='SPD10_L30D_TRIGGER_P'  THEN  CNT_CONTR_OBS_SPD10_L30D_POS
        WHEN PRI.TRIGGER_NAME='SPD30_L30D_TRIGGER_P'  THEN  CNT_CONTR_OBS_SPD30_L30D_POS
        WHEN PRI.TRIGGER_NAME='TPD10_L30D_TRIGGER_P'  THEN  CNT_CONTR_OBS_TPD10_L30D_POS
        WHEN PRI.TRIGGER_NAME='TPD30_L30D_TRIGGER_P'  THEN  CNT_CONTR_OBS_TPD30_L30D_POS
        WHEN PRI.TRIGGER_NAME='QPD10_L30D_TRIGGER_P'  THEN  CNT_CONTR_OBS_QPD10_L30D_POS
        WHEN PRI.TRIGGER_NAME='QPD30_L30D_TRIGGER_P'  THEN  CNT_CONTR_OBS_QPD30_L30D_POS
        WHEN PRI.TRIGGER_NAME='F5PD10_L30D_TRIGGER_P'  THEN  CNT_CONTR_OBS_5PD10_L30D_POS
        WHEN PRI.TRIGGER_NAME='F5PD30_L30D_TRIGGER_P'  THEN  CNT_CONTR_OBS_5PD30_L30D_POS
        WHEN PRI.TRIGGER_NAME='FPD10_L30D_TRIGGER_W'  THEN  CNT_CONTR_OBS_FPD10_L30D_WCL
        WHEN PRI.TRIGGER_NAME='FPD30_L30D_TRIGGER_W'  THEN  CNT_CONTR_OBS_FPD30_L30D_WCL
        WHEN PRI.TRIGGER_NAME='SPD10_L30D_TRIGGER_W'  THEN  CNT_CONTR_OBS_SPD10_L30D_WCL
        WHEN PRI.TRIGGER_NAME='SPD30_L30D_TRIGGER_W'  THEN  CNT_CONTR_OBS_SPD30_L30D_WCL
        WHEN PRI.TRIGGER_NAME='TPD10_L30D_TRIGGER_W'  THEN  CNT_CONTR_OBS_TPD10_L30D_WCL
        WHEN PRI.TRIGGER_NAME='TPD30_L30D_TRIGGER_W'  THEN  CNT_CONTR_OBS_TPD30_L30D_WCL
        WHEN PRI.TRIGGER_NAME='QPD10_L30D_TRIGGER_W'  THEN  CNT_CONTR_OBS_QPD10_L30D_WCL
        WHEN PRI.TRIGGER_NAME='QPD30_L30D_TRIGGER_W'  THEN  CNT_CONTR_OBS_QPD30_L30D_WCL
        WHEN PRI.TRIGGER_NAME='F5PD10_L30D_TRIGGER_W'  THEN  CNT_CONTR_OBS_5PD10_L30D_WCL
        WHEN PRI.TRIGGER_NAME='F5PD30_L30D_TRIGGER_W'  THEN  CNT_CONTR_OBS_5PD30_L30D_WCL
        --XSELL
        ELSE NULL END AS TRIGGER_AGR,

        CASE  
        WHEN  PRI.TRIGGER_NAME='FPD10_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_FPD10_L30D_POS/CNT_CONTR_OBS_FPD10_L30D_POS
        WHEN  PRI.TRIGGER_NAME='FPD30_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_FPD30_L30D_POS/CNT_CONTR_OBS_FPD30_L30D_POS
        WHEN  PRI.TRIGGER_NAME='SPD10_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_SPD10_L30D_POS/CNT_CONTR_OBS_SPD10_L30D_POS
        WHEN  PRI.TRIGGER_NAME='SPD30_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_SPD30_L30D_POS/CNT_CONTR_OBS_SPD30_L30D_POS
        WHEN  PRI.TRIGGER_NAME='TPD10_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_TPD10_L30D_POS/CNT_CONTR_OBS_TPD10_L30D_POS
        WHEN  PRI.TRIGGER_NAME='TPD30_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_TPD30_L30D_POS/CNT_CONTR_OBS_TPD30_L30D_POS
        WHEN  PRI.TRIGGER_NAME='QPD10_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_QPD10_L30D_POS/CNT_CONTR_OBS_QPD10_L30D_POS
        WHEN  PRI.TRIGGER_NAME='QPD30_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_QPD30_L30D_POS/CNT_CONTR_OBS_QPD30_L30D_POS
        WHEN  PRI.TRIGGER_NAME='F5PD10_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_5PD10_L30D_POS/CNT_CONTR_OBS_5PD10_L30D_POS
        WHEN  PRI.TRIGGER_NAME='F5PD30_L30D_TRIGGER_P'  THEN  CNT_CONTR_DEF_5PD30_L30D_POS/CNT_CONTR_OBS_5PD30_L30D_POS
        WHEN  PRI.TRIGGER_NAME='FPD10_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_FPD10_L30D_WCL/CNT_CONTR_OBS_FPD10_L30D_WCL
        WHEN  PRI.TRIGGER_NAME='FPD30_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_FPD30_L30D_WCL/CNT_CONTR_OBS_FPD30_L30D_WCL
        WHEN  PRI.TRIGGER_NAME='SPD10_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_SPD10_L30D_WCL/CNT_CONTR_OBS_SPD10_L30D_WCL
        WHEN  PRI.TRIGGER_NAME='SPD30_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_SPD30_L30D_WCL/CNT_CONTR_OBS_SPD30_L30D_WCL
        WHEN  PRI.TRIGGER_NAME='TPD10_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_TPD10_L30D_WCL/CNT_CONTR_OBS_TPD10_L30D_WCL
        WHEN  PRI.TRIGGER_NAME='TPD30_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_TPD30_L30D_WCL/CNT_CONTR_OBS_TPD30_L30D_WCL
        WHEN  PRI.TRIGGER_NAME='QPD10_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_QPD10_L30D_WCL/CNT_CONTR_OBS_QPD10_L30D_WCL
        WHEN  PRI.TRIGGER_NAME='QPD30_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_QPD30_L30D_WCL/CNT_CONTR_OBS_QPD30_L30D_WCL
        WHEN  PRI.TRIGGER_NAME='F5PD10_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_5PD10_L30D_WCL/CNT_CONTR_OBS_5PD10_L30D_WCL
        WHEN  PRI.TRIGGER_NAME='F5PD30_L30D_TRIGGER_W'  THEN  CNT_CONTR_DEF_5PD30_L30D_WCL/CNT_CONTR_OBS_5PD30_L30D_WCL
        --XSELL
        ELSE NULL END AS TRIGGER_DR
        FROM   TRIGGER_DEL_DSM_BASE  BB
        JOIN  TRIGGER_DEL_DSM_PIVOT SOU ON BB.SKP_EMPLOYEE=SOU.SKP_EMPLOYEE 
        JOIN  AP_ANTIFRAUD.TRIGGER_PRIORITY PRI ON PRI.TRIGGER_NAME=SOU.TRIGGER_SOURCE
    ) t
    WHERE t.seq=1
),
------3
CON AS 
 ( 
    SELECT 
    'SA' AS UNIT,
    CRO.DSM_CODE_EMPLOYEE AS ID_ENTITY,
    to_char(SYSDATE, 'yyyy/mm/dd') AS DATE_DETECT,
    TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' ) AS WEEK_DETECT,
    '508' AS CLASS,
    CRO.TRIGGER_SOURCE ,
    CRO.TRIGGER_DEL||'/'||CRO.TRIGGER_AGR AS TRIGGER_VALUE,
    CRO.TRIGGER_TYPE, 
    CRO.TRIGGER_DEL,
    CRO.TRIGGER_AGR,
    CONTR.skp_credit_case,
    CONTR.skp_employee_consultant,
    --FACC.text_username_employee_sales
    ---FPD10_L30D
    CASE WHEN CRO.TRIGGER_SOURCE='FPD10_L30D_TRIGGER_P' THEN CASE WHEN TRUNC(SYSDATE) -CONTR.date_first_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=1 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN FACC.text_contract_number ELSE '0'  END 
    WHEN CRO.TRIGGER_SOURCE='SPD10_L30D_TRIGGER_P' THEN CASE WHEN TRUNC(SYSDATE)-CONTR.date_second_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=2 AND CONTR.SKP_PRODUCT_CHANNEL=3THEN FACC.text_contract_number ELSE '0' END
    WHEN CRO.TRIGGER_SOURCE='TPD10_L30D_TRIGGER_P' THEN CASE WHEN TRUNC(SYSDATE)-CONTR.date_third_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=3 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN FACC.text_contract_number ELSE '0' END
    WHEN CRO.TRIGGER_SOURCE='QPD10_L30D_TRIGGER_P' THEN CASE WHEN TRUNC(SYSDATE)-CONTR.date_fourth_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=4 AND CONTR.SKP_PRODUCT_CHANNEL=3THEN FACC.text_contract_number ELSE '0' END 
    WHEN CRO.TRIGGER_SOURCE='F5PD10_L30D_TRIGGER_P' THEN CASE WHEN TRUNC(SYSDATE)-CONTR.date_fifth_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=5 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN FACC.text_contract_number ELSE '0' END
    --DELETE XSELL          
    WHEN CRO.TRIGGER_SOURCE='FPD10_L30D_TRIGGER_W' THEN CASE WHEN  TRUNC(SYSDATE) -CONTR.date_first_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=1 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN FACC.text_contract_number ELSE '0' END 
    WHEN CRO.TRIGGER_SOURCE='SPD10_L30D_TRIGGER_W' THEN CASE WHEN TRUNC(SYSDATE)-CONTR.date_second_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=2 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN FACC.text_contract_number ELSE '0' END
    WHEN CRO.TRIGGER_SOURCE='TPD10_L30D_TRIGGER_W' THEN CASE WHEN  TRUNC(SYSDATE)-CONTR.date_third_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=3 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN FACC.text_contract_number ELSE '0' END
    WHEN CRO.TRIGGER_SOURCE='QPD10_L30D_TRIGGER_W' THEN CASE WHEN  TRUNC(SYSDATE)-CONTR.date_fourth_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=4 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN FACC.text_contract_number ELSE '0' END    
    WHEN CRO.TRIGGER_SOURCE='F5PD10_L30D_TRIGGER_W' THEN CASE WHEN  TRUNC(SYSDATE)-CONTR.date_fifth_due BETWEEN 11 AND 26 AND CONTR.num_min_inst_def10_dd=5 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN FACC.text_contract_number ELSE '0' END
    ---FPD30_L30D
    WHEN CRO.TRIGGER_SOURCE='FPD30_L30D_TRIGGER_P' THEN CASE WHEN  TRUNC(SYSDATE) -CONTR.date_first_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=1 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN FACC.text_contract_number ELSE '0' END 
    WHEN CRO.TRIGGER_SOURCE='SPD30_L30D_TRIGGER_P' THEN CASE WHEN  TRUNC(SYSDATE)-CONTR.date_second_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=2 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN FACC.text_contract_number ELSE '0' END
    WHEN CRO.TRIGGER_SOURCE='TPD30_L30D_TRIGGER_P' THEN CASE WHEN TRUNC(SYSDATE)-CONTR.date_third_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=3 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN FACC.text_contract_number ELSE '0' END
    WHEN CRO.TRIGGER_SOURCE='QPD30_L30D_TRIGGER_P' THEN CASE WHEN  TRUNC(SYSDATE)-CONTR.date_fourth_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=4 AND CONTR.SKP_PRODUCT_CHANNEL=3 THEN FACC.text_contract_number ELSE '0' END 
    WHEN CRO.TRIGGER_SOURCE='F5PD30_L30D_TRIGGER_P' THEN CASE WHEN  TRUNC(SYSDATE)-CONTR.date_fifth_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=5 AND CONTR.SKP_PRODUCT_CHANNEL=3THEN FACC.text_contract_number ELSE '0' END 
    --DELETE XSELL
    WHEN CRO.TRIGGER_SOURCE='FPD30_L30D_TRIGGER_W' THEN CASE WHEN  TRUNC(SYSDATE) -CONTR.date_first_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=1 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN FACC.text_contract_number ELSE '0' END 
    WHEN CRO.TRIGGER_SOURCE='SPD30_L30D_TRIGGER_W' THEN CASE WHEN  TRUNC(SYSDATE)-CONTR.date_second_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=2 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN FACC.text_contract_number ELSE '0' END
    WHEN CRO.TRIGGER_SOURCE='TPD30_L30D_TRIGGER_W' THEN CASE WHEN  TRUNC(SYSDATE)-CONTR.date_third_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=3 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN FACC.text_contract_number ELSE '0' END
    WHEN CRO.TRIGGER_SOURCE='QPD30_L30D_TRIGGER_W' THEN CASE WHEN TRUNC(SYSDATE)-CONTR.date_fourth_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=4 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN FACC.text_contract_number ELSE '0' END 
    WHEN CRO.TRIGGER_SOURCE='F5PD30_L30D_TRIGGER_W' THEN CASE WHEN  TRUNC(SYSDATE)-CONTR.date_fifth_due BETWEEN 31 AND 46 AND CONTR.num_min_inst_def30_dd=5 AND CONTR.SKP_PRODUCT_CHANNEL=2 THEN FACC.text_contract_number ELSE '0' END 
    ELSE '0' END AS CONTRACT_NO
    FROM TRIGGER_DEL_DSM_CROSS_APPLY CRO 
    JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD FACC ON CRO.DSM_TEXT_USERNAME=FACC.TEXT_USERNAME_SUPERIOR
    JOIN OWNER_DWH.F_CONTRACT_INSHEAD_AD CONTR  ON CONTR.skp_credit_case=FACC.skp_credit_case AND CONTR.skp_credit_type=FACC.SKP_CREDIT_TYPE AND CONTR.date_decision=FACC.DATE_DECISION 
    WHERE   FACC.DATE_DECISION>=TRUNC(SYSDATE) -300 AND FACC.date_first_instalment>=TRUNC(SYSDATE) -250
)
SELECT * 
FROM CON WHERE CON.CONTRACT_NO !=0;
COMMIT;

--删除已trigger过的，并且重复率>=0.75
DELETE FROM AP_ANTIFRAUD.TRIGGER_DEL_DSM_CON CUR
WHERE EXISTS
(
    SELECT 1 FROM 
    (  
        SELECT aa.TEXT_USERNAME_SUPERIOR,aa.trigger_source,aa.overlap,bb.triggered,aa.overlap/bb.triggered as overlap_ratio,bb.triggered-aa.overlap as new_triggered
        FROM 
        (
              SELECT PRE.TEXT_USERNAME_SUPERIOR,CUR.TRIGGER_SOURCE,COUNT(DISTINCT CUR.SKP_CREDIT_CASE ) AS overlap
              FROM  
              (
                  SELECT DISTINCT TEXT_USERNAME_SUPERIOR,SKP_CREDIT_CASE,TEXT_CONTRACT_NUMBER,TRIGGER_SOURCE 
                  FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS WHERE CLASS IN ('1','3','11','12','508') AND DATE_DETECT<=TRUNC(SYSDATE)
              ) PRE
              JOIN AP_ANTIFRAUD.TRIGGER_DEL_DSM_CON CUR ON PRE.TEXT_USERNAME_SUPERIOR=CUR.ID_ENTITY AND PRE.SKP_CREDIT_CASE=CUR.SKP_CREDIT_CASE
              --AND (SUBSTR(CUR.TRIGGER_SOURCE,1,5)='WCALL' AND SUBSTR(PRE.TRIGGER_SOURCE,1,5)='WCALL' OR SUBSTR(CUR.TRIGGER_SOURCE,1,5)<>'WCALL' AND SUBSTR(PRE.TRIGGER_SOURCE,1,5)<>'WCALL')
              --  where cur.id_entity='584977'     
              GROUP BY PRE.TEXT_USERNAME_SUPERIOR,CUR.TRIGGER_SOURCE
        )AA
        JOIN
        (
            SELECT ID_ENTITY AS  TEXT_USERNAME_EMPLOYEE ,TRIGGER_SOURCE, COUNT(*) AS triggered
            FROM AP_ANTIFRAUD.TRIGGER_DEL_DSM_CON CUR --
            GROUP BY ID_ENTITY,TRIGGER_SOURCE
        )bb ON aa.TEXT_USERNAME_SUPERIOR=bb.TEXT_USERNAME_EMPLOYEE AND aa.TRIGGER_SOURCE=bb.TRIGGER_SOURCE 
        WHERE aa.overlap/bb.triggered>=0.75 OR bb.triggered-aa.overlap<=1
    ) ov 
WHERE  CUR.ID_ENTITY=ov.TEXT_USERNAME_SUPERIOR AND CUR.TRIGGER_SOURCE=ov.trigger_source
);
COMMIT;


INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
SELECT 
AA.UNIT
,ID_ENTITY
,DATE_DETECT
,WEEK_DETECT
,CLASS
,TRIGGER_SOURCE
,TRIGGER_VALUE
,TRIGGER_TYPE
,SKP_CREDIT_CASE
,CONTRACT_NO
FROM 
(
SELECT CON.TRIGGER_DEL/CON.TRIGGER_AGR AS RATE_R,DENSE_RANK() OVER(ORDER BY CON.TRIGGER_DEL/CON.TRIGGER_AGR DESC) AS RANK_R,CON.*
FROM AP_ANTIFRAUD.TRIGGER_DEL_DSM_CON CON
)AA
WHERE AA.RANK_R<=5;

owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;

PROCEDURE  TRIGGER_509_TSO_COMPLAINT IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_509_TSO_COMPLAINT';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '509 TSO COMPLAINT',SYSDATE FROM DUAL;
COMMIT;
------new logic from 20180628--------

INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
With base as (
select
act.SKP_CLIENT
,act.TEXT_STAGE_RESULT_NOTE as RESULT_NOTE
,cca.SKF_CAMPAIGN_CLIENT 
,acc.NAME_LAST 
,cca.DTIME_INSERTED AS DTIME_COMPLAINT
,cs.NAME_CAMPAIGN_PROCESS_STEP AS CAMPAIGN_STEP
,act.DTIME_ACTIVITY_START
,act.DTIME_ACTIVITY_END
,ar.NAME_RESULT AS CAMPAIGN_RESULT
,ar.NAME_RESULT_REASON AS CAMPAIGN_RESULT_DETAIL
,acc.TEXT_BIRTH_NUMBER
,i.name_campaign_info AS name
,case when cii.NAME_CAMPAIGN_INFO_ITEM is not null then cii.NAME_CAMPAIGN_INFO_ITEM
        when a.TEXT_ACTIVITY_INFO is not null theN a.TEXT_ACTIVITY_INFO
          when a.NUM_ACTIVITY_INFO is not null then to_char(a.NUM_ACTIVITY_INFO)
          when a.DTIME_ACTIVITY_INFO is not null then  to_char(a.DTIME_ACTIVITY_INFO, 'yyyy-mm-dd') else null end Answer 
,em.NAME_LAST AS OPERATOR 
from OWNER_DWH.DC_CAMPAIGN_ACCOUNT acc
join OWNER_DWH.F_CAMPAIGN_CLIENT_AT cca 
on acc.SKP_CAMPAIGN_ACCOUNT = cca.SKP_CAMPAIGN_ACCOUNT and  cca.DTIME_INSERTED> trunc(sysdate)-20
and cca.SKP_CAMPAIGN in ('53', '54', '144917', '145617')---客户关怀
join OWNER_DWH.F_CAMPAIGN_CLIENT_ACTIVITY_TT act
on act.SKF_CAMPAIGN_CLIENT = cca.SKF_CAMPAIGN_CLIENT
 and  act.DTIME_ACTIVITY_START  >trunc(sysdate)-20---改时间
left join OWNER_DWH.CL_CAMPAIGN_ACTIVITY_RESULT ar
on ar.SKP_CAMPAIGN_ACTIVITY_RESULT = act.SKP_CAMPAIGN_ACTIVITY_RESULT
join OWNER_DWH.DC_CAMPAIGN_PROCESS_STEP cs
on cs.SKP_CAMPAIGN_PROCESS_STEP = act.SKP_CAMPAIGN_PROCESS_STEP
left join OWNER_DWH.F_CAMPAIGN_ACTIVITY_INFO_TT a
on a.SKF_CAMPAIGN_CLIENT_ACTIVITY = act.SKF_CAMPAIGN_CLIENT_ACTIVITY
left join OWNER_DWH.CL_CAMPAIGN_INFO i
on i.skp_campaign_info = a.SKP_CAMPAIGN_INFO
left join OWNER_DWH.F_CAMPAIGN_ACT_INFO_ITEM_TT aii
on aii.SKF_CAMPAIGN_ACTIVITY_INFO = a.SKF_CAMPAIGN_ACTIVITY_INFO
left join OWNER_DWH.CL_CAMPAIGN_INFO_ITEM cii
on cii.SKP_CAMPAIGN_INFO_ITEM = aii.SKP_CAMPAIGN_INFO_ITEM
left join OWNER_DWH.DC_EMPLOYEE em
on em.SKP_EMPLOYEE = act.SKP_EMPLOYEE_SOLVED
)
,BASE2 AS (
SELECT DISTINCT *
FROM (
select DISTINCT SKP_CLIENT
,SKF_CAMPAIGN_CLIENT
,NAME_LAST 
,TEXT_BIRTH_NUMBER
,DTIME_COMPLAINT
,DTIME_ACTIVITY_START
,DTIME_ACTIVITY_END
,CAMPAIGN_STEP
,CAMPAIGN_RESULT 
,CAMPAIGN_RESULT_DETAIL
,Name
,ANSWER 
,OPERATOR
,RESULT_NOTE
from base
)
PIVOT(MAX(ANSWER) FOR Name IN ('客户合同号' as CONTRACT_NO,
                                                     'C10.1投诉详情' AS COMPLAIN_DETAIL,                                              
                                                      'C4投诉来源 Complaint Source' as C_Source,
                                                      'Ca投诉内容 Complaint contents' as C_contents,
                                                      'Ca转其他部门调查'as C_dep_follow
                                                      )
                                                      )
WHERE TRUNC(DTIME_ACTIVITY_START) !=date '3000-01-01'
---生成完2月份的数后加上的
and INSTR(CAMPAIGN_RESULT,'错误记录')=0
AND OPERATOR!='HOMER'
)


SELECT
UNIT,ID_ENTITY,DATE_DETECT,WEEK_DETECT,CLASS,trigger_source,trigger_value,TRIGGER_TYPE,skp_credit_case,CONTRACT_NO
FROM (
select distinct 'CFC-客户关怀' AS CAMPAIGN_NAME
,TTC.DTIME_COMPLAINT AS EVENT_DATE
,DCC.date_ratif
,TTC.SKP_CLIENT
,TTC.TEXT_BIRTH_NUMBER
,TTC.NAME_LAST
,TTC.COMPLAIN_DETAIL 
,ttc.c_contents
,TTC.RESULT_NOTE
,'' AS C1_NEED_IV
,'' AS CODE_ACTUAL_STAGE_TYPE
,TTC.C_SOURCE
,ROW_NUMBER()OVER(PARTITION BY SKF_CAMPAIGN_CLIENT ORDER BY DTIME_ACTIVITY_START DESC ) SEQ
,'' AS C10_COMPLAIN_DETAIL_2
,'' AS C22_CLIENT_CALLIN_NO
,''AS CO_CLIENT_OUTCALL_NO
,'SA' AS UNIT
,facc.text_username_employee_sales as ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,CASE WHEN DCC.SKP_CREDIT_ACQUISITION_CHNL =2 THEN '509' WHEN DCC.SKP_CREDIT_TYPE = 4 THEN '513' ELSE '515'  END AS CLASS
,c_contents as trigger_source 
,C_source||+'|||'||result_note as trigger_value
,'SOFT' AS TRIGGER_TYPE
,DCC.skp_credit_case
,TTC.CONTRACT_NO
from BASE2 ttc
join owner_dwh.dc_credit_case dcc on dcc.text_contract_number=ttc.contract_no and ttc.skp_client=dcc.skp_client
join DM_ANTIFRAUD.f_Af_Credit_Case_Ad facc on facc.skp_credit_case=dcc.SKP_CREDIT_CASE and facc.date_decision=dcc.DATE_DECISION
join  AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON  EX.CLASS=509 and ttc.DTIME_ACTIVITY_START>=EX.MAX_DETECT
where skf_campaign_client in (
      select ttc.skf_campaign_client
      from BASE2 ttc
      where ttc.campaign_step='需内部调查' and (ttc.campaign_result='其他部门调查'and ttc.campaign_result_detail IN ('风控部','风控反欺诈组')--20180615
      or ttc.C_dep_follow in ('风控部','风控反欺诈组'))
      and trunc(ttc.dtime_activity_start)>=trunc(sysdate)-20
)
and campaign_step='24H回访' and campaign_result='需投诉调查'
and c_contents not like '%否认申请%' and c_contents  like '%欺诈调查%' 
and (DCC.SKP_CREDIT_ACQUISITION_CHNL=2 or DCC.SKP_CREDIT_TYPE = 4 )
)
WHERE SEQ=1;

owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;


PROCEDURE  TRIGGER_511_SAME_PHONE_LOW_FR IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_511_SAME_PHONE_LOW_FR';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '511 SAME PHONE WITH LOW FR',SYSDATE FROM DUAL;
COMMIT;

------被拒40分以下所有phone-----
INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION

WITH BADFR AS 
(
    SELECT SKP_CREDIT_CASE,
    DATE_DECISION,
    TEXT_IDENTITY_CARD_NUMBER,
    NUM_FACE_RECOGNITION_SCORE,
    MOBILE,
    MOBILE_TYPE,
    TEXT_CONTRACT_NUMBER,
    TEXT_USERNAME_EMPLOYEE_SALES
    FROM
     (
        SELECT /*+MATERIALIZE USE_HASH(VI,AD)*/ AD.SKP_CREDIT_CASE
        ,AD.DATE_DECISION
        ,AD.TEXT_CONTRACT_NUMBER
        ,AD.TEXT_IDENTITY_CARD_NUMBER
        ,AD.TEXT_MOBILE_CLIENT
        ,AD.TEXT_MOBILE_PARENT
        ,AD.TEXT_MOBILE_SPOUSE
        ,AD.TEXT_MOBILE_SUPPLY
        ,AD.TEXT_USERNAME_EMPLOYEE_SALES
        ,VI.NUM_FACE_RECOGNITION_SCORE
        FROM OWNER_DWH.F_APPLICATION_VCT_INFO_AT VI
        JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD  AD 
        ON  VI.SKP_CREDIT_CASE =AD.SKP_CREDIT_CASE 
        AND VI.DATE_DECISION =AD.DATE_DECISION 
        AND VI.skp_credit_type =AD.SKP_CREDIT_TYPE 
        WHERE VI.DATE_DECISION >= SYSDATE-182
        AND AD.DATE_DECISION  >= SYSDATE-182
        AND VI.NUM_FACE_RECOGNITION_SCORE BETWEEN 0 AND 40 
        AND VI.TEXT_FACE_RECOG_RESULT_DETAIL='NOTSAMEPERS'  
        AND AD.CODE_CREDIT_STATUS = 'd'
    )
    unpivot(MOBILE for MOBILE_TYPE in (TEXT_MOBILE_CLIENT,TEXT_MOBILE_PARENT,TEXT_MOBILE_SPOUSE,TEXT_MOBILE_SUPPLY))
),

------POSL & acl 所有phone---
NEWAPPL AS 
(
    SELECT /*+MATERIALIZE*/ 
    SKP_CREDIT_CASE,
    SKP_CREDIT_TYPE,
    DATE_DECISION,
    TEXT_CONTRACT_NUMBER,
    TEXT_IDENTITY_CARD_NUMBER,
    MOBILE,
    MOBILE_TYPE,
    TEXT_USERNAME_EMPLOYEE_SALES
    FROM 
    (
        SELECT /*+MATERIALIZE USE_HASH(AD,DCC, TT, CL, EX)*/ 
        AD.SKP_CREDIT_CASE
        ,AD.DATE_DECISION
        ,AD.SKP_CREDIT_TYPE 
        ,AD.TEXT_CONTRACT_NUMBER
        ,AD.TEXT_IDENTITY_CARD_NUMBER
        ,AD.TEXT_MOBILE_CLIENT
        ,AD.TEXT_MOBILE_PARENT
        ,AD.TEXT_MOBILE_SPOUSE
        ,AD.TEXT_MOBILE_SUPPLY
        ,AD.TEXT_USERNAME_EMPLOYEE_SALES
        FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD  AD
        JOIN OWNER_DWH.DC_CREDIT_CASE DCC
        ON AD.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE 
        AND AD.SKP_CREDIT_TYPE = DCC.SKP_CREDIT_TYPE 
        JOIN  OWNER_DWH.F_APPRSTEP_ADDITIONAL_INFO_TT TT---BIGDATA
        ON     TT.SKP_CREDIT_CASE = AD.SKP_CREDIT_CASE 
        AND   TT.SKP_CREDIT_TYPE = AD.SKP_CREDIT_TYPE 
        AND   TT.DATE_DECISION = AD.DATE_DECISION  
        JOIN OWNER_DWH.CL_APPRSTEP_ADD_INFO CL
        ON TT.SKP_APPRSTEP_ADD_INFO=CL.SKP_APPRSTEP_ADD_INFO
        AND CL.CODE_ADDITIONAL_INFO='a27_A3_RESULT_DATA'  --in case bd SKP change   --TT.SKP_APPRSTEP_ADD_INFO =8405----a27手机号码在网时长
        AND    TT.TEXT_VALUE= '03'
        JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=511 
        WHERE DCC.SKP_CREDIT_STATUS IN (2,3,5) 
        AND(( DCC.SKP_CREDIT_TYPE = 1 AND DCC.SKP_CREDIT_ACQUISITION_CHNL IN (3,7) )OR (DCC.SKP_CREDIT_TYPE = 2 AND DCC.SKP_CREDIT_ACQUISITION_CHNL =6))----posl &acl
        AND DCC.DATE_DECISION BETWEEN EX.MAX_DETECT AND TRUNC(SYSDATE)-1----跑的很慢
        AND AD.DATE_DECISION BETWEEN EX.MAX_DETECT AND TRUNC(SYSDATE)-1
        AND TT.DATE_DECISION BETWEEN EX.MAX_DETECT AND TRUNC(SYSDATE)-1
    )
    UNPIVOT (MOBILE FOR MOBILE_TYPE IN (TEXT_MOBILE_CLIENT,TEXT_MOBILE_PARENT,TEXT_MOBILE_SPOUSE,TEXT_MOBILE_SUPPLY))
),

------新旧mobile join +定义trigger source----
PR AS
(
    SELECT  /*+MATERIALIZE USE_HASH(BD,BADFR)*/  
    DISTINCT 'SA' AS UNIT,
    BD.TEXT_USERNAME_EMPLOYEE_SALES AS ID_ENTITY,
    TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
    TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
    '511' AS CLASS,
    'SAME PHONE WITH LOW FR SCORE HISTORY ' AS TRIGGER_SOURCE,
    '被拒合同：'
    || BADFR.TEXT_CONTRACT_NUMBER
    ||'; 关联号码类型：'||LISTAGG(BADFR.MOBILE_TYPE,', ') WITHIN GROUP (ORDER BY BADFR.SKP_CREDIT_CASE)
    ||'; 关联号码：'||LISTAGG(BADFR.MOBILE,', ') WITHIN GROUP (ORDER BY BADFR.SKP_CREDIT_CASE)
    ||'; FR SCORE：'||BADFR.NUM_FACE_RECOGNITION_SCORE AS TRIGGER_V
    ,'SOFT' AS TRIGGER_TYPE
    ,BD.SKP_CREDIT_CASE
    ,BD.TEXT_CONTRACT_NUMBER
    FROM NEWAPPL BD
    JOIN BADFR
    ON BD.MOBILE = BADFR.MOBILE ---mobile=mobile
    AND BD.TEXT_IDENTITY_CARD_NUMBER!= BADFR.TEXT_IDENTITY_CARD_NUMBER---id!=id
    AND BD.DATE_DECISION > = BADFR.DATE_DECISION 
    AND BD.DATE_DECISION - BADFR.DATE_DECISION BETWEEN 0 AND 180
    WHERE BD.MOBILE!='XNA' 
    GROUP BY BD.SKP_CREDIT_CASE,
    BD.SKP_CREDIT_TYPE,
    BD.DATE_DECISION, 
    BD.TEXT_CONTRACT_NUMBER,
    BD.TEXT_USERNAME_EMPLOYEE_SALES,
    BADFR.TEXT_CONTRACT_NUMBER,
    BADFR.NUM_FACE_RECOGNITION_SCORE
)

SELECT /*+MATERIALIZE*/ 
               PR.UNIT,
               PR.ID_ENTITY,
               PR.DATE_DETECT,
               PR.WEEK_DETECT,
               PR.CLASS,
               PR.TRIGGER_SOURCE,
               LISTAGG(PR.TRIGGER_V,'&') WITHIN GROUP (ORDER BY PR.SKP_CREDIT_CASE) AS TRIGGER_VALUE,
               PR.TRIGGER_TYPE,
               PR.SKP_CREDIT_CASE,
               PR.TEXT_CONTRACT_NUMBER
               FROM PR
               GROUP BY PR.UNIT,
               PR.ID_ENTITY,
               PR.DATE_DETECT,
               PR.WEEK_DETECT,
               PR.CLASS,
               PR.TRIGGER_SOURCE,
               PR.TRIGGER_TYPE,
               PR.SKP_CREDIT_CASE,
               PR.TEXT_CONTRACT_NUMBER;

owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;



PROCEDURE  TRIGGER_523_CASE_TO_CURE IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_523_CASE_TO_CURE';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '523 CURE TEAM-PBOC',SYSDATE FROM DUAL;
COMMIT;


INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
SELECT 
DISTINCT 
 'SA' as UNIT
,fc.text_username_employee_sales AS ID_ENTITY
,TO_CHAR(sysdate,'YYYY/MM/DD')as DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'523' AS CLASS
,'Photo Inconsistent With PBOC Handling Result' as trigger_source
,fc.class||'; detect date:'||to_char(fc.date_detect,'yyyy-mm-dd')||';'||fc.iv_comment as trigger_value
,'SOFT'AS TRIGGER_TYPE
,fc.skp_credit_case
,fc.text_contract_number
 FROM AP_ANTIFRAUD.f_Af_Final_Contracts fc
 WHERE FC.CLASS!='523' AND fc.iv_comment like '%#CURE#%' and fc.date_detect>=trunc(sysdate)-30
 AND NOT EXISTS (SELECT * FROM AP_ANTIFRAUD.f_Af_Final_Contracts TRI WHERE FC.SKP_CREDIT_CASE=TRI.SKP_CREDIT_CASE AND TRI.CLASS='523')
---------20200112 Kate Ke ID FRUAD AND 不知情+可联+配合
UNION
SELECT DISTINCT 'SA' AS UNIT
            ,FC.TEXT_USERNAME_EMPLOYEE_SALES AS ID_ENTITY
            ,TO_CHAR(SYSDATE,'YYYY/MM/DD')AS DATE_DETECT
            ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
            ,'523' AS CLASS
            ,'PHOTO INCONSISTENT WITH PBOC HANDLING RESULT' AS TRIGGER_SOURCE
            ,FC.CLASS||'; DETECT DATE:'||TO_CHAR(FC.DATE_DETECT,'YYYY-MM-DD')||';'||FC.IV_COMMENT AS TRIGGER_VALUE
            ,'SOFT'AS TRIGGER_TYPE
            ,FC.SKP_CREDIT_CASE
            ,FC.TEXT_CONTRACT_NUMBER
FROM AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS FC
WHERE FC.CLASS!='523' 
AND FC.AF_CONFIRM_RESULT LIKE '%转ID Fraud%' AND FC.AF_RELATED_REASON LIKE '%不知情+可联+配合%'  
AND FC.DATE_DETECT>=TRUNC(SYSDATE)-30
AND NOT EXISTS (SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS TRI WHERE FC.SKP_CREDIT_CASE=TRI.SKP_CREDIT_CASE AND TRI.CLASS='523');
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;


/*

--new trigger 20181026
 PROCEDURE TRIGGER_524_FAKE_PRODUCT IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_524_FAKE_PRODUCT';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1 FAKE PRODUCT';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
  
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '524 Fake Product  Part1',SYSDATE FROM DUAL;
COMMIT;
    --------------------------------------------------REG------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH base AS
(
    SELECT DISTINCT DB.TAC,tt.TEXT_IMEI,TT.SKP_CLIENT,TT.SKP_CREDIT_CASE,TT.DATE_DECISION,goods.NAME_GOODS_TYPE_ENG ,
    DB.VENDOR_MANUFACTURER,tt.AMT_GOODS_PRICE,
    CASE WHEN DB.STANDARDISED_DEVICE_VENDOR IS NOT NULL THEN LOWER(DB.STANDARDISED_DEVICE_VENDOR) 
              ELSE LOWER(DB.VENDOR_BRAND_NAME) END AS STANDARDISED_DEVICE_VENDOR,
    CASE WHEN DB.STANDARDISED_MARKETING_NAME IS NOT NULL THEN LOWER(DB.STANDARDISED_MARKETING_NAME) 
             ELSE LOWER(DB.VENDOR_MODEL_NAME) END AS STANDARDISED_MARKETING_NAME,
    LOWER(bra.NAME_GOODS_BRAND_EN) AS NAME_GOODS_BRAND_EN,
    LOWER(mo.NAME_GOODS_MODEL_EN ) AS NAME_GOODS_MODEL_EN
    FROM  Hccn_wangn1.IMEI_Verify_DB  db
    JOIN owner_dwh.f_purchased_goods_tt tt ON SUBSTR(tt.TEXT_IMEI,1,8)=db.tac
    JOIN OWNER_DWH.Cl_Goods_Brand bra ON bra.SKP_GOODS_BRAND=tt.SKP_GOODS_BRAND
    JOIN OWNER_DWH.Cl_Goods_Model mo ON mo.SKP_GOODS_MODEL=tt.SKP_GOODS_MODEL
    JOIN owner_dwh.dc_goods_type goods ON goods.SKP_GOODS_TYPE= tt.SKP_GOODS_TYPE 
    JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME TR ON TR.CLASS='524'
    WHERE db.vendor_marketing_name NOT LIKE '%Test IMEI%' AND tt.SKP_GOODS_TYPE IN (40,25)
    AND tt.TEXT_IMEI!='XNA' and tt.SKP_CREDIT_TYPE=1
    AND tt.text_imei!= '352063062747003'
    AND NAME_GOODS_BRAND_EN!='others' 
    AND TT.DATE_DECISION BETWEEN TR.MAX_DETECT-1 AND TRUNC(SYSDATE-1,'DD')
)

,BASE2 AS
(
SELECT TAC, TEXT_IMEI, SKP_CLIENT, SKP_CREDIT_CASE, DATE_DECISION,VENDOR_MANUFACTURER,NAME_GOODS_TYPE_ENG,AMT_GOODS_PRICE,
CASE WHEN LOWER(VENDOR_MANUFACTURER) LIKE  '%huawei%' THEN  'huawei'  
WHEN LOWER(VENDOR_MANUFACTURER) LIKE '%xiaomi%' THEN 'xiaomi' 
WHEN LOWER(VENDOR_MANUFACTURER) LIKE '%oppo%' THEN 'oppo' 
WHEN LOWER(VENDOR_MANUFACTURER) LIKE '%qiku%' THEN '360 qiku' 
WHEN LOWER(VENDOR_MANUFACTURER) LIKE '%lemobile%' THEN 'letv' 
WHEN LOWER(VENDOR_MANUFACTURER) LIKE '%nubia%' THEN 'zte' 
WHEN LOWER(VENDOR_MANUFACTURER) LIKE '%smartisan%' THEN 'hammer-nut' 
WHEN LOWER(VENDOR_MANUFACTURER) LIKE '%21ke%' THEN 'xiaomi'    
WHEN LOWER(VENDOR_MANUFACTURER) LIKE '%motorola%' THEN 'lenovo'    
ELSE  STANDARDISED_DEVICE_VENDOR END AS STANDARDISED_DEVICE_VENDOR,
STANDARDISED_MARKETING_NAME,NAME_GOODS_BRAND_EN,NAME_GOODS_MODEL_EN
FROM base 
 )
 
SELECT DISTINCT 
'SA' AS UNIT
, dm.TEXT_USERNAME_EMPLOYEE_SALES   
,TO_CHAR(SYSDATE ,'YYYY/MM/DD') AS DATE_DETECT 
,TO_CHAR(TRUNC(SYSDATE ,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'524' AS CLASS  
,'BRAND MISMATCH' AS TRIGGER_SOURCE
, CASE WHEN MO.MODE_PROVINCE_PRICE IS NOT NULL THEN 
'VENDOR BRAND:'||KK.STANDARDISED_DEVICE_VENDOR||'-'||KK.STANDARDISED_MARKETING_NAME||',MODE PRICE:'||MO.MODE_PROVINCE_PRICE||
',CONTRACT BRAND:'||KK.NAME_GOODS_BRAND_EN||'-'||KK.NAME_GOODS_MODEL_EN||',GOODS PRICE:'||KK.AMT_GOODS_PRICE  
ELSE 
'VENDOR BRAND:'||KK.STANDARDISED_DEVICE_VENDOR||'-'||KK.STANDARDISED_MARKETING_NAME||
',CONTRACT BRAND:'||KK.NAME_GOODS_BRAND_EN||'-'||KK.NAME_GOODS_MODEL_EN||',GOODS PRICE:'||KK.AMT_GOODS_PRICE END 
AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE       
,KK.SKP_CREDIT_CASE
,DM.text_contract_number
FROM  BASE2  KK
JOIN dm_antifraud.ft_af_credit_case_ad dm ON dm.skp_credit_case=kk.skp_credit_case
  AND DM.DATE_DECISION=KK.DATE_DECISION 
LEFT JOIN AP_ANTIFRAUD.PROVINCE_MODE_PRICE MO ON MO.NAME_BUSINESS_PROVINCE_EN=DM.NAME_BUSINESS_PROVINCE_EN
                                               AND KK.STANDARDISED_DEVICE_VENDOR=LOWER(MO.NAME_GOODS_BRAND_EN)
                                               AND KK.STANDARDISED_MARKETING_NAME=LOWER(MO.NAME_GOODS_MODEL_EN)
WHERE DM.DATE_DECISION>SYSDATE-15
AND KK.STANDARDISED_DEVICE_VENDOR!=KK.NAME_GOODS_BRAND_EN
AND KK.STANDARDISED_DEVICE_VENDOR NOT LIKE '%hammer%' AND KK.NAME_GOODS_BRAND_EN NOT LIKE '%hammer%'
AND KK.NAME_GOODS_BRAND_EN!='others' 
AND KK.STANDARDISED_DEVICE_VENDOR!='not known'
AND DM.Code_Credit_Status='a';
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;



v_step_message := 'STEP2 FAKE PRODUCT PART2';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
  
INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '524 Fake Product  Part2',SYSDATE FROM DUAL;
COMMIT;

 EXECUTE IMMEDIATE'TRUNCATE TABLE TRIGGER_524_WRONG_MODEL';
--create table TRIGGER_524_WRONG_MODEL as
INSERT  \*+ append*\  INTO TRIGGER_524_WRONG_MODEL
with model_mismatch as 
( 
select DISTINCT  
DB.TAC,tt.TEXT_IMEI,TT.SKP_CLIENT,TT.SKP_CREDIT_CASE,TT.DATE_DECISION,goods.NAME_GOODS_TYPE_ENG ,
DB.VENDOR_MANUFACTURER,tt.AMT_GOODS_PRICE,
CASE WHEN DB.STANDARDISED_DEVICE_VENDOR IS NOT NULL THEN LOWER(DB.STANDARDISED_DEVICE_VENDOR) 
ELSE LOWER(DB.VENDOR_BRAND_NAME) END AS STANDARDISED_DEVICE_VENDOR,
CASE WHEN DB.STANDARDISED_MARKETING_NAME IS NOT NULL THEN LOWER(DB.STANDARDISED_MARKETING_NAME) 
ELSE LOWER(DB.VENDOR_MODEL_NAME) END AS STANDARDISED_MARKETING_NAME,
LOWER(bra.NAME_GOODS_BRAND_EN) AS NAME_GOODS_BRAND_EN,LOWER(mo.NAME_GOODS_MODEL_EN ) AS NAME_GOODS_MODEL_EN
from  Hccn_wangn1.IMEI_Verify_DB  db
join owner_dwh.f_purchased_goods_tt tt on substr(tt.TEXT_IMEI,1,8)=db.tac
join OWNER_DWH.Cl_Goods_Brand bra on bra.SKP_GOODS_BRAND=tt.SKP_GOODS_BRAND
join OWNER_DWH.Cl_Goods_Model mo on mo.SKP_GOODS_MODEL=tt.SKP_GOODS_MODEL
join owner_dwh.dc_goods_type goods on goods.SKP_GOODS_TYPE= tt.SKP_GOODS_TYPE 
where db.vendor_marketing_name not like '%Test IMEI%' and tt.SKP_GOODS_TYPE in (40,25)
and tt.TEXT_IMEI!='XNA' and tt.SKP_CREDIT_TYPE=1
and tt.text_imei!= '352063062747003'
AND NAME_GOODS_BRAND_EN!='others' 
AND TT.DATE_DECISION=TRUNC(SYSDATE-1,'DD')
)
,clean_model as
(
select distinct  TAC,  TEXT_IMEI,SKP_CREDIT_CASE, DATE_DECISION , STANDARDISED_DEVICE_VENDOR,NAME_GOODS_BRAND_EN,
replace(replace(replace(replace(replace(replace(replace(STANDARDISED_MARKETING_NAME,' ',''),'vivo',''),'gionee',''),'galaxy',''),'vivo','') ,'oppo','') ,'honor','honer')  as STANDARDISED_MARKETING_NAME,
replace(replace(replace(replace(replace(replace(replace(replace(replace(NAME_GOODS_MODEL_EN,' ',''),'32g','') ,'64g','') ,'128g','') ,'256g','') ,'512g',''),'vivo',''),'galaxy',''),'oppo','')as NAME_GOODS_MODEL_EN
from model_mismatch
where STANDARDISED_DEVICE_VENDOR=NAME_GOODS_BRAND_EN
and lower(NAME_GOODS_BRAND_EN)!='others' 
and lower(NAME_GOODS_MODEL_EN)!='others' 
)

select  * 
from clean_model
where STANDARDISED_MARKETING_NAME!=NAME_GOODS_MODEL_EN  --and instr(STANDARDISED_MARKETING_NAME,NAME_GOODS_MODEL_EN)= 0 
and (instr(STANDARDISED_MARKETING_NAME,NAME_GOODS_MODEL_EN)= 0 and instr(NAME_GOODS_MODEL_EN,STANDARDISED_MARKETING_NAME)= 0) ;
COMMIT;

delete from TRIGGER_524_WRONG_MODEL
where STANDARDISED_MARKETING_NAME   in ('v1809a','v1809t') and NAME_GOODS_MODEL_EN ='x23' ;
delete from TRIGGER_524_WRONG_MODEL
where  (STANDARDISED_MARKETING_NAME   in ('a83t','a83') and NAME_GOODS_MODEL_EN ='a1');
delete from TRIGGER_524_WRONG_MODEL
where  (STANDARDISED_MARKETING_NAME   in ('enjoy8' ) and NAME_GOODS_MODEL_EN ='changxiang8');
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME   in ('enjoy7s' ) and NAME_GOODS_MODEL_EN ='changxiang7s');
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME   in ('honer7x' ) and NAME_GOODS_MODEL_EN ='honerchangwan7x');
delete from TRIGGER_524_WRONG_MODEL
where  (STANDARDISED_MARKETING_NAME   in ('honerenjoy7','honerenjoy7a' ) and NAME_GOODS_MODEL_EN   IN('honerchangwan7x','honerchangwan7a'));
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME   in ('honerv10'  ) and NAME_GOODS_MODEL_EN   IN('honorv10' ));
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME   in ('pafm00'  ) and NAME_GOODS_MODEL_EN   IN('findx' ));
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME   in ('p20lite'  ) and NAME_GOODS_MODEL_EN   IN('nova3e' ));
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME   in ('nova3i'  ) and NAME_GOODS_MODEL_EN   IN('nova3e' ));
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME   in ('mate20lite'  ) and NAME_GOODS_MODEL_EN   IN('maimang6' ));
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME   in ('redminote4x'  ) and NAME_GOODS_MODEL_EN   IN('hongminote4x' ));
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME   in ('honer9i'  ) and NAME_GOODS_MODEL_EN   IN('honor9' ));
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME   in ('pbcm10','pbct10'  ) and NAME_GOODS_MODEL_EN   IN('r15' ));
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME   in ('redmi5plus'  ) and NAME_GOODS_MODEL_EN   IN('hongmi5plus' ));
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME   in ('honer9lite','honernote10'  ) and NAME_GOODS_MODEL_EN   IN('honor9','mate10' ));
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME   like '%ipad%' and NAME_GOODS_MODEL_EN   like '%ipad%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME   like '%z1i%' and NAME_GOODS_MODEL_EN   like '%x21i%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME   like '%mi6x%' and NAME_GOODS_MODEL_EN   like '%xiaomi6%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME ='y9' and NAME_GOODS_MODEL_EN   like '%changxiang%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME ='mi8explorer' and NAME_GOODS_MODEL_EN   like '%xiaomi8%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME in ('hma-al00','hma-tl00') and NAME_GOODS_MODEL_EN   like '%mate20%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME in ('pbcm10','pbct10') and NAME_GOODS_MODEL_EN   like '%r15x%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME ='lya-al00' and NAME_GOODS_MODEL_EN   like '%mate20pro%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%enjoy%'  and NAME_GOODS_MODEL_EN   like '%changwan%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%m3note%'  and NAME_GOODS_MODEL_EN   like '%meilannote3%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%mce8%'  and NAME_GOODS_MODEL_EN   like '%xiaominote3%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%mi%'  and NAME_GOODS_MODEL_EN   like '%mi%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%honer%'  and NAME_GOODS_MODEL_EN   like '%honer%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%pro%'  and NAME_GOODS_MODEL_EN   like '%pro%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%honer%'  and NAME_GOODS_MODEL_EN   like '%honor%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%v1816%'  and NAME_GOODS_MODEL_EN   like '%x23%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%v1814%'  and NAME_GOODS_MODEL_EN   like '%x21%' );
--new add 20181205
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%al00%'  and NAME_GOODS_MODEL_EN   like '%mate20%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%al00%'  and NAME_GOODS_MODEL_EN   like '%changxiang9p%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%v1818%'  and lower(NAME_GOODS_MODEL_EN)   like '%y93%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%pbcm30%'  and lower(NAME_GOODS_MODEL_EN)   like '%k1%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%pbcm10%'  and lower(NAME_GOODS_MODEL_EN)   like '%r15x%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%a9%'  and lower(NAME_GOODS_MODEL_EN)   like '%a9s%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%gn5007%'  and lower(NAME_GOODS_MODEL_EN)   like '%bigkingkong2%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%mee7s%'  and lower(NAME_GOODS_MODEL_EN)   like '%xiaominote5%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%v1809%'  and lower(NAME_GOODS_MODEL_EN)   like '%x23%' );
--new add 20190104
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%pbb%'  and lower(NAME_GOODS_MODEL_EN)   like '%a5%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%al00%'  and lower(NAME_GOODS_MODEL_EN)   like '%nova4%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%met7%'  and lower(NAME_GOODS_MODEL_EN)   like '%note5%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%note%'  and lower(NAME_GOODS_MODEL_EN)   like '%note%' );
--20190107
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%v1821%'  and lower(NAME_GOODS_MODEL_EN)   like '%nex%' );
--20190129
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%pbfm00%'  and lower(NAME_GOODS_MODEL_EN)   like '%a7%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%tl00%'  and lower(NAME_GOODS_MODEL_EN)   like '%nova%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%tl0p20lite%'  and lower(NAME_GOODS_MODEL_EN)   like '%nova%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%gn5005%'  and lower(NAME_GOODS_MODEL_EN)   like '%kingkong%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%g8870%'  and lower(NAME_GOODS_MODEL_EN)   like '%a8%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%a0%'  and lower(NAME_GOODS_MODEL_EN)   like '%others%' );
--20190226
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%V1730%'  and lower(NAME_GOODS_MODEL_EN)   like '%y89%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%V1813%'  and lower(NAME_GOODS_MODEL_EN)   like '%z3i%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%m1810%'  and lower(NAME_GOODS_MODEL_EN)   like '%xiaomi%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%enjoy9%'  and lower(NAME_GOODS_MODEL_EN)   like '%changxiang9%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%ars%'  and lower(NAME_GOODS_MODEL_EN)   like '%changxiangmax%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%m1901f9e%'  and lower(NAME_GOODS_MODEL_EN)   like '%xiaomiplay%' );
delete from TRIGGER_524_WRONG_MODEL
where (STANDARDISED_MARKETING_NAME like '%are%'  and lower(NAME_GOODS_MODEL_EN)   like '%honor8%' );
COMMIT;

INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
select 
'SA' AS UNIT
, dm.TEXT_USERNAME_EMPLOYEE_SALES   
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT 
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'524' AS CLASS  
,'MODEL MISMATCH' AS TRIGGER_SOURCE
, CASE WHEN MO.MODE_PROVINCE_PRICE IS NOT NULL  THEN 
    'VENDOR BRAND:'||N.STANDARDISED_DEVICE_VENDOR||'-'||N.STANDARDISED_MARKETING_NAME||',VENDOR MODE PRICE:'||MO.MODE_PROVINCE_PRICE||
    ',CONTRACT BRAND:'||N.NAME_GOODS_BRAND_EN||'-'||N.NAME_GOODS_MODEL_EN ||',GOODS PRICE:'||TT.AMT_GOODS_PRICE||',CONTRACT MODE PRICE:'||MO2.MODE_PROVINCE_PRICE
    ELSE 'VENDOR BRAND:'||N.STANDARDISED_DEVICE_VENDOR||'-'||N.STANDARDISED_MARKETING_NAME|| 
    ',CONTRACT BRAND:'||N.NAME_GOODS_BRAND_EN||'-'||N.NAME_GOODS_MODEL_EN ||',GOODS PRICE:'||TT.AMT_GOODS_PRICE||',CONTRACT MODE PRICE:'||MO2.MODE_PROVINCE_PRICE  
    END AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE       
,DM.SKP_CREDIT_CASE
,DM.text_contract_number 
from TRIGGER_524_WRONG_MODEL n
join dm_antifraud.ft_af_credit_case_ad dm on dm.skp_credit_case=n.skp_credit_case
join owner_dwh.f_purchased_goods_tt tt on substr(tt.TEXT_IMEI,1,8)=N.tac 
  AND DM.SKP_CREDIT_CASE=TT.SKP_CREDIT_CASE
left join AP_ANTIFRAUD.PROVINCE_MODE_PRICE MO ON MO.NAME_BUSINESS_PROVINCE_EN=DM.NAME_BUSINESS_PROVINCE_EN
  AND N.STANDARDISED_DEVICE_VENDOR=LOWER(MO.NAME_GOODS_BRAND_EN)
  AND N.STANDARDISED_MARKETING_NAME=LOWER(MO.NAME_GOODS_MODEL_EN)
left join AP_ANTIFRAUD.PROVINCE_MODE_PRICE MO2 ON MO2.NAME_BUSINESS_PROVINCE_EN=DM.NAME_BUSINESS_PROVINCE_EN
  AND N.NAME_GOODS_BRAND_EN=LOWER(MO2.NAME_GOODS_BRAND_EN)
  AND N.NAME_GOODS_MODEL_EN=LOWER(MO2.NAME_GOODS_MODEL_EN)
where   dm.DATE_DECISION=TRUNC(SYSDATE-1,'DD') and dm.code_credit_status='a'
AND TT.DATE_DECISION=TRUNC(SYSDATE-1,'DD');
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);
COMMIT;

-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;*/





--HCC Staff Hit POS Owner 20181024
PROCEDURE TRIGGER_526_HIT_POS_OWNER IS
 v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_526_HIT_POS_OWNER';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1 HCC STAFF HIT POS OWNER';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  


INSERT INTO  AP_ANTIFRAUD.TEST_JESSICA 
SELECT '526 HCC Staff Hit POS Owner',SYSDATE FROM DUAL;
COMMIT;

INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH LEGAL_REPRESENTATIVE AS 
(
SELECT /*+FULL(E) FULL(S) FULL(SAL) FULL(CL) FULL(CLS) USE_HASH(E S SAL CL CLS)*/ 
E.SKP_EMPLOYEE
,E.SKP_EMPLOYEE_SUPERIOR
,E.TEXT_USERNAME_EMPLOYEE
,E.NAME_LAST
,E.TEXT_IDENT_NUMBER 
,E.DATE_EMPLOYED_FROM
,E.TEXT_CELLPHONE
,S.DATE_SELLER_ACT_START AS DATE_OPEN
,S.DATE_SELLER_ACT_END AS DATE_CLOSE
,S.TEXT_MAIN_CONTACT_CELLPHONE
,S.NAME_LEGAL_REPRESENTATIVE
,S.ID_LEGAL_REPRESENTATIVE
,S.NAME_BUSINESS_RESP_PERSON
,S.ID_BUSINESS_RESP_PERSON
,CLS.CODE_SELLER_STATUS AS STATUS
,'LEGAL_REPRESENTATIVE' AS POS_STAFF_POSITION
,'RETAILER OPEN TIME' AS OPEN_INFO
,'RETAILER CLOSE TIME' AS CLOSE_INFO
,SAL.SKP_SALESROOM
,SAL.CODE_SALESROOM
,CL.NAME_BANK_ROLE_ABBR_EN
,S.SKP_SELLER
,S.CODE_SELLER
,'RETAILER' AS UNIT
FROM OWNER_DWH.DC_EMPLOYEE E 
JOIN OWNER_DWH.DC_SELLER S ON E.TEXT_IDENT_NUMBER=S.ID_LEGAL_REPRESENTATIVE and E.NAME_LAST=S.NAME_LEGAL_REPRESENTATIVE
JOIN OWNER_DWH.DC_SALESROOM SAL ON S.SKP_SELLER=SAL.SKP_SELLER
JOIN OWNER_DWH.CL_BANK_ROLE CL ON E.SKP_BANK_ROLE=CL.SKP_BANK_ROLE
JOIN OWNER_DWH.CL_SELLER_STATUS CLS ON CLS.SKP_SELLER_STATUS=S.SKP_SELLER_STATUS
WHERE CL.NAME_BANK_ROLE_ABBR_EN IN ('SDSM','DSM','DSMT','SA')
AND E.TEXT_IDENT_NUMBER<>'XNA'
AND E.CODE_EMPLOYEE_STATUS='a'
AND S.DATE_SELLER_ACT_END>SYSDATE
),
BUSINESS_RESP_PERSON AS
(
SELECT /*+FULL(E) FULL(S) FULL(SAL) FULL(CL) FULL(CLS) USE_HASH(E S SAL CL CLS)*/
E.SKP_EMPLOYEE
,E.SKP_EMPLOYEE_SUPERIOR
,E.TEXT_USERNAME_EMPLOYEE
,E.NAME_LAST
,E.TEXT_IDENT_NUMBER
,E.DATE_EMPLOYED_FROM
,E.TEXT_CELLPHONE
,S.DATE_SELLER_ACT_START AS DATE_OPEN
,S.DATE_SELLER_ACT_END AS DATE_CLOSE
,S.TEXT_MAIN_CONTACT_CELLPHONE
,S.NAME_LEGAL_REPRESENTATIVE
,S.ID_LEGAL_REPRESENTATIVE
,S.NAME_BUSINESS_RESP_PERSON
,S.ID_BUSINESS_RESP_PERSON
,CLS.CODE_SELLER_STATUS AS STATUS
,'BUSINESS_RESP_PERSON' AS POS_STAFF_POSITION
,'RETAILER OPEN TIME' AS OPEN_INFO
,'RETAILER CLOSE TIME' AS CLOSE_INFO
,SAL.SKP_SALESROOM
,SAL.CODE_SALESROOM
,CL.NAME_BANK_ROLE_ABBR_EN
,S.SKP_SELLER
,S.CODE_SELLER
,'RETAILER' AS UNIT
FROM OWNER_DWH.DC_EMPLOYEE E
JOIN OWNER_DWH.DC_SELLER S ON E.TEXT_IDENT_NUMBER=S.ID_BUSINESS_RESP_PERSON AND E.NAME_LAST=S.NAME_BUSINESS_RESP_PERSON
JOIN OWNER_DWH.DC_SALESROOM SAL ON S.SKP_SELLER=SAL.SKP_SELLER
JOIN OWNER_DWH.CL_BANK_ROLE CL ON E.SKP_BANK_ROLE=CL.SKP_BANK_ROLE
JOIN OWNER_DWH.CL_SELLER_STATUS CLS ON CLS.SKP_SELLER_STATUS=S.SKP_SELLER_STATUS
WHERE CL.NAME_BANK_ROLE_ABBR_EN IN ('SDSM','DSM','DSMT','SA')
AND E.TEXT_IDENT_NUMBER<>'XNA'
AND E.CODE_EMPLOYEE_STATUS='a'
AND S.DATE_SELLER_ACT_END>SYSDATE
),
POS_MAIN_CONTACT AS
(
SELECT /*+FULL(E) FULL(SAL) FULL(CL) USE_HASH(E SAL CL)*/
E.SKP_EMPLOYEE
,E.SKP_EMPLOYEE_SUPERIOR
,E.TEXT_USERNAME_EMPLOYEE
,E.NAME_LAST
,E.TEXT_IDENT_NUMBER
,E.DATE_EMPLOYED_FROM
,E.TEXT_CELLPHONE
,SAL.DATE_SALESROOM_ACT_START AS DATE_OPEN
,SAL.date_salesroom_act_end AS DATE_CLOSE
,SAL.TEXT_MAIN_CONTACT_CELLPHONE
,'' AS NAME_LEGAL_REPRESENTATIVE
,'' AS ID_LEGAL_REPRESENTATIVE
,'' AS NAME_BUSINESS_RESP_PERSON
,'' AS ID_BUSINESS_RESP_PERSON
,SAL.code_salesroom_status AS STATUS
,'POS_MAIN_CONTACT' AS POS_STAFF_POSITION
,'POS OPEN TIME' AS OPEN_INFO
,'RETAILER CLOSE TIME' AS CLOSE_INFO
,SAL.SKP_SALESROOM
,SAL.CODE_SALESROOM
,CL.NAME_BANK_ROLE_ABBR_EN
,SAL.SKP_SELLER
,SAL.CODE_SALESROOM AS CODE_SELLER
,'POS' AS UNIT
FROM OWNER_DWH.DC_EMPLOYEE E 
JOIN OWNER_DWH.DC_SALESROOM SAL ON E.TEXT_IDENT_NUMBER=SAL.TEXT_MAIN_CONTACT_IDENT AND E.NAME_LAST=SAL.TEXT_MAIN_CONTACT_NAME
JOIN OWNER_DWH.CL_BANK_ROLE CL ON E.SKP_BANK_ROLE=CL.SKP_BANK_ROLE
WHERE CL.NAME_BANK_ROLE_ABBR_EN IN ('SDSM','DSM','DSMT','SA')
AND E.TEXT_IDENT_NUMBER<>'XNA'
AND E.CODE_EMPLOYEE_STATUS='a'
AND SAL.DATE_SALESROOM_ACT_END>SYSDATE
AND SAL.CODE_SALESROOM<>'XNA'
AND SAL.DATE_SALESROOM_ACT_START<>DATE'1000-01-01'
), 
DSM_ACCOUNTANT AS
(
SELECT /*+FULL(E) FULL(H) FULL(S) FULL(CLS) USE_HASH(E H S CLS)*/
E.SKP_EMPLOYEE
,E.SKP_EMPLOYEE_SUPERIOR
,E.TEXT_USERNAME_EMPLOYEE
,E.NAME_LAST
,E.TEXT_IDENT_NUMBER
,E.DATE_EMPLOYED_FROM
,E.TEXT_CELLPHONE
,S.DATE_SELLER_ACT_START AS DATE_OPEN
,S.DATE_SELLER_ACT_END AS DATE_CLOSE
,S.TEXT_MAIN_CONTACT_CELLPHONE
,S.NAME_LEGAL_REPRESENTATIVE
,S.ID_LEGAL_REPRESENTATIVE
,S.NAME_BUSINESS_RESP_PERSON
,S.ID_BUSINESS_RESP_PERSON
,CLS.CODE_SELLER_STATUS AS STATUS
,'RETAILER_ACCOUNTANT' AS POS_STAFF_POSITION
,'RETAILER OPEN TIME' AS OPEN_INFO
,'RETAILER CLOSE TIME' AS CLOSE_INFO
,H.SKP_SALESROOM
,H.CODE_SALESROOM
,'DSM' AS NAME_BANK_ROLE_ABBR_EN
,S.SKP_SELLER
,S.CODE_SELLER
,'RETAILER' AS UNIT
FROM  OWNER_DWH.dc_employee E
JOIN OWNER_DWH.f_Salesroom_History_Tt H on H.SKP_EMPLOYEE_BUSSMAN=E.SKP_EMPLOYEE --FIND DSM BIND POS
JOIN OWNER_DWH.DC_SELLER S ON H.SKP_SELLER =S.SKP_SELLER  AND E.NAME_LAST=S.NAME_SELLER_ACCOUNTANT --DSM NAME HIT SELLER ACCOUNTANT NAME (SINCE no accountant ID)
JOIN OWNER_DWH.CL_SELLER_STATUS CLS ON CLS.SKP_SELLER_STATUS=S.SKP_SELLER_STATUS
WHERE E.CODE_EMPLOYEE_STATUS='a'
AND H.DTIME_VALID_TO>SYSDATE -- DSM STILL BIND THE POS
AND S.DATE_SELLER_ACT_END >SYSDATE
),
EXCLUDE_DSM AS 
(
SELECT * FROM DSM_ACCOUNTANT A
WHERE (A.NAME_LAST=A.NAME_LEGAL_REPRESENTATIVE AND A.NAME_LAST=A.NAME_BUSINESS_RESP_PERSON) 
AND (A.TEXT_IDENT_NUMBER<>A.ID_LEGAL_REPRESENTATIVE OR A.TEXT_USERNAME_EMPLOYEE<> A.ID_BUSINESS_RESP_PERSON) AND (A.ID_LEGAL_REPRESENTATIVE<>'XNA' AND A.ID_BUSINESS_RESP_PERSON<>'XNA')
),
 SA_ACCOUNTANT AS
(
SELECT /*+FULL(E) FULL(H) FULL(S) FULL(SAL)FULL(CLS) USE_HASH(E H S SAL CLS)*/
E.SKP_EMPLOYEE
,E.SKP_EMPLOYEE_SUPERIOR
,E.TEXT_USERNAME_EMPLOYEE
,E.NAME_LAST
,E.TEXT_IDENT_NUMBER
,E.DATE_EMPLOYED_FROM
,E.TEXT_CELLPHONE
,S.DATE_SELLER_ACT_START AS DATE_OPEN
,S.DATE_SELLER_ACT_END AS DATE_CLOSE
,S.TEXT_MAIN_CONTACT_CELLPHONE
,S.NAME_LEGAL_REPRESENTATIVE
,S.ID_LEGAL_REPRESENTATIVE
,S.NAME_BUSINESS_RESP_PERSON
,S.ID_BUSINESS_RESP_PERSON
,CLS.CODE_SELLER_STATUS AS STATUS
,'RETAILER_ACCOUNTANT' AS POS_STAFF_POSITION
,'RETAILER OPEN TIME' AS OPEN_INFO
,'RETAILER CLOSE TIME' AS CLOSE_INFO
,H.SKP_SALESROOM
,SAL.CODE_SALESROOM
,CL.NAME_BANK_ROLE_ABBR_EN
,S.SKP_SELLER
,S.CODE_SELLER
,'RETAILER' AS UNIT
FROM  OWNER_DWH.dc_employee E
JOIN  OWNER_DWH.F_EMPLOYEE_2_SALESROOM_TT h on h.SKP_EMPLOYEE=e.SKP_EMPLOYEE --FIND SA BIND POS
JOIN OWNER_DWH.DC_SALESROOM SAL ON H.SKP_SALESROOM=SAL.SKP_SALESROOM
JOIN OWNER_DWH.DC_SELLER S ON SAL.SKP_SELLER =S.SKP_SELLER  AND E.NAME_LAST=S.NAME_SELLER_ACCOUNTANT --SA NAME HIT SELLER ACCOUNTANT NAME (SINCE no accountant ID)
JOIN OWNER_DWH.CL_BANK_ROLE CL ON E.SKP_BANK_ROLE=CL.SKP_BANK_ROLE
JOIN OWNER_DWH.CL_SELLER_STATUS CLS ON CLS.SKP_SELLER_STATUS=S.SKP_SELLER_STATUS
WHERE CL.NAME_BANK_ROLE_ABBR_EN IN ('SA')
AND E.CODE_EMPLOYEE_STATUS='a'
AND H.DTIME_VALID_TO>SYSDATE -- DSM STILL BIND THE POS
AND S.DATE_SELLER_ACT_END >SYSDATE
),
EXCLUDE_SA AS 
(
SELECT * FROM SA_ACCOUNTANT A
WHERE (A.NAME_LAST=A.NAME_LEGAL_REPRESENTATIVE AND A.NAME_LAST=A.NAME_BUSINESS_RESP_PERSON) 
AND (A.TEXT_IDENT_NUMBER<>A.ID_LEGAL_REPRESENTATIVE OR A.TEXT_USERNAME_EMPLOYEE<> A.ID_BUSINESS_RESP_PERSON) AND (A.ID_LEGAL_REPRESENTATIVE<>'XNA' AND A.ID_BUSINESS_RESP_PERSON<>'XNA')
)
,DM_TABLE AS
(
SELECT /*FULL(AD) FULL(FC)USE_HASH(AD FC)*/
AD.skp_credit_case
,AD.date_decision
,AD.text_contract_number
,AD.skp_employee_consultant
,AD.text_username_superior
--,RANK()OVER(PARTITION BY AD.skp_employee_consultant ORDER BY ad.dtime_review ) AS RNK_DM
,ROWNUM AS ROW_NUM
FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD 
LEFT JOIN AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS FC ON AD.skp_credit_case=FC.SKP_CREDIT_CASE AND AD.date_decision=FC.DATE_DECISION
WHERE 
AD.skp_credit_type=2 AND AD.code_product LIKE '%MINI%'
AND AD.date_decision BETWEEN DATE'2015-09-25' AND DATE'2017-10-31' 
AND FC.SKP_CREDIT_CASE IS NULL

),
SA_INFO AS
(
SELECT LR.*,
ROW_NUMBER()OVER(PARTITION BY LR.SKP_SELLER ORDER BY LR.SKP_SALESROOM ) AS RNK_PS
 FROM  LEGAL_REPRESENTATIVE LR
UNION
SELECT BRP.*,
ROW_NUMBER()OVER(PARTITION BY BRP.SKP_SELLER ORDER BY BRP.SKP_SALESROOM ) AS RNK_PS
 FROM  BUSINESS_RESP_PERSON BRP
UNION 
SELECT PMC.*,
ROW_NUMBER()OVER(PARTITION BY PMC.SKP_SELLER ORDER BY PMC.SKP_SALESROOM ) AS RNK_PS
 FROM  POS_MAIN_CONTACT PMC
UNION
SELECT DA.*,
ROW_NUMBER()OVER(PARTITION BY DA.SKP_SELLER ORDER BY DA.SKP_SALESROOM ) AS RNK_PS
 FROM  DSM_ACCOUNTANT DA
 LEFT JOIN EXCLUDE_DSM DD ON DA.SKP_EMPLOYEE=DD.SKP_EMPLOYEE
 WHERE DD.SKP_EMPLOYEE IS NULL
UNION
SELECT SA.*,
ROW_NUMBER()OVER(PARTITION BY SA.SKP_SELLER ORDER BY SA.SKP_SALESROOM ) AS RNK_PS
 FROM  SA_ACCOUNTANT SA
  LEFT JOIN EXCLUDE_SA SS ON SA.SKP_EMPLOYEE=SS.SKP_EMPLOYEE
 WHERE SS.SKP_EMPLOYEE IS NULL
),
PRE_SELECT AS
(
SELECT SAI.*
 FROM SA_INFO SAI
 WHERE RNK_PS=1
),
PRE_SELECT1 AS
(
SELECT DISTINCT
PS.*
,PS.NAME_BANK_ROLE_ABBR_EN||CASE WHEN PS.POS_STAFF_POSITION IN ('LEGAL_REPRESENTATIVE','BUSINESS_RESP_PERSON','POS_MAIN_CONTACT') THEN ' ID' ELSE' NAME' END ||
' HIT '||POS_STAFF_POSITION||CASE WHEN PS.POS_STAFF_POSITION IN ('LEGAL_REPRESENTATIVE','BUSINESS_RESP_PERSON','POS_MAIN_CONTACT') THEN ' ID' ELSE' NAME' END AS TRIGGER_SOURCE
, PS.NAME_BANK_ROLE_ABBR_EN||PS.NAME_LAST||' IDENT:'||PS.TEXT_IDENT_NUMBER||'; HOMER ID: '||PS.TEXT_USERNAME_EMPLOYEE
||' HIT '||PS.POS_STAFF_POSITION ||' ; '||PS.NAME_BANK_ROLE_ABBR_EN||' PHONE: '||PS.TEXT_CELLPHONE
||' ; '||PS.UNIT||' CODE: '||LISTAGG(PS.CODE_SELLER,',') WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.TEXT_USERNAME_EMPLOYEE)
||' ; '||PS.UNIT||' STATUS: '||LISTAGG(PS.STATUS,',') WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.TEXT_USERNAME_EMPLOYEE)
||' ; '||PS.OPEN_INFO ||' : '||LISTAGG(TO_CHAR(PS.DATE_OPEN,'YYYY/MM/DD'),',')WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.TEXT_USERNAME_EMPLOYEE)
||' ; '||PS.CLOSE_INFO||' : '|| LISTAGG(TO_CHAR(PS.DATE_CLOSE,'YYYY/MM/DD'),',')WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.TEXT_USERNAME_EMPLOYEE)
||' ; '||PS.UNIT||' '||'MAIN CONTACT : '|| LISTAGG(PS.TEXT_MAIN_CONTACT_CELLPHONE,',')WITHIN GROUP(ORDER BY PS.CODE_SELLER)OVER(PARTITION BY PS.TEXT_USERNAME_EMPLOYEE)
||' ; '||PS.NAME_BANK_ROLE_ABBR_EN||' ONBOARD DAY: '||TO_CHAR(PS.DATE_EMPLOYED_FROM,'YYYY/MM/DD')||' ;DO NOT CONTACT CLIENT, ONLY CHECK '||PS.UNIT AS TRIGGER_VALUE
,RANK()OVER(PARTITION BY PS.TEXT_USERNAME_EMPLOYEE ORDER BY PS.SKP_SALESROOM) AS RNK_PS1
,ROWNUM AS RNK
FROM PRE_SELECT PS
WHERE PS.RNK_PS=1
)
SELECT 
'SA' AS UNIT
--,PS1.CODE_SALESROOM AS ID_ENTITY
--,PS1.SKP_SALESROOM
,PS1.TEXT_USERNAME_EMPLOYEE AS ID_ENTITY
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'526' AS CLASS
,PS1.TRIGGER_SOURCE
,PS1.TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,DD.SKP_CREDIT_CASE
,DD.TEXT_CONTRACT_NUMBER
FROM PRE_SELECT1 PS1
JOIN DM_TABLE DD ON PS1.RNK=DD.ROW_NUM
WHERE PS1.RNK_PS1=1
AND NOT EXISTS (SELECT * FROM AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS CC WHERE CC.CLASS=526 AND CC.TEXT_USERNAME_EMPLOYEE_SALES=PS1.TEXT_USERNAME_EMPLOYEE /*AND CC.ACTION='IV'*/);
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;

-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;


PROCEDURE  TRIGGER_534_DSM_UPLOAD_WCARD IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_534_DSM_UPLOAD_WCARD';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '534 DSM Help Upload Wcard',SYSDATE FROM DUAL;
COMMIT;

INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
--20190625--20190702
WITH APPLICATION_CREATED AS 
(
SELECT DISTINCT AD.CODE_SALESROOM,AD.SKP_CREDIT_CASE,AD.TEXT_CONTRACT_NUMBER,
AD.DATE_DECISION,TO_CHAR(AA.DTIME_DECISION,'YYYY-MM-DD HH24:mi:ss') AS DTIME_DECISION,AD.SKP_CLIENT,
EE.TEXT_USERNAME_EMPLOYEE AS APPLICATION_CREATED_SALES_ID,
EE.NAME_LAST AS SA_NAME,
RO.NAME_BANK_ROLE_ABBR_EN AS BANK_ROLE,AD.SKP_CREDIT_TYPE
FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD
JOIN OWNER_DWH.DC_CREDIT_CASE AA 
     ON AA.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE AND AA.SKP_CREDIT_TYPE=AD.SKP_CREDIT_TYPE AND AA.DATE_DECISION=AD.DATE_DECISION
JOIN OWNER_DWH.DC_EMPLOYEE EE ON EE.SKP_EMPLOYEE=AD.SKP_EMPLOYEE_CONSULTANT
JOIN OWNER_DWH.CL_BANK_ROLE RO 
     ON RO.SKP_BANK_ROLE=EE.SKP_BANK_ROLE AND RO.SKP_BANK_ROLE<>1962
WHERE AD.DATE_DECISION=TRUNC(SYSDATE-2)
     AND AD.SKP_CREDIT_TYPE=1
      AND AD.CODE_CREDIT_STATUS IN ('a','k','n')
)
,UPLOADER_ID AS 
(
SELECT DISTINCT 
ED.*,EE.TEXT_USERNAME_EMPLOYEE AS WC_UPLOAD_ID,EE.NAME_LAST AS UPLOADER_NAME,EE.SKP_BANK_ROLE AS UPLOADER_BANK_ROLE,
RR.NAME_BANK_ROLE_ABBR_EN AS UPLOADER_ROLE,
TO_CHAR(DOCU.DTIME_INSERTED,'YYYY-MM-DD HH24:mi:ss') AS DTIME_INSERTED,
ROW_NUMBER() OVER (PARTITION BY DOCU.SKP_CREDIT_CASE ORDER BY DOCU.DTIME_INSERTED DESC) AS RNK1
FROM APPLICATION_CREATED ED 
JOIN OWNER_DWH.F_CREDIT_CASE_2_DOCUMENT_TT DOCU
     ON DOCU.SKP_CREDIT_CASE=ED.SKP_CREDIT_CASE AND DOCU.DATE_DECISION=ED.DATE_DECISION AND DOCU.SKP_CREDIT_TYPE=1
JOIN OWNER_DWH.DC_EMPLOYEE EE ON DOCU.SKP_EMPLOYEE_INSERTED=EE.SKP_EMPLOYEE
JOIN OWNER_DWH.CL_BANK_ROLE RR ON RR.SKP_BANK_ROLE=EE.SKP_BANK_ROLE AND RR.SKP_BANK_ROLE<>1962
JOIN OWNER_DWH.CL_DOCUMENT_TYPE DO ON DO.SKP_DOCUMENT_TYPE=DOCU.SKP_DOCUMENT_TYPE AND DOCU.SKP_DOCUMENT_TYPE=802
WHERE DO.NAME_DOCUMENT_TYPE_EN='Welcome card'
AND DOCU.DATE_DECISION=TRUNC(DOCU.DTIME_INSERTED)
)
,FINAL_CONTRACT AS 
(
SELECT DISTINCT UP.* FROM UPLOADER_ID UP 
WHERE RNK1=1
AND UP.APPLICATION_CREATED_SALES_ID!=UP.WC_UPLOAD_ID
AND UP.UPLOADER_ROLE LIKE 'DSM%'
AND UP.UPLOADER_BANK_ROLE IN (20,501)
)
,DSM_CONCEN AS 
(
SELECT COUNT (DISTINCT ACT.SKP_CREDIT_CASE) AS DSM_CON,ACT.WC_UPLOAD_ID,ACT.DATE_DECISION
FROM FINAL_CONTRACT ACT 
GROUP BY ACT.WC_UPLOAD_ID,ACT.DATE_DECISION
)
,DSM_INFO AS 
(
SELECT DENSE_RANK() OVER (ORDER BY TT.WC_UPLOAD_ID) AS RNK,TT.SKP_CREDIT_CASE,TT.WC_UPLOAD_ID
FROM FINAL_CONTRACT TT
JOIN DSM_CONCEN EN ON EN.WC_UPLOAD_ID=TT.WC_UPLOAD_ID AND EN.DATE_DECISION=TT.DATE_DECISION AND EN.DSM_CON>=3
WHERE EN.DSM_CON>=3
)

SELECT DISTINCT 
'SA'AS UNIT,
TT.APPLICATION_CREATED_SALES_ID AS ID_ENTITY,
TO_CHAR(SYSDATE,'YYYY/MM/DD')AS DATE_DETECT,
TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT,
'534' AS CLASS,
'DSM help SA upload WCard' AS TRIGGER_SOURCE,
'['||INFO.RNK||'组] '||'DSM ID:'||TT.WC_UPLOAD_ID||']办单人'||BANK_ROLE||'_ID:'||APPLICATION_CREATED_SALES_ID||SA_NAME||','||'WCard上传人'||UPLOADER_ROLE||'_ID:'
||TT.WC_UPLOAD_ID||UPLOADER_NAME||',办单时间:'||DTIME_DECISION||',WCard上传时间:'||DTIME_INSERTED AS TRIGGER_VALUE,
'SOFT' AS TRIGGER_TYPE,
TT.SKP_CREDIT_CASE,
TEXT_CONTRACT_NUMBER
FROM FINAL_CONTRACT TT
JOIN DSM_CONCEN EN ON EN.WC_UPLOAD_ID=TT.WC_UPLOAD_ID AND EN.DATE_DECISION=TT.DATE_DECISION AND EN.DSM_CON>=3
JOIN DSM_INFO INFO ON INFO.SKP_CREDIT_CASE=TT.SKP_CREDIT_CASE 
WHERE EN.DSM_CON>=3;
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;

 PROCEDURE  TRIGGER_536_AVS_HIDDEN_POS IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_536_AVS_HIDDEN_POS';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '536 AVS Hidden POS Suspicious',SYSDATE FROM DUAL;
COMMIT;

INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
--20190814
WITH AVS_CLIENT AS 
(
SELECT 
SE.POS_ID,SE.CLIENT_NAME,SE.CLIENT_ID,SE.FLAG_TEST,
IL.TIME_VIDEO_ANSWERED,IL.TIME_VIDEO_END,
IL.DEV_INFO,IL.ADDRESS,
SUBSTR(GPS,INSTR(GPS,'lng":"')+6,INSTR(GPS,'","')-INSTR(GPS,'lng":"')-6) AS AVS_LONGITUDE,
SUBSTR(GPS,INSTR(GPS,'lat":"')+6,INSTR(GPS,'"}')-INSTR(GPS,'lat":"')-6) AS AVS_LATITUDE,
ROW_NUMBER() OVER (PARTITION BY SE.CLIENT_ID ORDER BY IL.TIME_VIDEO_ANSWERED) AS RNK
FROM AP_CRM_DATAMINING.KENNAN_AVS_CASE SE
JOIN AP_CRM_DATAMINING.KENNAN_AVS_VIDEO_DETAIL IL ON IL.CASE_ID=SE.CASE_ID AND SE.CLIENT_NAME=IL.CUSTOMER_NAME
JOIN AP_ANTIFRAUD.Cl_Trigger_Excute_Time ET ON ET.CLASS=536
WHERE TRUNC(IL.TIME_VIDEO_ANSWERED)>=ET.MAX_DETECT --lina 20190902
AND TRUNC(IL.TIME_VIDEO_ANSWERED)>=TRUNC(SYSDATE-10)
AND POS_ID<>'test'
AND IL.FLAG_TEST='N'
AND IL.GPS IS NOT NULL
AND UPPER(IL.GPS) NOT LIKE '%UNDEFINED%'
AND IL.CALL_STATUS='完成'

)
,AVS_GPS AS 
(
SELECT NT.*,GPS.SKP_CREDIT_CASE,GPS.TEXT_CONTRACT_NUMBER,AD.DATE_DECISION,GPS.SMT_LONGITUDE,GPS.SMT_LATITUDE,
GPS.CAPP_LONGITUDE,GPS.CAPP_LATITUDE,GPS.CAPP_DTIME_EVENT,GPS.CAPP_NAME_EVENT,
AP_ANTIFRAUD.GETDISTANCE(GPS.SMT_LONGITUDE,GPS.SMT_LATITUDE,NT.AVS_LONGITUDE,NT.AVS_LATITUDE) AS DIST_SMT_AVS,
AP_ANTIFRAUD.GETDISTANCE(NT.AVS_LONGITUDE,NT.AVS_LATITUDE,GPS.CAPP_LONGITUDE,GPS.CAPP_LATITUDE) AS DIST_AVS_CAPP, 
AP_ANTIFRAUD.GETDISTANCE(GPS.SMT_LONGITUDE,GPS.SMT_LATITUDE,GPS.CAPP_LONGITUDE,GPS.CAPP_LATITUDE) AS DIST_SMT_CAPP
FROM AVS_CLIENT NT 
JOIN DM_ANTIFRAUD.FT_AF_CREDIT_CASE_AD AD 
ON AD.TEXT_IDENTITY_CARD_NUMBER=NT.CLIENT_ID AND AD.DATE_DECISION=TRUNC(NT.TIME_VIDEO_END)  AND AD.CODE_SALESROOM=NT.POS_ID --20190902
JOIN AP_ANTIFRAUD.F_APPLICATION_GPS GPS 
ON GPS.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE AND GPS.DATE_DECISION=AD.DATE_DECISION AND AD.SKP_SALESROOM=GPS.SKP_SALESROOM
WHERE NT.RNK=1
AND AD.SKP_CREDIT_TYPE=1
AND NT.AVS_LONGITUDE!=0
AND GPS.CAPP_LONGITUDE!=0
AND AD.CODE_CREDIT_STATUS IN ('a','k','n')
)
,AVS_DISTANCE AS
(
SELECT AA.POS_ID,AA.SKP_CREDIT_CASE,AA.TEXT_CONTRACT_NUMBER,AA.ADDRESS,AA.CAPP_DTIME_EVENT,AA.CAPP_NAME_EVENT,AA.DATE_DECISION,
CASE WHEN TO_NUMBER(AA.DIST_AVS_CAPP) IS NULL THEN 9999 ELSE AA.DIST_AVS_CAPP END AS DIST_AVS_CAPP,
CASE WHEN TO_NUMBER(AA.DIST_SMT_AVS) IS NULL THEN 9999 ELSE AA.DIST_SMT_AVS END AS DIST_SMT_AVS,
CASE WHEN TO_NUMBER(AA.DIST_SMT_CAPP) IS NULL THEN 9999 ELSE AA.DIST_SMT_CAPP END AS DIST_SMT_CAPP 
FROM AVS_GPS AA
)
,AVS_FLAG AS 
(
SELECT PS.*,LEAST(PS.DIST_SMT_AVS,PS.DIST_AVS_CAPP,PS.DIST_SMT_CAPP) AS MIN_DIST,
CASE WHEN PS.DIST_AVS_CAPP=LEAST(PS.DIST_SMT_AVS,PS.DIST_AVS_CAPP,PS.DIST_SMT_CAPP)THEN 'DIST_AVS_CAPP'
     WHEN PS.DIST_SMT_AVS=LEAST(PS.DIST_SMT_AVS,PS.DIST_AVS_CAPP,PS.DIST_SMT_CAPP)THEN 'DIST_SMT_AVS'
     WHEN PS.DIST_SMT_CAPP=LEAST(PS.DIST_SMT_AVS,PS.DIST_AVS_CAPP,PS.DIST_SMT_CAPP)THEN 'DIST_SMT_CAPP'
     ELSE NULL END AS FLAG
FROM AVS_DISTANCE PS 
)
,TRIGGER_CONTRACT AS 
(
SELECT AG.*,CA.DTIME_DECISION
FROM AVS_FLAG AG
JOIN OWNER_DWH.DC_CREDIT_CASE CA 
ON CA.SKP_CREDIT_CASE=AG.SKP_CREDIT_CASE AND CA.DATE_DECISION=AG.DATE_DECISION
WHERE MIN_DIST>1.5
)

SELECT DISTINCT 
'POS' AS UNIT
,DDC.CODE_SALESROOM
,TO_CHAR(SYSDATE,'YYYY/MM/DD')AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'536' AS CLASS
,'AVS Hidden POS suspicion'||':'||'MIN distance>1.5km' AS TRIGGER_SOURCE
,'MIN_DISTANCE_POS_CLIENT'||':'||FCC.FLAG||':'||FCC.MIN_DIST||'km,'||'CAPP登陆时间'||':'||CAPP_NAME_EVENT||'/'||
TO_CHAR(CAPP_DTIME_EVENT,'YYYY/MM/DD HH24:MI:SS')||',办单时间:'||TO_CHAR(FCC.DTIME_DECISION,'YYYY/MM/DD HH24:MI:SS')||',视频办单vendor识别的门店地址:'||FCC.ADDRESS  AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,FCC.SKP_CREDIT_CASE
,FCC.TEXT_CONTRACT_NUMBER
FROM TRIGGER_CONTRACT FCC
JOIN OWNER_DWH.DDC_SALESROOM DDC ON DDC.CODE_SALESROOM=FCC.POS_ID AND DDC.FLAG_REMOTE_SALESROOM='Y';

owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;
 /*PROCEDURE  TRIGGER_545_REMOTE_APPLICATION IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_545_REMOTE_APPLICATION_DAILY';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '545 Night application daily',SYSDATE FROM DUAL;
COMMIT;
--20200326 --20200413
INSERT \*+ append*\ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH BASE AS 
(
SELECT DISTINCT AD.SKP_CREDIT_CASE ,T.DTIME_INSERTED, to_char(T.DTIME_INSERTED,'hh24') as  Hour,DESC_STATUS,ORD.SKP_TIPPER,TT.SKP_SALESROOM ,
ROW_NUMBER() OVER(PARTITION BY AD.SKP_CREDIT_CASE ORDER BY T.DTIME_INSERTED DESC) AS RNK
FROM OWNER_DWH.dc_aldi_order ord
join OWNER_DWH.f_Aldi_Order_History_Tt t
on ord.SKP_ALDI_ORDER=t.SKP_ALDI_ORDER
join OWNER_DWH.Dc_Aldi_Lead al
on ord.SKP_ALDI_LEAD=al.SKP_ALDI_LEAD
join owner_dwh.f_aldi_order_2_contract_ad ad
on ad.SKP_ALDI_ORDER=ord.SKP_ALDI_ORDER
JOIN OWNER_DWH.F_APPLICATION_TT TT ----join to find correct POS --20200417
ON AD.SKP_CREDIT_CASE =TT.SKP_CREDIT_CASE 
WHERE DESC_STATUS= 'PRODUCT PRODUCT_PAGE_SUBMIT SUCCESS'
AND TT.DATE_DECISION >SYSDATE -30
AND TT.SKP_CREDIT_TYPE =1
)
,POS_CONCENTRATION AS 
(
SELECT COUNT (DISTINCT BASE.SKP_CREDIT_CASE) AS CNT_APPLICATION, BASE.SKP_SALESROOM
FROM BASE
WHERE  trunc(DTIME_INSERTED)>=trunc(SYSDATE)-7
AND BASE.HOUR=20 ----20200402
GROUP BY BASE.SKP_SALESROOM 
)
,TIPPER_CONCENTRATION AS
(
SELECT COUNT (DISTINCT BASE.SKP_CREDIT_CASE) AS CNT_APPLICATION, BASE.SKP_TIPPER
FROM BASE
WHERE trunc(DTIME_INSERTED)>=trunc(SYSDATE)-7
AND BASE.HOUR=20  ----20200402
GROUP BY BASE.SKP_TIPPER 
)
,CLIENT_CHECK AS 
(SELECT DISTINCT AD.text_identity_card_number
FROM DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD
WHERE AD.DATE_REVIEW>=SYSDATE-365
AND AD.text_mobile_client IS NOT NULL)  ---CHECK TIPPER WHETHER A CLIENT BEFORE 20200410

SELECT DISTINCT 'POS' AS UNIT
,AD.code_salesroom
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'545' AS CLASS  
,'Night application' AS TRIGGER_SOURCE ,
'客户于'||TO_CHAR(K.DTIME_INSERTED,'YYYY-MM-DD HH24:MI:SS')||'完成贷款产品及期数选择, POS 近一周night application集中性: '||CASE WHEN PP.CNT_APPLICATION>0 THEN PP.CNT_APPLICATION ELSE 0 END
||' ;SKP_TIPPER: ' || K.SKP_TIPPER||'，身份证:'||DCT.TEXT_IDENT_CARD_NUMBER||'，Status：'||CASE WHEN TP.HSIS_COMMENT LIKE '%temporarily%' THEN 'temporarily remove' 
WHEN TP.HSIS_COMMENT LIKE '%permanently%' THEN 'permanently remove' ELSE SS.ID_SOURCE END||', 姓名: '||DCT.NAME_TIPPER||', 电话: '||DCT.TEXT_PHONE_NUMBER
  ||'，Tipper是否为HCC客户:'||CASE WHEN CH.text_identity_card_number IS NOT NULL THEN 'Y' ELSE 'N' END||
  ', TIPPER近一周night application 集中性: '||CASE WHEN K.SKP_TIPPER=-1 THEN 1 WHEN TT.CNT_APPLICATION>0 THEN TT.CNT_APPLICATION ELSE 0 END AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,AD.SKP_CREDIT_CASE
,AD.text_contract_number
FROM BASE  K
JOIN DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD
ON K.SKP_CREDIT_CASE =AD.SKP_CREDIT_CASE 
LEFT JOIN POS_CONCENTRATION PP
ON K.SKP_SALESROOM =PP.SKP_SALESROOM
LEFT JOIN TIPPER_CONCENTRATION TT
ON K.SKP_TIPPER =TT.SKP_TIPPER
LEFT JOIN OWNER_DWH.DC_TIPPER DCT 
ON K.SKP_TIPPER =DCT.SKP_TIPPER
LEFT JOIN hccn_zhaol1.remove_tp_list TP
ON DCT.TEXT_IDENT_CARD_NUMBER =TP.TEXT_IDENT_CARD_NUMBER
LEFT JOIN OWNER_DWH.CL_TIPPER_STATUS SS
ON SS.SKP_TIPPER_STATUS =DCT.SKP_TIPPER_STATUS
LEFT JOIN CLIENT_CHECK CH
ON DCT.TEXT_IDENT_CARD_NUMBER =CH.text_identity_card_number
JOIN AP_ANTIFRAUD.Cl_Trigger_Excute_Time ET ON ET.CLASS=545 AND AD.DATE_REVIEW>=ET.MAX_DETECT --lina 20200413
WHERE AD.DATE_DECISION>=SYSDATE-5
--AND AD.DATE_REVIEW=TRUNC(SYSDATE)-1 ---TRIGGER 1 天的
AND K.RNK=1
AND K.HOUR=20;

owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;*/

PROCEDURE TRIGGER_546_RPOS_USE_NEW_PHONE IS
  v_stepnum      INTEGER DEFAULT 0;
  v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
  v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
  v_err_txt      VARCHAR2(70);
  l_rowcount     integer;
  v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
  -- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_546_RPOS_USE_NEW_PHONE';
  -- check whether the process need to run
  IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy,
                                          p_name  => v_dealprc,
                                          p_date  => trunc(SYSDATE)) IN
     ('Not Started', 'Failed') THEN
    -- procedure start
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'start');
  
    --! report robots log start
  
    INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
      SELECT '546 RPOS-Use New Phone P1', SYSDATE FROM DUAL;
    COMMIT;
  
    ---------------------------------------------------------------------------------
    v_step_message := 'STEP1 EXCLUDE_TEST';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'truncate table ap_antifraud.TRIGGER_546_EXCLUDE_TEST';
  
    insert /*+ append */
    into ap_antifraud.TRIGGER_546_EXCLUDE_TEST
      SELECT CC.SKP_CREDIT_TYPE,
             CC.DATE_DECISION,
             CC.SKp_CLIENT,
             CC.SKP_CREDIT_CASE,
             CC.TEXT_CONTRACT_NUMBER,
             SKP_CREDIT_STATUS,
             CASE
               WHEN CC.CODE_RPOS_TYPE = '1' THEN
                'Online'
               ELSE
                'Offline'
             END AS CHANNEL_TYPE
        FROM OWNER_DWH.DC_CREDIT_CASE CC
       WHERE CC.DATE_DECISION >= TRUNC(SYSDATE) - 34 ---------------==========2020/08/04 delivery information is delayed
         AND CC.DATE_DECISION <= TRUNC(SYSDATE) - 4 ---------------==========2020/08/04 delivery information is delayed
         AND CC.SKP_PRODUCT_CHANNEL = 804
         AND CC.SKP_CREDIT_TYPE = 1
         AND CC.SKP_CREDIT_STATUS IN (2, 3, 5); ---------------==========2020/08/04 delivery information is delayed
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := 'STEP2 DM TABLE ';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'truncate table ap_antifraud.TRIGGER_546_dm_table';
    insert /*+ append */
    into ap_antifraud.TRIGGER_546_dm_table
      SELECT *
        FROM DM_ANTIFRAUD.FT_AF_CREDIT_CASE_AD AD
       WHERE AD.DATE_DECISION >= SYSDATE - 50
         and skp_credit_type = 1
         and CODE_APPROVED = 1;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := 'STEP3 RECEIVER_ADDRESS';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'truncate table ap_antifraud.TRIGGER_546_RECEIVER_ADDRESS';
  
    insert /*+ append */
    into ap_antifraud.TRIGGER_546_RECEIVER_ADDRESS
      SELECT RP.SKP_CREDIT_CASE,
             RP.DATE_DECISION,
             RP.SKP_CREDIT_TYPE,
             RP.SKp_CLIENT,
             RP.TEXT_CONTRACT_NUMBER,
             RP.SKP_CREDIT_STATUS,
             RP.CHANNEL_TYPE,
             FF.TEXT_MOBILE_CLIENT,
             FF.TEXT_MOBILE_SPOUSE,
             FF.TEXT_MOBILE_PARENT,
             FF.TEXT_MOBILE_SUPPLY,
             FF.TEXT_PHONE_AREA_CODE_EMPLOYER || FF.TEXT_EMPLOYER_PHONE AS EMPLOYER_PHONE,
             FF.NAME_LAST_SPOUSE,
             FF.NAME_LAST_PARENT,
             FF.NAME_LAST_SUPPLY,
             FF.NAME_EMPLOYER,
             FF.CODE_SALESROOM,
             FF.NUM_AGE,
             FF.NAME_LAST_CLIENT,
             AD.NAME_RECEIVER,
             AD.CODE_PURCHASE_STATUS,
             AD.NAME_RECEIVER_PROVINCE,
             AD.NAME_RECEIVER_CITY,
             REPLACE(AD.NAME_RECEIVER_PROVINCE || AD.NAME_RECEIVER_CITY ||
                     AD.NAME_RECEIVER_DISTRICT || CASE
                       WHEN NAME_RECEIVER_ADDRESS LIKE '%省%' THEN
                        SUBSTR(NAME_RECEIVER_ADDRESS,
                               INSTR(NAME_RECEIVER_ADDRESS, '省') + 1)
                       ELSE
                        NAME_RECEIVER_ADDRESS
                     END,
                     'XNA') AS RECEIVER_ADDRESS,
             SUBSTR(NAME_RECEIVER_PROVINCE, 1, 2) as con_province,
             SUBSTR(NAME_RECEIVER_CITY, 1, 2) as con_city
        FROM ap_antifraud.TRIGGER_546_EXCLUDE_TEST RP
      ---DELIVERY ADDRESS
        JOIN OWNER_DWH.F_MP_PURCHASE_AD AD
          ON RP.SKP_CREDIT_CASE = AD.SKP_CREDIT_CASE
        JOIN ap_antifraud.TRIGGER_546_dm_table FF
          ON FF.SKP_CREDIT_CASE = RP.SKP_CREDIT_CASE
       WHERE FF.CODE_SALESROOM NOT IN ('w47580') ------------------=========2020/08/04
         AND UPPER(FF.NAME_EMPLOYER) NOT LIKE 'ASD%'; ------------------=========2020/08/04
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := 'STEP4 EXPRESS';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'truncate table ap_antifraud.TRIGGER_546_EXPRESS';
    insert /*+ append */
    into ap_antifraud.TRIGGER_546_EXPRESS
      SELECT DISTINCT DATE_DECISION,
                      SKP_CREDIT_TYPE,
                      SKP_CREDIT_CASE,
                      TEXT_CONTRACT_NUMBER,
                      SKP_CREDIT_STATUS,
                      SKp_CLIENT,
                      CHANNEL_TYPE,
                      CODE_SALESROOM,
                      NUM_AGE,
                      NAME_LAST_CLIENT,
                      TEXT_MOBILE_CLIENT,
                      TEXT_MOBILE_SPOUSE,
                      TEXT_MOBILE_PARENT,
                      TEXT_MOBILE_SUPPLY,
                      EMPLOYER_PHONE,
                      NAME_RECEIVER,
                      CODE_PURCHASE_STATUS,
                      NAME_RECEIVER_PROVINCE,
                      NAME_RECEIVER_CITY,
                      RECEIVER_ADDRESS,
                      LOGISTICS_LIST,
                      LOGISTICS_COMPANY,
                      PHONE,
                      LISTAGG(FLAG_OWNER, ';') WITHIN GROUP(ORDER BY FLAG_OWNER) OVER(PARTITION BY SKP_CREDIT_CASE) AS FLAG_OWNER
        FROM (SELECT DISTINCT NN.*,
                              SS.LOGISTICS_LIST,
                              SS.LOGISTICS_COMPANY,
                              SS.RECEIVER_MOBILE AS PHONE,
                              CASE
                                WHEN RECEIVER_MOBILE = TEXT_MOBILE_CLIENT THEN
                                 '客户本人' || NAME_LAST_CLIENT || '号码'
                                WHEN RECEIVER_MOBILE = TEXT_MOBILE_SPOUSE THEN
                                 '客户配偶' || NAME_LAST_SPOUSE || '号码'
                                WHEN RECEIVER_MOBILE = TEXT_MOBILE_PARENT THEN
                                 '客户父母' || NAME_LAST_PARENT || '号码'
                                WHEN RECEIVER_MOBILE = TEXT_MOBILE_CLIENT THEN
                                 '客户雇主' || NAME_EMPLOYER || '号码'
                                WHEN RECEIVER_MOBILE = TEXT_MOBILE_SUPPLY THEN
                                 '客户紧急联系人' || NAME_LAST_SUPPLY || '号码'
                                ELSE
                                 'unknown'
                              END AS FLAG_OWNER
                FROM ap_antifraud.TRIGGER_546_RECEIVER_ADDRESS NN
                JOIN OWNER_DWH.F_APPLICATION_TT PP
                  ON NN.DATE_DECISION = PP.DATE_DECISION
                 AND NN.SKP_CREDIT_TYPE = PP.SKP_CREDIT_TYPE
                 AND NN.SKP_CREDIT_CASE = PP.SKP_CREDIT_CASE
                JOIN OWNER_OPR.VH_SPX_SYSTRADE_TRADE SS
                  ON PP.ID_external_partner_order = SS.TID || '' ------------------====2020/08/04
               WHERE 1 = 1
                 AND PP.SKP_CREDIT_TYPE = 1
                 AND PP.DATE_DECISION >= SYSDATE - 34
                 AND PP.SKP_PRODUCT_CHANNEL = 804);
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := 'STEP5 ORBP';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'truncate table ap_antifraud.TRIGGER_546_ORBP';
  
    insert /*+ append */
    into ap_antifraud.TRIGGER_546_ORBP
    
      SELECT DISTINCT SKp_CLIENT,
                      COUNT(DISTINCT SKF_CAMP_ACC_SOFFER_DETAIL) OVER(PARTITION BY SKp_CLIENT) AS CNT_ORBP,
                      LISTAGG(TO_CHAR(DTIME_INSERTED, 'YYYY-MM-DD') || '使用' ||
                              TEXT_PHONE_NUMBER || '(与客户号码' || FLAG_SAME ||
                              '),结果' || CODE_SCORING_STATUS,
                              ';') WITHIN GROUP(ORDER BY DTIME_INSERTED) OVER(PARTITION BY SKp_CLIENT) || '。' AS ORBP_DETAILS
        FROM (SELECT DISTINCT RP.SKp_CLIENT,
                              OB.DTIME_INSERTED,
                              OB.CODE_SCORING_STATUS,
                              OB.TEXT_PHONE_NUMBER,
                              OB.SKF_CAMP_ACC_SOFFER_DETAIL,
                              TEXT_MOBILE_CLIENT,
                              CASE
                                WHEN TEXT_MOBILE_CLIENT = TEXT_PHONE_NUMBER THEN
                                 '相同'
                                ELSE
                                 '不同'
                              END AS FLAG_SAME
                FROM ap_antifraud.TRIGGER_546_RECEIVER_ADDRESS RP
                JOIN OWNER_DWH.F_CAMP_ACC_SOFFER_DETAIL_TT OB
                  ON RP.SKp_CLIENT = OB.SKp_CLIENT
                 AND TRUNC(OB.DTIME_INSERTED) <= RP.DATE_DECISION ---firstly ORBP then apply
               WHERE 1 = 1
                 AND DTIME_INSERTED >= SYSDATE - 180
                 AND DTIME_OFFER_VALID_FROM > SYSDATE - 180);
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := 'STEP6 COLLEGE';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'truncate table ap_antifraud.TRIGGER_546_COLLEGE';
  
    insert /*+ append */
    into ap_antifraud.TRIGGER_546_COLLEGE
    ------SETTING 1:  ACTIVE + COLLEGE + AGE<=23
      SELECT NN.*
        FROM ap_antifraud.TRIGGER_546_EXPRESS NN
       WHERE 1 = 1
         AND SKP_CREDIT_STATUS IN (2, 3, 5)
         AND NUM_AGE <= 23
         AND (RECEIVER_ADDRESS LIKE '%大学' OR RECEIVER_ADDRESS LIKE '%学院' OR
             RECEIVER_ADDRESS LIKE '%校区' OR RECEIVER_ADDRESS LIKE '%学校' OR
             RECEIVER_ADDRESS LIKE '%高中%' OR
             RECEIVER_ADDRESS LIKE '%高级中学%' OR
             RECEIVER_ADDRESS LIKE '%中学%' OR RECEIVER_ADDRESS LIKE '%初中%' OR
             RECEIVER_ADDRESS LIKE '%二中' OR RECEIVER_ADDRESS LIKE '%一中' OR
             RECEIVER_ADDRESS LIKE '%三中' OR RECEIVER_ADDRESS LIKE '%八中' OR
             RECEIVER_ADDRESS LIKE '%五中' OR RECEIVER_ADDRESS LIKE '%四中');
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := 'STEP7 COLLEGE_LASTAPP';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'truncate table ap_antifraud.TRIGGER_546_COLLEGE_LASTAPP';
  
    insert /*+ append */
    into ap_antifraud.TRIGGER_546_COLLEGE_LASTAPP
      SELECT AA.*,
             ROW_NUMBER() OVER(PARTITION BY AA.SKp_CLIENT ORDER BY aa.dtime_decision ASC) AS RNK,
             DS.CODE_SALESROOM
        FROM (SELECT DISTINCT CC.dtime_decision,
                              CC.TEXT_CONTRACT_NUMBER,
                              CASE
                                WHEN CC.SKP_CREDIT_TYPE = 2 AND
                                     CC.skp_product_channel = 2 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL IN (3, 7) THEN
                                 'WCL' --POS AND SMARTPOS  
                                WHEN CC.SKP_CREDIT_TYPE = 2 AND
                                     CC.skp_product_channel = 2 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL = 6 THEN
                                 'ACL'
                                WHEN CC.SKP_CREDIT_TYPE = 2 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL = 2 AND
                                     CC.skp_product_channel = 1 THEN
                                 'XCL_TELE'
                                WHEN CC.SKP_CREDIT_TYPE = 2 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL = 8 AND
                                     CC.skp_product_channel = 1 THEN
                                 'XCL_CAPP'
                                WHEN CC.SKP_CREDIT_TYPE = 2 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL IN (3, 7) THEN
                                 'XCL_POS'
                                WHEN CC.SKP_CREDIT_TYPE = 2 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL = 2 AND
                                     CC.skp_product_channel = 201 THEN
                                 'TOPUP_TELE'
                                WHEN CC.SKP_CREDIT_TYPE = 2 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL = 8 AND
                                     CC.skp_product_channel = 201 THEN
                                 'TOPUP_CAPP'
                                WHEN CC.SKP_CREDIT_TYPE = 1 AND CC.SKP_CREDIT_ACQUISITION_CHNL IN
                                     (3, 7, 5) THEN
                                 'POSL'
                                WHEN CC.SKP_CREDIT_TYPE = 1 AND
                                     CC.SKP_PRODUCT_CHANNEL = 804 THEN
                                 'RPOS'
                                WHEN CC.SKP_CREDIT_TYPE = 1 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL = 6 THEN
                                 'POSL_CITIC'
                                WHEN CC.SKP_CREDIT_TYPE = 1 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL = 21 THEN
                                 'ALDI2.0'
                                WHEN CC.SKP_CREDIT_ACQUISITION_CHNL = 4 AND
                                     CC.SKP_CREDIT_TYPE = 2 THEN
                                 'MINI'
                                WHEN CC.SKP_CREDIT_ACQUISITION_CHNL = 4 AND
                                     CC.SKP_CREDIT_TYPE = 1 THEN
                                 'ESHOP'
                                WHEN CC.SKP_CREDIT_TYPE = 3 THEN
                                 'IL'
                                WHEN CC.SKP_CREDIT_TYPE = 4 THEN
                                 'HCP'
                              END AS LOAN_TYPE,
                              CC.SKP_CREDIT_CASE,
                              CC.DATE_DECISION,
                              CC.SKP_CREDIT_TYPE,
                              CC.SKp_CLIENT,
                              CC.SKP_CREDIT_STATUS
                FROM ap_antifraud.TRIGGER_546_COLLEGE BB
                JOIN OWNER_DWH.DC_CREDIT_CASE CC
                  ON BB.SKp_CLIENT = CC.SKp_CLIENT
               WHERE CC.DATE_DECISION >= SYSDATE - 365) AA
        JOIN owner_dwh.F_credit_case_AD FF
          ON FF.DATE_DECISION = AA.DATE_DECISION
         AND FF.SKP_CREDIT_CASE = AA.SKP_CREDIT_CASE
         AND FF.SKP_CREDIT_TYPE = AA.SKP_CREDIT_TYPE
        JOIN owner_dwh.dc_salesroom DS
          ON FF.SKP_SALESROOM = DS.skp_salesroom
       WHERE FF.DATE_DECISION >= SYSDATE - 365;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := 'STEP8 CUTOFF';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'truncate table ap_antifraud.TRIGGER_546_CUTOFF';
  
    insert /*+ append */
    into ap_antifraud.TRIGGER_546_CUTOFF
    
    ------SETTING 2: SHARING RECEIVER PHONE IN RECENT ONE MONTH
    
      SELECT AA.*,
             RANK() OVER(PARTITION BY AA.PHONE ORDER BY AA.PHONE) AS PHONE_GROUP,
             LISTAGG(TEXT_CONTRACT_NUMBER, ';') WITHIN GROUP(ORDER BY DATE_DECISION ASC) OVER(PARTITION BY AA.PHONE) AS CONTRACT_DETAIL
        FROM (SELECT EX.PHONE,
                     COUNT(DISTINCT SKp_CLIENT) AS CNT_CLIENT,
                     COUNT(DISTINCT SKP_CREDIT_CASE) AS CNT_APPLICAITON,
                     COUNT(DISTINCT CASE
                             WHEN EX.SKP_CREDIT_STATUS IN (2, 3, 5) THEN
                              SKP_CREDIT_CASE
                           END) AS CNT_ACTIVE
                FROM ap_antifraud.TRIGGER_546_EXPRESS EX
               GROUP BY EX.PHONE
              HAVING COUNT(DISTINCT SKp_CLIENT) > 1 AND COUNT(DISTINCT CASE WHEN EX.SKP_CREDIT_STATUS IN(2,
                                                                                                        3,
                                                                                                        5) THEN SKP_CREDIT_CASE END) >= 1) AA
        JOIN ap_antifraud.TRIGGER_546_EXPRESS EX
          ON AA.PHONE = EX.PHONE;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := 'STEP9 EXCLUDE_HIST';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'truncate table ap_antifraud.TRIGGER_546_EXCLUDE_HIST';
  
    insert /*+ append */
    into ap_antifraud.TRIGGER_546_EXCLUDE_HIST
    
    --------SETTING 3: ACTIVE + UNKONWN RECEIVER PHONE
    
      SELECT EX.*
        FROM ap_antifraud.TRIGGER_546_EXPRESS EX
        JOIN DM_ANTIFRAUD.FT_AF_CREDIT_CASE_AD FF
          ON FF.SKp_CLIENT = EX.SKp_CLIENT
         AND FF.TEXT_MOBILE_CLIENT <> EX.PHONE
       WHERE 1 = 1
         AND FF.DATE_DECISION >= SYSDATE - 365
         AND EX.TEXT_MOBILE_CLIENT <> EX.PHONE
         AND EX.PHONE <> EX.EMPLOYER_PHONE
         AND EX.PHONE <> EX.TEXT_MOBILE_PARENT
         AND EX.PHONE <> EX.TEXT_MOBILE_SPOUSE
         AND EX.PHONE <> EX.TEXT_MOBILE_SUPPLY;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := 'STEP10 LAST APP ';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'truncate table ap_antifraud.TRIGGER_546_LASTAPP';
  
    insert /*+ append */
    into ap_antifraud.TRIGGER_546_LASTAPP
    
    --------SETTING 4: clients repeat buying same goods within 7 days
    
      SELECT AA.*,
             ROW_NUMBER() OVER(PARTITION BY SKp_CLIENT ORDER BY dtime_decision ASC) AS RNK
        FROM (SELECT DISTINCT CC.dtime_decision,
                              CC.TEXT_CONTRACT_NUMBER,
                              CASE
                                WHEN CC.SKP_CREDIT_TYPE = 2 AND
                                     CC.skp_product_channel = 2 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL IN (3, 7) THEN
                                 'WCL' --POS AND SMARTPOS  
                                WHEN CC.SKP_CREDIT_TYPE = 2 AND
                                     CC.skp_product_channel = 2 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL = 6 THEN
                                 'ACL'
                                WHEN CC.SKP_CREDIT_TYPE = 2 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL = 2 AND
                                     CC.skp_product_channel = 1 THEN
                                 'XCL_TELE'
                                WHEN CC.SKP_CREDIT_TYPE = 2 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL = 8 AND
                                     CC.skp_product_channel = 1 THEN
                                 'XCL_CAPP'
                                WHEN CC.SKP_CREDIT_TYPE = 2 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL IN (3, 7) THEN
                                 'XCL_POS'
                                WHEN CC.SKP_CREDIT_TYPE = 2 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL = 2 AND
                                     CC.skp_product_channel = 201 THEN
                                 'TOPUP_TELE'
                                WHEN CC.SKP_CREDIT_TYPE = 2 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL = 8 AND
                                     CC.skp_product_channel = 201 THEN
                                 'TOPUP_CAPP'
                                WHEN CC.SKP_CREDIT_TYPE = 1 AND CC.SKP_CREDIT_ACQUISITION_CHNL IN
                                     (3, 7, 5) THEN
                                 'POSL'
                                WHEN CC.SKP_CREDIT_TYPE = 1 AND
                                     CC.SKP_PRODUCT_CHANNEL = 804 THEN
                                 'RPOS'
                                WHEN CC.SKP_CREDIT_TYPE = 1 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL = 6 THEN
                                 'POSL_CITIC'
                                WHEN CC.SKP_CREDIT_TYPE = 1 AND
                                     CC.SKP_CREDIT_ACQUISITION_CHNL = 21 THEN
                                 'ALDI2.0'
                                WHEN CC.SKP_CREDIT_ACQUISITION_CHNL = 4 AND
                                     CC.SKP_CREDIT_TYPE = 2 THEN
                                 'MINI'
                                WHEN CC.SKP_CREDIT_ACQUISITION_CHNL = 4 AND
                                     CC.SKP_CREDIT_TYPE = 1 THEN
                                 'ESHOP'
                                WHEN CC.SKP_CREDIT_TYPE = 3 THEN
                                 'IL'
                                WHEN CC.SKP_CREDIT_TYPE = 4 THEN
                                 'HCP'
                              END AS LOAN_TYPE,
                              CC.SKP_CREDIT_CASE,
                              CC.DATE_DECISION,
                              CC.SKP_CREDIT_TYPE,
                              CC.SKp_CLIENT,
                              CC.SKP_CREDIT_STATUS,
                              CASE
                                WHEN CC.CODE_RPOS_TYPE = '1' THEN
                                 'Online'
                                ELSE
                                 'Offline'
                              END AS CHANNEL_TYPE
                FROM ap_antifraud.TRIGGER_546_EXCLUDE_TEST BB
                JOIN OWNER_DWH.DC_CREDIT_CASE CC
                  ON BB.SKp_CLIENT = CC.SKp_CLIENT
               WHERE CC.DATE_DECISION >= SYSDATE - 50
                 AND CC.SKP_CREDIT_STATUS IN (2, 3, 5)
                 AND CC.SKP_CREDIT_TYPE = 1 -----not normal last application, but last active posl application
              ) AA;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := 'STEP11 GOODS ';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'truncate table ap_antifraud.TRIGGER_546_GOODS';
  
    insert /*+ append */
    into ap_antifraud.TRIGGER_546_GOODS
    
      SELECT DISTINCT LL.*,
                      FF.TEXT_MOBILE_CLIENT,
                      FF.TEXT_MOBILE_SPOUSE,
                      FF.TEXT_MOBILE_PARENT,
                      FF.TEXT_MOBILE_SUPPLY,
                      FF.TEXT_PHONE_AREA_CODE_EMPLOYER ||
                      FF.TEXT_EMPLOYER_PHONE AS EMPLOYER_PHONE,
                      FF.NAME_LAST_SPOUSE,
                      FF.NAME_LAST_PARENT,
                      FF.NAME_LAST_SUPPLY,
                      FF.NAME_EMPLOYER,
                      FF.CODE_SALESROOM,
                      FF.AMT_CREDIT,
                      GTY.NAME_GOODS_TYPE AS GOODS,
                      CASE
                        WHEN PG.TEXT_GOODS_DESC = 'XNA' THEN
                         FF.TEXT_BRAND_EXP || FF.TEXT_MODEL_EXP
                        ELSE
                         TEXT_GOODS_DESC
                      END AS GOODS_DETAILS
        FROM ap_antifraud.TRIGGER_546_LASTAPP LL
        JOIN ap_antifraud.TRIGGER_546_dm_table FF
          ON FF.DATE_DECISION = LL.DATE_DECISION
         AND FF.SKP_CREDIT_CASE = LL.SKP_CREDIT_CASE
         AND FF.SKP_CREDIT_TYPE = LL.SKP_CREDIT_TYPE
        JOIN OWNER_DWH.F_PURCHASED_GOODS_TT PG
          ON PG.SKP_CREDIT_CASE = LL.SKP_CREDIT_CASE
         AND PG.SKP_CREDIT_TYPE = LL.SKP_CREDIT_TYPE
         AND PG.DATE_DECISION = LL.DATE_DECISION
        JOIN OWNER_DWH.DC_GOODS_TYPE GTY
          ON PG.SKP_GOODS_TYPE = GTY.SKP_GOODS_TYPE
       WHERE PG.SKP_CREDIT_TYPE = 1
         AND PG.DATE_DECISION > SYSDATE - 50;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := 'STEP12 ALL HIT ';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'truncate table ap_antifraud.TRIGGER_546_ALL_HIT';
  
    insert /*+ append */
    into ap_antifraud.TRIGGER_546_ALL_HIT
      SELECT PHONE, SUBSTR(PHONE_TYPE, 1, 200) AS PHONE_TYPE
        FROM (SELECT DISTINCT PHONE,
                              LISTAGG(ROLES || HOMERID || PHONE_TYPE, ';') WITHIN GROUP(ORDER BY PHONE) OVER(PARTITION BY PHONE) AS PHONE_TYPE
                FROM (SELECT DISTINCT PP.PHONE,
                                      EE.NAME_LAST ||
                                      EE.TEXT_USERNAME_EMPLOYEE AS HOMERID,
                                      CASE
                                        WHEN CL.NAME_BANK_ROLE_EN LIKE '%DSM%' OR
                                             CL.NAME_BANK_ROLE_ABBR_EN LIKE
                                             '%DSM%' THEN
                                         'DSM'
                                        WHEN UPPER(NAME_BANK_ROLE_EN) LIKE
                                             '%TELE%' THEN
                                         'TELESALES'
                                        WHEN EE.SKP_BANK_ROLE = 33 OR
                                             EE.TEXT_REMARK = 'SA' OR
                                             SUBSTR(EE.TEXT_USERNAME_EMPLOYEE,
                                                    1,
                                                    1) = '5' THEN
                                         'SA'
                                        WHEN EE.SKP_BANK_ROLE = 45 OR
                                             EE.TEXT_REMARK = 'RA' OR
                                             SUBSTR(EE.TEXT_USERNAME_EMPLOYEE,
                                                    1,
                                                    1) = '6' THEN
                                         'RA'
                                      END AS ROLES,
                                      'OWNER ' || EE.NAME_LAST || 'BY DC_EMP' AS PHONE_TYPE
                        FROM ap_antifraud.TRIGGER_546_EXCLUDE_HIST PP
                        JOIN OWNER_DWH.DC_EMPLOYEE EE
                          ON PP.PHONE = EE.TEXT_CELLPHONE
                        JOIN OWNER_DWH.CL_BANK_ROLE CL
                          ON EE.SKP_BANK_ROLE = CL.SKP_BANK_ROLE
                       WHERE 1 = 1
                      UNION ALL
                      SELECT DISTINCT CC.PHONE,
                                      TI.NAME_TIPPER ||
                                      TI.TEXT_IDENT_CARD_NUMBER,
                                      'TIPPER',
                                      ' BY DC_TIP'
                        FROM ap_antifraud.TRIGGER_546_EXCLUDE_HIST CC
                        JOIN owNER_DWH.DC_TIPPER TI
                          ON TI.TEXT_PHONE_NUMBER = CC.PHONE
                      UNION ALL
                      SELECT DISTINCT PP.PHONE,
                                      NAME_LAST || EE.TEXT_USERNAME_EMPLOYEE,
                                      CASE
                                        WHEN CL.NAME_BANK_ROLE_EN LIKE '%DSM%' OR
                                             CL.NAME_BANK_ROLE_ABBR_EN LIKE
                                             '%DSM%' THEN
                                         'DSM'
                                        WHEN UPPER(NAME_BANK_ROLE_EN) LIKE
                                             '%TELE%' THEN
                                         'TELESALES'
                                        WHEN EE.SKP_BANK_ROLE = 33 OR
                                             EE.TEXT_REMARK = 'SA' OR
                                             SUBSTR(EE.TEXT_USERNAME_EMPLOYEE,
                                                    1,
                                                    1) = '5' THEN
                                         'SA'
                                        WHEN EE.SKP_BANK_ROLE = 45 OR
                                             EE.TEXT_REMARK = 'RA' OR
                                             SUBSTR(EE.TEXT_USERNAME_EMPLOYEE,
                                                    1,
                                                    1) = '6' THEN
                                         'RA'
                                      END AS ROLES,
                                      UPPER(FA.PHONE_TYPE || ' BY ' ||
                                            FA.VENDOR) AS PHONE_TYPE
                        FROM ap_antifraud.TRIGGER_546_EXCLUDE_HIST PP
                        JOIN ap_ANTIFRAUD.F_SA_PHONE FA
                          ON PP.PHONE = FA.PHONE
                         AND FA.FLAG_HIT = 1
                         AND (FA.REMARK NOT LIKE '%not%' OR FA.REMARK IS NULL)
                         AND FA.PHONE_TYPE NOT LIKE '%COLL%' ---EXCLUDE COLLECTION
                        LEFT JOIN OWNER_DWH.DC_EMPLOYEE EE
                          ON EE.TEXT_IDENT_NUMBER = FA.IDENT
                        LEFT JOIN OWNER_DWH.CL_BANK_ROLE CL
                          ON EE.SKP_BANK_ROLE = CL.SKP_BANK_ROLE
                      UNION ALL
                      SELECT DISTINCT PP.PHONE,
                                      NAME_LAST || EE.TEXT_USERNAME_EMPLOYEE,
                                      'RA',
                                      'OWNER ' || EE.NAME_LAST || 'BY DC_EMP' AS PHONE_TYPE
                        FROM ap_antifraud.TRIGGER_546_EXCLUDE_HIST PP
                        JOIN OWNER_DWH.DC_EMPLOYEE EE
                          ON (PP.PHONE = EE.TEXT_RA_CELLPHONE_1 OR
                             PP.PHONE = EE.TEXT_RA_CELLPHONE_2 OR
                             PP.PHONE = EE.TEXT_RA_CELLPHONE_3 OR
                             PP.PHONE = EE.TEXT_RA_EMERGENCY_CONTACT)
                      UNION ALL
                      SELECT DISTINCT PHONE,
                                      NVL(POS.CODE_SALESROOM,
                                          POS.NAME_SALESROOM),
                                      'POS' AS TYPE,
                                      ' BY DC_POS'
                        FROM ap_antifraud.TRIGGER_546_EXCLUDE_HIST PP
                        JOIN OWNER_DWH.DC_SALESROOM POS
                          ON PP.PHONE = POS.TEXT_MAIN_CONTACT_CELLPHONE
                      UNION ALL
                      SELECT /*full(aa) use_hash(ph aa) parallel(2) PQ_DISTRIBUTE(ph hash,hash) PQ_DISTRIBUTE(aa hash,hash) */
                      DISTINCT PHONE,
                               AA.NAME_LAST || PH.MOBILE_TYPE ||
                               PH.TEXT_CONTRACT_NUMBER,
                               'Client' AS TYPE,
                               ''
                        FROM ap_antifraud.TRIGGER_546_EXCLUDE_HIST PP
                        JOIN AP_ANTIFRAUD.F_AF_ALL_PHONE_CHARLOTTE PH
                          ON PH.MOBILE = PP.PHONE
                         AND PP.SKp_CLIENT <> PH.SKp_CLIENT
                        JOIN OWNER_DWH.DC_CLIENT AA
                          ON PH.SKp_CLIENT = AA.SKP_CLIENT
                         and AA.SKP_CLIENT > 0));
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := 'STEP13 COMBINATION';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'truncate table ap_antifraud.TRIGGER_546_COMBINATION';
  
    insert /*+ append */
    into ap_antifraud.TRIGGER_546_COMBINATION
    
      SELECT CODE_SALESROOM,
             SKP_CREDIT_CASE,
             TEXT_CONTRACT_NUMBER,
             SKp_CLIENT,
             SKP_CREDIT_TYPE,
             DATE_DECISION,
             CHANNEL_TYPE,
             MAX(TRIGGER_SOURCE) OVER(PARTITION BY SKP_CREDIT_CASE) AS TRIGGER_SOURCE,
             LISTAGG(TRIGGER_VALUE, ';') WITHIN GROUP(ORDER BY TRIGGER_SOURCE DESC) OVER(PARTITION BY SKP_CREDIT_CASE) AS TRIGGER_VALUE
        FROM (SELECT /*+ no_merge(rp) no_merge(al) */
               RP.CODE_SALESROOM,
               RP.SKP_CREDIT_CASE,
               RP.TEXT_CONTRACT_NUMBER,
               RP.SKp_CLIENT,
               RP.SKP_CREDIT_TYPE,
               RP.DATE_DECISION,
               CHANNEL_TYPE,
               '1RPOS - unknown receiver phone' AS TRIGGER_SOURCE,
               '客户使用的收件人电话归属未知,与客户电话不同,曾属于' || NVL(AL.PHONE_TYPE, '无') || ')' AS TRIGGER_VALUE
              ---\*||CASE WHEN PO.SKP_CREDIT_CASE IS NOT NULL THEN '。收货地址和POS地址相似：'||PO.POS_ADDRESS_SIMI||'。'END*\   
                FROM ap_antifraud.TRIGGER_546_EXCLUDE_HIST RP
              --PHONE DETAILS
                LEFT JOIN ap_antifraud.TRIGGER_546_ALL_HIT AL
                  ON RP.PHONE = AL.PHONE
              ---POS SIMIL
              ---CLIENT ADDRESS
                JOIN OWNER_DWH.F_APPLICATION_ADDRESS_TT ADRS
                  ON RP.SKP_CREDIT_CASE = ADRS.SKP_CREDIT_CASE
                 AND RP.DATE_DECISION = ADRS.DATE_DECISION
                 AND RP.SKP_CREDIT_TYPE = ADRS.SKP_CREDIT_TYPE
                 AND ADRS.SKP_ADDRESS_TYPE = 2
                 AND ADRS.DATE_DECISION >= SYSDATE - 15
                 AND ADRS.SKP_CREDIT_TYPE = 1
                JOIN OWNER_DWH.CL_PROVINCE CLP
                  ON ADRS.SKP_PROVINCE = CLP.SKP_PROVINCE
                JOIN OWNER_DWH.DC_CITY RR
                  ON ADRS.SKP_CITY = RR.SKP_CITY
               WHERE RECEIVER_ADDRESS <>
                     CLP.NAME_PROVINCE || CASE
                       WHEN CLP.NAME_PROVINCE IN ('北京', '天津', '上海') THEN
                        '市'
                       ELSE
                        '省'
                     END || RR.NAME_CITY || '市' || ADRS.CODE_STREET
              UNION
              SELECT CODE_SALESROOM,
                     SKP_CREDIT_CASE,
                     TEXT_CONTRACT_NUMBER,
                     SKp_CLIENT,
                     SKP_CREDIT_TYPE,
                     DATE_DECISION,
                     CHANNEL_TYPE,
                     TRIGGER_SOURCE,
                     RANK() OVER(PARTITION BY 1 ORDER BY SKp_CLIENT) || ']-' || TRIGGER_VALUE_RAW AS TRIGGER_VALUE
                FROM (SELECT /*+ no_merge(rp) */
                       CODE_SALESROOM,
                       SKP_CREDIT_CASE,
                       TEXT_CONTRACT_NUMBER,
                       SKp_CLIENT,
                       SKP_CREDIT_TYPE,
                       DATE_DECISION,
                       CHANNEL_TYPE,
                       '3RPOS - receiver address like college' AS TRIGGER_SOURCE,
                       '客户收件地址类似学校' AS TRIGGER_VALUE_RAW
                        FROM ap_antifraud.TRIGGER_546_COLLEGE RP
                      UNION
                      SELECT /*+ no_merge(rp) no_merge(l) no_merge(ll) */
                       LL.CODE_SALESROOM,
                       LL.SKP_CREDIT_CASE,
                       LL.TEXT_CONTRACT_NUMBER,
                       LL.SKp_CLIENT,
                       LL.SKP_CREDIT_TYPE,
                       LL.DATE_DECISION,
                       RP.CHANNEL_TYPE,
                       '3RPOS - receiver address like college' AS TRIGGER_SOURCE,
                       '客户申请RPOS时收件地址类似学校，本单是POSL' AS TRIGGER_VALUE_RAW
                        FROM ap_antifraud.TRIGGER_546_COLLEGE RP
                        JOIN ap_antifraud.TRIGGER_546_COLLEGE_LASTAPP L
                          ON RP.DATE_DECISION = L.DATE_DECISION
                         AND RP.SKP_CREDIT_TYPE = L.SKP_CREDIT_TYPE
                         AND RP.SKP_CREDIT_CASE = L.SKP_CREDIT_CASE
                        JOIN ap_antifraud.TRIGGER_546_COLLEGE_LASTAPP LL
                          ON L.SKp_CLIENT = LL.SKp_CLIENT
                         AND L.RNK = LL.RNK + 1
                         AND L.DATE_DECISION - LL.DATE_DECISION <= 365
                         AND LL.LOAN_TYPE = 'POSL'
                         AND LL.SKP_CREDIT_STATUS IN (2, 3, 5))
              UNION
              SELECT /*+ no_merge(cu) no_merge(rp) */
               CODE_SALESROOM,
               SKP_CREDIT_CASE,
               TEXT_CONTRACT_NUMBER,
               SKp_CLIENT,
               SKP_CREDIT_TYPE,
               DATE_DECISION,
               CHANNEL_TYPE,
               '4RPOS - sharing same receiver phone' AS TRIGGER_SOURCE,
               '[' || CU.PHONE_GROUP || ']-' || CU.CNT_CLIENT ||
               '个客户共用同一收件人手机号。一个月内涉及的合同-' || CU.CONTRACT_DETAIL AS TRIGGER_VALUE
                FROM ap_antifraud.TRIGGER_546_CUTOFF CU
                JOIN ap_antifraud.TRIGGER_546_EXPRESS RP
                  ON CU.PHONE = RP.PHONE
              
              UNION
              SELECT DISTINCT PH.CODE_SALESROOM,
                              PH.SKP_CREDIT_CASE,
                              PH.TEXT_CONTRACT_NUMBER,
                              PH.SKp_CLIENT,
                              PH.SKP_CREDIT_TYPE,
                              PH.DATE_DECISION,
                              PH.CHANNEL_TYPE,
                              '2RPOS - clients repeat buying same goods within 7 days' AS TRIGGER_SOURCE,
                              '客户在一周内重复购买同一种商品-' || ph.GOODS || '。RPOS' ||
                              PH.CHANNEL_TYPE || '合同' ||
                              PH.TEXT_CONTRACT_NUMBER || '购买商品' || PH.GOODS ||
                              PH.GOODS_DETAILS || '及' || PHH.LOAN_TYPE || '合同' ||
                              PHH.TEXT_CONTRACT_NUMBER || '购买商品' ||
                              PHH.GOODS || PHH.GOODS_DETAILS AS TRIGGER_VALUE
                FROM ap_antifraud.TRIGGER_546_GOODS PH
                JOIN ap_antifraud.TRIGGER_546_GOODS PHH
                  ON PH.SKp_CLIENT = PHH.SKp_CLIENT
                 AND PH.GOODS = PHH.GOODS
                 AND PH.RNK = PHH.RNK + 1
                 AND PH.LOAN_TYPE = 'RPOS'
                 AND PH.DATE_DECISION - PHH.DATE_DECISION <= 7 ----
               WHERE PH.LOAN_TYPE = 'RPOS'
/*                 AND PH.GOODS NOT IN ('化妆品',
                                      '品牌衣物及饰品',
                                      '其他电脑及办公通讯类',
                                      '其他时尚消费品',
                                      '手机配件',
                                      '小型家用电器',
                                      '珠宝/手表',
                                      '珠宝首饰及配饰') --2020/08/04 add, 20210609 remove */
              );
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    v_step_message := 'STEP14 PRE SELECTION';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    insert into AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
    
      SELECT /*+ dynamic_sampling(8) OPT_PARAM('optimizer_index_cost_adj',500) parallel(4) no_merge(rp) no_merge(orbp) no_merge(ex) */
      DISTINCT 'POS' AS UNIT,
               RP.CODE_SALESROOM AS ID_ENTITY,
               TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
               TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
               '546' AS CLASS,
               SUBSTR(RP.TRIGGER_SOURCE, 2) AS TRIGGER_SOURCE,
               RP.TRIGGER_VALUE || '该客户近半年共进行ORBP' ||
               NVL(ORBP.CNT_ORBP, '0') || '次，具体记录：' ||
               NVL(ORBP.ORBP_DETAILS, '无。') || CASE
                 WHEN RP.CHANNEL_TYPE = 'Online' THEN ------------==========2020/08/04
                  '收件人及电话：' || EX.NAME_RECEIVER || EX.PHONE || '(' ||
                  EX.FLAG_OWNER || ')' || '。收件地址：' || EX.RECEIVER_ADDRESS ||
                  '。目前状态：' || EX.CODE_PURCHASE_STATUS || '。快递单号' ||
                  EX.LOGISTICS_COMPANY || EX.LOGISTICS_LIST
               END || ',商品是' || GTY.NAME_GOODS_TYPE || ',价格是' ||
               TT.AMT_GOODS_PRICE || ',品牌及型号' || TT.TEXT_GOODS_DESC AS TRIGGER_VALUE --20201105
              ,
               'SOFT' AS TRIGGER_TYPE,
               RP.SKP_CREDIT_CASE,
               RP.TEXT_CONTRACT_NUMBER
        FROM ap_antifraud.TRIGGER_546_COMBINATION RP
      ---ORBP
        LEFT JOIN ap_antifraud.TRIGGER_546_ORBP orbp
          ON ORBP.SKp_CLIENT = RP.SKp_CLIENT
      ---GOODS
        JOIN OWNER_DWH.F_PURCHASED_GOODS_TT TT
          ON RP.DATE_DECISION = TT.DATE_DECISION
         AND RP.SKP_CREDIT_TYPE = TT.SKP_CREDIT_TYPE
         AND RP.SKP_CREDIT_CASE = TT.SKP_CREDIT_CASE
         AND TT.SKP_CREDIT_TYPE = 1
         AND TT.DATE_DECISION >= SYSDATE - 34
        JOIN OWNER_DWH.DC_GOODS_TYPE GTY
          ON TT.SKP_GOODS_TYPE = GTY.SKP_GOODS_TYPE --20201105
      ---EXPRESS
        LEFT JOIN ap_antifraud.TRIGGER_546_EXPRESS EX
          ON RP.DATE_DECISION = EX.DATE_DECISION
         AND RP.SKP_CREDIT_TYPE = EX.SKP_CREDIT_TYPE
         AND RP.SKP_CREDIT_CASE = EX.SKP_CREDIT_CASE
      ----EXCLUDE TRIGGERED
        LEFT JOIN AP_ANTIFRAUD.F_AF_FINAL_FRAUD_CONTRACTS AFF
          ON AFF.CLASS = 546
         AND AFF.SKP_CREDIT_CASE = RP.SKP_CREDIT_CASE
       WHERE AFF.SKP_CREDIT_CASE IS NULL;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    -- procedure end
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'end');
  END IF;
EXCEPTION
  WHEN OTHERS THEN
    -- ROBOTS_LOG
    owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                               p_step            => v_step_message,
                                               p_additional_info => NULL);
    -- process_log  
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => SQLCODE,
                                  p_msg    => 'Error in step (' ||
                                              v_step_message || ') - ' ||
                                              substr(SQLERRM, 1, 150));
    RAISE;
END;


PROCEDURE TRIGGER_550_RPOS_SIMI_REC_ADDR IS
  v_stepnum      INTEGER DEFAULT 0;
  v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
  v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
  v_err_txt      VARCHAR2(70);
  v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
  l_rowcount integer;
BEGIN
  -- default procedure name: length       
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_550_RPOS';
  -- check whether the process need to run
  IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy,
                                          p_name  => v_dealprc,
                                          p_date  => trunc(SYSDATE)) IN
     ('Not Started', 'Failed') THEN
    -- procedure start
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'start');
  
    --! report robots log start
    ---------------------------------------------------------------------------------
    v_step_message := 'STEP:550_RPOS_SIMI_REC_ADDR';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
      SELECT '550 RPOS–Similar Receiver Address', SYSDATE FROM DUAL;
    COMMIT;
    ----RPOS-similar receiver address
    EXECUTE IMMEDIATE 'TRUNCATE TABLE AP_ANTIFRAUD.F_KATE_RPOS_ADDRESS';
    INSERT INTO AP_ANTIFRAUD.F_KATE_RPOS_ADDRESS
      WITH BASE AS
       (SELECT CC.SKP_CREDIT_TYPE,
               CC.DATE_DECISION --,TRUNC(DATE_DECISION,'IW' )+6 AS WEEK_DECISION 
              ,
               CC.SKp_CLIENT,
               CC.SKP_CREDIT_CASE,
               CC.TEXT_CONTRACT_NUMBER,
               SKP_CREDIT_STATUS
          FROM OWNER_DWH.DC_CREDIT_CASE CC
          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
            ON EX.CLASS = '550'
           AND CC.DATE_DECISION >= EX.MAX_DETECT - 31
           AND CC.DATE_DECISION <= SYSDATE - 1
         WHERE CC.DATE_DECISION >= SYSDATE - 30
           AND CC.SKP_PRODUCT_CHANNEL = 804
           AND CC.SKP_CREDIT_TYPE = 1)
      
      ,
      EXCLUDE_TEST AS
       (SELECT NN.DATE_DECISION,
               NN.SKP_CREDIT_TYPE,
               NN.SKP_CREDIT_CASE,
               NN.SKp_CLIENT,
               NN.TEXT_CONTRACT_NUMBER,
               NN.SKP_CREDIT_STATUS
          FROM BASE NN
          JOIN OWNER_DWH.f_contract2camp_acc_poffer_at BB
            ON NN.SKP_CREDIT_CASE = BB.SKP_CREDIT_CASE
           AND NN.DATE_DECISION = BB.DATE_DECISION
           AND NN.SKP_CREDIT_TYPE = BB.SKP_CREDIT_TYPE
          JOIN OWNER_DWH.F_CAMPAIGN_ACCOUNT_POFFER_TT pp
            ON BB.SKF_CAMPAIGN_ACCOUNT_POFFER =
               PP.SKF_CAMPAIGN_ACCOUNT_POFFER
         WHERE PP.CODE_XCL_PILOT != 'RBPPILOTB'
           AND PP.TEXT_XELL_RISK_PILOT != 'RPOSTEST'
           AND BB.SKP_CREDIT_TYPE = 1
           AND BB.DATE_DECISION >= SYSDATE - 30)
      
      SELECT NN.SKP_CREDIT_CASE,
             NN.SKp_CLIENT,
             NN.DATE_DECISION,
             NN.SKP_CREDIT_STATUS,
             NN.TEXT_CONTRACT_NUMBER,
             NN.SKP_CREDIT_TYPE,
             AD.CODE_PURCHASE_STATUS,
             AD.CODE_PURCHASE_CANCELATION,
             AD.NAME_RECEIVER_PROVINCE,
             AD.NAME_RECEIVER_CITY,
             AD.NAME_RECEIVER,
             AD.NAME_RECEIVER_ADDRESS,
             AD.NAME_RECEIVER_DISTRICT,
             FF.NAME_LAST_CLIENT,
             FF.NAME_LAST_SPOUSE,
             FF.NAME_LAST_PARENT,
             FF.NAME_LAST_SUPPLY,
             FF.NAME_EMPLOYER,
             FF.TEXT_MOBILE_CLIENT,
             FF.TEXT_MOBILE_SPOUSE,
             FF.TEXT_MOBILE_PARENT,
             FF.TEXT_MOBILE_SUPPLY,
             FF.TEXT_PHONE_AREA_CODE_EMPLOYER || FF.TEXT_EMPLOYER_PHONE AS EMPLOYER_PHONE,
             FF.CODE_SALESROOM,
             REPLACE(AD.NAME_RECEIVER_PROVINCE || AD.NAME_RECEIVER_CITY ||
                     AD.NAME_RECEIVER_DISTRICT || CASE
                       WHEN NAME_RECEIVER_ADDRESS LIKE '%省%' THEN
                        SUBSTR(NAME_RECEIVER_ADDRESS,
                               INSTR(NAME_RECEIVER_ADDRESS, '省') + 1)
                       ELSE
                        NAME_RECEIVER_ADDRESS
                     END,
                     'XNA') AS RECEIVER_ADDRESS
        FROM BASE NN
        JOIN DM_ANTIFRAUD.FT_AF_CREDIT_CASE_AD FF
          ON NN.DATE_DECISION = FF.DATE_DECISION
         AND NN.SKP_CREDIT_TYPE = FF.SKP_CREDIT_TYPE
         AND NN.SKP_CREDIT_CASE = FF.SKP_CREDIT_CASE
        LEFT JOIN OWNER_DWH.F_MP_PURCHASE_AD AD
          ON NN.SKP_CREDIT_CASE = AD.SKP_CREDIT_CASE
       WHERE FF.SKP_CREDIT_TYPE = 1
         AND FF.DATE_DECISION >= SYSDATE - 30;
    COMMIT;
    -----------------=============DROP TABLE F_ADDRESS_LOOP_BASE
    EXECUTE IMMEDIATE 'TRUNCATE TABLE AP_ANTIFRAUD.F_ADDRESS_LOOP_BASE';
    INSERT INTO AP_ANTIFRAUD.F_ADDRESS_LOOP_BASE
      WITH BASE AS
       (SELECT DISTINCT DATE_DECISION,
                        SKP_CREDIT_CASE,
                        SKp_CLIENT,
                        SKP_CREDIT_STATUS,
                        REPLACE(NAME_RECEIVER_PROVINCE, 'XNA') AS NAME_RECEIVER_PROVINCE,
                        REPLACE(NAME_RECEIVER_CITY, 'XNA') AS NAME_RECEIVER_CITY,
                        RECEIVER_ADDRESS AS ADDRESS_TEST
          FROM F_KATE_RPOS_ADDRESS AD
         WHERE AD.NAME_RECEIVER_PROVINCE IS NOT NULL
           AND NAME_RECEIVER_PROVINCE <> 'XNA'
           AND AD.NAME_RECEIVER_CITY IS NOT NULL
           AND NAME_RECEIVER_CITY <> 'XNA'
           AND AD.NAME_RECEIVER_DISTRICT <> 'asdasd123' ---TEST
        )
      ---check 1: preprocess the ADDRESS_TEST
      ,
      SIMI AS
       (SELECT AA.SKP_CREDIT_CASE AS A_CASE,
               BB.SKP_CREDIT_CASE AS B_CASE,
               AA.ADDRESS_TEST AS A_ADDRESS_TEST,
               BB.ADDRESS_TEST AS B_ADDRESS_TEST,
               SYS.UTL_MATCH.EDIT_DISTANCE_SIMILARITY(AA.ADDRESS_TEST,
                                                      BB.ADDRESS_TEST) AS SCORE
          FROM BASE AA
          JOIN BASE BB
            ON AA.NAME_RECEIVER_PROVINCE = BB.NAME_RECEIVER_PROVINCE
           AND AA.NAME_RECEIVER_CITY = BB.NAME_RECEIVER_CITY --SAME CITY
           AND AA.SKp_CLIENT <> BB.SKp_CLIENT
           AND SYS.UTL_MATCH.EDIT_DISTANCE_SIMILARITY(AA.ADDRESS_TEST,
                                                      BB.ADDRESS_TEST) >= 80 ---cutoff
        )
      ---check 2: similarity
      SELECT DISTINCT * --SCORE, COUNT(DISTINCT a_case) 
        FROM SIMI;
    COMMIT;
  
    ---------Step 2： loop to find cluster
    ---------Step2.1: base table 
    EXECUTE IMMEDIATE 'TRUNCATE TABLE AP_ANTIFRAUD.F_LOOP_ADDRESS_WEEKLY';
    INSERT INTO AP_ANTIFRAUD.F_LOOP_ADDRESS_WEEKLY
      SELECT DISTINCT A_CASE,
                      BB.B_CASE,
                      RANK() OVER(ORDER BY A_CASE) AS ORD,
                      0 AS TIMES
        FROM AP_ANTIFRAUD.F_ADDRESS_LOOP_BASE BB;
    COMMIT;
  
    ---------Step2.2: find group ID
    DECLARE
      I NUMBER := 1;
    BEGIN
      WHILE (i < 10) LOOP
      
        INSERT INTO AP_ANTIFRAUD.F_LOOP_ADDRESS_WEEKLY
          WITH BASE AS
           (SELECT A_CASE, MIN(ORD) AS ORD
              FROM (SELECT DISTINCT BB.A_CASE, ORD
                      FROM AP_ANTIFRAUD.F_LOOP_ADDRESS_WEEKLY BB
                    UNION
                    SELECT DISTINCT BB.B_CASE, ORD
                      FROM AP_ANTIFRAUD.F_LOOP_ADDRESS_WEEKLY BB)
             GROUP BY A_CASE)
          
          ,
          AA AS
           (SELECT a_case, MIN(ord) AS ORD
              FROM (SELECT DISTINCT BB.A_CASE, LEAST(BB.ORD, CC.ORD) AS ord
                      FROM BASE BB
                      JOIN AP_ANTIFRAUD.F_LOOP_ADDRESS_WEEKLY CC
                        ON (BB.A_CASE = CC.B_CASE OR BB.A_CASE = CC.A_CASE))
             GROUP BY A_CASE)
          
          SELECT EE.b_CASE, EE.a_CASE, AA.ORD, I AS TIMES
            FROM AA
            JOIN AP_ANTIFRAUD.F_LOOP_ADDRESS_WEEKLY EE
              ON AA.A_CASE = EE.A_CASE;
        COMMIT;
      
        DELETE FROM AP_ANTIFRAUD.F_LOOP_ADDRESS_WEEKLY WHERE TIMES = I - 1;
        COMMIT;
        I := I + 1;
        COMMIT;
      END LOOP;
    END;
  
    INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection
      WITH SZE AS
       (SELECT DISTINCT ORD, B_CASE FROM F_LOOP_ADDRESS_WEEKLY)
      
      ,
      ALL_DETAIL AS
       (SELECT DISTINCT EE.ORD, ac.date_detect, SS.*
          FROM SZE EE
          JOIN AP_ANTIFRAUD.F_LOOP_ADDRESS_WEEKLY AA
            ON EE.ORD = AA.ORD
          JOIN F_KATE_RPOS_ADDRESS SS
            ON AA.A_CASE = SS.SKP_CREDIT_CASE
          left join AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS ac
            on AA.A_CASE = ac.skp_credit_case
           and ac.date_decision >= SYSDATE - 30
           and ac.class = '550')
      
      ,
      CUTOFF AS
       (SELECT ORD,
               COUNT(DISTINCT SKP_CREDIT_CASE) AS CNT_APPLICATION,
               COUNT(DISTINCT SKp_CLIENT) AS CNT_CLIENT,
               count(distinct case
                       when date_detect is not null then
                        skp_credit_case
                       else
                        null
                     end) as cnt_triggered,
               COUNT(DISTINCT CASE
                       WHEN SKP_CREDIT_STATUS IN (2, 3, 5) THEN
                        SKP_CREDIT_CASE
                     END) AS CNT_ACTIVE
          FROM ALL_DETAIL
         GROUP BY ORD
        HAVING COUNT(DISTINCT SKp_CLIENT) > 3)
      
      ,
      DETAIL AS
       (SELECT AL.*, CNT_APPLICATION, CNT_CLIENT, CNT_TRIGGERED
          FROM CUTOFF CU
          JOIN ALL_DETAIL AL
            ON CU.ORD = AL.ORD)
      
      ,
      EXPRESS AS
       (SELECT DISTINCT DATE_DECISION,
                        SKP_CREDIT_TYPE,
                        SKP_CREDIT_CASE,
                        TEXT_CONTRACT_NUMBER,
                        SKP_CREDIT_STATUS,
                        SKp_CLIENT,
                        CODE_SALESROOM,
                        TEXT_MOBILE_CLIENT,
                        TEXT_MOBILE_SPOUSE,
                        TEXT_MOBILE_PARENT,
                        TEXT_MOBILE_SUPPLY,
                        EMPLOYER_PHONE,
                        NAME_RECEIVER,
                        CODE_PURCHASE_STATUS,
                        NAME_RECEIVER_PROVINCE,
                        NAME_RECEIVER_CITY,
                        RECEIVER_ADDRESS,
                        LOGISTICS_LIST,
                        LOGISTICS_COMPANY,
                        PHONE,
                        LISTAGG(FLAG_OWNER, ';') WITHIN GROUP(ORDER BY FLAG_OWNER) OVER(PARTITION BY SKP_CREDIT_CASE, PHONE) AS FLAG_OWNER
          FROM (SELECT DISTINCT NN.*,
                                SS.LOGISTICS_LIST,
                                SS.LOGISTICS_COMPANY,
                                SS.RECEIVER_MOBILE AS PHONE,
                                CASE
                                  WHEN RECEIVER_MOBILE = TEXT_MOBILE_CLIENT THEN
                                   '客户本人号码'
                                  WHEN RECEIVER_MOBILE = TEXT_MOBILE_SPOUSE THEN
                                   '客户配偶' || TEXT_MOBILE_SPOUSE || '号码'
                                  WHEN RECEIVER_MOBILE = TEXT_MOBILE_PARENT THEN
                                   '客户父母' || TEXT_MOBILE_PARENT || '号码'
                                  WHEN RECEIVER_MOBILE = TEXT_MOBILE_CLIENT THEN
                                   '客户雇主' || NAME_EMPLOYER || '号码'
                                  WHEN RECEIVER_MOBILE = TEXT_MOBILE_SUPPLY THEN
                                   '客户紧急联系人' || NAME_LAST_SUPPLY || '号码'
                                  ELSE
                                   'unknown'
                                END AS FLAG_OWNER
                  FROM DETAIL NN
                  JOIN OWNER_DWH.F_APPLICATION_TT PP
                    ON NN.DATE_DECISION = PP.DATE_DECISION
                   AND NN.SKP_CREDIT_TYPE = PP.SKP_CREDIT_TYPE
                   AND NN.SKP_CREDIT_CASE = PP.SKP_CREDIT_CASE
                  JOIN OWNER_OPR.VH_SPX_SYSTRADE_TRADE SS
                    ON PP.ID_external_partner_order = TO_CHAR(SS.TID)
                 WHERE 1 = 1
                   AND PP.SKP_CREDIT_TYPE = 1
                   AND PP.DATE_DECISION >= SYSDATE - 30
                   AND PP.SKP_PRODUCT_CHANNEL = 804))
      
      ,
      ORBP AS
       (SELECT DISTINCT SKp_CLIENT,
                        COUNT(DISTINCT SKF_CAMP_ACC_SOFFER_DETAIL) OVER(PARTITION BY SKp_CLIENT) AS CNT_ORBP,
                        LISTAGG(TO_CHAR(DTIME_INSERTED, 'YYYY-MM-DD') || '使用' ||
                                TEXT_PHONE_NUMBER || '(与客户号码' || FLAG_SAME ||
                                '),结果' || CODE_SCORING_STATUS,
                                ';') WITHIN GROUP(ORDER BY DTIME_INSERTED) OVER(PARTITION BY SKp_CLIENT) || '。' AS ORBP_DETAILS
          FROM (SELECT DISTINCT RP.SKp_CLIENT,
                                OB.DTIME_INSERTED,
                                OB.CODE_SCORING_STATUS,
                                OB.TEXT_PHONE_NUMBER,
                                OB.SKF_CAMP_ACC_SOFFER_DETAIL,
                                TEXT_MOBILE_CLIENT,
                                CASE
                                  WHEN TEXT_MOBILE_CLIENT = TEXT_PHONE_NUMBER THEN
                                   '相同'
                                  ELSE
                                   '不同'
                                END AS FLAG_SAME
                  FROM DETAIL RP
                  JOIN OWNER_DWH.f_Camp_Acc_Soffer_Detail_Tt OB
                    ON RP.SKp_CLIENT = OB.SKp_CLIENT
                   AND TRUNC(OB.DTIME_INSERTED) <= RP.DATE_DECISION ---firstly ORBP then apply
                 WHERE 1 = 1
                   AND DTIME_INSERTED >= SYSDATE - 180))
      
      SELECT DISTINCT 'POS' AS UNIT,
                      FI.CODE_SALESROOM AS ID_ENTITY,
                      TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
                      TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
                      '550' AS CLASS,
                      'RPOS-similar receiver address' AS TRIGGER_SOURCE,
                      'GROUP[' || FI.ORD || ']共涉及' || CNT_APPLICATION ||
                      '单RPOS申请,' || CNT_CLIENT || '个客户,他们的收件地址相似,' || '其中' ||
                      CNT_TRIGGERED || '单申请之前已经被CLASS 550 TRIGGER过。' ||
                      '该客户近半年共进行ORBP' || NVL(ORBP.CNT_ORBP, '0') ||
                      '次，具体记录：' || NVL(ORBP.ORBP_DETAILS, '无。') ||
                      '收件人及电话：' || EX.NAME_RECEIVER || EX.PHONE || '(' ||
                      EX.FLAG_OWNER || ')' || '。收件地址：' ||
                      EX.RECEIVER_ADDRESS || '。目前状态：' ||
                      EX.CODE_PURCHASE_STATUS || '。快递单号' ||
                      EX.LOGISTICS_COMPANY || EX.LOGISTICS_LIST || ',商品：' ||
                      TT.TEXT_GOODS_DESC AS TRIGGER_VALUE,
                      'SOFT' AS TRIGGER_TYPE,
                      FI.SKP_CREDIT_CASE,
                      FI.TEXT_CONTRACT_NUMBER
        FROM DETAIL FI
      ---EXPRESS
        LEFT JOIN EXPRESS EX
          ON FI.DATE_DECISION = EX.DATE_DECISION
         AND FI.SKP_CREDIT_TYPE = EX.SKP_CREDIT_TYPE
         AND FI.SKP_CREDIT_CASE = EX.SKP_CREDIT_CASE
      ---ORBP
        LEFT JOIN ORBP
          ON ORBP.SKp_CLIENT = FI.SKp_CLIENT
      ---GOODS
        JOIN OWNER_DWH.F_PURCHASED_GOODS_TT TT
          ON FI.DATE_DECISION = TT.DATE_DECISION
         AND FI.SKP_CREDIT_TYPE = TT.SKP_CREDIT_TYPE
         AND FI.SKP_CREDIT_CASE = TT.SKP_CREDIT_CASE
       where FI.DATE_DETECT IS NULL
         AND TT.SKP_CREDIT_TYPE = 1
         AND TT.DATE_DECISION >= SYSDATE - 30;
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    COMMIT;
/*  
    v_step_message := '550 setting2 step1';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'TRUNCATE TABLE AP_ANTIFRAUD.F_OL_GPS_DIS';
    insert \*+ append *\
    into F_OL_GPS_DIS
      WITH base AS
       (SELECT DISTINCT dcc.SKP_CREDIT_CASE,
                        dcc.skp_client,
                        dcc.DATE_DECISION,
                        dcc.SKP_CREDIT_STATUS,
                        ev.NUM_GEO_LATITUDE,
                        ev.NUM_GEO_LONGITUDE,
                        1 AS jo,
                        EV.DTIME_EVENT
          FROM OWNER_DWH.DC_CREDIT_CASE dcc
          JOIN OWNER_DWH.f_Mobile_App_Event_Log_Tt ev
            ON dcc.skp_client = ev.SKP_CLIENT
         WHERE 1 = 1
           AND ((DCC.SKP_PRODUCT_CHANNEL = 804 AND DCC.SKP_CREDIT_TYPE = 1) OR
               DCC.skp_product_channel = 1136)
           AND ev.SKP_MOBILE_APP_EVENT_TYPE = 324 -----
           AND DCC.DATE_DECISION = TRUNC(EV.DTIME_EVENT)
           AND dcc.DATE_DECISION >= SYSDATE - 30
           AND ev.NUM_GEO_LATITUDE > 0),
      DTIME AS
       (SELECT SKP_CREDIT_CASE, MAX(DTIME_EVENT) AS MAX_DTIME
          FROM BASE
         GROUP BY SKP_CREDIT_CASE),
      BASE1 AS
       (SELECT A.*
          FROM BASE A
          JOIN DTIME B
            ON A.SKP_CREDIT_CASE = B.SKP_CREDIT_CASE
           AND A.DTIME_EVENT = B.MAX_DTIME),
      dis AS
       (SELECT A.SKP_CREDIT_CASE AS CON1,
               B.SKP_CREDIT_CASE AS CON2,
               A.NUM_GEO_LATITUDE AS LAT1,
               B.NUM_GEO_LATITUDE AS LAT2,
               A.NUM_GEO_LONGITUDE AS LON1,
               B.NUM_GEO_LONGITUDE AS LON2,
               ABS(A.NUM_GEO_LATITUDE - B.NUM_GEO_LATITUDE) AS DIF_LAT,
               ABS(A.NUM_GEO_LONGITUDE - B.NUM_GEO_LONGITUDE) AS DIF_LON
          FROM base1 a
          JOIN base1 b
            ON a.jo = b.jo
         WHERE 1 = 1 --AP_ANTIFRAUD.GETDISTANCE(A.NUM_GEO_LONGITUDE,A.NUM_GEO_LATITUDE,B.NUM_GEO_LONGITUDE,B.NUM_GEO_LATITUDE)<=0.5
           AND a.SKP_CREDIT_CASE <> b.SKP_CREDIT_CASE
           AND a.skp_client <> b.skp_client
           AND ABS(A.NUM_GEO_LATITUDE - B.NUM_GEO_LATITUDE) < 0.01)
      SELECT DIS.con1,
             dis.con2,
             AP_ANTIFRAUD.GETDISTANCE(DIS.LAT1,
                                      DIS.LON1,
                                      DIS.LAT2,
                                      DIS.LON2) AS DISTANCE
        FROM dis; --WHERE DIS.DIF_LAT<0.01 
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    COMMIT;
  
    v_step_message := '550 setting2 step2';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'TRUNCATE TABLE AP_ANTIFRAUD.TRIGGER_GPS_NODE';
    insert \*+ append *\
    into TRIGGER_GPS_NODE
      SELECT A.*, dense_rank() OVER(ORDER BY A.ID) AS NUM
        FROM (SELECT DISTINCT CON1 AS ID
                FROM F_OL_GPS_DIS
               WHERE distance < 0.5
              UNION
              SELECT DISTINCT CON2 AS ID
                FROM F_OL_GPS_DIS
               WHERE distance < 0.5) A;
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    COMMIT;
  
    v_step_message := '550 setting2 step3';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    EXECUTE IMMEDIATE 'TRUNCATE TABLE AP_ANTIFRAUD.TRIGGER_GPS_EDGE';
    insert \*+ append *\
    into TRIGGER_GPS_EDGE
      SELECT DISTINCT CON1   AS SOURCE,
                      CON2   AS TARGET,
                      N1.NUM AS NUM_S,
                      N2.NUM AS NUM_T
        FROM F_OL_GPS_DIS DI
        LEFT JOIN TRIGGER_GPS_NODE N1
          ON DI.CON1 = N1.ID
        LEFT JOIN TRIGGER_GPS_NODE N2
          ON DI.CON2 = N2.ID
       WHERE distance < 0.5;
  
    EXECUTE IMMEDIATE 'TRUNCATE TABLE AP_ANTIFRAUD.TRIGGER_GPS_EDGE1';
  
    insert \*+ append *\
    into TRIGGER_GPS_EDGE1
      SELECT * FROM TRIGGER_GPS_EDGE;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    COMMIT;
  
    v_step_message := '550 setting2 step4 loop';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    DECLARE
      i INT := 1;
    BEGIN
      WHILE i > 0 LOOP
        EXECUTE IMMEDIATE 'truncate table  TRIGGER_GPS_NODE';
        COMMIT;
        INSERT INTO TRIGGER_GPS_NODE
          SELECT ID, MIN(NUM) AS NUM
            FROM (SELECT SOURCE AS ID, NUM_S AS NUM
                    FROM TRIGGER_GPS_EDGE
                  UNION
                  SELECT TARGET AS ID, NUM_T AS NUM
                    FROM TRIGGER_GPS_EDGE)
           GROUP BY ID;
        EXECUTE IMMEDIATE 'TRUNCATE TABLE TRIGGER_GPS_EDGE1';
        COMMIT;
        INSERT INTO TRIGGER_GPS_EDGE1
          SELECT A.SOURCE, A.TARGET, B.NUM AS NUM_S, C.NUM AS NUM_T
            FROM TRIGGER_GPS_EDGE A
            LEFT JOIN TRIGGER_GPS_NODE B
              ON A.SOURCE = B.ID
            LEFT JOIN TRIGGER_GPS_NODE C
              ON A.TARGET = C.ID;
        DECLARE
          X NUMBER;
        BEGIN
          SELECT COUNT(*)
            INTO X
            FROM TRIGGER_GPS_EDGE1
           WHERE NUM_S <> NUM_T;
          i := X;
          IF X > 0 THEN
            EXECUTE IMMEDIATE 'TRUNCATE TABLE TRIGGER_GPS_EDGE';
            COMMIT;
            INSERT INTO TRIGGER_GPS_EDGE
              SELECT SOURCE,
                     TARGET,
                     LEAST(NUM_S, NUM_T) AS NUM_S,
                     LEAST(NUM_S, NUM_T) AS NUM_T
                FROM TRIGGER_GPS_EDGE1;
          END IF;
        END;
      END LOOP;
    END;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    COMMIT;
  
    v_step_message := '550 setting2 step5';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    INSERT INTO AP_ANTIFRAUD.f_Trcontracts_Preselection
      WITH BASE_CON AS
       (SELECT A.*, B.CNT_CON, c.cnt_client
          FROM TRIGGER_GPS_NODE A
          JOIN (SELECT NUM, COUNT(DISTINCT ID) AS CNT_CON
                 FROM TRIGGER_GPS_NODE
                GROUP BY NUM
               HAVING COUNT(ID) >= 3) B
            ON A.NUM = B.NUM
          JOIN (SELECT NUM, COUNT(DISTINCT skp_client) AS cnt_client
                 FROM (SELECT a.*, dcc.skp_client
                         FROM TRIGGER_GPS_NODE a
                         JOIN OWNER_DWH.DC_CREDIT_CASE DCC
                           ON a.ID = DCC.SKP_CREDIT_CASE)
                GROUP BY NUM) c
            ON a.num = c.num),
      tri_con AS
       (SELECT DISTINCT DCC.SKP_CREDIT_CASE,
                        DCC.text_contract_number,
                        con.cnt_con,
                        dcc.DATE_DECISION,
                        dcc.sKP_CREDIT_TYPE,
                        con.num,
                        con.cnt_client,
                        EV.NUM_GEO_LATITUDE,
                        EV.NUM_GEO_LONGITUDE,
                        CASE
                          WHEN dcc.skp_product_channel = 804 AND
                               dcc.SKP_CREDIT_TYPE = 1 THEN
                           'MKP'
                          WHEN DCC.skp_product_channel = 1136 THEN
                           'ONE LIMIT'
                        END AS CONTRACT_TYPE
          FROM BASE_CON CON
          JOIN OWNER_DWH.DC_CREDIT_CASE DCC
            ON CON.ID = DCC.SKP_CREDIT_CASE
          JOIN OWNER_DWH.f_Mobile_App_Event_Log_Tt ev
            ON dcc.skp_client = ev.SKP_CLIENT
           AND DCC.DATE_DECISION = TRUNC(EV.DTIME_EVENT)
         WHERE 1 = 1
           AND ((DCC.SKP_PRODUCT_CHANNEL = 804 AND DCC.SKP_CREDIT_TYPE = 1) OR
               DCC.skp_product_channel = 1136)
           AND ev.SKP_MOBILE_APP_EVENT_TYPE = 324 -----
           AND DCC.DATE_DECISION = TRUNC(EV.DTIME_EVENT)
           AND dcc.DATE_DECISION >= SYSDATE - 30
           AND ev.NUM_GEO_LATITUDE > 0),
      cutoff AS
       (
        
        SELECT c.num, COUNT(DISTINCT ac.SKP_CREDIT_CASE) AS cnt_triggered
          FROM tri_con c
          left join AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS ac
            on c.sKP_CREDIT_CASE = ac.skp_credit_case
           and ac.date_decision >= SYSDATE - 30
           and ac.class = '550'
           AND ac.trigger_source = 'GPS similar'
         GROUP BY c.num),
      detail AS
       (SELECT ss.*,
               c.contract_type,
               c.num,
               c.cnt_con,
               c.cnt_client,
               ac.date_detect,
               cu.cnt_triggered,
               C.NUM_GEO_LATITUDE,
               C.NUM_GEO_LONGITUDE
          FROM tri_con c
          LEFT JOIN F_KATE_RPOS_ADDRESS SS
            ON c.SKP_CREDIT_CASE = SS.SKP_CREDIT_CASE
          left join AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS ac
            on c.sKP_CREDIT_CASE = ac.skp_credit_case
           and ac.date_decision >= SYSDATE - 30
           and ac.class = '550'
           AND ac.trigger_source = 'GPS similar'
          LEFT JOIN cutoff cu
            ON cu.num = c.num),
      EXPRESS AS
       (SELECT DISTINCT DATE_DECISION,
                        SKP_CREDIT_TYPE,
                        SKP_CREDIT_CASE,
                        TEXT_CONTRACT_NUMBER,
                        SKP_CREDIT_STATUS,
                        SKp_CLIENT,
                        CODE_SALESROOM,
                        TEXT_MOBILE_CLIENT,
                        TEXT_MOBILE_SPOUSE,
                        TEXT_MOBILE_PARENT,
                        TEXT_MOBILE_SUPPLY,
                        EMPLOYER_PHONE,
                        NAME_RECEIVER,
                        CODE_PURCHASE_STATUS,
                        NAME_RECEIVER_PROVINCE,
                        NAME_RECEIVER_CITY,
                        RECEIVER_ADDRESS,
                        LOGISTICS_LIST,
                        LOGISTICS_COMPANY,
                        PHONE,
                        LISTAGG(FLAG_OWNER, ';') WITHIN GROUP(ORDER BY FLAG_OWNER) OVER(PARTITION BY SKP_CREDIT_CASE, PHONE) AS FLAG_OWNER
          FROM (SELECT DISTINCT NN.*,
                                SS.LOGISTICS_LIST,
                                SS.LOGISTICS_COMPANY,
                                SS.RECEIVER_MOBILE AS PHONE,
                                CASE
                                  WHEN RECEIVER_MOBILE = TEXT_MOBILE_CLIENT THEN
                                   '客户本人号码'
                                  WHEN RECEIVER_MOBILE = TEXT_MOBILE_SPOUSE THEN
                                   '客户配偶' || TEXT_MOBILE_SPOUSE || '号码'
                                  WHEN RECEIVER_MOBILE = TEXT_MOBILE_PARENT THEN
                                   '客户父母' || TEXT_MOBILE_PARENT || '号码'
                                  WHEN RECEIVER_MOBILE = TEXT_MOBILE_CLIENT THEN
                                   '客户雇主' || NAME_EMPLOYER || '号码'
                                  WHEN RECEIVER_MOBILE = TEXT_MOBILE_SUPPLY THEN
                                   '客户紧急联系人' || NAME_LAST_SUPPLY || '号码'
                                  ELSE
                                   'unknown'
                                END AS FLAG_OWNER
                  FROM DETAIL NN
                  JOIN OWNER_DWH.F_APPLICATION_TT PP
                    ON NN.DATE_DECISION = PP.DATE_DECISION
                   AND NN.SKP_CREDIT_TYPE = PP.SKP_CREDIT_TYPE
                   AND NN.SKP_CREDIT_CASE = PP.SKP_CREDIT_CASE
                  JOIN OWNER_OPR.VH_SPX_SYSTRADE_TRADE SS
                    ON PP.ID_external_partner_order = TO_CHAR(SS.TID)
                 WHERE 1 = 1
                   AND PP.SKP_CREDIT_TYPE = 1
                   AND PP.DATE_DECISION >= SYSDATE - 30
                   AND PP.SKP_PRODUCT_CHANNEL = 804))
      
      ,
      ORBP AS
       (SELECT DISTINCT SKp_CLIENT,
                        COUNT(DISTINCT SKF_CAMP_ACC_SOFFER_DETAIL) OVER(PARTITION BY SKp_CLIENT) AS CNT_ORBP,
                        LISTAGG(TO_CHAR(DTIME_INSERTED, 'YYYY-MM-DD') || '使用' ||
                                TEXT_PHONE_NUMBER || '(与客户号码' || FLAG_SAME ||
                                '),结果' || CODE_SCORING_STATUS,
                                ';') WITHIN GROUP(ORDER BY DTIME_INSERTED) OVER(PARTITION BY SKp_CLIENT) || '。' AS ORBP_DETAILS
          FROM (SELECT DISTINCT RP.SKp_CLIENT,
                                OB.DTIME_INSERTED,
                                OB.CODE_SCORING_STATUS,
                                OB.TEXT_PHONE_NUMBER,
                                OB.SKF_CAMP_ACC_SOFFER_DETAIL,
                                TEXT_MOBILE_CLIENT,
                                CASE
                                  WHEN TEXT_MOBILE_CLIENT = TEXT_PHONE_NUMBER THEN
                                   '相同'
                                  ELSE
                                   '不同'
                                END AS FLAG_SAME
                  FROM DETAIL RP
                  JOIN OWNER_DWH.f_Camp_Acc_Soffer_Detail_Tt OB
                    ON RP.SKp_CLIENT = OB.SKp_CLIENT
                   AND TRUNC(OB.DTIME_INSERTED) <= RP.DATE_DECISION ---firstly ORBP then apply
                 WHERE 1 = 1
                   AND DTIME_INSERTED >= SYSDATE - 180))
      
      SELECT DISTINCT 'POS' AS UNIT,
                      FI.CODE_SALESROOM AS ID_ENTITY,
                      TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
                      TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
                      '550' AS CLASS,
                      'GPS similar' AS TRIGGER_SOURCE,
                      'GROUP[' || FI.num || ']共涉及' || cnt_con ||
                      '单CAPP渠道申请,' || CNT_CLIENT || '个客户, KYC GPS距离很近,' || '其中' ||
                      CNT_TRIGGERED ||
                      '单申请之前已经被CLASS 550 GPS SIMILAR SETTING TRIGGER过。' ||
                      ',本单合同为：' || FI.CONTRACT_TYPE || '该客户近半年共进行ORBP' ||
                      NVL(ORBP.CNT_ORBP, '0') || '次，具体记录：' ||
                      NVL(ORBP.ORBP_DETAILS, '无。') || '收件人及电话：' ||
                      EX.NAME_RECEIVER || EX.PHONE || '(' || EX.FLAG_OWNER || ')' ||
                      '。收件地址：' || EX.RECEIVER_ADDRESS || '。目前状态：' ||
                      EX.CODE_PURCHASE_STATUS || '。快递单号' ||
                      EX.LOGISTICS_COMPANY || EX.LOGISTICS_LIST || ',商品：' ||
                      TT.TEXT_GOODS_DESC || '客户KYC GPS:' ||
                      FI.NUM_GEO_LONGITUDE || ',' || FI.NUM_GEO_LATITUDE AS TRIGGER_VALUE,
                      'SOFT' AS TRIGGER_TYPE,
                      FI.SKP_CREDIT_CASE,
                      FI.TEXT_CONTRACT_NUMBER
        FROM DETAIL FI
      ---EXPRESS
        LEFT JOIN EXPRESS EX
          ON FI.DATE_DECISION = EX.DATE_DECISION
         AND FI.SKP_CREDIT_TYPE = EX.SKP_CREDIT_TYPE
         AND FI.SKP_CREDIT_CASE = EX.SKP_CREDIT_CASE
      ---ORBP
        LEFT JOIN ORBP
          ON ORBP.SKp_CLIENT = FI.SKp_CLIENT
      ---GOODS
        LEFT JOIN OWNER_DWH.F_PURCHASED_GOODS_TT TT
          ON FI.DATE_DECISION = TT.DATE_DECISION
         AND FI.SKP_CREDIT_TYPE = TT.SKP_CREDIT_TYPE
         AND FI.SKP_CREDIT_CASE = TT.SKP_CREDIT_CASE
         AND TT.SKP_CREDIT_TYPE = 1
         AND TT.DATE_DECISION >= SYSDATE - 30
       where FI.DATE_DETECT IS NULL;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    COMMIT;
  */
    -- procedure end
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'end');
  END IF;
EXCEPTION
  WHEN OTHERS THEN
    -- ROBOTS_LOG
    owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                               p_step            => v_step_message,
                                               p_additional_info => NULL);
    -- process_log  
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => SQLCODE,
                                  p_msg    => 'Error in step (' ||
                                              v_step_message || ') - ' ||
                                              substr(SQLERRM, 1, 150));
    RAISE;
END;




PROCEDURE TRIGGER_552_HCP_REG_TRIGGER IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_552_HCP_REGULAR_TRIGGER';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '552 HCP Regular Trigger',SYSDATE FROM DUAL;
COMMIT;
--20200507 --20200509--20200806
INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH BASE AS 
(
SELECT SOD.DTIME_SCORING,SOD.CODE_SCORING_STATUS
,DCC.dtime_decision as dtime_hcp,DCC.date_decision,DCC.skp_client,DCC.text_contract_number,DCC.skp_credit_case
,SOD.SKP_EMPLOYEE_INSERTED,SOD.SKP_CREDIT_ACQUISITION_CHNL
,'scoring failed'as type
FROM owner_dwh.f_camp_acc_soffer_detail_tt sod
JOIN OWNER_DWH.Dc_Credit_Case dcc 
ON SOD.SKP_CLIENT=dcc.skp_client 
AND TRUNC(dcc.dtime_decision)=TRUNC(sod.DTIME_SCORING)
AND SOD.CODE_SCORING_STATUS!='Approved'
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=552
WHERE DCC.date_decision>SYSDATE-20
AND DCC.skp_credit_type in (4) and DCC.skp_credit_status in (2,3,5)
AND TRUNC(SOD.DTIME_SCORING)>= TRUNC(EX.MAX_DETECT)-8
AND DCC.date_decision>= TRUNC(EX.MAX_DETECT)-8

UNION ALL
SELECT xcl.dtime_decision as dtime_xcl,'Rejected'
,dcc.dtime_decision,dcc.date_decision,dcc.skp_client,dcc.text_contract_number,dcc.skp_credit_case
,AD.SKP_EMPLOYEE_CONSULTANT,XCL.skp_credit_acquisition_chnl
,'xcl rejected'as type
FROM owner_dwh.Dc_Credit_Case xcl
JOIN OWNER_DWH.Dc_Credit_Case dcc 
ON xcl.SKP_CLIENT=dcc.skp_client 
AND  TRUNC(dcc.dtime_decision)=TRUNC(xcl.dtime_decision)
AND xcl.skp_credit_status=8 and xcl.skp_product_channel in (1,201) and xcl.skp_credit_type=2
JOIN OWNER_DWH.F_CREDIT_CASE_AD AD ON XCL.SKP_CREDIT_CASE=AD.SKP_CREDIT_CASE AND XCL.DATE_DECISION=AD.DATE_DECISION AND XCL.SKP_CREDIT_TYPE=AD.SKP_CREDIT_TYPE 
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=552
WHERE DCC.skp_credit_type=4 AND DCC.skp_credit_status in (2,3,5)--HCP approved
AND xcl.date_decision >= TRUNC(EX.MAX_DETECT)-8
AND DCC.date_decision >= TRUNC(EX.MAX_DETECT)-8)

,HCP as (
SELECT  B.*,CON.amt_credit_limit_max
,TRANS.DTIME_INSERTED AS DTIME_TRANSACTION,TRANS.SKF_HCP_TRANSACTION, TRANS.AMT_HCP_FINAL, CLS.CODE_HCP_TRANSACTION_STATUS
,CASE WHEN TRANS.TEXT_EXTERNAL_MERCHANT_NAME!='XNA' THEN TRANS.TEXT_EXTERNAL_MERCHANT_NAME ELSE S.name_salesroom END AS POS_NAME
,CASE WHEN TRANS.TEXT_EXTERNAL_MERCHANT_NAME!='XNA' THEN TRANS.TEXT_EXTERNAL_MERCHANT_ID ELSE S.CODE_SALESROOM END AS POS_CODE
,CASE WHEN POF.SKF_CAMPAIGN_ACCOUNT_SOFFER=-1 THEN 'NO-scoring' ELSE 'After-scoring' END AS SCORE_TYPE
,CASE WHEN TRANS.TEXT_EXTERNAL_MERCHANT_NAME!='XNA' THEN 'EXTERNAL' WHEN TRANS.TEXT_EXTERNAL_MERCHANT_NAME='XNA' AND TRANS.SKP_SALESROOM!=-1 THEN 'INTERNAL' ELSE 'NO POS' END AS POS_TYPE
,CASE WHEN CLTC.ID_SOURCE ='mapp' THEN 'CAPP-MAPP'
WHEN CLTC.ID_SOURCE ='cup' THEN 'CAPP-CUP'
WHEN CLTC.ID_SOURCE ='direct' THEN '3rd party-'|| CLTRC.NAME_HCP_TRADE_CHANNEL 
WHEN TRANS.FLAG_CASH_DISBURSEMENT='Y' AND (UPPER(CLTC.ID_SOURCE)='CAPP' OR UPPER(CLTRC.NAME_HCP_TRADE_CHANNEL)='CAPP') THEN 'Withdraw cash from CAPP to DD bank' -- anny 2020-08-05
END AS TRADE_CHANNEL
,RANK() OVER (PARTITION BY B.SKP_CREDIT_CASE, TRANS.DTIME_INSERTED, TRANS.AMT_HCP_FINAL ORDER BY B.DTIME_SCORING DESC) AS RNK_ORBP
FROM BASE B
JOIN OWNER_DWH.F_HCP_TRANSACTION_TT TRANS ON B.SKP_CREDIT_CASE=TRANS.SKP_CREDIT_CASE 
JOIN OWNER_DWH.CL_HCP_TRANSACTION_STATUS CLS ON TRANS.SKP_HCP_TRANSACTION_STATUS=CLS.SKP_HCP_TRANSACTION_STATUS
JOIN OWNER_DWH.F_CONTRACT_BASE_AD CON ON b.SKP_CREDIT_CASE=CON.SKP_CREDIT_CASE AND b.DATE_DECISION=CON.DATE_DECISION 
JOIN OWNER_DWH.F_CONTRACT2CAMP_ACC_POFFER_AT C2P ON B.SKP_CREDIT_CASE=C2P.SKP_CREDIT_CASE 
AND C2P.SKP_CREDIT_TYPE=4 AND B.DATE_DECISION=C2P.DATE_DECISION 
JOIN OWNER_DWH.F_CAMPAIGN_ACCOUNT_POFFER_TT POF ON C2P.SKF_CAMPAIGN_ACCOUNT_POFFER=POF.SKF_CAMPAIGN_ACCOUNT_POFFER
JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=552
LEFT JOIN OWNER_DWH.F_COBRANDED_CARD_TT CBANK ON TRANS.SKP_CREDIT_CASE=CBANK.SKP_CREDIT_CASE
LEFT JOIN OWNER_DWH.CL_COOPERATING_BANK CLCB ON CBANK.SKP_COOPERATING_BANK=CLCB.SKP_COOPERATING_BANK
LEFT JOIN OWNER_DWH.CL_HCP_TRANSACTION_CHANNEL CLTC ON TRANS.SKP_HCP_TRANSACTION_CHANNEL=CLTC.SKP_HCP_TRANSACTION_CHANNEL
LEFT JOIN OWNER_DWH.CL_HCP_TRADE_CHANNEL CLTRC ON TRANS.SKP_HCP_TRADE_CHANNEL=CLTRC.SKP_HCP_TRADE_CHANNEL
LEFT JOIN OWNER_DWH.DC_SALESROOM S ON TRANS.SKP_SALESROOM=S.SKP_SALESROOM AND TEXT_EXTERNAL_MERCHANT_NAME='XNA' --AND TRANS.SKP_SALESROOM!=-1
WHERE  CODE_HCP_TRANSACTION_STATUS IN ('POSTED','CONFIRMED','APPROVED')
AND CON.SKP_CREDIT_TYPE=4
--AND TRANS.DTIME_INSERTED>=DATE'2020-04-30' --TO CHANGE
AND TRUNC(TRANS.DTIME_INSERTED)>= TRUNC(EX.MAX_DETECT)
AND TEXT_EXTERNAL_MERCHANT_NAME NOT LIKE '%充值%'  
AND TEXT_EXTERNAL_MERCHANT_NAME NOT LIKE '%美团%' 
--AND TEXT_EXTERNAL_MERCHANT_NAME NOT LIKE '%微信%' --anny, should not exclude cash disbursement 20200805
AND TEXT_EXTERNAL_MERCHANT_NAME NOT LIKE '%支付宝%'
--AND TEXT_EXTERNAL_MERCHANT_NAME NOT LIKE '%零钱%'
--AND TEXT_EXTERNAL_MERCHANT_NAME NOT LIKE '%转账%'
AND TEXT_EXTERNAL_MERCHANT_NAME NOT IN ('Apple','特约商户')) --排除线上交易

,DAILY_SUM AS 
(
SELECT TRUNC(DTIME_TRANSACTION)AS DATE_TRANSACTION,SKP_CREDIT_CASE, SUM(AMT_HCP_FINAL) AS DAILY_CONSUMPTION
,POS_CODE,SUM(AMT_HCP_FINAL)/amt_credit_limit_max,COUNT(SKF_HCP_TRANSACTION) AS CNT_TRANSACTION
FROM HCP
WHERE RNK_ORBP=1 AND DTIME_TRANSACTION<=DATE_DECISION+7  --权考虑于7日内交易的合同
GROUP BY TRUNC(DTIME_TRANSACTION),SKP_CREDIT_CASE,POS_CODE,amt_credit_limit_max
HAVING SUM(AMT_HCP_FINAL)/amt_credit_limit_max>0.6 --日交易份额应大于额度的60%
)

,HCP_LOG_APP AS
(
SELECT B.SKP_CREDIT_CASE ,TT.dtime_event,CLM.name_event,TT.skp_mobile_app_device,TT.num_geo_latitude,TT.num_geo_longitude
,RANK() OVER (PARTITION BY B.SKP_CREDIT_CASE  ORDER BY DTIME_EVENT DESC) AS RNK_APP_EVENT
FROM owner_dwh.f_mobile_app_event_log_tt TT
JOIN OWNER_DWH.cl_mobile_app_event_type CLM ON TT.skp_mobile_app_event_type=CLM.skp_mobile_app_event_type
JOIN BASE B ON TT.SKP_CLIENT=B.SKP_CLIENT AND TT.DTIME_EVENT<B.DTIME_HCP
WHERE CLM.NAME_EVENT in ('CTA - AF Product card- HCP (Apply now)')
AND TT.DTIME_EVENT>SYSDATE-10
)

,HCP_LOG_TRANSACTION AS
(
SELECT H.SKF_HCP_TRANSACTION ,TT.dtime_event,CLM.name_event,TT.skp_mobile_app_device,TT.num_geo_latitude,TT.num_geo_longitude
,RANK() OVER (PARTITION BY H.SKP_CREDIT_CASE ORDER BY DTIME_EVENT DESC) AS RNK_TRANS_EVENT
from owner_dwh.f_mobile_app_event_log_tt TT
JOIN OWNER_DWH.cl_mobile_app_event_type CLM ON TT.skp_mobile_app_event_type=CLM.skp_mobile_app_event_type
JOIN HCP H ON H.TRADE_CHANNEL LIKE '%CAPP%' AND H.SKP_CLIENT=TT.SKP_CLIENT AND TT.DTIME_EVENT<H.DTIME_TRANSACTION 
WHERE CLM.NAME_EVENT in ('HCP_HP_PAYMENT_CLICK','LM_HCP_QR_CLICK')
AND TT.DTIME_EVENT>SYSDATE-10
)

SELECT DISTINCT 
'POS' AS UNIT
,'160212' AS CODE_SALESROOM
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'552' AS CLASS
,'HCP on same day with failed orbp or rejected xcl' AS TRIGGER_SOURCE
,TO_CHAR(H.SKF_HCP_TRANSACTION)||'//客户于' || H.TYPE ||' (相关销售: '|| E.TEXT_USERNAME_EMPLOYEE ||', ' || E.NAME_LAST||') '
||TO_CHAR(H.DTIME_SCORING,'YYYY/MM/DD HH24:MI:SS')||'当天申请HCP, 额度为:'
||TO_CHAR(H.AMT_CREDIT_LIMIT_MAX) ||', 类型为: '|| H.SCORE_TYPE ||
CASE WHEN L_APP.SKP_CREDIT_CASE IS NOT NULL THEN '; 申请DEVICE：' || TO_CHAR(L_APP.skp_mobile_app_device)
||', 申请GPS: ' ||TO_CHAR(L_APP.num_geo_latitude) || '，' || TO_CHAR(L_APP.num_geo_longitude) END
||'; 并于' || TO_CHAR(D.DATE_TRANSACTION,'YYYY/MM/DD') || '消费' || TO_CHAR(D.CNT_TRANSACTION)||'笔, 共' || TO_CHAR(D.DAILY_CONSUMPTION) || '元. 其中单笔消费信息: '
||'时间: ' ||  TO_CHAR(H.DTIME_TRANSACTION,'YYYY/MM/DD HH24:MI:SS') 
||', POS: ' || H.POS_NAME ||' (ID: ' || H.POS_CODE || ', TYPE: ' ||H.POS_TYPE ||  ') , 金额: ' || TO_CHAR(H.AMT_HCP_FINAL)
||', 渠道: ' || H.TRADE_CHANNEL || 
CASE WHEN L_TRANS.SKF_HCP_TRANSACTION IS NOT NULL THEN '; 交易DEVICE：' || TO_CHAR(L_APP.skp_mobile_app_device)
||', 交易GPS: ' ||TO_CHAR(L_APP.num_geo_latitude) || '，' || TO_CHAR(L_APP.num_geo_longitude) END 
AS TRIGGER_VALUE 
,'SOFT' AS TRIGGER_TYPE
,H.SKP_CREDIT_CASE
,H.TEXT_CONTRACT_NUMBER
--SELECT H.*, D.DATE_TRANSACTION, D.DAILY_CONSUMPTION,E.TEXT_USERNAME_EMPLOYEE,CLB.NAME_BANK_ROLE_EN
FROM HCP H
JOIN DAILY_SUM D ON TRUNC(H.DTIME_TRANSACTION)=D.DATE_TRANSACTION AND H.SKP_CREDIT_CASE=D.SKP_CREDIT_CASE AND H.POS_CODE=D.POS_CODE
LEFT JOIN OWNER_DWH.DC_EMPLOYEE E ON H.SKP_EMPLOYEE_INSERTED=E.SKP_EMPLOYEE
LEFT JOIN OWNER_DWH.CL_BANK_ROLE CLB ON E.SKP_BANK_ROLE=CLB.SKP_BANK_ROLE
LEFT JOIN HCP_LOG_APP L_APP  ON H.SKP_CREDIT_CASE=L_APP.SKP_CREDIT_CASE AND RNK_APP_EVENT=1
LEFT JOIN HCP_LOG_TRANSACTION L_TRANS ON H.SKF_HCP_TRANSACTION=L_TRANS.SKF_HCP_TRANSACTION AND RNK_TRANS_EVENT=1
WHERE RNK_ORBP=1;
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;

PROCEDURE TRIGGER_202_CLWC_RETURN_MONEY IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_CLWC_RETURN_MONEY';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '202 CLWC-RETURN MONEY',SYSDATE FROM DUAL;
COMMIT;
--20200604 wc testing setting for Sakura team
INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH CASH_LOAN AS 
(
SELECT /*+MATERIALIZE USE_HASH(DCC,AD,TT,EE)*/ 
DISTINCT DCC.SKP_CREDIT_CASE,
DCC.SKP_CLIENT,
DCC.DATE_DECISION,
AD.TEXT_CONTRACT_NUMBER,
DCC.SKP_CONTRACT,
TT.DTIME_3RD_BLOCK_SUBMIT,EE.SKP_BANK_ROLE, EE.TEXT_IDENT_NUMBER,AD.amt_credit,DCC.skp_credit_type,
DCC.skp_credit_status,DCC.skp_credit_acquisition_chnl ,
--kate ke 20191127
--AA.flag_3rd_block_eligible,
CASE WHEN DCC.SKP_CREDIT_ACQUISITION_CHNL=6 THEN 'ACL' ELSE 'XCL' END AS PRODUCT,
CASE WHEN DCC.SKP_CREDIT_ACQUISITION_CHNL=6 AND EE.TEXT_IDENT_NUMBER='XNA' THEN 'Onilne2Online'  --AA.flag_3rd_block_eligible='Y' THEN 'Onilne2Online' 
         WHEN DCC.SKP_CREDIT_ACQUISITION_CHNL=6  THEN EE.TEXT_USERNAME_EMPLOYEE 
           ELSE AD.TEXT_USERNAME_EMPLOYEE_SALES END AS SA
FROM OWNER_DWH.DC_CREDIT_CASE DCC
JOIN  DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD
ON DCC.SKP_CREDIT_CASE =AD.SKP_CREDIT_CASE 
AND DCC.SKP_CREDIT_TYPE =AD.SKP_CREDIT_TYPE 
AND DCC.DATE_DECISION =AD.DATE_DECISION 
JOIN OWNER_DWH.F_APPLICATION_TT TT
ON TT.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE 
AND TT.SKP_CREDIT_TYPE =DCC.SKP_CREDIT_TYPE 
AND TT.DATE_DECISION =DCC.DATE_DECISION 
JOIN OWNER_DWH.DC_EMPLOYEE EE
ON EE.SKP_EMPLOYEE = TT.SKP_EMPLOYEE_CONSULT_3RD_BLOCK
WHERE DCC.DATE_DECISION >=TRUNC(SYSDATE)-10
AND TT.DATE_DECISION >=TRUNC(SYSDATE)-10
AND AD.DATE_DECISION >=TRUNC(SYSDATE)-10
AND AD.SKP_CREDIT_TYPE =2
AND TT.SKP_CREDIT_TYPE =2 
AND DCC.SKP_CREDIT_TYPE =2
AND DCC.SKP_CREDIT_STATUS IN (2,3,5) 
)
---------20200414 Yawen 排除由于WC表join错误的合同------
,OPS AS 
(
SELECT ROT.SKP_CONTRACT 
FROM OWNER_DWH.F_CALL_RESULT_OPS_TD ROT
WHERE ROT.SKP_CALL_LIST_TYPE = 3
AND ROT.DTIME_CALL >= TRUNC(SYSDATE)-15
)
, BASE0_1 AS 
(
    select /*+ FULL(WC) FULL(DC) FULL(EX) USE_HASH(WC DC EX) CARDINALITY(300000) NO_MERGE */
             CC.DTIME_3RD_BLOCK_SUBMIT
             ,CC.TEXT_IDENT_NUMBER
             ,CC.SKP_BANK_ROLE
             ,CC.AMT_CREDIT
             ,CC.skp_credit_acquisition_chnl
             ,CC.PRODUCT
             ,CC.SA
             ,WC.TEXT_CONTRACT_NUMBER
            ,WC.DTIME_REVIEW
            ,WC.SKP_CREDIT_CASE
            ,WC.SKP_CLIENT
            ,WC.NUM_DAYS_TILL_EVENT
            ,WC.DTIME_ACTIVITY_START
            ,TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS DTIME_CALL-----change on 2018.04.23 Angela
            ,WC.NAME_QUESTION
            ,WC.NAME_ANSWER
            ,WC.NAME_RESULT 
            ,wc.text_activity_info 
            ,regexp_replace(WC.text_activity_info,'[^0-9]') AS ANSWER_AMOUNT---2019.06.24 angela
            ,LISTAGG(REGEXP_REPLACE(REPLACE(WC.text_activity_info,'XNA',''),'[[:punct:]]'),',') WITHIN GROUP (ORDER BY WC.text_activity_info)OVER (PARTITION BY WC.SKP_CREDIT_CASE) AS TEXT_RESULT--2019/11/28 nancy
            ,WC.NAME_CAMPAIGN
            ,WC.TEXT_BIRTH_NUMBER---05.04 ANGELA
            ,WC.text_stage_result_note--new added 18.05.10 Angela
            ,WC.NAME_CAMPAIGN_PROCESS_STEP --2020,01,10 Angela
            ,SUBSTR(WC.NAME_ANSWER, 3, LENGTH(WC.NAME_ANSWER) - 2) AS WC_ANSWER--new added 18.05.10 Angela
      FROM DM_ANTIFRAUD.F_WC_CAMPAIGN_AD WC 
      JOIN CASH_LOAN CC ON WC.SKP_CREDIT_CASE =CC.SKP_CREDIT_CASE  --CASH LOAN 2020,01,10 ANGELA
      JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
      WHERE  WC.DTIME_REVIEW>=SYSDATE-30
            AND INSTR(WC.NAME_CAMPAIGN ,'CFC-WC-CASH')>0
            AND TRUNC(WC.DTIME_ACTIVITY_START)-TRUNC(WC.DTIME_REVIEW)<=15--20190626
             AND CC.SKP_CONTRACT IN (SELECT * FROM OPS)  ---------20200414 Yawen
            AND TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
)


SELECT DISTINCT 'SA' AS UNIT
      ,B.SA AS TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,202 AS CLASS
      ,'CLWC-有人联系客户退回款项' AS TRIGGER_SOURCE
       ,CASE WHEN B.PRODUCT ='ACL' AND SKP_BANK_ROLE=1962 THEN 'ACL: Remote SA'
                 WHEN B.PRODUCT ='ACL' AND TEXT_IDENT_NUMBER<>'XNA' THEN 'ACL: online_to_offline' 
                   WHEN B.PRODUCT ='ACL' AND DTIME_3RD_BLOCK_SUBMIT<=TRUNC(SYSDATE) THEN 'ACL: online_to_online'
                 WHEN B.PRODUCT ='ACL' AND DTIME_3RD_BLOCK_SUBMIT=DATE'3000-01-01' THEN 'ACL: UNREACH_3BOD' 
                  ELSE 'XCL' END ||'-有人联系客户退回款项，客户称'||
                    CASE WHEN  INSTR(B.NAME_ANSWER,'未退款')>0 THEN '未退款'
                        WHEN INSTR(B.NAME_ANSWER,'已退款')>0 THEN '已退款' END ||'; WC time: '|| DTIME_CALL  AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,B.SKP_CREDIT_CASE
      ,B.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
JOIN  AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
WHERE INSTR(B.NAME_QUESTION,'不法分子以捷信的名义通知您贷款利息有误，要求您退回款项')>0 
AND INSTR(B.NAME_ANSWER,'退款')>0    
AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1;
COMMIT;

--new add setting 20200611
INSERT INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH CASH_LOAN AS 
(
SELECT /*+MATERIALIZE USE_HASH(DCC,AD,TT,EE)*/ 
DISTINCT DCC.SKP_CREDIT_CASE,
DCC.SKP_CLIENT,
DCC.DATE_DECISION,
AD.TEXT_CONTRACT_NUMBER,
DCC.SKP_CONTRACT,
TT.DTIME_3RD_BLOCK_SUBMIT,EE.SKP_BANK_ROLE, EE.TEXT_IDENT_NUMBER,AD.amt_credit,DCC.skp_credit_type,
DCC.skp_credit_status,DCC.skp_credit_acquisition_chnl ,
--kate ke 20191127
--AA.flag_3rd_block_eligible,
CASE WHEN DCC.SKP_CREDIT_ACQUISITION_CHNL=6 THEN 'ACL' ELSE 'XCL' END AS PRODUCT,
CASE WHEN DCC.SKP_CREDIT_ACQUISITION_CHNL=6 AND EE.TEXT_IDENT_NUMBER='XNA' THEN 'Onilne2Online'  --AA.flag_3rd_block_eligible='Y' THEN 'Onilne2Online' 
         WHEN DCC.SKP_CREDIT_ACQUISITION_CHNL=6  THEN EE.TEXT_USERNAME_EMPLOYEE 
           ELSE AD.TEXT_USERNAME_EMPLOYEE_SALES END AS SA
FROM OWNER_DWH.DC_CREDIT_CASE DCC
JOIN  DM_ANTIFRAUD.F_AF_CREDIT_CASE_AD AD
ON DCC.SKP_CREDIT_CASE =AD.SKP_CREDIT_CASE 
AND DCC.SKP_CREDIT_TYPE =AD.SKP_CREDIT_TYPE 
AND DCC.DATE_DECISION =AD.DATE_DECISION 
JOIN OWNER_DWH.F_APPLICATION_TT TT
ON TT.SKP_CREDIT_CASE =DCC.SKP_CREDIT_CASE 
AND TT.SKP_CREDIT_TYPE =DCC.SKP_CREDIT_TYPE 
AND TT.DATE_DECISION =DCC.DATE_DECISION 
JOIN OWNER_DWH.DC_EMPLOYEE EE
ON EE.SKP_EMPLOYEE = TT.SKP_EMPLOYEE_CONSULT_3RD_BLOCK
WHERE DCC.DATE_DECISION >=TRUNC(SYSDATE)-10
AND TT.DATE_DECISION >=TRUNC(SYSDATE)-10
AND AD.DATE_DECISION >=TRUNC(SYSDATE)-10
AND AD.SKP_CREDIT_TYPE =2
AND TT.SKP_CREDIT_TYPE =2 
AND DCC.SKP_CREDIT_TYPE =2
AND DCC.SKP_CREDIT_STATUS IN (2,3,5) 
)
, BASE0_1 AS 
(
    select /*+ FULL(WC) FULL(DC) FULL(EX) USE_HASH(WC DC EX) CARDINALITY(300000) NO_MERGE */
             CC.DTIME_3RD_BLOCK_SUBMIT
             ,CC.TEXT_IDENT_NUMBER
             ,CC.SKP_BANK_ROLE
             ,CC.AMT_CREDIT
             ,CC.skp_credit_acquisition_chnl
             ,CC.PRODUCT
             ,CC.SA
             ,WC.TEXT_CONTRACT_NUMBER
            ,WC.DTIME_REVIEW
            ,WC.SKP_CREDIT_CASE
            ,WC.SKP_CLIENT
            ,WC.NUM_DAYS_TILL_EVENT
            ,WC.DTIME_ACTIVITY_START
            ,TO_CHAR(WC.DTIME_ACTIVITY_START, 'YYYY/MM/DD HH24:MI:SS') AS DTIME_CALL-----change on 2018.04.23 Angela
            ,WC.NAME_QUESTION
            ,WC.NAME_ANSWER
            ,WC.NAME_RESULT 
            ,wc.text_activity_info 
            ,regexp_replace(WC.text_activity_info,'[^0-9]') AS ANSWER_AMOUNT---2019.06.24 angela
            ,LISTAGG(REGEXP_REPLACE(REPLACE(WC.text_activity_info,'XNA',''),'[[:punct:]]'),',') WITHIN GROUP (ORDER BY WC.text_activity_info)OVER (PARTITION BY WC.SKP_CREDIT_CASE) AS TEXT_RESULT--2019/11/28 nancy
            ,WC.NAME_CAMPAIGN
            ,WC.TEXT_BIRTH_NUMBER---05.04 ANGELA
            ,WC.text_stage_result_note--new added 18.05.10 Angela
            ,WC.NAME_CAMPAIGN_PROCESS_STEP --2020,01,10 Angela
            ,SUBSTR(WC.NAME_ANSWER, 3, LENGTH(WC.NAME_ANSWER) - 2) AS WC_ANSWER--new added 18.05.10 Angela
      FROM DM_ANTIFRAUD.F_WC_CAMPAIGN_AD WC 
      JOIN CASH_LOAN CC ON WC.SKP_CREDIT_CASE =CC.SKP_CREDIT_CASE  --CASH LOAN 2020,01,10 ANGELA
      JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
      WHERE  WC.DTIME_REVIEW>=SYSDATE-30
            AND INSTR(WC.NAME_CAMPAIGN ,'INTEGRATE')>0
            AND TRUNC(WC.DTIME_ACTIVITY_START)-TRUNC(WC.DTIME_REVIEW)<=15--20190626
            AND TRUNC(WC.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1
)


SELECT DISTINCT 'SA' AS UNIT
      ,B.SA AS TEXT_USERNAME_EMPLOYEE_SALES
      ,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
      ,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
      ,'202' AS CLASS
      ,'CLWC-有人联系客户退回款项' AS TRIGGER_SOURCE
       ,CASE WHEN B.PRODUCT ='ACL' AND SKP_BANK_ROLE=1962 THEN 'ACL: Remote SA'
                 WHEN B.PRODUCT ='ACL' AND TEXT_IDENT_NUMBER<>'XNA' THEN 'ACL: online_to_offline' 
                   WHEN B.PRODUCT ='ACL' AND DTIME_3RD_BLOCK_SUBMIT<=TRUNC(SYSDATE) THEN 'ACL: online_to_online'
                 WHEN B.PRODUCT ='ACL' AND DTIME_3RD_BLOCK_SUBMIT=DATE'3000-01-01' THEN 'ACL: UNREACH_3BOD' 
                  ELSE 'XCL' END ||'-有人联系客户退回款项，客户称'||
                    CASE WHEN  INSTR(B.NAME_ANSWER,'未退款')>0 THEN '未退款'
                        WHEN INSTR(B.NAME_ANSWER,'已退款')>0 THEN '已退款' END ||'; WC time: '|| DTIME_CALL  AS TRIGGER_VALUE
      ,'SOFT' AS TRIGGER_TYPE
      ,B.SKP_CREDIT_CASE
      ,B.TEXT_CONTRACT_NUMBER
FROM BASE0_1 B
JOIN  AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX ON EX.CLASS=15
WHERE INSTR(B.NAME_QUESTION,'不法分子以捷信的名义通知您贷款利息有误，要求您退回款项')>0 
AND INSTR(B.NAME_ANSWER,'退款')>0    
AND TRUNC(B.DTIME_ACTIVITY_START) BETWEEN TRUNC(EX.MAX_DETECT) AND TRUNC(SYSDATE)-1 ;

owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;


PROCEDURE TRIGGER_554_OPS_AUTO_BLOCK IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_AF_OPS_AUTO_BLOCK';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed')
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  
    
INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
SELECT '554 AF OPS Auto Block',SYSDATE FROM DUAL;
COMMIT;
--20200604 只是为了存记录
INSERT /*+ append*/ INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
WITH Wechat_raw AS 
(
SELECT DISTINCT T.SKP_SALESROOM,T.text_openId,T.text_ident_card_number,T.skp_aldi_order
FROM owner_dwh.f_ALDI_EVENT_LOG_TT T 
WHERE T.NAME_EVENT='ID_info_submit' AND T.text_openId IS NOT NULL 
)

,Wechat_gb AS 
(
SELECT T.text_openId,COUNT(DISTINCT T.text_ident_card_number) AS CNT_ID_PERWechat
FROM Wechat_raw T GROUP BY T.text_openId 
HAVING COUNT(DISTINCT T.text_ident_card_number)>=3
)

,Suspicious_wechat_3 AS 
(
SELECT W.SKP_SALESROOM,COUNT(DISTINCT W.text_ident_card_number) AS CNT_ID_by_s_wechat_3 --W.text_openId,I.CNT_ID_PERWechat,W.text_ident_card_number,
,COUNT(DISTINCT W.text_openId) AS CNT_s_wechat_3
FROM Wechat_gb I
JOIN Wechat_raw W ON I.text_openId=W.text_openId
GROUP BY W.SKP_SALESROOM
HAVING COUNT(DISTINCT W.text_ident_card_number)>=6
)

,PRE AS 
(
SELECT DISTINCT S.SKP_SALESROOM, S.code_salesroom,S.code_salesroom_status, S_3.CNT_ID_by_s_wechat_3,S_3.CNT_s_wechat_3, W.text_openId, G.CNT_ID_PERWechat
,ROW_NUMBER() OVER (PARTITION BY S_3.SKP_SALESROOM ORDER BY G.CNT_ID_PERWechat DESC) AS RNK_WE
FROM Suspicious_wechat_3 S_3 
JOIN Wechat_raw W ON W.SKP_SALESROOM=S_3.SKP_SALESROOM
JOIN Wechat_gb G ON W.text_openId=G.text_openId 
JOIN OWNER_DWH.DC_SALESROOM S ON S_3.SKP_SALESROOM=S.SKP_SALESROOM
WHERE S.code_salesroom_status='a'
)

SELECT DISTINCT 'POS' AS UNIT
,P.code_salesroom
,TO_CHAR(SYSDATE,'YYYY/MM/DD') AS DATE_DETECT
,TO_CHAR(TRUNC(SYSDATE,'IW')+6,'YYYY/MM/DD' )AS WEEK_DETECT
,'554' AS CLASS  
,'Auto block POS for suspicious wechat' AS TRIGGER_SOURCE
,'该POS: ' || P.CODE_SALESROOM || '有' || TO_CHAR(P.CNT_ID_by_s_wechat_3) || '位客户是由可疑微信ID扫描的, 涉及' || TO_CHAR(P.CNT_s_wechat_3) 
|| '个可疑微信(>=3 clients), 其中最严重的微信号在一个月内替' || TO_CHAR(P.CNT_ID_PERWechat)|| '位客户扫码' AS TRIGGER_VALUE
,'SOFT' AS TRIGGER_TYPE
,C.SKP_CREDIT_CASE
,C.text_contract_number
FROM PRE P
JOIN 
(SELECT DCC.SKP_CREDIT_CASE, DCC.text_contract_number, ROW_NUMBER () OVER(ORDER BY DCC.dtime_decision DESC)AS RNK_CON
FROM OWNER_DWH.DC_CREDIT_CASE DCC 
WHERE DCC.date_decision=TRUNC(SYSDATE-1) AND DCC.SKP_CREDIT_TYPE=1 AND DCC.skp_credit_acquisition_chnl=21
) C ON C.RNK_CON=1
LEFT JOIN AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS C_554 ON C_554.CLASS=554 AND C_554.CODE_SALESROOM=P.CODE_SALESROOM AND C_554.DATE_DETECT>=TRUNC(SYSDATE-7)
WHERE P.RNK_WE=1
AND C_554.CODE_SALESROOM IS NULL;
owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;

PROCEDURE TRIGGER_565_ALDI_DAILY_MONITOR IS
  v_stepnum      INTEGER DEFAULT 0;
  v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
  v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
  v_err_txt      VARCHAR2(70);
  v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
  l_rowcount integer;
BEGIN
  -- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_TRIGGER_ALDI_DAILY_MONITOR';
  -- check whether the process need to run
  IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy,
                                          p_name  => v_dealprc,
                                          p_date  => trunc(SYSDATE)) IN
     ('Not Started', 'Failed') THEN
    -- procedure start
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'start');
  
    INSERT INTO AP_ANTIFRAUD.TEST_JESSICA
      SELECT '565 ALDI2.0 Daily Monitor', SYSDATE FROM DUAL;
    COMMIT;
    EXECUTE IMMEDIATE 'TRUNCATE TABLE AP_ANTIFRAUD.TRIGGER_565_ALDI2_BASE';
    --! report robots log start
    ---------------------------------------------------------------------------------
    v_step_message := '565 setting 1';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    --======================================================
    --1. abnormal increase
    --======================================================
    insert into AP_ANTIFRAUD.TRIGGER_565_ALDI2_BASE
      WITH APPLICATIONS AS
       (SELECT TRUNC(OO.DATE_ALDI_ORDER, 'IW') + 6 AS WEEK_SCAN_QR,
               OO.DATE_ALDI_ORDER AS DATE_SCAN_QR,
               DCC.DATE_DECISION,
               OO.DATE_ALDI_ORDER,
               OO.SKP_TIPPER,
               OO.SKP_SALESROOM,
               S.CODE_SALESROOM,
               TTS.CODE_SALESROOM AS TRANS_POS,
               DCC.SKP_CREDIT_CASE,
               DCC.text_contract_number,
               DCC.SKP_CLIENT,
               DCC.SKP_CREDIT_STATUS,
               AD.SKP_SALESROOM_SELECT,
               AD.SKP_SALESROOM_TRANSACTION,
               DCC.SKP_CREDIT_TYPE,
               EX.MAX_DETECT
          FROM OWNER_DWH.DC_CREDIT_CASE DCC
          JOIN OWNER_DWH.f_Aldi_Order_2_Contract_Ad AD
            ON AD.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE
          JOIN OWNER_DWH.DC_ALDI_ORDER OO
            ON OO.SKP_ALDI_ORDER = AD.SKP_ALDI_ORDER
          JOIN OWNER_DWH.DC_SALESROOM S
            ON OO.SKP_SALESROOM = S.SKP_SALESROOM
          JOIN OWNER_DWH.F_APPLICATION_TT TT
            ON DCC.SKP_CREDIT_CASE = TT.SKP_CREDIT_CASE
           AND DCC.DATE_DECISION = TT.DATE_DECISION
           AND DCC.SKP_CREDIT_TYPE = TT.SKP_CREDIT_TYPE
          JOIN OWNER_DWH.DC_SALESROOM TTS
            ON TT.SKP_SALESROOM = TTS.SKP_SALESROOM
          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
            ON EX.CLASS = 565
         WHERE DCC.SKP_CREDIT_TYPE = 1
           AND DCC.skp_credit_acquisition_chnl = 21
           AND OO.DATE_ALDI_ORDER >= TRUNC(MAX_DETECT - 5)
           AND OO.DATE_ALDI_ORDER < TRUNC(SYSDATE)),
      GROUPBY AS
       (SELECT A.DATE_SCAN_QR AS CURRENT_DATE,
               A.SKP_SALESROOM,
               A.DATE_SCAN_QR - 1 AS CURRENT_DATE_1,
               A.DATE_SCAN_QR - 2 AS CURRENT_DATE_2,
               A.DATE_SCAN_QR - 3 AS CURRENT_DATE_3,
               COUNT(DISTINCT A.SKP_CLIENT) AS CNT_CLIENT,
               COUNT(DISTINCT CASE
                       WHEN A.SKP_CREDIT_STATUS IN (2, 3, 5) THEN
                        A.SKP_CREDIT_CASE
                     END) AS CNT_ACTIVE,
               MAX_DETECT
          FROM APPLICATIONS A
         GROUP BY A.DATE_SCAN_QR, A.SKP_SALESROOM, A.MAX_DETECT
        HAVING COUNT(DISTINCT A.SKP_CLIENT) > 0),
      PRE1 AS
       (SELECT LEF.*,
               CASE
                 WHEN RIG.CNT_CLIENT IS NOT NULL THEN
                  RIG.CNT_CLIENT
                 ELSE
                  0
               END AS CNT_CLIENT_PRE1
          FROM GROUPBY LEF
          LEFT JOIN GROUPBY RIG
            ON LEF.CURRENT_DATE_1 = RIG.CURRENT_DATE
           AND LEF.SKP_SALESROOM = RIG.SKP_SALESROOM),
      PRE2 AS
       (SELECT LEF.*,
               CASE
                 WHEN RIG.CNT_CLIENT IS NOT NULL THEN
                  RIG.CNT_CLIENT
                 ELSE
                  0
               END AS CNT_CLIENT_PRE2
          FROM PRE1 LEF
          LEFT JOIN GROUPBY RIG
            ON LEF.CURRENT_DATE_2 = RIG.CURRENT_DATE
           AND LEF.SKP_SALESROOM = RIG.SKP_SALESROOM),
      PRE3 AS
       (SELECT LEF.*,
               CASE
                 WHEN RIG.CNT_CLIENT IS NOT NULL THEN
                  RIG.CNT_CLIENT
                 ELSE
                  0
               END AS CNT_CLIENT_PRE3
          FROM PRE2 LEF
          LEFT JOIN GROUPBY RIG
            ON LEF.CURRENT_DATE_3 = RIG.CURRENT_DATE
           AND LEF.SKP_SALESROOM = RIG.SKP_SALESROOM),
      pre4 as
       (SELECT P.CURRENT_DATE,
               P.SKP_SALESROOM,
               P.CNT_CLIENT,
               P.CNT_ACTIVE,
               row_number() OVER(ORDER BY CNT_CLIENT DESC) AS RNK_POS_TRIGGER,
               ROUND((P.CNT_CLIENT_PRE1 + P.CNT_CLIENT_PRE2 + P.CNT_CLIENT_PRE3) / 3,
                     2) AS AVG_PRE3,
               CASE
                 WHEN P.CNT_CLIENT_PRE1 + P.CNT_CLIENT_PRE2 + P.CNT_CLIENT_PRE3 > 0 THEN
                  ROUND(CNT_CLIENT /
                        ((P.CNT_CLIENT_PRE1 + P.CNT_CLIENT_PRE2 + P.CNT_CLIENT_PRE3) / 3),
                        2)
               END AS INCREASE_TIMES,
               P.CNT_CLIENT_PRE1,
               P.CNT_CLIENT_PRE2,
               P.CNT_CLIENT_PRE3
          FROM PRE3 P
         WHERE 1 = 1 --(ROUND((P.CNT_CLIENT_PRE1+P.CNT_CLIENT_PRE2+P.CNT_CLIENT_PRE3)/3,2)>0 --PRE3 WEEK AVERAGE >3
           AND P.CURRENT_DATE >= TRUNC(MAX_DETECT)
           AND P.CURRENT_DATE < TRUNC(SYSDATE)), --往前数一个月
      NUMBERS as
       (select *
          from pre4 p
         where (CASE
                 WHEN CNT_CLIENT > 7 AND
                      P.CNT_CLIENT_PRE1 + P.CNT_CLIENT_PRE2 + P.CNT_CLIENT_PRE3 > 0 THEN
                  ROUND(CNT_CLIENT /
                        ((P.CNT_CLIENT_PRE1 + P.CNT_CLIENT_PRE2 + P.CNT_CLIENT_PRE3) / 3),
                        2)
               END > 7) --INCREASING TIMES >10 --AND P.CNT_ACTIVE>1
            OR (CNT_CLIENT > 7 AND
               P.CNT_CLIENT_PRE1 + P.CNT_CLIENT_PRE2 + P.CNT_CLIENT_PRE3 = 0))

      SELECT DISTINCT trunc(A.date_decision, 'IW') + 6 AS WEEK_DETECT,
                      '1.abnormal increase' AS TRIGGER_SOURCE,
                      A.SKP_CREDIT_CASE,
                      A.text_contract_number,
                      A.SKP_CREDIT_STATUS,
                      A.DATE_DECISION,
                      A.SKP_CREDIT_TYPE,
                      R.SKP_SALESROOM,
                      A.SKP_TIPPER,
                      'nan' AS TEXT_OPENID,
                      '该POS于(' || TO_CHAR(R.CURRENT_DATE, 'YYYY-MM-DD') || ') ' ||
                      '客户数(' || TO_CHAR(R.CNT_CLIENT) || ')为前三日平均的' ||
                      TO_CHAR(R.INCREASE_TIMES) || '倍 (前三日客户数为: ' ||
                      TO_CHAR(CNT_CLIENT_PRE3) || ', ' ||
                      TO_CHAR(CNT_CLIENT_PRE2) || ', ' ||
                      TO_CHAR(CNT_CLIENT_PRE1) || '), 本周通过合同数为: ' ||
                      TO_CHAR(R.CNT_ACTIVE) AS POS_LEVEL_VALUE,
                      'in abnormal increase POS' || CASE
                        WHEN A.CODE_SALESROOM != A.TRANS_POS THEN
                         '; 客户在交易时更换门店, 扫码门店为: ' || A.CODE_SALESROOM || '交易门店为: ' ||
                         A.TRANS_POS
                      END AS APP_LEVEL_VALUE,
                      TRUNC(SYSDATE, 'IW') + 6
        FROM NUMBERS R
        JOIN APPLICATIONS A
          ON R.CURRENT_DATE = A.DATE_SCAN_QR
         AND R.SKP_SALESROOM = A.SKP_SALESROOM
        JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
          ON EX.CLASS = 565
       WHERE 1 = 1; --A.SKP_CREDIT_STATUS IN (2,3,5)

    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;    
    





  --======================================================
  --5.night transaction
  --======================================================


    v_step_message := '565 setting 5 step 0';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);

    EXECUTE IMMEDIATE 'TRUNCATE TABLE ap_antifraud.trigger_daily_565_5_base0';
      
    insert /*+ append */
      into ap_antifraud.trigger_daily_565_5_base0
      SELECT AD.SKP_CREDIT_CASE,
             DCC.text_contract_number,
             TO_DATE(T.DTIME_EVENT, 'yyyy-MM-dd hh24:mi:ss') AS DTIME_TRANSACTION,
             ORD.SKP_TIPPER,
             AD.SKP_SALESROOM_TRANSACTION AS SKP_SALESROOM,
             DCC.SKP_CREDIT_STATUS,
             DCC.DATE_DECISION,
             DCC.SKP_CREDIT_TYPE,
             to_char(TO_DATE(T.DTIME_EVENT, 'yyyy-MM-dd hh24:mi:ss'), 'hh24') as Hour,
             ROW_NUMBER() OVER(PARTITION BY DCC.SKP_CREDIT_CASE ORDER BY TO_DATE(T.DTIME_EVENT, 'yyyy-MM-dd hh24:mi:ss') DESC) AS RNK_TRANS
        FROM OWNER_DWH.DC_ALDI_ORDER ORD
        JOIN owner_dwh.f_aldi_order_2_contract_ad AD
          ON AD.SKP_ALDI_ORDER = ORD.SKP_ALDI_ORDER
        JOIN owner_dwh.f_ALDI_EVENT_LOG_TT T
          ON ORD.SKP_ALDI_ORDER = T.SKP_ALDI_ORDER
        JOIN OWNER_DWH.DC_CREDIT_CASE DCC
          ON AD.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE
       WHERE T.NAME_EVENT = 'transaction_QR_scan'
         AND DCC.SKP_CREDIT_TYPE = 1
         AND (DCC.skp_credit_acquisition_chnl = 21 OR
             (DCC.skp_credit_acquisition_chnl = 8 AND
             DCC.skp_product_channel <> 804)) ----20210312 YW
         AND AD.SKP_SALESROOM_TRANSACTION != -1
         AND DCC.DATE_DECISION >= trunc(SYSDATE) - 8;

    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;

    v_step_message := '565 setting 5 step 1';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);

    EXECUTE IMMEDIATE 'TRUNCATE TABLE ap_antifraud.trigger_daily_565_5_base1';

    insert /*+ append */
    into ap_antifraud.trigger_daily_565_5_base1
      
      SELECT B.SKP_SALESROOM,
             COUNT(DISTINCT B.SKP_CREDIT_CASE) AS CNT_APPLICATION
        FROM ap_antifraud.trigger_daily_565_5_base0 B
       WHERE (B.HOUR >= 22 OR B.HOUR < 8)
         AND RNK_TRANS = 1
       GROUP BY B.SKP_SALESROOM
      HAVING COUNT(DISTINCT B.SKP_CREDIT_CASE) >= 3;

    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;

    v_step_message := '565 setting 5 step 2';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);

    EXECUTE IMMEDIATE 'TRUNCATE TABLE ap_antifraud.trigger_daily_565_5_base2';

    insert /*+ append */
    into ap_antifraud.trigger_daily_565_5_base2
      
      SELECT B.*, b1.CNT_APPLICATION, t.event_id
        FROM ap_antifraud.trigger_daily_565_5_base1 b1
        JOIN ap_antifraud.trigger_daily_565_5_base0 B
          on b1.SKP_SALESROOM = B.SKP_SALESROOM
        left join AP_ANTIFRAUD.f_Trcontracts_Preselection p
          on p.skp_credit_case = b.skp_credit_case
         and date_detect >= to_char(trunc(sysdate) - 8, 'yyyy/mm/dd')
         and p.trigger_source = '5.night transaction'
        left join OWNER_OUT.O_MDT_DATA t
          on p.text_contract_number = t.CONTRACT_NUMBER
         and p.date_detect = to_char(t.DATE_EFFECTIVE, 'yyyy/mm/dd')
         and t.EVENT_CLASS = '565'
       WHERE B.RNK_TRANS = 1
         AND (B.HOUR >= 22 OR B.HOUR < 8);

    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;

    v_step_message := '565 setting 5 step 3';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);

    insert into AP_ANTIFRAUD.TRIGGER_565_ALDI2_BASE
      
      with base_event as
       (select SKP_SALESROOM,
               count(distinct skp_credit_case) as cnt_case,
               regexp_replace(listagg(EVENT_ID, ',') within
                              group(order by EVENT_ID),
                              '([^,]+)(,\1)+',
                              '\1') as event_id
          from ap_antifraud.trigger_daily_565_5_base2
         where event_id is not null
         group by SKP_SALESROOM)
        
      SELECT DISTINCT trunc(r.date_decision, 'IW') + 6 AS WEEK_DETECT,
                      '5.night transaction' AS TRIGGER_SOURCE,
                      R.SKP_CREDIT_CASE,
                      R.text_contract_number,
                      R.SKP_CREDIT_STATUS,
                      R.DATE_DECISION,
                      R.SKP_CREDIT_TYPE,
                      r.SKP_SALESROOM,
                      SKP_TIPPER,
                      ' ',
                      '该POS在一周内有' || TO_CHAR(R.CNT_APPLICATION) ||
                      '单于22:00至8:00之间交易的合同' || case
                        when e.event_id is not null then
                         ',其中' || to_char(cnt_case) ||
                         '单申请已被trigger过,External id:' || E.event_id
                        else
                         ''
                      end AS POS_LEVEL_VALUE,
                      '该合同交易时间为: ' ||
                      TO_CHAR(R.DTIME_TRANSACTION, 'YYYY/MM/DD HH24:MI:SS') AS APP_LEVEL_VALUE,
                      TRUNC(SYSDATE, 'IW') + 6
        FROM ap_antifraud.trigger_daily_565_5_base2 r
        left join base_event e
          on r.skp_salesroom = e.skp_salesroom;

    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;



  --======================================================
  --7.change device brand
  --======================================================


    v_step_message := '565 setting 7 step 0';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);

    EXECUTE IMMEDIATE 'TRUNCATE TABLE ap_antifraud.trigger_daily_565_7_base0';
    
    insert /*+ append */
      into ap_antifraud.trigger_daily_565_7_base0
      SELECT tt.skp_aldi_order, COUNT(DISTINCT tt.text_fingerprint) AS cnt_fi
        FROM OWNER_dwh.F_ALDI_EVENT_LOG_TT TT
       GROUP BY tt.skp_aldi_order
      HAVING COUNT(DISTINCT tt.text_fingerprint) > 1;

    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;

    v_step_message := '565 setting 7 step 1';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);

    EXECUTE IMMEDIATE 'TRUNCATE TABLE ap_antifraud.trigger_daily_565_7_base1';

    insert /*+ append */
    into ap_antifraud.trigger_daily_565_7_base1
      SELECT distinct ad.SKP_SALESROOM_TRANSACTION,
                      ad.SKP_CREDIT_CASE,
                      b.*,
                      c.SKP_TIPPER
        FROM OWNER_dwh.F_ALDI_ORDER_2_CONTRACT_AD ad
        JOIN ap_antifraud.trigger_daily_565_7_base0 b
          ON ad.SKP_ALDI_ORDER = b.skp_aldi_order
        join OWNER_DWH.Dc_aldi_order c
          on ad.SKP_ALDI_ORDER = c.SKP_ALDI_ORDER
       WHERE ad.DATE_DECISION >= trunc(SYSDATE) - 8
         AND ad.SKP_SALESROOM_TRANSACTION > 0;

    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;

    v_step_message := '565 setting 7 step 2';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);

    EXECUTE IMMEDIATE 'TRUNCATE TABLE ap_antifraud.trigger_daily_565_7_base2';
    insert /*+ append */
    into ap_antifraud.trigger_daily_565_7_base2
      SELECT skp_salesroom_transaction,
             COUNT(DISTINCT SKP_CREDIT_CASE) AS cnt_con
        FROM ap_antifraud.trigger_daily_565_7_base1
       GROUP BY skp_salesroom_transaction
      having COUNT(DISTINCT SKP_CREDIT_CASE) >= 3;

    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;

    v_step_message := '565 setting 7 step 3';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);

    EXECUTE IMMEDIATE 'TRUNCATE TABLE ap_antifraud.trigger_daily_565_7_base3';

    insert /*+ append */
    into ap_antifraud.trigger_daily_565_7_base3
      select b1.*,
             b2.cnt_con,
             dcc.text_contract_number,
             dcc.skp_credit_status,
             dcc.skp_credit_type,
             dcc.date_decision,
             t.event_id
        from ap_antifraud.trigger_daily_565_7_base2 b2
        join ap_antifraud.trigger_daily_565_7_base1 b1
          on b2.skp_salesroom_transaction = b1.skp_salesroom_transaction
        JOIN OWNER_DWH.Dc_Credit_Case dcc
          ON b1.SKP_CREDIT_CASE = dcc.SKP_CREDIT_CASE
        left join AP_ANTIFRAUD.f_Trcontracts_Preselection p
          on p.skp_credit_case = dcc.skp_credit_case
         and date_detect >= to_char(trunc(sysdate) - 8, 'yyyy/mm/dd')
         and p.trigger_source = '7 change fingerprint have pos concentration'
        left join OWNER_OUT.O_MDT_DATA t
          on p.text_contract_number = t.CONTRACT_NUMBER
         and p.date_detect = to_char(t.DATE_EFFECTIVE, 'yyyy/mm/dd')
         and t.EVENT_CLASS = '565'
       where dcc.skp_credit_type = 1
         and dcc.date_decision >= trunc(SYSDATE) - 8;

    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;

    v_step_message := '565 setting 7 step 4';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);

    insert into AP_ANTIFRAUD.TRIGGER_565_ALDI2_BASE
    
      with base_event as
       (select SKP_SALESROOM_TRANSACTION,
               count(distinct skp_credit_case) as cnt_case,
               regexp_replace(listagg(EVENT_ID, ',') within
                              group(order by EVENT_ID),
                              '([^,]+)(,\1)+',
                              '\1') as event_id
          from ap_antifraud.trigger_daily_565_7_base3
         where event_id is not null
         group by SKP_SALESROOM_TRANSACTION)
      select DISTINCT 'POS' AS UNIT,
                      '7 change fingerprint have pos concentration' AS TRIGGER_SOURCE,
                      R.SKP_CREDIT_CASE,
                      R.text_contract_number,
                      R.SKP_CREDIT_STATUS,
                      R.DATE_DECISION,
                      R.SKP_CREDIT_TYPE,
                      r.SKP_SALESROOM_TRANSACTION as SKP_SALESROOM,
                      SKP_TIPPER,
                      ' ',
                      ']该POS过去一周共有' || to_char(CNT_con) ||
                      '单合同，在申请过程中更换过fingerprint' || case
                        when e.event_id is not null then
                         ',其中' || to_char(cnt_case) ||
                         '单申请已被trigger过,External id:' || E.event_id
                        else
                         ''
                      end AS POS_LEVEL_VALUE,
                      '该合同共有' || to_char(cnt_fi) || '个fingerprint' AS APP_LEVEL_VALUE,
                      TRUNC(SYSDATE, 'IW') + 6
      
        from ap_antifraud.trigger_daily_565_7_base3 r
        left join base_event e
          on r.SKP_SALESROOM_TRANSACTION = e.SKP_SALESROOM_TRANSACTION;

    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;




    
    ---------------------------------------------------------------------------------
    v_step_message := '565 setting 19';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    --=== ===================================================
    --19.Client abnormal speed from 1BOD to transaction --20200810
    --======================================================
  
    INSERT INTO AP_ANTIFRAUD.TRIGGER_565_ALDI2_BASE
      WITH ALDI AS
       (SELECT DATE_DECISION,
               CC.SKP_CREDIT_CASE,
               CC.TEXT_CONTRACT_NUMBER,
               SKP_CREDIT_STATUS,
               SKP_CREDIT_TYPE,
               SKp_CLIENT,
               TRUNC(DATE_DECISION, 'IW') + 6 AS WEEK_DECISION,
               MAX_DETECT
          FROM OWNER_DWH.DC_CREDIT_CASE CC
          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
            ON EX.CLASS = 565
         WHERE 1 = 1
           AND CC.SKP_CREDIT_TYPE = 1
           AND (CC.skp_credit_acquisition_chnl = 21 OR
               (CC.skp_credit_acquisition_chnl = 8 AND
               CC.skp_product_channel <> 804))
           AND CC.DATE_DECISION >= TRUNC(EX.MAX_DETECT)
           AND CC.DATE_DECISION < TRUNC(SYSDATE)),
      BASIC_INFO AS
       (SELECT DDC.*,
               ADA.SKP_SALESROOM,
               ADA.SKP_SALESROOM AS TRANS_POS,
               OO.SKP_ALDI_ORDER,
               OO.SKP_SALESROOM  AS SCAN_POS,
               OO.SKP_TIPPER
          FROM ALDI DDC
          JOIN OWNER_DWH.F_ALDI_ORDER_2_CONTRACT_AD AD
            ON DDC.SKP_CREDIT_CASE = AD.SKP_CREDIT_CASE
          JOIN OWNER_DWH.DC_ALDI_ORDER OO
            ON AD.SKP_ALDI_ORDER = OO.SKP_ALDI_ORDER
          JOIN OWNER_DWH.F_APPLICATION_TT ADA
            ON ADA.DATE_DECISION = DDC.DATE_DECISION
           AND ADA.SKP_CREDIT_TYPE = DDC.SKP_CREDIT_TYPE
           AND ADA.SKP_CREDIT_CASE = DDC.SKP_CREDIT_CASE
         WHERE 1 = 1
           AND ADA.DATE_DECISION >= TRUNC(MAX_DETECT)
           AND AD.DATE_DECISION >= TRUNC(MAX_DETECT)
           AND ADA.SKP_CREDIT_TYPE = 1
           AND ADA.DATE_DECISION < TRUNC(SYSDATE)),
      TRANSACTION_QR_DISPLAY AS
       (SELECT AA.*
          FROM (SELECT DDC.*,
                       T.TEXT_LONGTITUDE,
                       T.TEXT_LATITUDE,
                       TO_DATE(T.DTIME_EVENT, 'yyyy-MM-dd hh24:mi:ss') AS DTIME_QR_display,
                       ROW_NUMBER() OVER(PARTITION BY DDC.SKP_CREDIT_CASE, T.NAME_EVENT ORDER BY TO_DATE(T.DTIME_EVENT, 'yyyy-MM-dd hh24:mi:ss') DESC) AS RNK_LIMIT,
                       T.NAME_EVENT
                  FROM BASIC_INFO DDC
                  JOIN OWNER_DWH.f_ALDI_EVENT_LOG_TT T
                    ON DDC.SKP_ALDI_ORDER = T.SKP_ALDI_ORDER
                 WHERE 1 = 1
                   AND T.NAME_EVENT = 'transaction_QR_display') AA
         where RNK_LIMIT = 1),
      LIMIT_PAGE_DISPLAY AS
       (SELECT AA.*
          FROM (SELECT DDC.*,
                       T.TEXT_LONGTITUDE,
                       T.TEXT_LATITUDE,
                       TO_DATE(T.DTIME_EVENT, 'yyyy-MM-dd hh24:mi:ss') AS DTIME_LIMIT_DISPLAY,
                       ROW_NUMBER() OVER(PARTITION BY DDC.SKP_CREDIT_CASE, T.NAME_EVENT ORDER BY TO_DATE(T.DTIME_EVENT, 'yyyy-MM-dd hh24:mi:ss') DESC) AS RNK_LIMIT,
                       T.NAME_EVENT
                  FROM BASIC_INFO DDC
                  JOIN OWNER_DWH.f_ALDI_EVENT_LOG_TT T
                    ON DDC.SKP_ALDI_ORDER = T.SKP_ALDI_ORDER
                 WHERE 1 = 1
                   AND T.NAME_EVENT = 'limit_page_display') AA
         where RNK_LIMIT = 1),
      FINA AS
       (SELECT DISTINCT LL.DATE_DECISION,
                        LL.SKP_CREDIT_CASE,
                        LL.SKP_CREDIT_STATUS,
                        LL.SKp_CLIENT,
                        LL.SKP_SALESROOM,
                        LL.TEXT_CONTRACT_NUMBER,
                        LL.WEEK_DECISION,
                        LL.SKP_CREDIT_TYPE,
                        XX.CODE_SALESROOM AS TRANS_POS_CODE,
                        ll.SCAN_POS,
                        LL.SKP_TIPPER,
                        LL.TEXT_LONGTITUDE AS LIMIT_LNG,
                        LL.TEXT_LATITUDE AS LIMIT_LAT,
                        LL.DTIME_LIMIT_DISPLAY,
                        TT.TEXT_LONGTITUDE AS TRANS_LNG,
                        TT.TEXT_LATITUDE AS TRANS_LAT,
                        TT.DTIME_QR_display,
                        AP_ANTIFRAUD.GETDISTANCE(LL.TEXT_LATITUDE,
                                                 LL.TEXT_LONGTITUDE,
                                                 tt.TEXT_LATITUDE,
                                                 tt.TEXT_LONGTITUDE) AS CLIENT_DISTANCE_KM,
                        CASE
                          WHEN ROUND((DTIME_QR_display - DTIME_LIMIT_DISPLAY) * 24,
                                     2) < 1 THEN
                           '0' || TO_CHAR(ROUND((DTIME_QR_display -
                                                DTIME_LIMIT_DISPLAY) * 24,
                                                2))
                          ELSE
                           TO_CHAR(ROUND((DTIME_QR_DISPLAY -
                                         DTIME_LIMIT_DISPLAY) * 24,
                                         2))
                        END AS TIMEGAP_HOUR,
                        AP_ANTIFRAUD.GETDISTANCE(LL.TEXT_LATITUDE,
                                                 LL.TEXT_LONGTITUDE,
                                                 tt.TEXT_LATITUDE,
                                                 tt.TEXT_LONGTITUDE) /
                        (DTIME_QR_DISPLAY - DTIME_LIMIT_DISPLAY) / 24 AS SPEED
        
          FROM LIMIT_PAGE_DISPLAY LL
          JOIN TRANSACTION_QR_DISPLAY TT
            ON LL.DATE_DECISION = TT.DATE_DECISION
           AND LL.SKP_CREDIT_CASE = TT.SKP_CREDIT_CASE
          JOIN OWNER_DWH.DC_SALESROOM XX
            ON LL.TRANS_POS = XX.SKP_SALESROOM
         WHERE LL.TEXT_LONGTITUDE IS NOT NULL
           AND LL.TEXT_LONGTITUDE <> '0.0'
           AND ll.TEXT_LONGTITUDE > 73.4
           AND ll.TEXT_LONGTITUDE < 135.05
           AND LL.TEXT_LATITUDE IS NOT NULL
           AND LL.TEXT_LATITUDE <> '0.0'
           AND LL.TEXT_LATITUDE > 0
           AND ll.TEXT_LATITUDE > 4
           AND ll.TEXT_LATITUDE < 53.3
           AND TT.TEXT_LONGTITUDE IS NOT NULL
           AND TT.TEXT_LONGTITUDE <> '0.0'
           AND TT.TEXT_LONGTITUDE > 73.4
           AND TT.TEXT_LONGTITUDE < 135.05
           AND TT.TEXT_LATITUDE IS NOT NULL
           AND tt.TEXT_LATITUDE <> '0.0'
           AND tt.TEXT_LATITUDE > 4
           AND tt.TEXT_LATITUDE < 53.3)
      -----setting: Extreme speed 
      ,
      SIGNAL AS
       (SELECT TRANS_POS_CODE,
               CNT_EXTREME || '单申请客户速度极端' AS POS_VALUE
          FROM (SELECT TRANS_POS_CODE,
                       COUNT(DISTINCT SKP_CREDIT_CASE) AS CNT_EXTREME
                  FROM (SELECT *
                          FROM FINA
                         WHERE SPEED > 60)
                 GROUP BY TRANS_POS_CODE))
      SELECT WEEK_DECISION AS WEEK_DETECT,
             '19.Client extreme speed from 1BOD to transaction' AS TRIGGER_SOURCE,
             FF.SKP_CREDIT_CASE,
             FF.TEXT_CONTRACT_NUMBER,
             FF.SKP_CREDIT_STATUS,
             FF.DATE_DECISION,
             FF.SKP_CREDIT_TYPE,
             FF.SKP_SALESROOM,
             FF.SKP_TIPPER,
             ' ' AS TEXT_OPENID,
             '该POS在一周内(' || TO_CHAR(FF.WEEK_DECISION, 'YYYY-MM-DD') || ')有' ||
             POS_VALUE AS POS_LEVEL_VALUE,
             '该客户移动速度极端。在得到交易额度后，GPS显示' || LIMIT_LNG || ',' || LIMIT_LAT || ',以' ||
             ROUND(SPEED, 0) || 'km/h' || '(距离' || CLIENT_DISTANCE_KM ||
             'km-用时' || TIMEGAP_HOUR || '小时)的速度进入POS交易，GPS显示' || TRANS_LNG || ',' ||
             TRANS_LAT AS APP_LEVEL_VALUE,
             TRUNC(SYSDATE, 'IW') + 6
        FROM FINA FF
        JOIN SIGNAL PP
          ON FF.TRANS_POS_CODE = PP.TRANS_POS_CODE
       WHERE FF.SPEED > 60;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    ---------------------------------------------------------------------------------
    v_step_message := '565 setting 13';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    --===================================================================
    -------13.Same 6 digits of MAPP and Client GPS--bauer 20201029
    --===================================================================
  
    INSERT INTO AP_ANTIFRAUD.TRIGGER_565_ALDI2_BASE
      WITH MAPP AS
       (SELECT CASE
                 WHEN TT.TEXT_LOG LIKE '%transactionId%' THEN
                  REPLACE(REGEXP_SUBSTR(TT.TEXT_LOG,
                                        '[^,]+',
                                        INSTR(TT.TEXT_LOG,
                                              '"transactionId":',
                                              1,
                                              1) + 16,
                                        1),
                          '"',
                          '')
                 ELSE
                  NULL
               END AS TRANSACTION_ID,
               CASE
                 WHEN TT.TEXT_LOG LIKE '%phoneNumberMapp%' THEN
                  REPLACE(REGEXP_SUBSTR(TT.TEXT_LOG,
                                        '[^,]+',
                                        INSTR(TT.TEXT_LOG,
                                              '"phoneNumberMapp":',
                                              1,
                                              1) + 18,
                                        1),
                          '"',
                          '')
                 ELSE
                  NULL
               END AS MAPP_PHONE,
               CASE
                 WHEN TT.TEXT_LOG LIKE '%deviceId%' THEN
                  REPLACE(REGEXP_SUBSTR(TT.TEXT_LOG,
                                        '[^,]+',
                                        INSTR(TT.TEXT_LOG, '"deviceId":', 1, 1) + 11,
                                        1),
                          '"',
                          '')
                 ELSE
                  NULL
               END AS DEVICE_ID,
               NUM_GEO_LATITUDE,
               NUM_GEO_LONGITUDE,
               TT.DTIME_INSERTED AS DTIME_MAPP_EVENT,
               TT.name_device_type
          FROM OWNER_DWH.F_MOBILE_APP_EVENT_LOG_TT TT
         WHERE TT.DTIME_INSERTED >= TRUNC(SYSDATE) - 10
           AND TT.SKP_MOBILE_APP_EVENT_TYPE IN (562, 3570)),
      H5 AS
       (SELECT AD.SKP_CREDIT_CASE,
               appt.SKP_CREDIT_STATUS,
               APPT.TEXT_CONTRACT_NUMBER,
               APPT.DATE_DECISION,
               T.text_event_result,
               T.text_openId,
               d.SKP_SALESROOM,
               d.CODE_SALESROOM,
               T.text_latitude,
               T.text_longtitude,
               D.num_latitude,
               D.num_longitude,
               t.SKP_TIPPER,
               ROW_NUMBER() OVER(PARTITION BY AD.SKP_CREDIT_CASE ORDER BY TO_DATE(T.DTIME_EVENT, 'yyyy-MM-dd hh24:mi:ss') DESC) AS RNK_TRANS
          from OWNER_DWH.f_ALDI_EVENT_LOG_TT T
          JOIN OWNER_DWH.f_Aldi_Order_2_Contract_Ad AD
            ON AD.SKP_ALDI_ORDER = T.SKP_ALDI_ORDER
          JOIN OWNER_DWH.F_APPLICATION_TT APPT
            ON AD.SKP_CREDIT_CASE = APPT.SKP_CREDIT_CASE
          JOIN OWNER_DWH.DC_SALESROOM D
            ON APPT.SKP_SALESROOM = D.SKP_SALESROOM
          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
            ON EX.CLASS = 565
         WHERE T.code_event = 44
           AND APPT.DATE_DECISION >= TRUNC(EX.MAX_DETECT)
           AND APPT.DATE_DECISION < TRUNC(SYSDATE)
           AND APPT.SKP_CREDIT_TYPE = 1
           AND APPT.AMT_CREDIT > 0),
      MAPP_H5 AS
       (SELECT *
          FROM (SELECT M.*,
                       H.*,
                       ROW_NUMBER() OVER(PARTITION BY H.SKP_CREDIT_CASE ORDER BY M.DTIME_MAPP_EVENT DESC) AS RNK_MAPP
                  FROM MAPP M
                  JOIN H5 H
                    ON M.TRANSACTION_ID = H.TEXT_EVENT_RESULT
                 WHERE H.RNK_TRANS = 1) A
         WHERE A.RNK_MAPP = 1)
      
      select trunc(date_decision, 'IW') + 6 AS WEEK_DETECT,
             '13.Same 6 digits of MAPP and Client GPS' AS TRIGGER_SOURCE,
             SKP_CREDIT_CASE,
             TEXT_CONTRACT_NUMBER,
             SKP_CREDIT_STATUS,
             DATE_DECISION,
             '1' as skp_credit_type,
             b.SKP_SALESROOM,
             skp_tipper,
             TEXT_OPENID,
             '该门店在一周内有' ||
             to_char(count(distinct skp_credit_case)
                     over(partition by b.SKP_SALESROOM)) || '单申请存在虚假GPS' as POS_LEVEL_VALUE,
             '此单交易的GPS小数点后六位相同: MAPP GPS:' || to_char(NUM_GEO_LATITUDE) || '，' ||
             to_char(NUM_GEO_LONGITUDE) || ' (device id: ' || DEVICE_ID ||
             ', brand: ' || NAME_DEVICE_TYPE || ')' || '; Client GPS: ' ||
             to_char(text_latitude) || '，' || to_char(TEXT_LONGTITUDE) ||
             '; POS GPS: ' || to_char(B.num_latitude) || '，' ||
             to_char(B.num_longitude) || '; MAPP交易时间: ' ||
             TO_CHAR(b.DTIME_MAPP_EVENT, 'yyyy/MM/dd hh24:mi:ss') ||
             '; MAPP account: ' || TO_CHAR(ROUND(b.MAPP_PHONE, 0)) ||
             ', MAPP user: ' || MAPP_USER.name_person || ' (为交易POS的' || CASE
               WHEN CODE_PERSON_ROLE = 'SR_CP_RETAILER' THEN
                '1.POSM'
               WHEN CODE_PERSON_ROLE = 'PA_CP_RETAILER' THEN
                '2.BRP'
               WHEN code_person_role = 'SR_CP_CASHIER' THEN
                '3.Cashier'
               ELSE
                code_person_role
             END || ')' as APP_LEVEL_VALUE,
             TRUNC(SYSDATE, 'IW') + 6 as WEEK_DETECT_FOR_SELECT
        from mapp_h5 b
        LEFT JOIN OWNER_DWH.DC_SALES_PERSON_CONTACT MAPP_USER
          ON b.MAPP_PHONE = MAPP_USER.text_mobile_phone_number
         AND b.SKP_SALESROOM = MAPP_USER.skp_salesroom
         AND MAPP_USER.skp_salesroom != -1
         AND MAPP_USER.text_mobile_phone_number != 'XNA'
       where round(NUM_GEO_LATITUDE, 6) = round(TEXT_LATITUDE, 6)
         and round(NUM_GEO_LONGITUDE, 6) = round(TEXT_LONGTITUDE, 6)
         and round(NUM_GEO_LONGITUDE, 6) between 73.4 and 135.05
         and round(NUM_GEO_LATITUDE, 6) between 4 and 53.3;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    ---------------------------------------------------------------------------------
    v_step_message := '565 setting 14';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    --=========================================================
    --14.clients abnormal movements during transaction-------20201201 add Kate Ke
    --=========================================================
    INSERT INTO AP_ANTIFRAUD.TRIGGER_565_ALDI2_BASE
      WITH ALDI AS
       (SELECT CC.SKP_CREDIT_CASE,
               CC.DATE_DECISION,
               CC.SKp_CLIENT,
               CC.SKP_CREDIT_TYPE,
               CC.SKP_CREDIT_STATUS,
               CC.TEXT_CONTRACT_NUMBER,
               FF.AMT_CREDIT,
               FF.SKP_SALESROOM,
               PO.CODE_SALESROOM,
               EX.MAX_DETECT
          FROM OWNER_DWH.DC_CREDIT_CASE CC
          JOIN OWNER_DWH.F_APPLICATION_TT FF
            ON FF.DATE_DECISION = CC.DATE_DECISION
           AND FF.SKP_CREDIT_CASE = CC.SKP_CREDIT_CASE
           AND FF.SKP_CREDIT_TYPE = CC.SKP_CREDIT_TYPE
          JOIN OWNER_DWH.DC_SALESROOM PO
            ON FF.SKP_SALESROOM = PO.SKP_SALESROOM
          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
            ON EX.CLASS = 565
         WHERE CC.SKP_CREDIT_TYPE = 1
           AND (CC.skp_credit_acquisition_chnl = 21 OR
               (CC.skp_credit_acquisition_chnl = 8 AND
               CC.skp_product_channel <> 804)) ----20210312 YW
           AND CC.DATE_DECISION >= TRUNC(EX.MAX_DETECT)
           AND CC.DATE_DECISION < TRUNC(SYSDATE)
           AND FF.SKP_CREDIT_TYPE = 1
           AND FF.DATE_DECISION >= TRUNC(EX.MAX_DETECT)),
      BOD_TRX AS
       (SELECT AA.*,
               ROW_NUMBER() OVER(PARTITION BY SKP_CREDIT_CASE, CODE_EVENT ORDER BY DTIME_TRANSACTION_SCAN ASC) AS RNK_A,
               ROW_NUMBER() OVER(PARTITION BY SKP_CREDIT_CASE, CODE_EVENT ORDER BY DTIME_TRANSACTION_SCAN DESC) AS RNK_B
          FROM (SELECT DISTINCT CC.DATE_DECISION,
                                CC.SKP_CREDIT_CASE,
                                CC.SKP_CREDIT_TYPE,
                                CC.SKP_SALESROOM,
                                CC.TEXT_CONTRACT_NUMBER,
                                CC.CODE_SALESROOM,
                                CC.SKP_CREDIT_STATUS,
                                TO_DATE(T.DTIME_EVENT,
                                        'yyyy-MM-dd hh24:mi:ss') AS DTIME_TRANSACTION_SCAN ---24h + string 
                               ,
                                TEXT_LONGTITUDE AS H5_LONGITUDE,
                                TEXT_LATITUDE AS H5_LATITUDE,
                                CODE_EVENT,
                                FA.SKP_ALDI_ORDER
                  FROM ALDI CC
                  JOIN OWNER_DWH.f_Aldi_Order_2_Contract_Ad FA
                    ON CC.SKP_CREDIT_CASE = FA.SKP_CREDIT_CASE
                  JOIN OWNER_DWH.F_ALDI_EVENT_LOG_TT T
                    ON FA.SKP_ALDI_ORDER = T.SKP_ALDI_ORDER
                 WHERE 1 = 1
                   AND T.TEXT_LONGTITUDE != '0'
                   AND T.TEXT_LONGTITUDE IS NOT NULL
                   AND T.TEXT_LATITUDE != '0'
                   AND T.TEXT_LATITUDE IS NOT NULL
                   AND T.CODE_EVENT IN (44, 46) ---transaction_QR_display,  transaction_QR_scan
                   AND FA.DATE_DECISION >= TRUNC(CC.MAX_DETECT)) AA),
      DISPLAY_SCAN AS
       (SELECT BB.*,
               (BB.DTIME_TRANSACTION_SCAN - AA.DTIME_TRANSACTION_SCAN) * 24 AS TIME_DIFF,
               AA.H5_LONGITUDE AS DISPLAY_LNG,
               AA.H5_LATITUDE AS DISPLAY_LAT,
               BB.H5_LONGITUDE AS TRX_lNG,
               BB.H5_LATITUDE AS TRX_LAT,
               AA.DTIME_TRANSACTION_SCAN AS DISPLAY_DTIME,
               BB.DTIME_TRANSACTION_SCAN AS TRX_DTIME,
               CASE
                 WHEN AA.H5_LONGITUDE > 73.4 AND AA.H5_LONGITUDE < 135.05 AND
                      AA.H5_LATITUDE > 4 AND AA.H5_LATITUDE < 53.30 AND
                      BB.H5_LONGITUDE > 73.4 AND BB.H5_LONGITUDE < 135.05 AND
                      BB.H5_LATITUDE > 4 AND BB.H5_LATITUDE < 53.30 THEN
                  AP_ANTIFRAUD.GETDISTANCE(BB.H5_LATITUDE,
                                           BB.H5_LONGITUDE,
                                           AA.H5_LATITUDE,
                                           AA.H5_LONGITUDE)
               END AS DIST_DISPLAY_TRX
          FROM BOD_TRX AA
          JOIN BOD_TRX BB
            ON AA.SKP_CREDIT_CASE = BB.SKP_CREDIT_CASE
           AND AA.CODE_EVENT = 44
           AND AA.RNK_A = 1
           AND BB.CODE_EVENT = 46
           AND BB.RNK_B = 1)
      
      ,
      ABNORMAL AS
       (SELECT AA.*,
               TRUNC(AA.DATE_DECISION, 'IW') + 6 AS WEEK_DECISION,
               CASE
                 WHEN DIST_DISPLAY_TRX > 1 THEN
                  'distance'
               END || CASE
                 WHEN TIME_DIFF > 1 THEN
                  ',time'
               END || CASE
                 WHEN AA.DIST_DISPLAY_TRX > 0 AND
                      AA.DIST_DISPLAY_TRX / AA.TIME_DIFF > 10 THEN
                  ',speed'
               END AS SCENARIO,
               OO.SKP_TIPPER
          FROM DISPLAY_SCAN AA
          JOIN OWNER_DWH.DC_ALDI_ORDER OO
            ON OO.SKP_ALDI_ORDER = AA.SKP_ALDI_ORDER
         WHERE (AA.DIST_DISPLAY_TRX > 1 OR AA.TIME_DIFF > 1 OR
               (AA.DIST_DISPLAY_TRX > 0 AND
               AA.DIST_DISPLAY_TRX / AA.TIME_DIFF > 20))),
      EVENT AS
       (SELECT TT.SKP_ALDI_ORDER,
               TT.TEXT_OPENID,
               TO_CHAR(ROUND(TT.TEXT_LONGTITUDE, 3)) ||
               TO_CHAR(ROUND(TT.TEXT_LATITUDE, 3)) AS TEXT_GPS,
               CASE
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%IPHONE%' THEN
                  'iphone'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%PC%' THEN
                  'OPPO'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%PAC%' THEN
                  'OPPO'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%PA%' THEN
                  'OPPO'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%PB%' THEN
                  'OPPO'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%PD%' THEN
                  'OPPO'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%OPPO%' THEN
                  'OPPO'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%V%' THEN
                  'VIVO'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%SEA%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%EML%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%PAR%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%TAS%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%STK%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%HLK%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%ELE%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%AL%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%AN%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%MI%' THEN
                  'XIAOMI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%TL00%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%SM-%' THEN
                  'SANSUMG'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%MP1718%' THEN
                  'MEITU'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%GM1910%' THEN
                  'ONEPLUS'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%GIONEE%' THEN
                  'JINLI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%CDY-TN00%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%BND-TL10%' THEN
                  'HUAWEI'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%ONEPLUS%' THEN
                  'ONEPLUS'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%RMX1901%' THEN
                  'RMX1901'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%SKW-A0%' THEN
                  'HEISHA'
                 WHEN UPPER(TT.TEXT_DEVICE_TYPE) LIKE '%M5 NOTE%' THEN
                  'MEIZU'
                 ELSE
                  'OTHERS'
               END AS DEIVICE_TYPE
          FROM ABNORMAL BB
          JOIN OWNER_DWH.F_ALDI_EVENT_LOG_TT TT
            ON BB.SKP_ALDI_ORDER = TT.SKP_ALDI_ORDER),
      OTHERS_ADD AS
       (SELECT EE.SKP_ALDI_ORDER,
               COUNT(DISTINCT TEXT_OPENID) AS CNT_WECHAT,
               COUNT(DISTINCT DEIVICE_TYPE) AS CNT_DV_BRAND,
               COUNT(DISTINCT TEXT_GPS) AS CNT_GPS
          FROM EVENT EE
         GROUP BY EE.SKP_ALDI_ORDER
        HAVING COUNT(DISTINCT TEXT_OPENID) > 1 OR COUNT(DISTINCT DEIVICE_TYPE) > 1 OR COUNT(DISTINCT TEXT_GPS) > 1),
      POS_TRIGGER_VALUE AS
       (SELECT SKP_SALESROOM, COUNT(DISTINCT SKP_CREDIT_CASE) AS CNT
          FROM ABNORMAL
         GROUP BY SKP_SALESROOM)
      
      SELECT DISTINCT FF.WEEK_DECISION AS WEEK_DETECT,
                      '14.clients abnormal movements during transaction' AS TRIGGER_SOURCE,
                      FF.SKP_CREDIT_CASE,
                      FF.TEXT_CONTRACT_NUMBER,
                      FF.SKP_CREDIT_STATUS,
                      FF.DATE_DECISION,
                      FF.SKP_CREDIT_TYPE,
                      FF.SKP_SALESROOM,
                      FF.SKP_TIPPER,
                      ' ' AS TEXT_OPENID,
                      '该POS在本周(' || TO_CHAR(FF.WEEK_DECISION, 'yyyy-mm-dd') ||
                      ')共有' || PO.CNT || '单客户行为可疑' AS POS_LEVEL_VALUE,
                      '本单客户在交易时，' || SCENARIO || '异常。从展示二维码到二维码扫描的移动直线距离为' ||
                      DIST_DISPLAY_TRX || 'KM,用时' ||
                      round(TIME_DIFF * 60, 2) || '分钟,速度为' ||
                      ROUND(DIST_DISPLAY_TRX / TIME_DIFF, 2) ||
                      'km/h, 展示二维码' ||
                      TO_CHAR(DISPLAY_DTIME, 'YYYY-MM-DD HH24:Mi:SS') ||
                      ', GPS: ' || DISPLAY_LAT || ',' || DISPLAY_LNG ||
                      ',二维码被扫描' ||
                      TO_CHAR(TRX_DTIME, 'YYYY-MM-DD HH24:Mi:SS') ||
                      ', GPS: ' || TRX_LAT || ',' || TRX_LNG || '，本单合同共涉及' ||
                      DD.CNT_WECHAT || '个openid，' || DD.CNT_GPS ||
                      '个gps位置，' || DD.CNT_DV_BRAND || '个品牌的设备' AS APP_LEVEL_VALUE,
                      TRUNC(SYSDATE, 'IW') + 6 as WEEK_DETECT_FOR_SELECT
        FROM ABNORMAL FF
        JOIN POS_TRIGGER_VALUE PO
          ON FF.SKP_SALESROOM = PO.SKP_SALESROOM
        JOIN OTHERS_ADD DD
          ON FF.SKP_ALDI_ORDER = DD.SKP_ALDI_ORDER;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  
    ---------------------------------------------------------------------------------
    v_step_message := '565 setting 15';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    --======================================================
    --15.FR Long time(greater than 240 seconds) --20210518
    --======================================================
    insert into TRIGGER_565_ALDI2_BASE
      WITH CON AS
       (SELECT DISTINCT AD.SKP_CREDIT_CASE,
                        F.text_contract_number,
                        AD.DATE_DECISION,
                        DCC.SKP_CREDIT_TYPE,
                        TRUNC(AD.DATE_DECISION, 'IW') + 6 AS WEEK_DECISION,
                        DCC.SKP_CREDIT_STATUS,
                        F.AMT_CREDIT,
                        AD.SKP_SALESROOM_TRANSACTION AS SKP_SALESROOM,
                        T.code_event,
                        T.dtime_event,
                        T.text_event_result,
                        DCA.SKP_TIPPER,
                        T.text_openId
          FROM owner_dwh.f_ALDI_EVENT_LOG_TT t
          JOIN owner_dwh.f_aldi_order_2_contract_ad ad
            ON ad.SKP_ALDI_ORDER = t.SKP_ALDI_ORDER
          JOIN OWNER_DWH.DC_ALDI_ORDER DCA
            ON T.SKP_ALDI_ORDER = DCA.SKP_ALDI_ORDER
          JOIN OWNER_DWH.DC_CREDIT_CASE DCC
            ON AD.SKP_CREDIT_CASE = DCC.SKP_CREDIT_CASE
           AND AD.DATE_DECISION = DCC.DATE_DECISION
          JOIN OWNER_DWH.F_APPLICATION_TT F
            ON DCC.SKP_CREDIT_CASE = F.SKP_CREDIT_CASE
           AND DCC.DATE_DECISION = F.DATE_DECISION
           AND DCC.SKP_CREDIT_TYPE = F.SKP_CREDIT_TYPE
          JOIN AP_ANTIFRAUD.CL_TRIGGER_EXCUTE_TIME EX
            ON EX.CLASS = 565
         WHERE T.code_event IN (12, 14)
           AND AD.SKP_SALESROOM_TRANSACTION != -1
           AND DCC.DATE_DECISION >= TRUNC(EX.MAX_DETECT)
           AND DCC.DATE_DECISION < TRUNC(SYSDATE)
           AND F.DATE_DECISION >= TRUNC(EX.MAX_DETECT)
           AND F.DATE_DECISION < TRUNC(SYSDATE)
           AND DCC.SKP_CREDIT_TYPE = 1
           AND (DCC.skp_credit_acquisition_chnl = 21 OR
               (DCC.skp_credit_acquisition_chnl = 8 AND
               DCC.skp_product_channel <> 804)) ----20210312 YW
           AND F.AMT_CREDIT > 0),
      time_fr as
       (SELECT t.skp_credit_case,
               max(case
                     when t.code_event = 12 then
                      dtime_event
                     else
                      null
                   end) as fr_start_time,
               min(case
                     when t.code_event = 14 then
                      dtime_event
                     else
                      null
                   end) as fr_end_time,
               sum(case
                     when t.code_event = 12 and t.text_openId is not null then
                      1
                     else
                      0
                   end) as wechat_flag -- 0 means from non-wechat, 1 means from wechat (Andrey Li 20210809)             
          FROM CON t
         group by t.skp_credit_case),
      time_fr_interval as
       (select distinct t.*,
                        (TO_DATE(t.fr_end_time, 'yyyy-mm-dd HH24:MI:SS') -
                        TO_DATE(t.fr_start_time, 'yyyy-mm-dd HH24:MI:SS')) * 24 * 60 * 60 as fr_time
          from time_fr t
         where (TO_DATE(t.fr_end_time, 'yyyy-mm-dd HH24:MI:SS') -
               TO_DATE(t.fr_start_time, 'yyyy-mm-dd HH24:MI:SS')) * 24 * 60 * 60 > 90
           and wechat_flag = 0) -- Only trigger contract from non-wechat and change the cutoff to 120s to 90s
      SELECT distinct c.WEEK_DECISION AS WEEK_DETECT,
                      '15.too long time FR time' AS TRIGGER_SOURCE,
                      c.skp_credit_case,
                      C.text_contract_number,
                      C.SKP_CREDIT_STATUS,
                      C.DATE_DECISION,
                      C.SKP_CREDIT_TYPE,
                      C.SKP_SALESROOM,
                      C.SKP_TIPPER,
                      ' ',
                      '该POS在一周内(' || TO_CHAR(c.WEEK_DECISION, 'YYYY-MM-DD') || ')有' ||
                      TO_CHAR(count(distinct c.skp_credit_case)
                              over(partition by c.WEEK_DECISION,
                                   c.SKP_SALESROOM)) ||
                      '单脸部识别超过90秒的合同(且来自非微信渠道)' AS POS_LEVEL_VALUE,
                      '该合同脸部识别时间为' || round(TO_CHAR(t.fr_time)) ||
                      '秒,设置的阈值为90秒(且来自非微信渠道)' AS APP_LEVEL_VALUE,
                      TRUNC(SYSDATE, 'IW') + 6
        FROM time_fr_interval t
        join con c
          on t.skp_credit_case = c.skp_credit_case;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    commit;
  

  
    ---------------------------------------------------------------------------------
    v_step_message := '565 pre selection';
    owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                                p_step            => v_step_message,
                                                p_additional_info => NULL);
  
    INSERT /*+ append*/
    INTO AP_ANTIFRAUD.F_TRCONTRACTS_PRESELECTION
      WITH POS_LEVEL AS
       (SELECT DISTINCT SKP_SALESROOM, TRIGGER_SOURCE, POS_LEVEL_VALUE
          FROM TRIGGER_565_ALDI2_BASE A),
      POS_LEVEL_SOURCE AS
       (SELECT DISTINCT P.SKP_SALESROOM,
                        LISTAGG(P.TRIGGER_SOURCE, ', ') WITHIN GROUP(ORDER BY P.TRIGGER_SOURCE) OVER(PARTITION BY P.SKP_SALESROOM) AS POS_TRIGGER_SOURCE,
                        LISTAGG(P.POS_LEVEL_VALUE, '; ') WITHIN GROUP(ORDER BY P.POS_LEVEL_VALUE) OVER(PARTITION BY P.SKP_SALESROOM) AS POS_TRIGGER_VALUE,
                        DENSE_RANK() OVER(ORDER BY P.SKP_SALESROOM) AS GN
          FROM POS_LEVEL P),
      APP_LEVEL_SOURCE AS
       (SELECT DISTINCT P.SKP_SALESROOM,
                        P.SKP_CREDIT_CASE,
                        P.DATE_DECISION,
                        P.SKP_CREDIT_TYPE,
                        P.TEXT_CONTRACT_NUMBER,
                        P.SKP_TIPPER,
                        LISTAGG(P.APP_LEVEL_VALUE, ', ') WITHIN GROUP(ORDER BY P.APP_LEVEL_VALUE) OVER(PARTITION BY P.SKP_CREDIT_CASE) AS APP_TRIGGER_VALUE,
                        LISTAGG(P.TRIGGER_SOURCE, '; ') WITHIN GROUP(ORDER BY P.TRIGGER_SOURCE) OVER(PARTITION BY P.SKP_CREDIT_CASE) AS APP_TRIGGER_SOURCE,
                        COUNT(DISTINCT P.SKP_CREDIT_CASE) OVER(PARTITION BY P.SKP_SALESROOM) AS CNT_POS_APP,
                        COUNT(DISTINCT P.SKP_TIPPER) OVER(PARTITION BY P.SKP_SALESROOM) AS CNT_POS_TIPPER,
                        ROW_NUMBER() OVER(PARTITION BY P.SKP_CREDIT_CASE ORDER BY PO.POS_TRIGGER_SOURCE DESC) AS RNK_POS
          FROM TRIGGER_565_ALDI2_BASE P
          JOIN POS_LEVEL_SOURCE PO
            ON P.SKP_SALESROOM = PO.SKP_SALESROOM)
      
      SELECT DISTINCT 'POS' AS UNIT,
                      S.code_salesroom,
                      TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS DATE_DETECT,
                      TO_CHAR(TRUNC(SYSDATE, 'IW') + 6, 'YYYY/MM/DD') AS WEEK_DETECT,
                      '565' AS CLASS,
                      P.POS_TRIGGER_SOURCE AS TRIGGER_SOURCE,
                      TO_CHAR(P.GN) || '//case level: ' ||
                      P.POS_TRIGGER_VALUE || ' | 共' || TO_CHAR(CNT_POS_APP) ||
                      '单合同 | 涉及' || TO_CHAR(CNT_POS_TIPPER) || '位Tipper' ||
                      ' | app level: ' || A.APP_TRIGGER_VALUE || CASE
                        WHEN A.SKP_TIPPER != -1 THEN
                         ' | 此单TIPPER为' || DCT.NAME_TIPPER || '(code:' ||
                         DCT.ID_SOURCE || ', id: ' ||
                         DCT.TEXT_IDENT_CARD_NUMBER || ', mobile: ' ||
                         DCT.TEXT_PHONE_NUMBER || ', status: ' ||
                         CLS.CODE_TIPPER_STATUS
                      END AS TRIGGER_VALUE,
                      'SOFT' AS TRIGGER_TYPE,
                      A.SKP_CREDIT_CASE,
                      A.text_contract_number
        FROM POS_LEVEL_SOURCE P
        JOIN APP_LEVEL_SOURCE A
          ON P.SKP_SALESROOM = A.SKP_SALESROOM
        JOIN OWNER_DWH.DC_SALESROOM S
          ON P.SKP_SALESROOM = S.SKP_SALESROOM
         AND S.code_salesroom_status <> 'z' ----20200715 Yawen exclude application from closed pos
        LEFT JOIN OWNER_DWH.DC_TIPPER DCT
          ON A.SKP_TIPPER = DCT.SKP_TIPPER
         AND DCT.SKP_TIPPER != -1
        LEFT JOIN OWNER_DWH.CL_TIPPER_STATUS CLS
          ON DCT.SKP_TIPPER_STATUS = CLS.SKP_TIPPER_STATUS
        LEFT JOIN AP_ANTIFRAUD.F_AF_FINAL_CONTRACTS C_553
          ON S.code_salesroom = C_553.code_salesroom
         AND C_553.CLASS = 553
         AND C_553.DATE_DETECT > TRUNC(SYSDATE - 30) -- 30天内被553triggered
         AND (UPPER(C_553.TRIGGER_SOURCE) LIKE '%IP%' OR
             UPPER(C_553.TRIGGER_SOURCE) LIKE '%GPS%' OR
             UPPER(C_553.TRIGGER_SOURCE) LIKE '%XINJIANG/XIZANG%') --anny 20200601
       WHERE RNK_POS = 1
         AND C_553.CODE_SALESROOM IS NULL
         AND UPPER(S.name_salesroom) NOT LIKE '%TEST%'
         AND S.name_salesroom NOT LIKE '%测试%' --anny 20201012
      ;
  
    l_rowcount := sql%rowcount;
    owner_core.report_robots_log_api.step_end(p_report          => v_dealprc,
                                              p_step            => v_step_message,
                                              p_additional_info => NULL,
                                              p_num_rows        => l_rowcount);
    COMMIT;
    -- procedure end
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => 0,
                                  p_msg    => 'end');
  END IF;
EXCEPTION
  WHEN OTHERS THEN
    -- ROBOTS_LOG
    owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                               p_step            => v_step_message,
                                               p_additional_info => NULL);
    -- process_log  
    ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                  p_name   => v_dealprc,
                                  p_date   => SYSDATE,
                                  p_rownum => NULL,
                                  p_errnum => SQLCODE,
                                  p_msg    => 'Error in step (' ||
                                              v_step_message || ') - ' ||
                                              substr(SQLERRM, 1, 150));
    RAISE;
END;



PROCEDURE  RUN_ALL IS
v_stepnum      INTEGER DEFAULT 0;
v_dealprc      VARCHAR2(128) DEFAULT NULL; -- procedure name for save log
v_step_message VARCHAR2(20000) DEFAULT NULL; -- step message for save log
v_err_txt      VARCHAR2(70);
v_schema_identiy CONSTANT VARCHAR2(20) := 'AP_ANTIFRAUD';
BEGIN
-- default procedure name      
  v_dealprc := 'PRC_ANTIFRAUD_RUN_ALL';
-- check whether the process need to run
IF ap_public.ap_tool.get_process_status(p_owner => v_schema_identiy, p_name => v_dealprc, p_date => trunc(SYSDATE)) IN
 ('Not Started','Failed') --,'Running'
THEN
  -- procedure start
  ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                p_name   => v_dealprc,
                                p_date   => SYSDATE,
                                p_rownum => NULL,
                                p_errnum => 0,
                                p_msg    => 'start');
         
--! report robots log start
---------------------------------------------------------------------------------
v_step_message := 'STEP1';
owner_core.report_robots_log_api.step_begin(p_report          => v_dealprc,
                                            p_step            => v_step_message,
                                            p_additional_info => NULL);  

    TRIGGER_22_99_44_202_AD_HOC;
    TRIGGER_15_WC_SIGNAL; --stopped from 20200210 to 20200212

    --TRIGGER_25_REG;
    TRIGGER_32_SHARE_MOBILE; --- weekly to daily 20210926
    TRIGGER_142_OTHER_FRAUD_COLL;--20170509
    TRIGGER_143_ANTIMONEY_LAUNDER; 
    TRIGGER_203_CLUSTER;  ---weekly to daily 20211012
    TRIGGER_402_INBOUNDING_CALL;
    
    TRIGGER_508_DSM_DEL;

    
    TRIGGER_523_CASE_TO_CURE;   --- end at 20210304   restart 20210427

    TRIGGER_546_RPOS_USE_NEW_PHONE;--20200326 --temp stop 20200817 --begin 20200821 --temp stop 20200824--20201023 --20201104
    TRIGGER_550_RPOS_SIMI_REC_ADDR;
    TRIGGER_552_HCP_REG_TRIGGER;--20200507
    TRIGGER_202_CLWC_RETURN_MONEY; --temp for wc to Sakura team 20200604
    TRIGGER_565_ALDI_DAILY_MONITOR;  --temp for anny 20210908

owner_core.report_robots_log_api.step_end(p_report => v_dealprc, p_step => v_step_message, p_additional_info => NULL);   
COMMIT;
-- procedure end
ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                              p_name   => v_dealprc,
                              p_date   => SYSDATE,
                              p_rownum => NULL,
                              p_errnum => 0,
                              p_msg    => 'end');
END IF;
    EXCEPTION
        WHEN OTHERS THEN
            -- ROBOTS_LOG
            owner_core.report_robots_log_api.step_fail(p_report          => v_dealprc,
                                                       p_step            => v_step_message,
                                                       p_additional_info => NULL);
            -- process_log  
            ap_public.ap_tool.process_log(p_owner  => v_schema_identiy,
                                          p_name   => v_dealprc,
                                          p_date   => SYSDATE,
                                          p_rownum => NULL,
                                          p_errnum => SQLCODE,
                                          p_msg    => 'Error in step (' || v_step_message || ') - ' || substr(SQLERRM, 1, 150));
            RAISE;
END;

END lib_TRIGGER_DAILY_RUN;
